require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/mathisonian/projects/idyll/examples/csv/components/file-tree.js":[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IdyllComponent = require('idyll-component');

var TreeComponent = function (_IdyllComponent) {
  _inherits(TreeComponent, _IdyllComponent);

  function TreeComponent() {
    _classCallCheck(this, TreeComponent);

    return _possibleConstructorReturn(this, (TreeComponent.__proto__ || Object.getPrototypeOf(TreeComponent)).apply(this, arguments));
  }

  _createClass(TreeComponent, [{
    key: 'renderItems',
    value: function renderItems(items, level) {
      var _this2 = this;

      return React.createElement(
        'div',
        { style: { marginLeft: 20 * level } },
        items.map(function (item) {
          if (item.children) {
            return React.createElement(
              'div',
              null,
              React.createElement(
                'svg',
                { style: { marginRight: 5 }, width: 15, height: 15, viewBox: '0 0 512 512' },
                React.createElement('polygon', { fill: '#010101', points: '512,128 256,128 192,64 0,64 0,448 512,448 ' })
              ),
              item.name,
              _this2.renderItems(item.children, level + 1)
            );
          }
          return React.createElement(
            'div',
            { style: { marginTop: 3 } },
            item.name
          );
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: 'filetree' },
        this.renderItems(this.props.items || [], 0)
      );
    }
  }]);

  return TreeComponent;
}(IdyllComponent);

module.exports = TreeComponent;

},{"idyll-component":"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/components/idyll-logo.js":[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IdyllComponent = require('idyll-component');
var insertCSS = require('insert-css');

var css = '\n.logo-lockup {\n  display: block;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n}\n\n.logo-lockup a {\n  display: block;\n  cursor: pointer;\n}\n\n.logo-lockup a .logo {\n  width: 60px;\n  height: 60px;\n  background: #EAE7D6;\n}\n\n.logo-lockup a small {\n  display: block;\n  transform: rotate(-90deg);\n  margin-top: 0;\n  font-size: 1rem;\n  line-height: 60px;\n  opacity: 0;\n  padding: 0 20px;\n  top: 60px;\n  left: -30px;\n  position: fixed;\n  z-index: -1;\n  transition: all .25s ease-in-out;\n}\n\n.logo-lockup a:hover small {\n  opacity: 1;\n  top: 120px;\n}\n\n@media all and (max-width: 700px) {\n  .logo-lockup {\n    display: none;\n  }\n}\n';

var Logo = function (_IdyllComponent) {
  _inherits(Logo, _IdyllComponent);

  function Logo() {
    _classCallCheck(this, Logo);

    return _possibleConstructorReturn(this, (Logo.__proto__ || Object.getPrototypeOf(Logo)).apply(this, arguments));
  }

  _createClass(Logo, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (_get(Logo.prototype.__proto__ || Object.getPrototypeOf(Logo.prototype), 'componentDidMount', this)) {
        _get(Logo.prototype.__proto__ || Object.getPrototypeOf(Logo.prototype), 'componentDidMount', this).call(this);
      }
      insertCSS(css.toString('utf8'));
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: 'logo-lockup' },
        React.createElement(
          'a',
          { href: 'https://idyll-lang.github.io/' },
          React.createElement('img', { className: 'logo', src: 'https://idyll-lang.github.io/images/logo.svg' }),
          React.createElement(
            'small',
            null,
            'Made with Idyll'
          )
        )
      );
    }
  }]);

  return Logo;
}(IdyllComponent);

module.exports = Logo;

},{"idyll-component":"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/lib.js","insert-css":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/insert-css/index.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/components/inset.js":[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IdyllComponent = require('idyll-component');

var Inset = function (_IdyllComponent) {
  _inherits(Inset, _IdyllComponent);

  function Inset() {
    _classCallCheck(this, Inset);

    return _possibleConstructorReturn(this, (Inset.__proto__ || Object.getPrototypeOf(Inset)).apply(this, arguments));
  }

  _createClass(Inset, [{
    key: 'render',
    value: function render() {
      return React.createElement('div', _extends({ className: 'inset' }, this.props));
    }
  }]);

  return Inset;
}(IdyllComponent);

module.exports = Inset;

},{"idyll-component":"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/components/vega-lite.js":[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IdyllComponent = require('idyll-component');
var VL = require('react-vega-lite').default;

var VegaLite = function (_IdyllComponent) {
  _inherits(VegaLite, _IdyllComponent);

  function VegaLite() {
    _classCallCheck(this, VegaLite);

    return _possibleConstructorReturn(this, (VegaLite.__proto__ || Object.getPrototypeOf(VegaLite)).apply(this, arguments));
  }

  _createClass(VegaLite, [{
    key: 'render',
    value: function render() {
      var data = {
        values: this.props.data
      };
      return React.createElement(VL, _extends({}, this.props, { data: data }));
    }
  }]);

  return VegaLite;
}(IdyllComponent);

module.exports = VegaLite;

},{"idyll-component":"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","react-vega-lite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-vega-lite/dist/react-vega-lite.min.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/browser-resolve/empty.js":[function(require,module,exports){

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/camel-case/camel-case.js":[function(require,module,exports){
'use strict';

var upperCase = require('upper-case');
var noCase = require('no-case');

/**
 * Camel case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale, mergeNumbers) {
  var result = noCase(value, locale);

  // Replace periods between numeric entities with an underscore.
  if (!mergeNumbers) {
    result = result.replace(/ (?=\d)/g, '_');
  }

  // Replace spaces between words with an upper cased character.
  return result.replace(/ (.)/g, function (m, $1) {
    return upperCase($1, locale);
  });
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/change-case/change-case.js":[function(require,module,exports){
'use strict';

exports.no = exports.noCase = require('no-case');
exports.dot = exports.dotCase = require('dot-case');
exports.swap = exports.swapCase = require('swap-case');
exports.path = exports.pathCase = require('path-case');
exports.upper = exports.upperCase = require('upper-case');
exports.lower = exports.lowerCase = require('lower-case');
exports.camel = exports.camelCase = require('camel-case');
exports.snake = exports.snakeCase = require('snake-case');
exports.title = exports.titleCase = require('title-case');
exports.param = exports.paramCase = require('param-case');
exports.header = exports.headerCase = require('header-case');
exports.pascal = exports.pascalCase = require('pascal-case');
exports.constant = exports.constantCase = require('constant-case');
exports.sentence = exports.sentenceCase = require('sentence-case');
exports.isUpper = exports.isUpperCase = require('is-upper-case');
exports.isLower = exports.isLowerCase = require('is-lower-case');
exports.ucFirst = exports.upperCaseFirst = require('upper-case-first');
exports.lcFirst = exports.lowerCaseFirst = require('lower-case-first');

},{"camel-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/camel-case/camel-case.js","constant-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/constant-case/constant-case.js","dot-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/dot-case/dot-case.js","header-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/header-case/header-case.js","is-lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-lower-case/is-lower-case.js","is-upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-upper-case/is-upper-case.js","lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js","lower-case-first":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case-first/lower-case-first.js","no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js","param-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/param-case/param-case.js","pascal-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/pascal-case/pascal-case.js","path-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/path-case/path-case.js","sentence-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/sentence-case/sentence-case.js","snake-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/snake-case/snake-case.js","swap-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/swap-case/swap-case.js","title-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/title-case/title-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js","upper-case-first":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case-first/upper-case-first.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/constant-case/constant-case.js":[function(require,module,exports){
'use strict';

var upperCase = require('upper-case');
var snakeCase = require('snake-case');

/**
 * Constant case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return upperCase(snakeCase(value, locale), locale);
};

},{"snake-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/snake-case/snake-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/create-react-class/factory.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyObject = require('fbjs/lib/emptyObject');
var _invariant = require('fbjs/lib/invariant');

if ("development" !== 'production') {
  var warning = require('fbjs/lib/warning');
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if ("development" !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if ("development" !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if ("development" !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if ("development" !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if ("development" !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if ("development" !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if ("development" !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isInherited = name in Constructor;
      _invariant(
        !isInherited,
        'ReactClass: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be ' +
          'due to a mixin.',
        name
      );
      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if ("development" !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if ("development" !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if ("development" !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if ("development" !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("development" !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("development" !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("development" !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if ("development" !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;

},{"fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d/index.js":[function(require,module,exports){
'use strict';

var assign = require('es5-ext/object/assign'),
    normalizeOpts = require('es5-ext/object/normalize-options'),
    isCallable = require('es5-ext/object/is-callable'),
    contains = require('es5-ext/string/#/contains'),
    d;

d = module.exports = function (dscr, value /*, options*/) {
	var c, e, w, options, desc;
	if (arguments.length < 2 || typeof dscr !== 'string') {
		options = value;
		value = dscr;
		dscr = null;
	} else {
		options = arguments[2];
	}
	if (dscr == null) {
		c = w = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
		w = contains.call(dscr, 'w');
	}

	desc = { value: value, configurable: c, enumerable: e, writable: w };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

d.gs = function (dscr, get, set /*, options*/) {
	var c, e, options, desc;
	if (typeof dscr !== 'string') {
		options = set;
		set = get;
		get = dscr;
		dscr = null;
	} else {
		options = arguments[3];
	}
	if (get == null) {
		get = undefined;
	} else if (!isCallable(get)) {
		options = get;
		get = set = undefined;
	} else if (set == null) {
		set = undefined;
	} else if (!isCallable(set)) {
		options = set;
		set = undefined;
	}
	if (dscr == null) {
		c = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
	}

	desc = { get: get, set: set, configurable: c, enumerable: e };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

},{"es5-ext/object/assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/index.js","es5-ext/object/is-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-callable.js","es5-ext/object/normalize-options":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/normalize-options.js","es5-ext/string/#/contains":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d3-dispatch/build/d3-dispatch.js":[function(require,module,exports){
// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.d3 = global.d3 || {})));
}(this, (function (exports) { 'use strict';

var noop = {value: function() {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

exports.dispatch = dispatch;

Object.defineProperty(exports, '__esModule', { value: true });

})));

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d3-format/build/d3-format.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.
(function (global, factory) {
  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
})(undefined, function (exports) {
  'use strict';

  // Computes the decimal coefficient and exponent of the specified number x with
  // significant digits p, where x is positive and p is in [1, 21] or undefined.
  // For example, formatDecimal(1.23) returns ["123", 0].

  var formatDecimal = function formatDecimal(x, p) {
    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
    var i,
        coefficient = x.slice(0, i);

    // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
    return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
  };

  var exponent = function exponent(x) {
    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
  };

  var formatGroup = function formatGroup(grouping, thousands) {
    return function (value, width) {
      var i = value.length,
          t = [],
          j = 0,
          g = grouping[0],
          length = 0;

      while (i > 0 && g > 0) {
        if (length + g + 1 > width) g = Math.max(1, width - length);
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) break;
        g = grouping[j = (j + 1) % grouping.length];
      }

      return t.reverse().join(thousands);
    };
  };

  var formatNumerals = function formatNumerals(numerals) {
    return function (value) {
      return value.replace(/[0-9]/g, function (i) {
        return numerals[+i];
      });
    };
  };

  var formatDefault = function formatDefault(x, p) {
    x = x.toPrecision(p);

    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (x[i]) {
        case ".":
          i0 = i1 = i;break;
        case "0":
          if (i0 === 0) i0 = i;i1 = i;break;
        case "e":
          break out;
        default:
          if (i0 > 0) i0 = 0;break;
      }
    }

    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
  };

  var prefixExponent;

  var formatPrefixAuto = function formatPrefixAuto(x, p) {
    var d = formatDecimal(x, p);
    if (!d) return x + "";
    var coefficient = d[0],
        exponent = d[1],
        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
        n = coefficient.length;
    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
  };

  var formatRounded = function formatRounded(x, p) {
    var d = formatDecimal(x, p);
    if (!d) return x + "";
    var coefficient = d[0],
        exponent = d[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
  };

  var formatTypes = {
    "": formatDefault,
    "%": function _(x, p) {
      return (x * 100).toFixed(p);
    },
    "b": function b(x) {
      return Math.round(x).toString(2);
    },
    "c": function c(x) {
      return x + "";
    },
    "d": function d(x) {
      return Math.round(x).toString(10);
    },
    "e": function e(x, p) {
      return x.toExponential(p);
    },
    "f": function f(x, p) {
      return x.toFixed(p);
    },
    "g": function g(x, p) {
      return x.toPrecision(p);
    },
    "o": function o(x) {
      return Math.round(x).toString(8);
    },
    "p": function p(x, _p) {
      return formatRounded(x * 100, _p);
    },
    "r": formatRounded,
    "s": formatPrefixAuto,
    "X": function X(x) {
      return Math.round(x).toString(16).toUpperCase();
    },
    "x": function x(_x) {
      return Math.round(_x).toString(16);
    }
  };

  // [[fill]align][sign][symbol][0][width][,][.precision][type]
  var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;

  function formatSpecifier(specifier) {
    return new FormatSpecifier(specifier);
  }

  formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

  function FormatSpecifier(specifier) {
    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);

    var match,
        fill = match[1] || " ",
        align = match[2] || ">",
        sign = match[3] || "-",
        symbol = match[4] || "",
        zero = !!match[5],
        width = match[6] && +match[6],
        comma = !!match[7],
        precision = match[8] && +match[8].slice(1),
        type = match[9] || "";

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // Map invalid types to the default format.
    else if (!formatTypes[type]) type = "";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";

    this.fill = fill;
    this.align = align;
    this.sign = sign;
    this.symbol = symbol;
    this.zero = zero;
    this.width = width;
    this.comma = comma;
    this.precision = precision;
    this.type = type;
  }

  FormatSpecifier.prototype.toString = function () {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width == null ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0)) + this.type;
  };

  var identity = function identity(x) {
    return x;
  };

  var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

  var formatLocale = function formatLocale(locale) {
    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
        currency = locale.currency,
        decimal = locale.decimal,
        numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,
        percent = locale.percent || "%";

    function newFormat(specifier) {
      specifier = formatSpecifier(specifier);

      var fill = specifier.fill,
          align = specifier.align,
          sign = specifier.sign,
          symbol = specifier.symbol,
          zero = specifier.zero,
          width = specifier.width,
          comma = specifier.comma,
          precision = specifier.precision,
          type = specifier.type;

      // Compute the prefix and suffix.
      // For SI-prefix, the suffix is lazily computed.
      var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
          suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : "";

      // What format function should we use?
      // Is this an integer type?
      // Can this type generate exponential notation?
      var formatType = formatTypes[type],
          maybeSuffix = !type || /[defgprs%]/.test(type);

      // Set the default precision if not specified,
      // or clamp the specified precision to the supported range.
      // For significant precision, it must be in [1, 21].
      // For fixed precision, it must be in [0, 20].
      precision = precision == null ? type ? 6 : 12 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

      function format(value) {
        var valuePrefix = prefix,
            valueSuffix = suffix,
            i,
            n,
            c;

        if (type === "c") {
          valueSuffix = formatType(value) + valueSuffix;
          value = "";
        } else {
          value = +value;

          // Perform the initial formatting.
          var valueNegative = value < 0;
          value = formatType(Math.abs(value), precision);

          // If a negative value rounds to zero during formatting, treat as positive.
          if (valueNegative && +value === 0) valueNegative = false;

          // Compute the prefix and suffix.
          valuePrefix = (valueNegative ? sign === "(" ? sign : "-" : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
          valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");

          // Break the formatted value into the integer “value” part that can be
          // grouped, and fractional or exponential “suffix” part that is not.
          if (maybeSuffix) {
            i = -1, n = value.length;
            while (++i < n) {
              if (c = value.charCodeAt(i), 48 > c || c > 57) {
                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                value = value.slice(0, i);
                break;
              }
            }
          }
        }

        // If the fill character is not "0", grouping is applied before padding.
        if (comma && !zero) value = group(value, Infinity);

        // Compute the padding.
        var length = valuePrefix.length + value.length + valueSuffix.length,
            padding = length < width ? new Array(width - length + 1).join(fill) : "";

        // If the fill character is "0", grouping is applied after padding.
        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

        // Reconstruct the final output based on the desired alignment.
        switch (align) {
          case "<":
            value = valuePrefix + value + valueSuffix + padding;break;
          case "=":
            value = valuePrefix + padding + value + valueSuffix;break;
          case "^":
            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);break;
          default:
            value = padding + valuePrefix + value + valueSuffix;break;
        }

        return numerals(value);
      }

      format.toString = function () {
        return specifier + "";
      };

      return format;
    }

    function formatPrefix(specifier, value) {
      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
          k = Math.pow(10, -e),
          prefix = prefixes[8 + e / 3];
      return function (value) {
        return f(k * value) + prefix;
      };
    }

    return {
      format: newFormat,
      formatPrefix: formatPrefix
    };
  };

  var locale;

  defaultLocale({
    decimal: ".",
    thousands: ",",
    grouping: [3],
    currency: ["$", ""]
  });

  function defaultLocale(definition) {
    locale = formatLocale(definition);
    exports.format = locale.format;
    exports.formatPrefix = locale.formatPrefix;
    return locale;
  }

  var precisionFixed = function precisionFixed(step) {
    return Math.max(0, -exponent(Math.abs(step)));
  };

  var precisionPrefix = function precisionPrefix(step, value) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
  };

  var precisionRound = function precisionRound(step, max) {
    step = Math.abs(step), max = Math.abs(max) - step;
    return Math.max(0, exponent(max) - exponent(step)) + 1;
  };

  exports.formatDefaultLocale = defaultLocale;
  exports.formatLocale = formatLocale;
  exports.formatSpecifier = formatSpecifier;
  exports.precisionFixed = precisionFixed;
  exports.precisionPrefix = precisionPrefix;
  exports.precisionRound = precisionRound;

  Object.defineProperty(exports, '__esModule', { value: true });
});

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/dot-case/dot-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');

/**
 * Dot case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '.');
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/#/e-index-of.js":[function(require,module,exports){
"use strict";

var numberIsNaN = require("../../number/is-nan"),
    toPosInt = require("../../number/to-pos-integer"),
    value = require("../../object/valid-value"),
    indexOf = Array.prototype.indexOf,
    objHasOwnProperty = Object.prototype.hasOwnProperty,
    abs = Math.abs,
    floor = Math.floor;

module.exports = function (searchElement /*, fromIndex*/) {
	var i, length, fromIndex, val;
	if (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);

	length = toPosInt(value(this).length);
	fromIndex = arguments[1];
	if (isNaN(fromIndex)) fromIndex = 0;else if (fromIndex >= 0) fromIndex = floor(fromIndex);else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));

	for (i = fromIndex; i < length; ++i) {
		if (objHasOwnProperty.call(this, i)) {
			val = this[i];
			if (numberIsNaN(val)) return i; // Jslint: ignore
		}
	}
	return -1;
};

},{"../../number/is-nan":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/index.js","../../number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js","../../object/valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Array.from : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/is-implemented.js":[function(require,module,exports){
"use strict";

module.exports = function () {
	var from = Array.from,
	    arr,
	    result;
	if (typeof from !== "function") return false;
	arr = ["raz", "dwa"];
	result = from(arr);
	return Boolean(result && result !== arr && result[1] === "dwa");
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/shim.js":[function(require,module,exports){
"use strict";

var iteratorSymbol = require("es6-symbol").iterator,
    isArguments = require("../../function/is-arguments"),
    isFunction = require("../../function/is-function"),
    toPosInt = require("../../number/to-pos-integer"),
    callable = require("../../object/valid-callable"),
    validValue = require("../../object/valid-value"),
    isValue = require("../../object/is-value"),
    isString = require("../../string/is-string"),
    isArray = Array.isArray,
    call = Function.prototype.call,
    desc = { configurable: true, enumerable: true, writable: true, value: null },
    defineProperty = Object.defineProperty;

// eslint-disable-next-line complexity
module.exports = function (arrayLike /*, mapFn, thisArg*/) {
	var mapFn = arguments[1],
	    thisArg = arguments[2],
	    Context,
	    i,
	    j,
	    arr,
	    length,
	    code,
	    iterator,
	    result,
	    getIterator,
	    value;

	arrayLike = Object(validValue(arrayLike));

	if (isValue(mapFn)) callable(mapFn);
	if (!this || this === Array || !isFunction(this)) {
		// Result: Plain array
		if (!mapFn) {
			if (isArguments(arrayLike)) {
				// Source: Arguments
				length = arrayLike.length;
				if (length !== 1) return Array.apply(null, arrayLike);
				arr = new Array(1);
				arr[0] = arrayLike[0];
				return arr;
			}
			if (isArray(arrayLike)) {
				// Source: Array
				arr = new Array(length = arrayLike.length);
				for (i = 0; i < length; ++i) {
					arr[i] = arrayLike[i];
				}return arr;
			}
		}
		arr = [];
	} else {
		// Result: Non plain array
		Context = this;
	}

	if (!isArray(arrayLike)) {
		if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {
			// Source: Iterator
			iterator = callable(getIterator).call(arrayLike);
			if (Context) arr = new Context();
			result = iterator.next();
			i = 0;
			while (!result.done) {
				value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, i, desc);
				} else {
					arr[i] = value;
				}
				result = iterator.next();
				++i;
			}
			length = i;
		} else if (isString(arrayLike)) {
			// Source: String
			length = arrayLike.length;
			if (Context) arr = new Context();
			for (i = 0, j = 0; i < length; ++i) {
				value = arrayLike[i];
				if (i + 1 < length) {
					code = value.charCodeAt(0);
					// eslint-disable-next-line max-depth
					if (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];
				}
				value = mapFn ? call.call(mapFn, thisArg, value, j) : value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, j, desc);
				} else {
					arr[j] = value;
				}
				++j;
			}
			length = j;
		}
	}
	if (length === undefined) {
		// Source: array or array-like
		length = toPosInt(arrayLike.length);
		if (Context) arr = new Context(length);
		for (i = 0; i < length; ++i) {
			value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];
			if (Context) {
				desc.value = value;
				defineProperty(arr, i, desc);
			} else {
				arr[i] = value;
			}
		}
	}
	if (Context) {
		desc.value = null;
		arr.length = length;
	}
	return arr;
};

},{"../../function/is-arguments":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/is-arguments.js","../../function/is-function":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/is-function.js","../../number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js","../../object/is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js","../../object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js","../../object/valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js","../../string/is-string":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/is-string.js","es6-symbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/to-array.js":[function(require,module,exports){
"use strict";

var from = require("./from"),
    isArray = Array.isArray;

module.exports = function (arrayLike) {
  return isArray(arrayLike) ? arrayLike : from(arrayLike);
};

},{"./from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/error/custom.js":[function(require,module,exports){
"use strict";

var assign = require("../object/assign"),
    isObject = require("../object/is-object"),
    isValue = require("../object/is-value"),
    captureStackTrace = Error.captureStackTrace;

exports = module.exports = function (message /*, code, ext*/) {
	var err = new Error(message),
	    code = arguments[1],
	    ext = arguments[2];
	if (!isValue(ext)) {
		if (isObject(code)) {
			ext = code;
			code = null;
		}
	}
	if (isValue(ext)) assign(err, ext);
	if (isValue(code)) err.code = code;
	if (captureStackTrace) captureStackTrace(err, exports);
	return err;
};

},{"../object/assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/index.js","../object/is-object":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-object.js","../object/is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/_define-length.js":[function(require,module,exports){
"use strict";

var toPosInt = require("../number/to-pos-integer");

var test = function test(arg1, arg2) {
	return arg2;
};

var desc, defineProperty, generate, mixin;

try {
	Object.defineProperty(test, "length", {
		configurable: true,
		writable: false,
		enumerable: false,
		value: 1
	});
} catch (ignore) {}

if (test.length === 1) {
	// ES6
	desc = { configurable: true, writable: false, enumerable: false };
	defineProperty = Object.defineProperty;
	module.exports = function (fn, length) {
		length = toPosInt(length);
		if (fn.length === length) return fn;
		desc.value = length;
		return defineProperty(fn, "length", desc);
	};
} else {
	mixin = require("../object/mixin");
	generate = function () {
		var cache = [];
		return function (length) {
			var args,
			    i = 0;
			if (cache[length]) return cache[length];
			args = [];
			while (length--) {
				args.push("a" + (++i).toString(36));
			} // eslint-disable-next-line no-new-func
			return new Function("fn", "return function (" + args.join(", ") + ") { return fn.apply(this, arguments); };");
		};
	}();
	module.exports = function (src, length) {
		var target;
		length = toPosInt(length);
		if (src.length === length) return src;
		target = generate(length)(src);
		try {
			mixin(target, src);
		} catch (ignore) {}
		return target;
	};
}

},{"../number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js","../object/mixin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/mixin.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/is-arguments.js":[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString,
    id = objToString.call(function () {
	return arguments;
}());

module.exports = function (value) {
	return objToString.call(value) === id;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/is-function.js":[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString,
    id = objToString.call(require("./noop"));

module.exports = function (value) {
	return typeof value === "function" && objToString.call(value) === id;
};

},{"./noop":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/noop.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/noop.js":[function(require,module,exports){
"use strict";

// eslint-disable-next-line no-empty-function

module.exports = function () {};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Math.sign : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/is-implemented.js":[function(require,module,exports){
"use strict";

module.exports = function () {
	var sign = Math.sign;
	if (typeof sign !== "function") return false;
	return sign(10) === 1 && sign(-20) === -1;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/shim.js":[function(require,module,exports){
"use strict";

module.exports = function (value) {
	value = Number(value);
	if (isNaN(value) || value === 0) return value;
	return value > 0 ? 1 : -1;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Number.isNaN : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/is-implemented.js":[function(require,module,exports){
"use strict";

module.exports = function () {
	var numberIsNaN = Number.isNaN;
	if (typeof numberIsNaN !== "function") return false;
	return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/is-nan/shim.js":[function(require,module,exports){
"use strict";

module.exports = function (value) {
	// eslint-disable-next-line no-self-compare
	return value !== value;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-integer.js":[function(require,module,exports){
"use strict";

var sign = require("../math/sign"),
    abs = Math.abs,
    floor = Math.floor;

module.exports = function (value) {
	if (isNaN(value)) return 0;
	value = Number(value);
	if (value === 0 || !isFinite(value)) return value;
	return sign(value) * floor(abs(value));
};

},{"../math/sign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/math/sign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js":[function(require,module,exports){
"use strict";

var toInteger = require("./to-integer"),
    max = Math.max;

module.exports = function (value) {
  return max(0, toInteger(value));
};

},{"./to-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-integer.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/_iterate.js":[function(require,module,exports){
// Internal method, used by iteration functions.
// Calls a function for each key-value pair found in object
// Optionally takes compareFn to iterate object in specific order

"use strict";

var callable = require("./valid-callable"),
    value = require("./valid-value"),
    bind = Function.prototype.bind,
    call = Function.prototype.call,
    keys = Object.keys,
    objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;

module.exports = function (method, defVal) {
	return function (obj, cb /*, thisArg, compareFn*/) {
		var list,
		    thisArg = arguments[2],
		    compareFn = arguments[3];
		obj = Object(value(obj));
		callable(cb);

		list = keys(obj);
		if (compareFn) {
			list.sort(typeof compareFn === "function" ? bind.call(compareFn, obj) : undefined);
		}
		if (typeof method !== "function") method = list[method];
		return call.call(method, list, function (key, index) {
			if (!objPropertyIsEnumerable.call(obj, key)) return defVal;
			return call.call(cb, thisArg, obj[key], key, obj, index);
		});
	};
};

},{"./valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js","./valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Object.assign : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/is-implemented.js":[function(require,module,exports){
"use strict";

module.exports = function () {
	var assign = Object.assign,
	    obj;
	if (typeof assign !== "function") return false;
	obj = { foo: "raz" };
	assign(obj, { bar: "dwa" }, { trzy: "trzy" });
	return obj.foo + obj.bar + obj.trzy === "razdwatrzy";
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/assign/shim.js":[function(require,module,exports){
"use strict";

var keys = require("../keys"),
    value = require("../valid-value"),
    max = Math.max;

module.exports = function (dest, src /*, …srcn*/) {
	var error,
	    i,
	    length = max(arguments.length, 2),
	    assign;
	dest = Object(value(dest));
	assign = function assign(key) {
		try {
			dest[key] = src[key];
		} catch (e) {
			if (!error) error = e;
		}
	};
	for (i = 1; i < length; ++i) {
		src = arguments[i];
		keys(src).forEach(assign);
	}
	if (error !== undefined) throw error;
	return dest;
};

},{"../keys":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/index.js","../valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/for-each.js":[function(require,module,exports){
"use strict";

module.exports = require("./_iterate")("forEach");

},{"./_iterate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/_iterate.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-callable.js":[function(require,module,exports){
// Deprecated

"use strict";

module.exports = function (obj) {
  return typeof obj === "function";
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-object.js":[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isValue = require("./is-value");

var map = { function: true, object: true };

module.exports = function (value) {
	return isValue(value) && map[typeof value === "undefined" ? "undefined" : _typeof(value)] || false;
};

},{"./is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js":[function(require,module,exports){
"use strict";

var _undefined = require("../function/noop")(); // Support ES3 engines

module.exports = function (val) {
  return val !== _undefined && val !== null;
};

},{"../function/noop":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/noop.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Object.keys : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/is-implemented.js":[function(require,module,exports){
"use strict";

module.exports = function () {
	try {
		Object.keys("primitive");
		return true;
	} catch (e) {
		return false;
	}
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/keys/shim.js":[function(require,module,exports){
"use strict";

var isValue = require("../is-value");

var keys = Object.keys;

module.exports = function (object) {
	return keys(isValue(object) ? Object(object) : object);
};

},{"../is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/map.js":[function(require,module,exports){
"use strict";

var callable = require("./valid-callable"),
    forEach = require("./for-each"),
    call = Function.prototype.call;

module.exports = function (obj, cb /*, thisArg*/) {
	var result = {},
	    thisArg = arguments[2];
	callable(cb);
	forEach(obj, function (value, key, targetObj, index) {
		result[key] = call.call(cb, thisArg, value, key, targetObj, index);
	});
	return result;
};

},{"./for-each":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/for-each.js","./valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/mixin.js":[function(require,module,exports){
"use strict";

var value = require("./valid-value"),
    defineProperty = Object.defineProperty,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    getOwnPropertySymbols = Object.getOwnPropertySymbols;

module.exports = function (target, source) {
	var error,
	    sourceObject = Object(value(source));
	target = Object(value(target));
	getOwnPropertyNames(sourceObject).forEach(function (name) {
		try {
			defineProperty(target, name, getOwnPropertyDescriptor(source, name));
		} catch (e) {
			error = e;
		}
	});
	if (typeof getOwnPropertySymbols === "function") {
		getOwnPropertySymbols(sourceObject).forEach(function (symbol) {
			try {
				defineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));
			} catch (e) {
				error = e;
			}
		});
	}
	if (error !== undefined) throw error;
	return target;
};

},{"./valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/normalize-options.js":[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

var forEach = Array.prototype.forEach,
    create = Object.create;

var process = function process(src, obj) {
	var key;
	for (key in src) {
		obj[key] = src[key];
	}
};

// eslint-disable-next-line no-unused-vars
module.exports = function (opts1 /*, …options*/) {
	var result = create(null);
	forEach.call(arguments, function (options) {
		if (!isValue(options)) return;
		process(Object(options), result);
	});
	return result;
};

},{"./is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/primitive-set.js":[function(require,module,exports){
"use strict";

var forEach = Array.prototype.forEach,
    create = Object.create;

// eslint-disable-next-line no-unused-vars
module.exports = function (arg /*, …args*/) {
	var set = create(null);
	forEach.call(arguments, function (name) {
		set[name] = true;
	});
	return set;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js":[function(require,module,exports){
"use strict";

module.exports = function (fn) {
	if (typeof fn !== "function") throw new TypeError(fn + " is not a function");
	return fn;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js":[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

module.exports = function (value) {
	if (!isValue(value)) throw new TypeError("Cannot use null or undefined");
	return value;
};

},{"./is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/validate-stringifiable-value.js":[function(require,module,exports){
"use strict";

var ensureValue = require("./valid-value"),
    stringifiable = require("./validate-stringifiable");

module.exports = function (value) {
  return stringifiable(ensureValue(value));
};

},{"./valid-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-value.js","./validate-stringifiable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/validate-stringifiable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/validate-stringifiable.js":[function(require,module,exports){
"use strict";

var isCallable = require("./is-callable");

module.exports = function (stringifiable) {
	try {
		if (stringifiable && isCallable(stringifiable.toString)) return stringifiable.toString();
		return String(stringifiable);
	} catch (e) {
		throw new TypeError("Passed argument cannot be stringifed");
	}
};

},{"./is-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/safe-to-string.js":[function(require,module,exports){
"use strict";

var isCallable = require("./object/is-callable");

module.exports = function (value) {
	try {
		if (value && isCallable(value.toString)) return value.toString();
		return String(value);
	} catch (e) {
		return "<non-stringifiable value>";
	}
};

},{"./object/is-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/index.js":[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? String.prototype.contains : require("./shim");

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/is-implemented.js","./shim":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/shim.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/is-implemented.js":[function(require,module,exports){
"use strict";

var str = "razdwatrzy";

module.exports = function () {
	if (typeof str.contains !== "function") return false;
	return str.contains("dwa") === true && str.contains("foo") === false;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/#/contains/shim.js":[function(require,module,exports){
"use strict";

var indexOf = String.prototype.indexOf;

module.exports = function (searchString /*, position*/) {
	return indexOf.call(this, searchString, arguments[1]) > -1;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/string/is-string.js":[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var objToString = Object.prototype.toString,
    id = objToString.call("");

module.exports = function (value) {
	return typeof value === "string" || value && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && (value instanceof String || objToString.call(value) === id) || false;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/to-short-string-representation.js":[function(require,module,exports){
"use strict";

var safeToString = require("./safe-to-string");

var reNewLine = /[\n\r\u2028\u2029]/g;

module.exports = function (value) {
	var string = safeToString(value);
	// Trim if too long
	if (string.length > 100) string = string.slice(0, 99) + "…";
	// Replace eventual new lines
	string = string.replace(reNewLine, function (char) {
		return JSON.stringify(char).slice(1, -1);
	});
	return string;
};

},{"./safe-to-string":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/safe-to-string.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/index.js":[function(require,module,exports){
'use strict';

module.exports = require('./is-implemented')() ? Symbol : require('./polyfill');

},{"./is-implemented":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/is-implemented.js","./polyfill":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/polyfill.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/is-implemented.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var validTypes = { object: true, symbol: true };

module.exports = function () {
	var symbol;
	if (typeof Symbol !== 'function') return false;
	symbol = Symbol('test symbol');
	try {
		String(symbol);
	} catch (e) {
		return false;
	}

	// Return 'true' also for polyfills
	if (!validTypes[_typeof(Symbol.iterator)]) return false;
	if (!validTypes[_typeof(Symbol.toPrimitive)]) return false;
	if (!validTypes[_typeof(Symbol.toStringTag)]) return false;

	return true;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/is-symbol.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = function (x) {
	if (!x) return false;
	if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'symbol') return true;
	if (!x.constructor) return false;
	if (x.constructor.name !== 'Symbol') return false;
	return x[x.constructor.toStringTag] === 'Symbol';
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/polyfill.js":[function(require,module,exports){
// ES2015 Symbol polyfill for environments that do not (or partially) support it

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var d = require('d'),
    validateSymbol = require('./validate-symbol'),
    create = Object.create,
    defineProperties = Object.defineProperties,
    defineProperty = Object.defineProperty,
    objPrototype = Object.prototype,
    NativeSymbol,
    SymbolPolyfill,
    HiddenSymbol,
    globalSymbols = create(null),
    isNativeSafe;

if (typeof Symbol === 'function') {
	NativeSymbol = Symbol;
	try {
		String(NativeSymbol());
		isNativeSafe = true;
	} catch (ignore) {}
}

var generateName = function () {
	var created = create(null);
	return function (desc) {
		var postfix = 0,
		    name,
		    ie11BugWorkaround;
		while (created[desc + (postfix || '')]) {
			++postfix;
		}desc += postfix || '';
		created[desc] = true;
		name = '@@' + desc;
		defineProperty(objPrototype, name, d.gs(null, function (value) {
			// For IE11 issue see:
			// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
			//    ie11-broken-getters-on-dom-objects
			// https://github.com/medikoo/es6-symbol/issues/12
			if (ie11BugWorkaround) return;
			ie11BugWorkaround = true;
			defineProperty(this, name, d(value));
			ie11BugWorkaround = false;
		}));
		return name;
	};
}();

// Internal constructor (not one exposed) for creating Symbol instances.
// This one is used to ensure that `someSymbol instanceof Symbol` always return false
HiddenSymbol = function _Symbol(description) {
	if (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');
	return SymbolPolyfill(description);
};

// Exposed `Symbol` constructor
// (returns instances of HiddenSymbol)
module.exports = SymbolPolyfill = function _Symbol2(description) {
	var symbol;
	if (this instanceof _Symbol2) throw new TypeError('Symbol is not a constructor');
	if (isNativeSafe) return NativeSymbol(description);
	symbol = create(HiddenSymbol.prototype);
	description = description === undefined ? '' : String(description);
	return defineProperties(symbol, {
		__description__: d('', description),
		__name__: d('', generateName(description))
	});
};
defineProperties(SymbolPolyfill, {
	for: d(function (key) {
		if (globalSymbols[key]) return globalSymbols[key];
		return globalSymbols[key] = SymbolPolyfill(String(key));
	}),
	keyFor: d(function (s) {
		var key;
		validateSymbol(s);
		for (key in globalSymbols) {
			if (globalSymbols[key] === s) return key;
		}
	}),

	// To ensure proper interoperability with other native functions (e.g. Array.from)
	// fallback to eventual native implementation of given symbol
	hasInstance: d('', NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill('hasInstance')),
	isConcatSpreadable: d('', NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill('isConcatSpreadable')),
	iterator: d('', NativeSymbol && NativeSymbol.iterator || SymbolPolyfill('iterator')),
	match: d('', NativeSymbol && NativeSymbol.match || SymbolPolyfill('match')),
	replace: d('', NativeSymbol && NativeSymbol.replace || SymbolPolyfill('replace')),
	search: d('', NativeSymbol && NativeSymbol.search || SymbolPolyfill('search')),
	species: d('', NativeSymbol && NativeSymbol.species || SymbolPolyfill('species')),
	split: d('', NativeSymbol && NativeSymbol.split || SymbolPolyfill('split')),
	toPrimitive: d('', NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill('toPrimitive')),
	toStringTag: d('', NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill('toStringTag')),
	unscopables: d('', NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill('unscopables'))
});

// Internal tweaks for real symbol producer
defineProperties(HiddenSymbol.prototype, {
	constructor: d(SymbolPolyfill),
	toString: d('', function () {
		return this.__name__;
	})
});

// Proper implementation of methods exposed on Symbol.prototype
// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
defineProperties(SymbolPolyfill.prototype, {
	toString: d(function () {
		return 'Symbol (' + validateSymbol(this).__description__ + ')';
	}),
	valueOf: d(function () {
		return validateSymbol(this);
	})
});
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
	var symbol = validateSymbol(this);
	if ((typeof symbol === 'undefined' ? 'undefined' : _typeof(symbol)) === 'symbol') return symbol;
	return symbol.toString();
}));
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

// Note: It's important to define `toPrimitive` as last one, as some implementations
// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
// And that may invoke error in definition flow:
// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));

},{"./validate-symbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/validate-symbol.js","d":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/validate-symbol.js":[function(require,module,exports){
'use strict';

var isSymbol = require('./is-symbol');

module.exports = function (value) {
	if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
	return value;
};

},{"./is-symbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es6-symbol/is-symbol.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/event-emitter/index.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var d = require('d'),
    callable = require('es5-ext/object/valid-callable'),
    apply = Function.prototype.apply,
    call = Function.prototype.call,
    create = Object.create,
    defineProperty = Object.defineProperty,
    defineProperties = Object.defineProperties,
    hasOwnProperty = Object.prototype.hasOwnProperty,
    descriptor = { configurable: true, enumerable: false, writable: true },
    on,
    _once2,
    off,
    emit,
    methods,
    descriptors,
    base;

on = function on(type, listener) {
	var data;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) {
		data = descriptor.value = create(null);
		defineProperty(this, '__ee__', descriptor);
		descriptor.value = null;
	} else {
		data = this.__ee__;
	}
	if (!data[type]) data[type] = listener;else if (_typeof(data[type]) === 'object') data[type].push(listener);else data[type] = [data[type], listener];

	return this;
};

_once2 = function once(type, listener) {
	var _once, self;

	callable(listener);
	self = this;
	on.call(this, type, _once = function once() {
		off.call(self, type, _once);
		apply.call(listener, this, arguments);
	});

	_once.__eeOnceListener__ = listener;
	return this;
};

off = function off(type, listener) {
	var data, listeners, candidate, i;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) return this;
	data = this.__ee__;
	if (!data[type]) return this;
	listeners = data[type];

	if ((typeof listeners === 'undefined' ? 'undefined' : _typeof(listeners)) === 'object') {
		for (i = 0; candidate = listeners[i]; ++i) {
			if (candidate === listener || candidate.__eeOnceListener__ === listener) {
				if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];else listeners.splice(i, 1);
			}
		}
	} else {
		if (listeners === listener || listeners.__eeOnceListener__ === listener) {
			delete data[type];
		}
	}

	return this;
};

emit = function emit(type) {
	var i, l, listener, listeners, args;

	if (!hasOwnProperty.call(this, '__ee__')) return;
	listeners = this.__ee__[type];
	if (!listeners) return;

	if ((typeof listeners === 'undefined' ? 'undefined' : _typeof(listeners)) === 'object') {
		l = arguments.length;
		args = new Array(l - 1);
		for (i = 1; i < l; ++i) {
			args[i - 1] = arguments[i];
		}listeners = listeners.slice();
		for (i = 0; listener = listeners[i]; ++i) {
			apply.call(listener, this, args);
		}
	} else {
		switch (arguments.length) {
			case 1:
				call.call(listeners, this);
				break;
			case 2:
				call.call(listeners, this, arguments[1]);
				break;
			case 3:
				call.call(listeners, this, arguments[1], arguments[2]);
				break;
			default:
				l = arguments.length;
				args = new Array(l - 1);
				for (i = 1; i < l; ++i) {
					args[i - 1] = arguments[i];
				}
				apply.call(listeners, this, args);
		}
	}
};

methods = {
	on: on,
	once: _once2,
	off: off,
	emit: emit
};

descriptors = {
	on: d(on),
	once: d(_once2),
	off: d(off),
	emit: d(emit)
};

base = defineProperties({}, descriptors);

module.exports = exports = function exports(o) {
	return o == null ? create(base) : defineProperties(Object(o), descriptors);
};
exports.methods = methods;

},{"d":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d/index.js","es5-ext/object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/EventListener.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if ("development" !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
},{"./emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/camelize.js":[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/camelizeStyleName.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

},{"./camelize":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/camelize.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/containsNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/isTextNode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/createArrayFromMixed.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ? "development" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? "development" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? "development" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? "development" !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;

},{"./invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/createNodesFromMarkup.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","./createArrayFromMixed":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/createArrayFromMixed.js","./getMarkupWrap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getMarkupWrap.js","./invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js":[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if ("development" !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/focusNode.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getMarkupWrap.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;

},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","./invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getUnboundedScrollPosition.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/hyphenate.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/hyphenateStyleName.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

},{"./hyphenate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/hyphenate.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if ("development" !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/isNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/isTextNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/isNode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/memoizeStringOnly.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performance.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performanceNow.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performance.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js":[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("development" !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
},{"./emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/header-case/header-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');
var upperCase = require('upper-case');

/**
 * Header case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '-').replace(/^.|-./g, function (m) {
    return upperCase(m, locale);
  });
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/action.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');

var Action = function (_IdyllComponent) {
  _inherits(Action, _IdyllComponent);

  function Action() {
    _classCallCheck(this, Action);

    return _possibleConstructorReturn(this, (Action.__proto__ || Object.getPrototypeOf(Action)).apply(this, arguments));
  }

  _createClass(Action, [{
    key: 'render',
    value: function render() {
      return React.createElement('span', _extends({}, this.props, { className: 'action' }), this.props.children);
    }
  }]);

  return Action;
}(IdyllComponent);

module.exports = Action;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/aside.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');

var Aside = function (_IdyllComponent) {
  _inherits(Aside, _IdyllComponent);

  function Aside() {
    _classCallCheck(this, Aside);

    return _possibleConstructorReturn(this, (Aside.__proto__ || Object.getPrototypeOf(Aside)).apply(this, arguments));
  }

  _createClass(Aside, [{
    key: 'render',
    value: function render() {
      return React.createElement('div', { className: 'aside-container' }, React.createElement('div', { className: 'aside' }, this.props.children));
    }
  }]);

  return Aside;
}(IdyllComponent);

module.exports = Aside;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/dynamic.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var ReactDOM = require('react-dom');
var IdyllComponent = require('idyll-component');
var Format = require('d3-format');
var Drag = require('d3-drag');
var Selection = require('d3-selection');

var Dynamic = function (_IdyllComponent) {
  _inherits(Dynamic, _IdyllComponent);

  function Dynamic() {
    _classCallCheck(this, Dynamic);

    return _possibleConstructorReturn(this, (Dynamic.__proto__ || Object.getPrototypeOf(Dynamic)).apply(this, arguments));
  }

  _createClass(Dynamic, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var node = ReactDOM.findDOMNode(this);
      this.drag = Drag.drag().on('drag', function () {
        var dx = Selection.event.dx;
        var _props = _this2.props,
            interval = _props.interval,
            value = _props.value;

        var newValue = Math.max(Math.min(value + interval * dx, _this2.props.max), _this2.props.min);
        _this2.updateProps({ value: newValue });
      });
      this.drag(Selection.select(node));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          format = _props2.format,
          value = _props2.value;

      var formatter = Format.format(format);
      return React.createElement('span', { className: 'idyll-dynamic' }, formatter(value));
    }
  }]);

  return Dynamic;
}(IdyllComponent);

Dynamic.defaultProps = {
  format: '.2f',
  min: Number.NEGATIVE_INFINITY,
  max: Number.POSITIVE_INFINITY,
  interval: 1
};

module.exports = Dynamic;

},{"d3-drag":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/d3-drag/build/d3-drag.js","d3-format":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d3-format/build/d3-format.js","d3-selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/d3-selection/build/d3-selection.js","idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","react-dom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/gist.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');

var EmbeddedGist = function (_IdyllComponent) {
  _inherits(EmbeddedGist, _IdyllComponent);

  function EmbeddedGist(props) {
    _classCallCheck(this, EmbeddedGist);

    var _this = _possibleConstructorReturn(this, (EmbeddedGist.__proto__ || Object.getPrototypeOf(EmbeddedGist)).call(this, props));

    _this.gist = props.gist;
    _this.file = props.file;
    _this.stylesheetAdded = false;
    _this.state = {
      loading: true,
      src: ""
    };
    return _this;
  }

  // The Gist JSON data includes a stylesheet to add to the page
  // to make it look correct. `addStylesheet` ensures we only add
  // the stylesheet one time.


  _createClass(EmbeddedGist, [{
    key: 'addStylesheet',
    value: function addStylesheet(href) {
      if (!this.stylesheetAdded) {
        this.stylesheetAdded = true;
        var link = document.createElement('link');
        link.type = "text/css";
        link.rel = "stylesheet";
        link.href = href;

        document.head.appendChild(link);
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      // Create a JSONP callback that will set our state
      // with the data that comes back from the Gist site
      var gistCallback = EmbeddedGist.nextGistCallback();
      window[gistCallback] = function (gist) {
        this.setState({
          loading: false,
          src: gist.div
        });
        this.addStylesheet(gist.stylesheet);
      }.bind(this);

      var url = "https://gist.github.com/" + this.props.gist + ".json?callback=" + gistCallback;
      if (this.props.file) {
        url += "&file=" + this.props.file;
      }

      // Add the JSONP script tag to the document.
      var script = document.createElement('script');
      script.type = 'text/javascript';
      script.src = url;
      document.head.appendChild(script);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.loading) {
        return React.createElement('div', null, 'loading...');
      } else {
        return React.createElement('div', { dangerouslySetInnerHTML: { __html: this.state.src } });
      }
    }
  }]);

  return EmbeddedGist;
}(IdyllComponent);

EmbeddedGist.propTypes = {
  gist: React.PropTypes.string.isRequired, // e.g. "username/id"
  file: React.PropTypes.string // to embed a single specific file from the gist
};

// Each time we request a Gist, we'll need to generate a new
// global function name to serve as the JSONP callback.
var gistCallbackId = 0;
EmbeddedGist.nextGistCallback = function () {
  return "embed_gist_callback_" + gistCallbackId++;
};

module.exports = EmbeddedGist;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/header.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');

var Header = function (_IdyllComponent) {
  _inherits(Header, _IdyllComponent);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
  }

  _createClass(Header, [{
    key: 'render',
    value: function render() {
      return React.createElement('div', { className: 'article-header' }, React.createElement('h1', { className: 'hed' }, this.props.title), this.props.subtitle && React.createElement('h2', { className: 'dek' }, this.props.subtitle), this.props.author && React.createElement('div', { className: 'byline' }, 'By: ', React.createElement('a', { href: this.props.authorLink }, this.props.author)));
    }
  }]);

  return Header;
}(IdyllComponent);

module.exports = Header;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/d3-drag/build/d3-drag.js":[function(require,module,exports){
// https://d3js.org/d3-drag/ Version 1.1.1. Copyright 2017 Mike Bostock.
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :
	typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :
	(factory((global.d3 = global.d3 || {}),global.d3,global.d3));
}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';

function nopropagation() {
  d3Selection.event.stopImmediatePropagation();
}

var noevent = function() {
  d3Selection.event.preventDefault();
  d3Selection.event.stopImmediatePropagation();
};

var nodrag = function(view) {
  var root = view.document.documentElement,
      selection = d3Selection.select(view).on("dragstart.drag", noevent, true);
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", noevent, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
};

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = d3Selection.select(view).on("dragstart.drag", null);
  if (noclick) {
    selection.on("click.drag", noevent, true);
    setTimeout(function() { selection.on("click.drag", null); }, 0);
  }
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

var constant = function(x) {
  return function() {
    return x;
  };
};

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch$$1;
}

DragEvent.prototype.on = function() {
  var value = this._.on.apply(this._, arguments);
  return value === this._ ? this : value;
};

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;
}

function touchable() {
  return "ontouchstart" in this;
}

var drag = function() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      gestures = {},
      listeners = d3Dispatch.dispatch("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection
        .on("mousedown.drag", mousedowned)
      .filter(touchable)
        .on("touchstart.drag", touchstarted)
        .on("touchmove.drag", touchmoved)
        .on("touchend.drag touchcancel.drag", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), d3Selection.mouse, this, arguments);
    if (!gesture) return;
    d3Selection.select(d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    nodrag(d3Selection.event.view);
    nopropagation();
    mousemoving = false;
    mousedownx = d3Selection.event.clientX;
    mousedowny = d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    noevent();
    if (!mousemoving) {
      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }
    gestures.mouse("drag");
  }

  function mouseupped() {
    d3Selection.select(d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    yesdrag(d3Selection.event.view, mousemoving);
    noevent();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {
        nopropagation();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = d3Selection.event.changedTouches,
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        noevent();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = d3Selection.event.changedTouches,
        n = touches.length, i, gesture;

    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        nopropagation();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id), s, dx, dy,
        sublisteners = listeners.copy();

    if (!d3Selection.customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {
      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;

    return function gesture(type) {
      var p0 = p, n;
      switch (type) {
        case "start": gestures[id] = gesture, n = active++; break;
        case "end": delete gestures[id], --active; // nobreak
        case "drag": p = point(container, id), n = active; break;
      }
      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : constant(!!_), drag) : filter;
  };

  drag.container = function(_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : constant(_), drag) : container;
  };

  drag.subject = function(_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : constant(_), drag) : subject;
  };

  drag.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
};

exports.drag = drag;
exports.dragDisable = nodrag;
exports.dragEnable = yesdrag;

Object.defineProperty(exports, '__esModule', { value: true });

})));

},{"d3-dispatch":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d3-dispatch/build/d3-dispatch.js","d3-selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/d3-selection/build/d3-selection.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/d3-selection/build/d3-selection.js":[function(require,module,exports){
// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.d3 = global.d3 || {})));
}(this, (function (exports) { 'use strict';

var xhtml = "http://www.w3.org/1999/xhtml";

var namespaces = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};

var namespace = function(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;
};

function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === xhtml && document.documentElement.namespaceURI === xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

var creator = function(name) {
  var fullname = namespace(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
};

var nextId = 0;

function local() {
  return new Local;
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function(node) {
    var id = this._;
    while (!(id in node)) if (!(node = node.parentNode)) return;
    return node[id];
  },
  set: function(node, value) {
    return node[this._] = value;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};

var matcher = function(selector) {
  return function() {
    return this.matches(selector);
  };
};

if (typeof document !== "undefined") {
  var element = document.documentElement;
  if (!element.matches) {
    var vendorMatches = element.webkitMatchesSelector
        || element.msMatchesSelector
        || element.mozMatchesSelector
        || element.oMatchesSelector;
    matcher = function(selector) {
      return function() {
        return vendorMatches.call(this, selector);
      };
    };
  }
}

var matcher$1 = matcher;

var filterEvents = {};

exports.event = null;

if (typeof document !== "undefined") {
  var element$1 = document.documentElement;
  if (!("onmouseenter" in element$1)) {
    filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function(event) {
    var related = event.relatedTarget;
    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function(event1) {
    var event0 = exports.event; // Events can be reentrant (e.g., focus).
    exports.event = event1;
    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function(d, i, group) {
    var on = this.__on, o, listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

var selection_on = function(typename, value, capture) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
  return this;
};

function customEvent(event1, listener, that, args) {
  var event0 = exports.event;
  event1.sourceEvent = exports.event;
  exports.event = event1;
  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event0;
  }
}

var sourceEvent = function() {
  var current = exports.event, source;
  while (source = current.sourceEvent) current = source;
  return current;
};

var point = function(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
};

var mouse = function(node) {
  var event = sourceEvent();
  if (event.changedTouches) event = event.changedTouches[0];
  return point(node, event);
};

function none() {}

var selector = function(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
};

var selection_select = function(select) {
  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new Selection(subgroups, this._parents);
};

function empty() {
  return [];
}

var selectorAll = function(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
};

var selection_selectAll = function(select) {
  if (typeof select !== "function") select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new Selection(subgroups, parents);
};

var selection_filter = function(match) {
  if (typeof match !== "function") match = matcher$1(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Selection(subgroups, this._parents);
};

var sparse = function(update) {
  return new Array(update.length);
};

var selection_enter = function() {
  return new Selection(this._enter || this._groups.map(sparse), this._parents);
};

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};

var constant = function(x) {
  return function() {
    return x;
  };
};

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);
    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
      exit[i] = node;
    }
  }
}

var selection_data = function(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function(d) { data[++j] = d; });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = constant(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
};

var selection_exit = function() {
  return new Selection(this._exit || this._groups.map(sparse), this._parents);
};

var selection_merge = function(selection) {

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Selection(merges, this._parents);
};

var selection_order = function() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
};

var selection_sort = function(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new Selection(sortgroups, this._parents).order();
};

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

var selection_call = function() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
};

var selection_nodes = function() {
  var nodes = new Array(this.size()), i = -1;
  this.each(function() { nodes[++i] = this; });
  return nodes;
};

var selection_node = function() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
};

var selection_size = function() {
  var size = 0;
  this.each(function() { ++size; });
  return size;
};

var selection_empty = function() {
  return !this.node();
};

var selection_each = function(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
};

function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

var selection_attr = function(name, value) {
  var fullname = namespace(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
};

var defaultView = function(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
};

function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

var selection_style = function(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
};

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
}

function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

var selection_property = function(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
};

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

var selection_classed = function(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
};

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

var selection_text = function(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
};

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

var selection_html = function(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
};

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

var selection_raise = function() {
  return this.each(raise);
};

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

var selection_lower = function() {
  return this.each(lower);
};

var selection_append = function(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
};

function constantNull() {
  return null;
}

var selection_insert = function(name, before) {
  var create = typeof name === "function" ? name : creator(name),
      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
};

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

var selection_remove = function() {
  return this.each(remove);
};

var selection_datum = function(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
};

function dispatchEvent(node, type, params) {
  var window = defaultView(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

var selection_dispatch = function(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
};

var root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: selection_select,
  selectAll: selection_selectAll,
  filter: selection_filter,
  data: selection_data,
  enter: selection_enter,
  exit: selection_exit,
  merge: selection_merge,
  order: selection_order,
  sort: selection_sort,
  call: selection_call,
  nodes: selection_nodes,
  node: selection_node,
  size: selection_size,
  empty: selection_empty,
  each: selection_each,
  attr: selection_attr,
  style: selection_style,
  property: selection_property,
  classed: selection_classed,
  text: selection_text,
  html: selection_html,
  raise: selection_raise,
  lower: selection_lower,
  append: selection_append,
  insert: selection_insert,
  remove: selection_remove,
  datum: selection_datum,
  on: selection_on,
  dispatch: selection_dispatch
};

var select = function(selector) {
  return typeof selector === "string"
      ? new Selection([[document.querySelector(selector)]], [document.documentElement])
      : new Selection([[selector]], root);
};

var selectAll = function(selector) {
  return typeof selector === "string"
      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])
      : new Selection([selector == null ? [] : selector], root);
};

var touch = function(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return point(node, touch);
    }
  }

  return null;
};

var touches = function(node, touches) {
  if (touches == null) touches = sourceEvent().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = point(node, touches[i]);
  }

  return points;
};

exports.creator = creator;
exports.local = local;
exports.matcher = matcher$1;
exports.mouse = mouse;
exports.namespace = namespace;
exports.namespaces = namespaces;
exports.select = select;
exports.selectAll = selectAll;
exports.selection = selection;
exports.selector = selector;
exports.selectorAll = selectorAll;
exports.style = styleValue;
exports.touch = touch;
exports.touches = touches;
exports.window = defaultView;
exports.customEvent = customEvent;

Object.defineProperty(exports, '__esModule', { value: true });

})));

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js":[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var ReactDOM = require('react-dom');

//http://stackoverflow.com/questions/4588119/get-elements-css-selector-when-it-doesnt-have-an-id
function fullPath(el) {
  var names = [];
  while (el.parentNode) {
    if (el.id) {
      names.unshift('#' + el.id);
      break;
    } else {
      if (el == el.ownerDocument.documentElement) names.unshift(el.tagName);else {
        for (var c = 1, e = el; e.previousElementSibling; e = e.previousElementSibling, c++) {}
        names.unshift(el.tagName + ":nth-child(" + c + ")");
      }
      el = el.parentNode;
    }
  }
  return names.join(" > ");
}

var IdyllComponent = function (_React$PureComponent) {
  _inherits(IdyllComponent, _React$PureComponent);

  function IdyllComponent(props) {
    _classCallCheck(this, IdyllComponent);

    var _this = _possibleConstructorReturn(this, (IdyllComponent.__proto__ || Object.getPrototypeOf(IdyllComponent)).call(this, props));

    if (props.onEnteredView || props.onExitView) {
      _this.componentDidMount = function () {
        var dom = ReactDOM.findDOMNode(_this);
        var ScrollWatch = require('scrollwatch');
        var sw = new ScrollWatch({
          watch: fullPath(dom),
          onElementInView: props.onEnteredView,
          onElementOutOfView: props.onExitView,
          watchOnce: false
        });
      };
    }
    return _this;
  }

  return IdyllComponent;
}(React.PureComponent);

module.exports = IdyllComponent;

},{"react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","react-dom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/index.js","scrollwatch":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/scrollwatch/dist/ScrollWatch-1.2.0.min.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/range.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');

var Range = function (_IdyllComponent) {
  _inherits(Range, _IdyllComponent);

  function Range(props) {
    _classCallCheck(this, Range);

    return _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));
  }

  _createClass(Range, [{
    key: 'handleChange',
    value: function handleChange(event) {
      this.updateProps({
        value: +event.target.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          value = _props.value,
          min = _props.min,
          max = _props.max,
          step = _props.step;

      return React.createElement('input', { type: 'range', onChange: this.handleChange.bind(this), value: value, min: min, max: max, step: step });
    }
  }]);

  return Range;
}(IdyllComponent);

Range.defaultProps = {
  value: 0,
  min: 0,
  max: 1,
  step: 1
};

module.exports = Range;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/table.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var IdyllComponent = require('idyll-component');
var Reactable = require('reactable');
var Table = Reactable.Table;
var Tr = Reactable.Tr;
var Td = Reactable.Td;

var TableComponent = function (_IdyllComponent) {
  _inherits(TableComponent, _IdyllComponent);

  function TableComponent() {
    _classCallCheck(this, TableComponent);

    return _possibleConstructorReturn(this, (TableComponent.__proto__ || Object.getPrototypeOf(TableComponent)).apply(this, arguments));
  }

  _createClass(TableComponent, [{
    key: 'render',
    value: function render() {
      return React.createElement(Table, { className: 'table ' + (this.props.className || ''), data: this.props.data });
    }
  }]);

  return TableComponent;
}(IdyllComponent);

module.exports = TableComponent;

},{"idyll-component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/node_modules/idyll-component/lib.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","reactable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/constants.js":[function(require,module,exports){
'use strict';

var COMPONENTS = {
  Variable: 'var',
  Derived: 'derived',
  Dataset: 'data'
};

var PROPERTIES = {
  Expression: 'expression',
  Variable: 'variable',
  Value: 'value',
  Function: 'function'
};

var VARIABLE = {
  Name: 'name',
  Value: 'value'
};

var DATASET = {
  Name: 'name',
  Source: 'source'
};

var DERIVED = {
  Name: 'name',
  Value: 'value'
};

module.exports = {
  COMPONENTS: COMPONENTS,
  PROPERTIES: PROPERTIES,
  VARIABLE: VARIABLE,
  DERIVED: DERIVED,
  DATASET: DATASET
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/index.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var walkVars = require('./visitors/vars');
var walkNode = require('./visitors/node');
var utils = require('./utils');

var transformRefs = function transformRefs(refs) {
  var output = {};
  var keys = ['scrollProgress', 'size', 'position'];
  Object.keys(refs).forEach(function (ref) {
    var val = refs[ref];
    keys.forEach(function (key) {
      if (val === null || val === undefined) {
        return;
      }
      var results = utils.flattenObject(key, val[key]);
      Object.keys(results).forEach(function (result) {
        output['_idyllRefs' + ref + result] = results[result];
      });
    });
  });
  return output;
};

var InteractiveDocument = function (_React$PureComponent) {
  _inherits(InteractiveDocument, _React$PureComponent);

  function InteractiveDocument(props) {
    _classCallCheck(this, InteractiveDocument);

    var _this = _possibleConstructorReturn(this, (InteractiveDocument.__proto__ || Object.getPrototypeOf(InteractiveDocument)).call(this, props));

    _this.handleUpdateProps = _this.handleUpdateProps.bind(_this);

    // Walk the tree, creating the proper components for evererything.
    _this.bindings = {};
    _this._idyllRefs = {};
    _this.derivedVars = {};
    _this.initialState = {};
    _this.updateFuncCache = {};

    props.ast.map(walkVars(_this, props.datasets));

    _this.state = _this.initialState;

    var nodeWalker = walkNode(_this, props.componentClasses);
    _this.getChildren = function () {
      return props.ast.map(nodeWalker());
    };
    return _this;
  }

  _createClass(InteractiveDocument, [{
    key: 'handleUpdateProps',
    value: function handleUpdateProps(nodeID) {
      var _this2 = this;

      if (!this.updateFuncCache[nodeID]) {
        this.updateFuncCache[nodeID] = function (props) {
          if (_this2.bindings[nodeID]) {
            var newState = {};
            Object.keys(props).forEach(function (propName) {
              var val = props[propName];
              if (_this2.bindings[nodeID][propName]) {
                newState[_this2.bindings[nodeID][propName]] = val;
              }
            });
            _this2.setStateAndDerived(newState);
          }
        };
      }

      return this.updateFuncCache[nodeID];
    }
  }, {
    key: 'setStateAndDerived',
    value: function setStateAndDerived(newState) {
      var _this3 = this;

      Object.keys(this.derivedVars).forEach(function (dv) {
        _this3.derivedVars[dv].update(newState);
      });
      this.setState(newState);
    }
  }, {
    key: 'getDerivedVars',
    value: function getDerivedVars() {
      var _this4 = this;

      var dvs = {};
      Object.keys(this.derivedVars).forEach(function (dv) {
        dvs[dv] = _this4.derivedVars[dv].value;
      });
      return dvs;
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this5 = this;

      var refKeys = Object.keys(this._idyllRefs);
      if (!refKeys.length) {
        return;
      }
      refKeys.forEach(function (name) {
        var ref = _this5._idyllRefs[name];
        var rect = ref.domNode().getBoundingClientRect();
        _this5._idyllRefs[name]._node = ref.domNode();
        _this5._idyllRefs[name].size = {
          x: rect.width,
          y: rect.height
        };

        _this5._idyllRefs[name].position = {
          top: rect.top,
          left: rect.left,
          right: rect.right,
          bottom: rect.bottom
        };

        _this5._idyllRefs[name].absolutePosition = {
          top: rect.top + window.scrollY,
          left: rect.left + window.scrollX,
          right: rect.right + window.scrollX,
          bottom: rect.bottom + window.scrollY
        };
      });
      this.setState(transformRefs(this._idyllRefs));

      window.addEventListener('scroll', function (e) {
        // calculate current position based on scroll position
        var body = document.body;
        var html = document.documentElement;
        var documentWidth = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);
        var documentHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
        var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
        var scrollX = window.scrollX;
        var scrollY = window.scrollY;

        var newRefs = {};
        Object.keys(_this5._idyllRefs).forEach(function (ref) {
          var _idyllRefs$ref = _this5._idyllRefs[ref],
              size = _idyllRefs$ref.size,
              absolutePosition = _idyllRefs$ref.absolutePosition,
              _node = _idyllRefs$ref._node;

          // 0 percent === top of the div is over the bottom of the window

          var minY = Math.max(0, absolutePosition.top - windowHeight);
          // 100 percent === bottom of div is at top of window
          var maxY = Math.min(documentHeight - windowHeight, absolutePosition.bottom);

          var minX = Math.max(0, absolutePosition.left - windowWidth);
          var maxX = Math.min(documentWidth - windowWidth, absolutePosition.right);

          var rect = _node.getBoundingClientRect();
          newRefs[ref] = {
            scrollProgress: {
              x: minX === maxX ? 1 : Math.max(0, Math.min(1, (scrollX - minX) / (maxX - minX))),
              y: minY === maxY ? 1 : Math.max(0, Math.min(1, (scrollY - minY) / (maxY - minY)))
            },
            position: {
              top: rect.top,
              left: rect.left,
              right: rect.right,
              bottom: rect.bottom
            }
          };
          _this5._idyllRefs[ref] = Object.assign({}, _this5._idyllRefs[ref], newRefs[ref]);
        });

        _this5.setState(transformRefs(newRefs));
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement('div', { className: 'idyll-root' }, this.getChildren());
    }
  }]);

  return InteractiveDocument;
}(React.PureComponent);

module.exports = InteractiveDocument;

},{"./utils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/utils.js","./visitors/node":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/visitors/node.js","./visitors/vars":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/visitors/vars.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/utils.js":[function(require,module,exports){
'use strict';

var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
};

var flattenObject = function flattenObject(name, obj) {
  var output = {};
  if (obj === undefined || obj === null) {
    return output;
  }
  Object.keys(obj).forEach(function (key) {
    var val = obj[key];
    if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {
      var results = flattenObject(key, val);
      Object.keys(results).forEach(function (result) {
        output[name + result] = results[result];
      });
    } else {
      output[name + key] = val;
    }
  });
  return output;
};

module.exports = {
  flattenObject: flattenObject
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/visitors/node.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var htmlTags = require('html-tags');
var changeCase = require('change-case');
var memoize = require('memoizee');
var isClass = require('is-class');

var _require = require('../constants'),
    COMPONENTS = _require.COMPONENTS,
    PROPERTIES = _require.PROPERTIES;

var stringifyRefs = function stringifyRefs(refs) {
  var output = {};
  var keys = ['scrollProgress', 'size', 'position'];
  Object.keys(refs).forEach(function (ref) {
    var val = refs[ref];
    output[ref] = {};
    Object.keys(val).forEach(function (key) {
      if (keys.indexOf(key) === -1) {
        return;
      }
      output[ref][key] = val[key];
    });
  });
  return JSON.stringify(output);
};

var filterPropsByComponentName = {
  meta: ['description'],
  p: []
};

module.exports = function (component, componentClasses) {

  var processComponent = memoize(function (name, id) {
    var split = name.split('.');
    var paramCaseName = changeCase.paramCase(split[0]);
    var componentClass = void 0;
    if (componentClasses[paramCaseName]) {
      componentClass = componentClasses[paramCaseName];
      for (var i = 1; i < split.length; i++) {
        componentClass = componentClass[split[i]];
      }
      if (componentClass.hasOwnProperty('default')) {
        componentClass = componentClass.default;
      }
      if (isClass(componentClass)) {
        var update = component.handleUpdateProps(id);
        try {
          return function (_componentClass) {
            _inherits(_class, _componentClass);

            function _class() {
              _classCallCheck(this, _class);

              return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
            }

            _createClass(_class, [{
              key: 'updateProps',
              value: function updateProps(newProps) {
                return update.call(this, newProps);
              }
            }]);

            return _class;
          }(componentClass);
        } catch (e) {/* just in case something weird happens, return the unmodified class */}
      }
    } else if (htmlTags.indexOf(name.toLowerCase()) > -1) {
      componentClass = name.toLowerCase();
    }

    return componentClass;
  });

  var nodeID = -1;
  var walkNode = function walkNode(node) {
    nodeID++;
    if (typeof node === 'string') {
      return node;
    }

    var componentName = node[0];
    var filterProps = filterPropsByComponentName[componentName];
    var props = node[1];
    var children = node[2];
    if ([COMPONENTS.Variable, COMPONENTS.Dataset, COMPONENTS.Derived].indexOf(componentName) === -1) {
      var propsObj = { key: nodeID };

      props.forEach(function (propArr) {
        var propName = propArr[0];
        if (filterProps && filterProps.indexOf(propName) !== -1) return;
        var propValueArr = propArr[1];
        if (propValueArr[0] === PROPERTIES.Variable) {
          propsObj[propName] = component.state[propValueArr[1]];
        } else if (propValueArr[0] === PROPERTIES.Expression) {

          if (propName.startsWith('on') || propName.startsWith('handle')) {
            var evalFunc = '(() => {';
            var relevantVars = [];
            var expression = propValueArr[1];
            Object.keys(component.state).forEach(function (propName) {
              if (expression.indexOf(propName) === -1) {
                return;
              }
              relevantVars.push(propName);
              var val = component.state[propName];
              evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
            });
            var dvs = component.getDerivedVars();
            Object.keys(dvs).forEach(function (propName) {
              if (expression.indexOf(propName) === -1) {
                return;
              }
              var val = dvs[propName];
              evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
            });
            evalFunc += 'var refs = ' + stringifyRefs(component._idyllRefs) + ';\n';
            evalFunc += propValueArr[1];
            evalFunc += '\ncomponent.setStateAndDerived({' + relevantVars.join(',') + '});\n';
            evalFunc += '})()';
            propsObj[propName] = function () {
              eval(evalFunc);
            }.bind(component);
          } else {
            var _evalFunc = '(() => {';
            var _expression = propValueArr[1];
            Object.keys(component.state).forEach(function (propName) {
              if (_expression.indexOf(propName) === -1) {
                return;
              }
              var val = component.state[propName];
              _evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
            });
            var _dvs = component.getDerivedVars();
            Object.keys(_dvs).forEach(function (propName) {
              if (_expression.indexOf(propName) === -1) {
                return;
              }
              var val = _dvs[propName];
              _evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
            });
            _evalFunc += 'var refs = ' + stringifyRefs(component._idyllRefs) + ';\n';
            _evalFunc += 'var retVal; try { retVal = ' + propValueArr[1] + '; } catch (e) { /*console.log(e)*/ }; return retVal;\n';
            _evalFunc += '})()';
            propsObj[propName] = eval(_evalFunc);
          }
        } else {
          propsObj[propName] = propValueArr[1];
        }
      });

      var componentClass = processComponent(componentName, nodeID);
      return React.createElement(componentClass, propsObj, children && children.length ? children.map(walkNode) : undefined);
    }
  };

  var getWalker = function getWalker() {
    nodeID = -1;
    return walkNode;
  };

  return getWalker;
};

},{"../constants":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/constants.js","change-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/change-case/change-case.js","html-tags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/html-tags/index.js","is-class":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-class/is-class.js","memoizee":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/index.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/visitors/vars.js":[function(require,module,exports){
'use strict';

var ReactDOM = require('react-dom');

var _require = require('../constants'),
    COMPONENTS = _require.COMPONENTS,
    DATASET = _require.DATASET,
    PROPERTIES = _require.PROPERTIES,
    DERIVED = _require.DERIVED,
    VARIABLE = _require.VARIABLE;

module.exports = function (component, datasets) {
  var nodeID = -1;
  var walkVars = function walkVars(node) {
    var _this = this;

    nodeID++;
    if (typeof node === 'string') {
      return;
    }

    var componentName = node[0];
    var props = node[1];
    var children = node[2];
    if (componentName === COMPONENTS.Dataset) {
      var varName = void 0,
          varVal = void 0;
      props.forEach(function (propArr) {
        var propName = propArr[0];
        var propValueArr = propArr[1];
        switch (propName) {
          case DATASET.Name:
            varName = propValueArr[1];
            varVal = datasets[varName];
            break;
        }
      });
      this.initialState[varName] = varVal;
    } else if (componentName === COMPONENTS.Variable) {
      var _varName = void 0,
          _varVal = void 0;
      props.forEach(function (propArr) {
        var propName = propArr[0];
        var propValueArr = propArr[1];
        switch (propName) {
          case VARIABLE.Name:
            _varName = propValueArr[1];
            break;
          case VARIABLE.Value:
            switch (propValueArr[0]) {
              case PROPERTIES.Value:
                _varVal = propValueArr[1];
                break;
              case PROPERTIES.Variable:
                _varVal = _this.initialState[propValueArr[1]];
                break;
              case PROPERTIES.Expression:
                var evalFunc = '(() => {';
                var expression = propValueArr[1];
                Object.keys(_this.initialState).forEach(function (propName) {
                  if (expression.indexOf(propName) === -1) {
                    return;
                  }
                  var val = _this.initialState[propName];
                  evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
                });
                evalFunc += 'return ' + propValueArr[1] + ';';
                evalFunc += '})()';
                _varVal = eval(evalFunc);
                break;
            }
        }
      });
      this.initialState[_varName] = _varVal;
    } else if (componentName === COMPONENTS.Derived) {
      var _varName2 = void 0,
          getFunc = void 0;
      props.forEach(function (propArr) {
        var propName = propArr[0];
        var propValueArr = propArr[1];
        switch (propName) {
          case DERIVED.Name:
            _varName2 = propValueArr[1];
            break;
          case DERIVED.Value:
            switch (propValueArr[0]) {
              case PROPERTIES.Value:
              case PROPERTIES.Variable:
                console.warn('Derived value should be an expression');
                break;
              case PROPERTIES.Expression:
                getFunc = function getFunc(state) {
                  var evalFunc = '(() => {';
                  var expression = propValueArr[1];
                  Object.keys(state).forEach(function (propName) {
                    if (expression.indexOf(propName) === -1) {
                      return;
                    }
                    var val = state[propName];
                    evalFunc += 'var ' + propName + ' = ' + JSON.stringify(val) + ';\n';
                  });
                  evalFunc += 'return ' + propValueArr[1] + ';';
                  evalFunc += '})()';
                  return evalFunc;
                };
                break;
            }
        }
      });
      this.derivedVars[_varName2] = {
        value: eval(getFunc(Object.assign({}, this.initialState, this.getDerivedVars()))),
        update: function update(newState) {
          _this.derivedVars[_varName2].value = eval(getFunc(Object.assign({}, _this.state, newState, _this.getDerivedVars())));
        }
      };
    } else {
      props.forEach(function (propArr, i) {
        var propName = propArr[0];
        var propValueArr = propArr[1];
        if (propValueArr[0] === PROPERTIES.Variable) {
          if (!_this.bindings[nodeID]) {
            _this.bindings[nodeID] = {};
          }
          _this.bindings[nodeID][propName] = propValueArr[1];
        }
        if (propName === 'ref') {
          propValueArr[0] = 'function';
          var refName = propValueArr[1];
          propValueArr[1] = function (node) {
            _this._idyllRefs[refName] = {
              scrollProgress: {
                x: 0,
                y: 0
              },
              domNode: function domNode() {
                return ReactDOM.findDOMNode(node);
              }
            };
          };
        }
      });
      if (children && children.map) {
        children.map(walkVars.bind(this));
      }
    }
  };

  return walkVars.bind(component);
};

},{"../constants":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/constants.js","react-dom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/html-tags/html-tags.json":[function(require,module,exports){
module.exports=[
	"a",
	"abbr",
	"address",
	"area",
	"article",
	"aside",
	"audio",
	"b",
	"base",
	"bdi",
	"bdo",
	"blockquote",
	"body",
	"br",
	"button",
	"canvas",
	"caption",
	"cite",
	"code",
	"col",
	"colgroup",
	"data",
	"datalist",
	"dd",
	"del",
	"details",
	"dfn",
	"dialog",
	"div",
	"dl",
	"dt",
	"em",
	"embed",
	"fieldset",
	"figcaption",
	"figure",
	"footer",
	"form",
	"h1",
	"h2",
	"h3",
	"h4",
	"h5",
	"h6",
	"head",
	"header",
	"hgroup",
	"hr",
	"html",
	"i",
	"iframe",
	"img",
	"input",
	"ins",
	"kbd",
	"keygen",
	"label",
	"legend",
	"li",
	"link",
	"main",
	"map",
	"mark",
	"math",
	"menu",
	"menuitem",
	"meta",
	"meter",
	"nav",
	"noscript",
	"object",
	"ol",
	"optgroup",
	"option",
	"output",
	"p",
	"param",
	"picture",
	"pre",
	"progress",
	"q",
	"rb",
	"rp",
	"rt",
	"rtc",
	"ruby",
	"s",
	"samp",
	"script",
	"section",
	"select",
	"slot",
	"small",
	"source",
	"span",
	"strong",
	"style",
	"sub",
	"summary",
	"sup",
	"svg",
	"table",
	"tbody",
	"td",
	"template",
	"textarea",
	"tfoot",
	"th",
	"thead",
	"time",
	"title",
	"tr",
	"track",
	"u",
	"ul",
	"var",
	"video",
	"wbr"
]

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/html-tags/index.js":[function(require,module,exports){
'use strict';
module.exports = require('./html-tags.json');

},{"./html-tags.json":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/html-tags/html-tags.json"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/checkPropTypes.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

if ("development" !== 'production') {
  var invariant = require('fbjs/lib/invariant');
  var warning = require('fbjs/lib/warning');
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if ("development" !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

},{"./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factory.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = require('./factoryWithTypeCheckers');
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};

},{"./factoryWithTypeCheckers":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factoryWithTypeCheckers.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if ("development" !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(
          false,
          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"./checkPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/checkPropTypes.js","./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/React.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactBaseClasses = require('./ReactBaseClasses');
var ReactChildren = require('./ReactChildren');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var createReactClass = require('./createClass');
var onlyChild = require('./onlyChild');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("development" !== 'production') {
  var lowPriorityWarning = require('./lowPriorityWarning');
  var canDefineProperty = require('./canDefineProperty');
  var ReactElementValidator = require('./ReactElementValidator');
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if ("development" !== 'production') {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if ("development" !== 'production') {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactBaseClasses.js","./ReactChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactChildren.js","./ReactDOMFactories":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactDOMFactories.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementValidator.js","./ReactPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypes.js","./ReactVersion":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js","./createClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/createClass.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js","./onlyChild":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/onlyChild.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactBaseClasses.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var lowPriorityWarning = require('./lowPriorityWarning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "development" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("development" !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};
},{"./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactNoopUpdateQueue.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/traverseAllChildren.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactComponentTreeHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  "development" !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? "development" !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? "development" !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? "development" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? "development" !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactDOMFactories.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if ("development" !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementValidator.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if ("development" !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if ("development" !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if ("development" !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementValidator.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeHook = require('./ReactComponentTreeHook');
var ReactElement = require('./ReactElement');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');
var lowPriorityWarning = require('./lowPriorityWarning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  "development" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    "development" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
        "development" !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
        ReactComponentTreeHook.popNonStandardWarningStack();
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("development" !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }
};

module.exports = ReactElementValidator;
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactComponentTreeHook.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/checkReactTypeSpec.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactNoopUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypes.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _require = require('./ReactElement'),
    isValidElement = _require.isValidElement;

var factory = require('prop-types/factory');

module.exports = factory(isValidElement);
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","prop-types/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factory.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.6.1';
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if ("development" !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/checkReactTypeSpec.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('./ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('./ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactComponentTreeHook.js","./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/createClass.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _require = require('./ReactBaseClasses'),
    Component = _require.Component;

var _require2 = require('./ReactElement'),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');
var factory = require('create-react-class/factory');

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactBaseClasses.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactNoopUpdateQueue.js","create-react-class/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/create-react-class/factory.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js":[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if ("development" !== 'production') {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/onlyChild.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? "development" !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/traverseAllChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/react.js":[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/checkPropTypes.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/checkPropTypes.js"][0].apply(exports,arguments)
},{"./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/factory.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factory.js"][0].apply(exports,arguments)
},{"./factoryWithTypeCheckers":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/factoryWithTypeCheckers.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factoryWithTypeCheckers.js"][0].apply(exports,arguments)
},{"./checkPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/checkPropTypes.js","./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/index.js":[function(require,module,exports){
'use strict';

module.exports = require('./lib/ReactDOM');

},{"./lib/ReactDOM":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOM.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ARIADOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/AutoFocusUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/focusNode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/BeforeInputEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js","./FallbackCompositionState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/FallbackCompositionState.js","./SyntheticCompositionEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticCompositionEvent.js","./SyntheticInputEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticInputEvent.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSPropertyOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("development" !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    "development" !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    "development" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {
  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      var styleValue = styles[styleName];
      if ("development" !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styleValue, component);
        }
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      if ("development" !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styles[styleName], component);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (isCustomProperty) {
        style.setProperty(styleName, styleValue);
      } else if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }
};

module.exports = CSSPropertyOperations;
},{"./CSSProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSProperty.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./dangerousStyleValue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/dangerousStyleValue.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/camelizeStyleName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/camelizeStyleName.js","fbjs/lib/hyphenateStyleName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/hyphenateStyleName.js","fbjs/lib/memoizeStringOnly":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/memoizeStringOnly.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CallbackQueue.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? "development" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ChangeEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var inputValueTracking = require('./inputValueTracking');
var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
  event.type = 'change';
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getInstIfValueChanged(targetInst, nativeEvent) {
  var updated = inputValueTracking.updateValueIfChanged(targetInst);
  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

  if (updated || simulated) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.

  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst, nativeEvent);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes,

  _allowSimulatedPassThrough: true,
  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

module.exports = ChangeEventPlugin;
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventTarget.js","./inputValueTracking":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/inputValueTracking.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isEventSupported.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if ("development" !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {
  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if ("development" !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: {
                toIndex: update.toIndex,
                content: update.content.toString()
              }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }
};

module.exports = DOMChildrenOperations;
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./Danger":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Danger.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMNamespaces.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? "development" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if ("development" !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if ("development" !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {
  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: "development" !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  "development" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {
  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }
};

module.exports = DOMPropertyOperations;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./quoteAttributeValueForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Danger.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {
  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }
};

module.exports = Danger;
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/createNodesFromMarkup":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/createNodesFromMarkup.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DefaultEventPluginOrder.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EnterLeaveEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

module.exports = EnterLeaveEventPlugin;
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {
  /**
   * Methods for injecting dependencies.
   */
  injection: {
    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? "development" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? "development" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }
};

module.exports = EventPluginHub;
},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/forEachAccumulated.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if ("development" !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {
  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: "development" !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if ("development" !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }
};

module.exports = EventPluginRegistry;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if ("development" !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    "development" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? "development" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
},{"./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/forEachAccumulated.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/FallbackCompositionState.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getTextContentAccessor.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/LinkedValueUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypesSecret = require('./ReactPropTypesSecret');
var propTypesFactory = require('prop-types/factory');

var React = require('react/lib/React');
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        "development" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
},{"./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","prop-types/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/factory.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {
          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }
});

module.exports = ReactBrowserEventEmitter;
},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactEventEmitterMixin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventEmitterMixin.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ViewportMetrics.js","./getVendorPrefixedEventName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getVendorPrefixedEventName.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isEventSupported.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactChildReconciler.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if ("development" !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
  {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if ("development" !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
  {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }
};

module.exports = ReactChildReconciler;
}).call(this,require('_process'))
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/instantiateReactComponent.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {
  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
};

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMIDOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMIDOperations.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {
  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? "development" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactCompositeComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var React = require('react/lib/React');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactReconciler = require('./ReactReconciler');

if ("development" !== 'production') {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shallowEqual = require('fbjs/lib/shallowEqual');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    "development" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {
  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if ("development" !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? "development" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if ("development" !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        "development" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      "development" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("development" !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      "development" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if ("development" !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if ("development" !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if ("development" !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if ("development" !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if ("development" !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if ("development" !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if ("development" !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if ("development" !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if ("development" !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if ("development" !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if ("development" !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if ("development" !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if ("development" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? "development" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if ("development" !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      "development" !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;
},{"./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactNodeTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactNodeTypes.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/checkReactTypeSpec.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOM.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  /* eslint-enable camelcase */
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if ("development" !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    "development" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    "development" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        "development" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if ("development" !== 'production') {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInvalidARIAHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","./ReactDOMNullInputValuePropHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","./ReactDOMUnknownPropertyHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","./ReactDefaultInjection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultInjection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMount":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMount.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./ReactVersion":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactVersion.js","./findDOMNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/findDOMNode.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js","./renderSubtreeIntoContainer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/renderSubtreeIntoContainer.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var shallowEqual = require('fbjs/lib/shallowEqual');
var inputValueTracking = require('./inputValueTracking');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { string: true, number: true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  "development" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? "development" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "development" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    "development" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    "development" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? "development" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if ("development" !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    "development" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if ("development" !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trackInputValue() {
  inputValueTracking.track(this);
}

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? "development" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? "development" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':
      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? "development" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if ("development" !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {
  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if ("development" !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if ("development" !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if ("development" !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if ("development" !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'input':
      case 'textarea':
        inputValueTracking.stopTracking(this);
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? "development" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if ("development" !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }
};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
},{"./AutoFocusUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/AutoFocusUtils.js","./CSSPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSPropertyOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInput":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInput.js","./ReactDOMOption":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMOption.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelect.js","./ReactDOMTextarea":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextarea.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMultiChild":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMultiChild.js","./ReactServerRenderingTransaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerRenderingTransaction.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./inputValueTracking":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/inputValueTracking.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isEventSupported.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? "development" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? "development" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMContainerInfo.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if ("development" !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
},{"./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/validateDOMNesting.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMEmptyComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMFeatureFlags.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMIDOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {
  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInput.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        "development" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if ("development" !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        "development" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        "development" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        if (
        // eslint-disable-next-line
        value != valueAsNumber ||
        // eslint-disable-next-line
        value == valueAsNumber && node.value != value) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
      } else if (node.value !== '' + value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? "development" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
},{"./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js","./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      "development" !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    "development" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMOption.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var React = require('react/lib/React');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      "development" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }
};

module.exports = ReactDOMOption;
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelect.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelect.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    "development" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      "development" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getNodeForCharacterOffset.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getTextContentAccessor.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {
  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? "development" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMTextComponent;
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextarea.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        "development" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? "development" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? "development" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTreeTraversal.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? "development" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

if ("development" !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      "development" !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      "development" !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDebugTool.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');
var ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    "development" !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    "development" !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  if (measurementName) {
    performance.clearMeasures(measurementName);
  }
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
},{"./ReactHostOperationHistoryHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js","./ReactInvalidSetStateWarningHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/performanceNow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performanceNow.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultInjection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');
var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
},{"./ARIADOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ARIADOMPropertyConfig.js","./BeforeInputEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/BeforeInputEventPlugin.js","./ChangeEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ChangeEventPlugin.js","./DefaultEventPluginOrder":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DefaultEventPluginOrder.js","./EnterLeaveEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EnterLeaveEventPlugin.js","./HTMLDOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js","./ReactComponentBrowserEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js","./ReactDOMComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponent.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMEmptyComponent.js","./ReactDOMTextComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextComponent.js","./ReactDOMTreeTraversal":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTreeTraversal.js","./ReactDefaultBatchingStrategy":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","./ReactEventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventListener.js","./ReactInjection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInjection.js","./ReactReconcileTransaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconcileTransaction.js","./SVGDOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SVGDOMPropertyConfig.js","./SelectEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SelectEventPlugin.js","./SimpleEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SimpleEventPlugin.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactElementSymbol.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactErrorUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if ("development" !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventEmitterMixin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventListener.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventTarget.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/EventListener.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getUnboundedScrollPosition":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getUnboundedScrollPosition.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? "development" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInjection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostComponent.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInputSelection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {
  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelection.js","fbjs/lib/containsNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/containsNode.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/focusNode.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {
  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if ("development" !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
},{"./ReactDebugTool":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDebugTool.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var warning = require('fbjs/lib/warning');

if ("development" !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    "development" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMarkupChecksum.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/adler32.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMount.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var React = require('react/lib/React');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if ("development" !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? "development" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? "development" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    "development" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            "development" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if ("development" !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if ("development" !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMContainerInfo":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMContainerInfo.js","./ReactDOMFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMFeatureFlags.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMarkupChecksum":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMarkupChecksum.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/instantiateReactComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMultiChild.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if ("development" !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {
  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {
    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if ("development" !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if ("development" !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if ("development" !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }
  }
};

module.exports = ReactMultiChild;
},{"./ReactChildReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactChildReconciler.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./flattenChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/flattenChildren.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactNodeTypes.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? "development" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactOwner.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }
};

module.exports = ReactOwner;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconcileTransaction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInputSelection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var warning = require('fbjs/lib/warning');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
  {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      "development" !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;
},{"./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactRef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactRef.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactRef.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerRenderingTransaction.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactServerUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = require('./ReactUpdateQueue');

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
},{"./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("development" !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      "development" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if ("development" !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      "development" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? "development" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }
};

module.exports = ReactUpdateQueue;
},{"./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? "development" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? "development" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactVersion.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SVGDOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SelectEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var shallowEqual = require('fbjs/lib/shallowEqual');

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInputSelection.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SimpleEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? "development" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }
};

module.exports = SimpleEventPlugin;
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticAnimationEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticAnimationEvent.js","./SyntheticClipboardEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticClipboardEvent.js","./SyntheticDragEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticDragEvent.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./SyntheticFocusEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticFocusEvent.js","./SyntheticKeyboardEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticKeyboardEvent.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js","./SyntheticTouchEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTouchEvent.js","./SyntheticTransitionEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTransitionEvent.js","./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./SyntheticWheelEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticWheelEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventCharCode.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/EventListener.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticAnimationEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticClipboardEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticCompositionEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticDragEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if ("development" !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if ("development" !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if ("development" !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if ("development" !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

if ("development" !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              "development" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    "development" !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/PooledClass.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticFocusEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticInputEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticKeyboardEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventCharCode.js","./getEventKey":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventKey.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ViewportMetrics.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTouchEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTransitionEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventTarget.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticWheelEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /* eslint-disable space-before-function-paren */

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    /* eslint-enable space-before-function-paren */
    !!this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ViewportMetrics.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ViewportMetrics = {
  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }
};

module.exports = ViewportMetrics;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/accumulateInto.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? "development" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/adler32.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/checkReactTypeSpec.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))
},{"./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/dangerousStyleValue.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if ("development" !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          "development" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
},{"./CSSProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/findDOMNode.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("development" !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? "development" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/flattenChildren.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if ("development" !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if ("development" !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}).call(this,require('_process'))
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/forEachAccumulated.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventCharCode.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventKey.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventCharCode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventModifierState.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventTarget.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
},{"./ReactNodeTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactNodeTypes.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getIteratorFn.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getNodeForCharacterOffset.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getTextContentAccessor.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getVendorPrefixedEventName.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/inputValueTracking.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(inst) {
  return inst._wrapperState.valueTracker;
}

function attachTracker(inst, tracker) {
  inst._wrapperState.valueTracker = tracker;
}

function detachTracker(inst) {
  delete inst._wrapperState.valueTracker;
}

function getValueFromNode(node) {
  var value;
  if (node) {
    value = isCheckable(node) ? '' + node.checked : node.value;
  }
  return value;
}

var inputValueTracking = {
  // exposed for testing
  _getTrackerFromNode: function (node) {
    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
  },


  track: function (inst) {
    if (getTracker(inst)) {
      return;
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var valueField = isCheckable(node) ? 'checked' : 'value';
    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

    var currentValue = '' + node[valueField];

    // if someone has already defined a value or Safari, then bail
    // and don't track value will cause over reporting of changes,
    // but it's better then a hard failure
    // (needed for certain tests that spyOn input values and Safari)
    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
      return;
    }

    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable,
      configurable: true,
      get: function () {
        return descriptor.get.call(this);
      },
      set: function (value) {
        currentValue = '' + value;
        descriptor.set.call(this, value);
      }
    });

    attachTracker(inst, {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = '' + value;
      },
      stopTracking: function () {
        detachTracker(inst);
        delete node[valueField];
      }
    });
  },

  updateValueIfChanged: function (inst) {
    if (!inst) {
      return false;
    }
    var tracker = getTracker(inst);

    if (!tracker) {
      inputValueTracking.track(inst);
      return true;
    }

    var lastValue = tracker.getValue();
    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

    if (nextValue !== lastValue) {
      tracker.setValue(nextValue);
      return true;
    }

    return false;
  },
  stopTracking: function (inst) {
    var tracker = getTracker(inst);
    if (tracker) {
      tracker.stopTracking();
    }
  }
};

module.exports = inputValueTracking;
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/instantiateReactComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');

var getNextDebugID = require('react/lib/getNextDebugID');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if ("development" !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? "development" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("development" !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("development" !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
},{"./ReactCompositeComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactCompositeComponent.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/getNextDebugID":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getNextDebugID.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isEventSupported.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isTextInputElement.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/renderSubtreeIntoContainer.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMount.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xfeff) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setTextContent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/traverseAllChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/validateDOMNesting.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if ("development" !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      "development" !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
},{"fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/KeyEscapeUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/PooledClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/React.js"][0].apply(exports,arguments)
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactBaseClasses.js","./ReactChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactChildren.js","./ReactDOMFactories":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactDOMFactories.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementValidator.js","./ReactPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypes.js","./ReactVersion":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactVersion.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/canDefineProperty.js","./createClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/createClass.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/lowPriorityWarning.js","./onlyChild":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/onlyChild.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactBaseClasses.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactBaseClasses.js"][0].apply(exports,arguments)
},{"./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/canDefineProperty.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/lowPriorityWarning.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactChildren.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/PooledClass.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/traverseAllChildren.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactComponentTreeHook.js"][0].apply(exports,arguments)
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactDOMFactories.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactDOMFactories.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementValidator.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js"][0].apply(exports,arguments)
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementSymbol.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/canDefineProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementSymbol.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementValidator.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementValidator.js"][0].apply(exports,arguments)
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/canDefineProperty.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/checkReactTypeSpec.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getIteratorFn.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/lowPriorityWarning.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactNoopUpdateQueue.js"][0].apply(exports,arguments)
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypes.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypes.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","prop-types/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/prop-types/factory.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactVersion.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/canDefineProperty.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/checkReactTypeSpec.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/checkReactTypeSpec.js"][0].apply(exports,arguments)
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactComponentTreeHook.js","./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/createClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/createClass.js"][0].apply(exports,arguments)
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactBaseClasses.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js","create-react-class/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/create-react-class/factory.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getIteratorFn.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getNextDebugID.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/lowPriorityWarning.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/onlyChild.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/onlyChild.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElement.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/traverseAllChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/traverseAllChildren.js"][0].apply(exports,arguments)
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/KeyEscapeUtils.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/react.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/react.js"][0].apply(exports,arguments)
},{"./lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/src/client/build.js":[function(require,module,exports){
'use strict';

var React = require('react');
var ReactDOM = require('react-dom');

var InteractiveDocument = require('idyll-interactive-document');
var mountNode = document.getElementById('idyll-mount');

var ast = require('__IDYLL_AST__');
var componentClasses = require('__IDYLL_COMPONENTS__');
var datasets = require('__IDYLL_DATA__');
require('__IDYLL_SYNTAX_HIGHLIGHT__');

ReactDOM.render(React.createElement(InteractiveDocument, { ast: ast, componentClasses: componentClasses, datasets: datasets }), mountNode);

},{"__IDYLL_AST__":"__IDYLL_AST__","__IDYLL_COMPONENTS__":"__IDYLL_COMPONENTS__","__IDYLL_DATA__":"__IDYLL_DATA__","__IDYLL_SYNTAX_HIGHLIGHT__":"__IDYLL_SYNTAX_HIGHLIGHT__","idyll-interactive-document":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/lib/index.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/react.js","react-dom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/insert-css/index.js":[function(require,module,exports){
'use strict';

var containers = []; // will store container HTMLElement references
var styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}

var usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';

function insertCss(css, options) {
    options = options || {};

    if (css === undefined) {
        throw new Error(usage);
    }

    var position = options.prepend === true ? 'prepend' : 'append';
    var container = options.container !== undefined ? options.container : document.querySelector('head');
    var containerId = containers.indexOf(container);

    // first time we see this container, create the necessary entries
    if (containerId === -1) {
        containerId = containers.push(container) - 1;
        styleElements[containerId] = {};
    }

    // try to get the correponding container + position styleElement, create it otherwise
    var styleElement;

    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {
        styleElement = styleElements[containerId][position];
    } else {
        styleElement = styleElements[containerId][position] = createStyleElement();

        if (position === 'prepend') {
            container.insertBefore(styleElement, container.childNodes[0]);
        } else {
            container.appendChild(styleElement);
        }
    }

    // strip potential UTF-8 BOM if css was read from a file
    if (css.charCodeAt(0) === 0xFEFF) {
        css = css.substr(1, css.length);
    }

    // actually add the stylesheet
    if (styleElement.styleSheet) {
        styleElement.styleSheet.cssText += css;
    } else {
        styleElement.textContent += css;
    }

    return styleElement;
};

function createStyleElement() {
    var styleElement = document.createElement('style');
    styleElement.setAttribute('type', 'text/css');
    return styleElement;
}

module.exports = insertCss;
module.exports.insertCss = insertCss;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-class/is-class.js":[function(require,module,exports){
'use strict';

(function (root) {
  var toString = Function.prototype.toString;

  function fnBody(fn) {
    return toString.call(fn).replace(/^[^{]*{\s*/, '').replace(/\s*}[^}]*$/, '');
  }

  function isClass(fn) {
    return typeof fn === 'function' && (/^class\s/.test(toString.call(fn)) || /^.*classCallCheck\(/.test(fnBody(fn))) // babel.js
    ;
  }

  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = isClass;
    }
    exports.isClass = isClass;
  } else if (typeof define === 'function' && define.amd) {
    define([], function () {
      return isClass;
    });
  } else {
    root.isClass = isClass;
  }
})(undefined);

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-lower-case/is-lower-case.js":[function(require,module,exports){
'use strict';

var lowerCase = require('lower-case');

/**
 * Check if a string is lower case.
 *
 * @param  {String}  string
 * @param  {String}  [locale]
 * @return {Boolean}
 */
module.exports = function (string, locale) {
  return lowerCase(string, locale) === string;
};

},{"lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-promise/index.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = isPromise;

function isPromise(obj) {
  return !!obj && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-upper-case/is-upper-case.js":[function(require,module,exports){
'use strict';

var upperCase = require('upper-case');

/**
 * Check if a string is upper case.
 *
 * @param  {String}  string
 * @param  {String}  [locale]
 * @return {Boolean}
 */
module.exports = function (string, locale) {
  return upperCase(string, locale) === string;
};

},{"upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/index.js":[function(require,module,exports){
exports.parse = require('./lib/parse');
exports.stringify = require('./lib/stringify');

},{"./lib/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/lib/parse.js","./lib/stringify":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/lib/stringify.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/lib/parse.js":[function(require,module,exports){
var at, // The index of the current character
    ch, // The current character
    escapee = {
        '"':  '"',
        '\\': '\\',
        '/':  '/',
        b:    '\b',
        f:    '\f',
        n:    '\n',
        r:    '\r',
        t:    '\t'
    },
    text,

    error = function (m) {
        // Call error when something is wrong.
        throw {
            name:    'SyntaxError',
            message: m,
            at:      at,
            text:    text
        };
    },
    
    next = function (c) {
        // If a c parameter is provided, verify that it matches the current character.
        if (c && c !== ch) {
            error("Expected '" + c + "' instead of '" + ch + "'");
        }
        
        // Get the next character. When there are no more characters,
        // return the empty string.
        
        ch = text.charAt(at);
        at += 1;
        return ch;
    },
    
    number = function () {
        // Parse a number value.
        var number,
            string = '';
        
        if (ch === '-') {
            string = '-';
            next('-');
        }
        while (ch >= '0' && ch <= '9') {
            string += ch;
            next();
        }
        if (ch === '.') {
            string += '.';
            while (next() && ch >= '0' && ch <= '9') {
                string += ch;
            }
        }
        if (ch === 'e' || ch === 'E') {
            string += ch;
            next();
            if (ch === '-' || ch === '+') {
                string += ch;
                next();
            }
            while (ch >= '0' && ch <= '9') {
                string += ch;
                next();
            }
        }
        number = +string;
        if (!isFinite(number)) {
            error("Bad number");
        } else {
            return number;
        }
    },
    
    string = function () {
        // Parse a string value.
        var hex,
            i,
            string = '',
            uffff;
        
        // When parsing for string values, we must look for " and \ characters.
        if (ch === '"') {
            while (next()) {
                if (ch === '"') {
                    next();
                    return string;
                } else if (ch === '\\') {
                    next();
                    if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                            hex = parseInt(next(), 16);
                            if (!isFinite(hex)) {
                                break;
                            }
                            uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                    } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                    } else {
                        break;
                    }
                } else {
                    string += ch;
                }
            }
        }
        error("Bad string");
    },

    white = function () {

// Skip whitespace.

        while (ch && ch <= ' ') {
            next();
        }
    },

    word = function () {

// true, false, or null.

        switch (ch) {
        case 't':
            next('t');
            next('r');
            next('u');
            next('e');
            return true;
        case 'f':
            next('f');
            next('a');
            next('l');
            next('s');
            next('e');
            return false;
        case 'n':
            next('n');
            next('u');
            next('l');
            next('l');
            return null;
        }
        error("Unexpected '" + ch + "'");
    },

    value,  // Place holder for the value function.

    array = function () {

// Parse an array value.

        var array = [];

        if (ch === '[') {
            next('[');
            white();
            if (ch === ']') {
                next(']');
                return array;   // empty array
            }
            while (ch) {
                array.push(value());
                white();
                if (ch === ']') {
                    next(']');
                    return array;
                }
                next(',');
                white();
            }
        }
        error("Bad array");
    },

    object = function () {

// Parse an object value.

        var key,
            object = {};

        if (ch === '{') {
            next('{');
            white();
            if (ch === '}') {
                next('}');
                return object;   // empty object
            }
            while (ch) {
                key = string();
                white();
                next(':');
                if (Object.hasOwnProperty.call(object, key)) {
                    error('Duplicate key "' + key + '"');
                }
                object[key] = value();
                white();
                if (ch === '}') {
                    next('}');
                    return object;
                }
                next(',');
                white();
            }
        }
        error("Bad object");
    };

value = function () {

// Parse a JSON value. It could be an object, an array, a string, a number,
// or a word.

    white();
    switch (ch) {
    case '{':
        return object();
    case '[':
        return array();
    case '"':
        return string();
    case '-':
        return number();
    default:
        return ch >= '0' && ch <= '9' ? number() : word();
    }
};

// Return the json_parse function. It will have access to all of the above
// functions and variables.

module.exports = function (source, reviver) {
    var result;
    
    text = source;
    at = 0;
    ch = ' ';
    result = value();
    white();
    if (ch) {
        error("Syntax error");
    }

    // If there is a reviver function, we recursively walk the new structure,
    // passing each name/value pair to the reviver function for possible
    // transformation, starting with a temporary root object that holds the result
    // in an empty key. If there is not a reviver function, we simply return the
    // result.

    return typeof reviver === 'function' ? (function walk(holder, key) {
        var k, v, value = holder[key];
        if (value && typeof value === 'object') {
            for (k in value) {
                if (Object.prototype.hasOwnProperty.call(value, k)) {
                    v = walk(value, k);
                    if (v !== undefined) {
                        value[k] = v;
                    } else {
                        delete value[k];
                    }
                }
            }
        }
        return reviver.call(holder, key, value);
    }({'': result}, '')) : result;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/lib/stringify.js":[function(require,module,exports){
var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    gap,
    indent,
    meta = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
    },
    rep;

function quote(string) {
    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.
    
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c :
            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
}

function str(key, holder) {
    // Produce a string from holder[key].
    var i,          // The loop counter.
        k,          // The member key.
        v,          // The member value.
        length,
        mind = gap,
        partial,
        value = holder[key];
    
    // If the value has a toJSON method, call it to obtain a replacement value.
    if (value && typeof value === 'object' &&
            typeof value.toJSON === 'function') {
        value = value.toJSON(key);
    }
    
    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.
    if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
    }
    
    // What happens next depends on the value's type.
    switch (typeof value) {
        case 'string':
            return quote(value);
        
        case 'number':
            // JSON numbers must be finite. Encode non-finite numbers as null.
            return isFinite(value) ? String(value) : 'null';
        
        case 'boolean':
        case 'null':
            // If the value is a boolean or null, convert it to a string. Note:
            // typeof null does not produce 'null'. The case is included here in
            // the remote chance that this gets fixed someday.
            return String(value);
            
        case 'object':
            if (!value) return 'null';
            gap += indent;
            partial = [];
            
            // Array.isArray
            if (Object.prototype.toString.apply(value) === '[object Array]') {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }
                
                // Join all of the elements together, separated with commas, and
                // wrap them in brackets.
                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }
            
            // If the replacer is an array, use it to select the members to be
            // stringified.
            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            else {
                // Otherwise, iterate through all of the keys in the object.
                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            
        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0 ? '{}' : gap ?
            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
            '{' + partial.join(',') + '}';
        gap = mind;
        return v;
    }
}

module.exports = function (value, replacer, space) {
    var i;
    gap = '';
    indent = '';
    
    // If the space parameter is a number, make an indent string containing that
    // many spaces.
    if (typeof space === 'number') {
        for (i = 0; i < space; i += 1) {
            indent += ' ';
        }
    }
    // If the space parameter is a string, it will be used as the indent string.
    else if (typeof space === 'string') {
        indent = space;
    }

    // If there is a replacer, it must be a function or an array.
    // Otherwise, throw an error.
    rep = replacer;
    if (replacer && typeof replacer !== 'function'
    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
        throw new Error('JSON.stringify');
    }
    
    // Make a fake root object containing our value under the key of ''.
    // Return the result of stringifying the value.
    return str('', {'': value});
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case-first/lower-case-first.js":[function(require,module,exports){
'use strict';

var lowerCase = require('lower-case');

/**
 * Lower case the first character of a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return '';
  }

  str = String(str);

  return lowerCase(str.charAt(0), locale) + str.substr(1);
};

},{"lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js":[function(require,module,exports){
'use strict';

/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /\u0130|\u0049|\u0049\u0307/g,
    map: {
      '\u0130': 'i',
      'I': '\u0131',
      'I\u0307': 'i'
    }
  },
  az: {
    regexp: /[\u0130]/g,
    map: {
      '\u0130': 'i',
      'I': '\u0131',
      'I\u0307': 'i'
    }
  },
  lt: {
    regexp: /[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g,
    map: {
      'I': 'i\u0307',
      'J': 'j\u0307',
      '\u012E': '\u012F\u0307',
      '\xCC': 'i\u0307\u0300',
      '\xCD': 'i\u0307\u0301',
      '\u0128': 'i\u0307\u0303'
    }
  }
};

/**
 * Lowercase a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale];

  str = str == null ? '' : String(str);

  if (lang) {
    str = str.replace(lang.regexp, function (m) {
      return lang.map[m];
    });
  }

  return str.toLowerCase();
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lru-queue/index.js":[function(require,module,exports){
'use strict';

var toPosInt = require('es5-ext/number/to-pos-integer'),
    create = Object.create,
    hasOwnProperty = Object.prototype.hasOwnProperty;

module.exports = function (limit) {
	var size = 0,
	    base = 1,
	    queue = create(null),
	    map = create(null),
	    index = 0,
	    del;
	limit = toPosInt(limit);
	return {
		hit: function hit(id) {
			var oldIndex = map[id],
			    nuIndex = ++index;
			queue[nuIndex] = id;
			map[id] = nuIndex;
			if (!oldIndex) {
				++size;
				if (size <= limit) return;
				id = queue[base];
				del(id);
				return id;
			}
			delete queue[oldIndex];
			if (base !== oldIndex) return;
			while (!hasOwnProperty.call(queue, ++base)) {
				continue;
			} //jslint: skip
		},
		delete: del = function del(id) {
			var oldIndex = map[id];
			if (!oldIndex) return;
			delete queue[oldIndex];
			delete map[id];
			--size;
			if (base !== oldIndex) return;
			if (!size) {
				index = 0;
				base = 1;
				return;
			}
			while (!hasOwnProperty.call(queue, ++base)) {
				continue;
			} //jslint: skip
		},
		clear: function clear() {
			size = 0;
			base = 1;
			queue = create(null);
			map = create(null);
			index = 0;
		}
	};
};

},{"es5-ext/number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/async.js":[function(require,module,exports){
/* eslint consistent-this: 0, no-shadow:0, no-eq-null: 0, eqeqeq: 0, no-unused-vars: 0 */

// Support for asynchronous functions

"use strict";

var aFrom = require("es5-ext/array/from"),
    objectMap = require("es5-ext/object/map"),
    mixin = require("es5-ext/object/mixin"),
    defineLength = require("es5-ext/function/_define-length"),
    nextTick = require("next-tick");

var slice = Array.prototype.slice,
    apply = Function.prototype.apply,
    create = Object.create;

require("../lib/registered-extensions").async = function (tbi, conf) {
	var waiting = create(null),
	    cache = create(null),
	    base = conf.memoized,
	    original = conf.original,
	    currentCallback,
	    currentContext,
	    currentArgs;

	// Initial
	conf.memoized = defineLength(function (arg) {
		var args = arguments,
		    last = args[args.length - 1];
		if (typeof last === "function") {
			currentCallback = last;
			args = slice.call(args, 0, -1);
		}
		return base.apply(currentContext = this, currentArgs = args);
	}, base);
	try {
		mixin(conf.memoized, base);
	} catch (ignore) {}

	// From cache (sync)
	conf.on("get", function (id) {
		var cb, context, args;
		if (!currentCallback) return;

		// Unresolved
		if (waiting[id]) {
			if (typeof waiting[id] === "function") waiting[id] = [waiting[id], currentCallback];else waiting[id].push(currentCallback);
			currentCallback = null;
			return;
		}

		// Resolved, assure next tick invocation
		cb = currentCallback;
		context = currentContext;
		args = currentArgs;
		currentCallback = currentContext = currentArgs = null;
		nextTick(function () {
			var data;
			if (hasOwnProperty.call(cache, id)) {
				data = cache[id];
				conf.emit("getasync", id, args, context);
				apply.call(cb, data.context, data.args);
			} else {
				// Purged in a meantime, we shouldn't rely on cached value, recall
				currentCallback = cb;
				currentContext = context;
				currentArgs = args;
				base.apply(context, args);
			}
		});
	});

	// Not from cache
	conf.original = function () {
		var args, cb, origCb, result;
		if (!currentCallback) return apply.call(original, this, arguments);
		args = aFrom(arguments);
		cb = function self(err) {
			var cb,
			    args,
			    id = self.id;
			if (id == null) {
				// Shouldn't happen, means async callback was called sync way
				nextTick(apply.bind(self, this, arguments));
				return undefined;
			}
			delete self.id;
			cb = waiting[id];
			delete waiting[id];
			if (!cb) {
				// Already processed,
				// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)
				return undefined;
			}
			args = aFrom(arguments);
			if (conf.has(id)) {
				if (err) {
					conf.delete(id);
				} else {
					cache[id] = { context: this, args: args };
					conf.emit("setasync", id, typeof cb === "function" ? 1 : cb.length);
				}
			}
			if (typeof cb === "function") {
				result = apply.call(cb, this, args);
			} else {
				cb.forEach(function (cb) {
					result = apply.call(cb, this, args);
				}, this);
			}
			return result;
		};
		origCb = currentCallback;
		currentCallback = currentContext = currentArgs = null;
		args.push(cb);
		result = apply.call(original, this, args);
		cb.cb = origCb;
		currentCallback = cb;
		return result;
	};

	// After not from cache call
	conf.on("set", function (id) {
		if (!currentCallback) {
			conf.delete(id);
			return;
		}
		if (waiting[id]) {
			// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)
			if (typeof waiting[id] === "function") waiting[id] = [waiting[id], currentCallback.cb];else waiting[id].push(currentCallback.cb);
		} else {
			waiting[id] = currentCallback.cb;
		}
		delete currentCallback.cb;
		currentCallback.id = id;
		currentCallback = null;
	});

	// On delete
	conf.on("delete", function (id) {
		var result;
		// If false, we don't have value yet, so we assume that intention is not
		// to memoize this call. After value is obtained we don't cache it but
		// gracefully pass to callback
		if (hasOwnProperty.call(waiting, id)) return;
		if (!cache[id]) return;
		result = cache[id];
		delete cache[id];
		conf.emit("deleteasync", id, slice.call(result.args, 1));
	});

	// On clear
	conf.on("clear", function () {
		var oldCache = cache;
		cache = create(null);
		conf.emit("clearasync", objectMap(oldCache, function (data) {
			return slice.call(data.args, 1);
		}));
	});
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","es5-ext/array/from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/index.js","es5-ext/function/_define-length":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/_define-length.js","es5-ext/object/map":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/map.js","es5-ext/object/mixin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/mixin.js","next-tick":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/next-tick/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/dispose.js":[function(require,module,exports){
// Call dispose callback on each cache purge

"use strict";

var callable = require("es5-ext/object/valid-callable"),
    forEach = require("es5-ext/object/for-each"),
    extensions = require("../lib/registered-extensions"),
    apply = Function.prototype.apply;

extensions.dispose = function (dispose, conf, options) {
	var del;
	callable(dispose);
	if (options.async && extensions.async || options.promise && extensions.promise) {
		conf.on("deleteasync", del = function del(id, resultArray) {
			apply.call(dispose, null, resultArray);
		});
		conf.on("clearasync", function (cache) {
			forEach(cache, function (result, id) {
				del(id, result);
			});
		});
		return;
	}
	conf.on("delete", del = function del(id, result) {
		dispose(result);
	});
	conf.on("clear", function (cache) {
		forEach(cache, function (result, id) {
			del(id, result);
		});
	});
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","es5-ext/object/for-each":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/for-each.js","es5-ext/object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/max-age.js":[function(require,module,exports){
/* eslint consistent-this: 0 */

// Timeout cached values

"use strict";

var aFrom = require("es5-ext/array/from"),
    forEach = require("es5-ext/object/for-each"),
    nextTick = require("next-tick"),
    isPromise = require("is-promise"),
    timeout = require("timers-ext/valid-timeout"),
    extensions = require("../lib/registered-extensions");

var noop = Function.prototype,
    max = Math.max,
    min = Math.min,
    create = Object.create;

extensions.maxAge = function (maxAge, conf, options) {
	var timeouts, postfix, preFetchAge, preFetchTimeouts;

	maxAge = timeout(maxAge);
	if (!maxAge) return;

	timeouts = create(null);
	postfix = options.async && extensions.async || options.promise && extensions.promise ? "async" : "";
	conf.on("set" + postfix, function (id) {
		timeouts[id] = setTimeout(function () {
			conf.delete(id);
		}, maxAge);
		if (!preFetchTimeouts) return;
		if (preFetchTimeouts[id]) {
			if (preFetchTimeouts[id] !== "nextTick") clearTimeout(preFetchTimeouts[id]);
		}
		preFetchTimeouts[id] = setTimeout(function () {
			delete preFetchTimeouts[id];
		}, preFetchAge);
	});
	conf.on("delete" + postfix, function (id) {
		clearTimeout(timeouts[id]);
		delete timeouts[id];
		if (!preFetchTimeouts) return;
		if (preFetchTimeouts[id] !== "nextTick") clearTimeout(preFetchTimeouts[id]);
		delete preFetchTimeouts[id];
	});

	if (options.preFetch) {
		if (options.preFetch === true || isNaN(options.preFetch)) {
			preFetchAge = 0.333;
		} else {
			preFetchAge = max(min(Number(options.preFetch), 1), 0);
		}
		if (preFetchAge) {
			preFetchTimeouts = {};
			preFetchAge = (1 - preFetchAge) * maxAge;
			conf.on("get" + postfix, function (id, args, context) {
				if (!preFetchTimeouts[id]) {
					preFetchTimeouts[id] = "nextTick";
					nextTick(function () {
						var result;
						if (preFetchTimeouts[id] !== "nextTick") return;
						delete preFetchTimeouts[id];
						conf.delete(id);
						if (options.async) {
							args = aFrom(args);
							args.push(noop);
						}
						result = conf.memoized.apply(context, args);
						if (options.promise) {
							// Supress eventual error warnings
							if (isPromise(result)) {
								if (typeof result.done === "function") result.done(noop, noop);else result.then(noop, noop);
							}
						}
					});
				}
			});
		}
	}

	conf.on("clear" + postfix, function () {
		forEach(timeouts, function (id) {
			clearTimeout(id);
		});
		timeouts = {};
		if (preFetchTimeouts) {
			forEach(preFetchTimeouts, function (id) {
				if (id !== "nextTick") clearTimeout(id);
			});
			preFetchTimeouts = {};
		}
	});
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","es5-ext/array/from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/from/index.js","es5-ext/object/for-each":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/for-each.js","is-promise":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-promise/index.js","next-tick":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/next-tick/index.js","timers-ext/valid-timeout":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/timers-ext/valid-timeout.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/max.js":[function(require,module,exports){
// Limit cache size, LRU (least recently used) algorithm.

"use strict";

var toPosInteger = require("es5-ext/number/to-pos-integer"),
    lruQueue = require("lru-queue"),
    extensions = require("../lib/registered-extensions");

extensions.max = function (max, conf, options) {
	var postfix, queue, hit;

	max = toPosInteger(max);
	if (!max) return;

	queue = lruQueue(max);
	postfix = options.async && extensions.async || options.promise && extensions.promise ? "async" : "";

	conf.on("set" + postfix, hit = function hit(id) {
		id = queue.hit(id);
		if (id === undefined) return;
		conf.delete(id);
	});
	conf.on("get" + postfix, hit);
	conf.on("delete" + postfix, queue.delete);
	conf.on("clear" + postfix, queue.clear);
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","es5-ext/number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js","lru-queue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lru-queue/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/promise.js":[function(require,module,exports){
/* eslint max-statements: 0 */

// Support for functions returning promise

"use strict";

var objectMap = require("es5-ext/object/map"),
    primitiveSet = require("es5-ext/object/primitive-set"),
    ensureString = require("es5-ext/object/validate-stringifiable-value"),
    toShortString = require("es5-ext/to-short-string-representation"),
    isPromise = require("is-promise"),
    nextTick = require("next-tick");

var create = Object.create,
    supportedModes = primitiveSet("then", "then:finally", "done", "done:finally");

require("../lib/registered-extensions").promise = function (mode, conf) {
	var waiting = create(null),
	    cache = create(null),
	    promises = create(null);

	if (mode === true) {
		mode = null;
	} else {
		mode = ensureString(mode);
		if (!supportedModes[mode]) {
			throw new TypeError("'" + toShortString(mode) + "' is not valid promise mode");
		}
	}

	// After not from cache call
	conf.on("set", function (id, ignore, promise) {
		var isFailed = false;

		if (!isPromise(promise)) {
			// Non promise result
			cache[id] = promise;
			conf.emit("setasync", id, 1);
			return;
		}
		waiting[id] = 1;
		promises[id] = promise;
		var onSuccess = function onSuccess(result) {
			var count = waiting[id];
			if (isFailed) {
				throw new Error("Memoizee error: Detected unordered then|done & finally resolution, which " + "in turn makes proper detection of success/failure impossible (when in " + "'done:finally' mode)\n" + "Consider to rely on 'then' or 'done' mode instead.");
			}
			if (!count) return; // Deleted from cache before resolved
			delete waiting[id];
			cache[id] = result;
			conf.emit("setasync", id, count);
		};
		var onFailure = function onFailure() {
			isFailed = true;
			if (!waiting[id]) return; // Deleted from cache (or succeed in case of finally)
			delete waiting[id];
			delete promises[id];
			conf.delete(id);
		};

		var resolvedMode = mode;
		if (!resolvedMode) resolvedMode = "then";

		if (resolvedMode === "then") {
			// With no `finally` it's best we can do, side effect is that it mutes any eventual
			// "Unhandled error" events on returned promise
			promise.then(function (result) {
				nextTick(onSuccess.bind(this, result));
			}, function () {
				nextTick(onFailure);
			});
		} else if (resolvedMode === "done") {
			// Not recommended, as it may mute any eventual "Unhandled error" events
			if (typeof promise.done !== "function") {
				throw new Error("Memoizee error: Retrieved promise does not implement 'done' " + "in 'done' mode");
			}
			promise.done(onSuccess, onFailure);
		} else if (resolvedMode === "done:finally") {
			// The only mode with no side effects assuming library does not throw unconditionally
			// for rejected promises. Otherwise then:finally mode should be used instead
			if (typeof promise.done !== "function") {
				throw new Error("Memoizee error: Retrieved promise does not implement 'done' " + "in 'done:finally' mode");
			}
			if (typeof promise.finally !== "function") {
				throw new Error("Memoizee error: Retrieved promise does not implement 'finally' " + "in 'done:finally' mode");
			}
			promise.done(onSuccess);
			promise.finally(onFailure);
		}
	});

	// From cache (sync)
	conf.on("get", function (id, args, context) {
		var promise;
		if (waiting[id]) {
			++waiting[id]; // Still waiting
			return;
		}
		promise = promises[id];
		var emit = function emit() {
			conf.emit("getasync", id, args, context);
		};
		if (isPromise(promise)) {
			if (typeof promise.done === "function") promise.done(emit);else {
				promise.then(function () {
					nextTick(emit);
				});
			}
		} else {
			emit();
		}
	});

	// On delete
	conf.on("delete", function (id) {
		delete promises[id];
		if (waiting[id]) {
			delete waiting[id];
			return; // Not yet resolved
		}
		if (!hasOwnProperty.call(cache, id)) return;
		var result = cache[id];
		delete cache[id];
		conf.emit("deleteasync", id, [result]);
	});

	// On clear
	conf.on("clear", function () {
		var oldCache = cache;
		cache = create(null);
		waiting = create(null);
		promises = create(null);
		conf.emit("clearasync", objectMap(oldCache, function (data) {
			return [data];
		}));
	});
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","es5-ext/object/map":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/map.js","es5-ext/object/primitive-set":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/primitive-set.js","es5-ext/object/validate-stringifiable-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/validate-stringifiable-value.js","es5-ext/to-short-string-representation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/to-short-string-representation.js","is-promise":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/is-promise/index.js","next-tick":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/next-tick/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/ref-counter.js":[function(require,module,exports){
// Reference counter, useful for garbage collector like functionality

"use strict";

var d = require("d"),
    extensions = require("../lib/registered-extensions"),
    create = Object.create,
    defineProperties = Object.defineProperties;

extensions.refCounter = function (ignore, conf, options) {
	var cache, postfix;

	cache = create(null);
	postfix = options.async && extensions.async || options.promise && extensions.promise ? "async" : "";

	conf.on("set" + postfix, function (id, length) {
		cache[id] = length || 1;
	});
	conf.on("get" + postfix, function (id) {
		++cache[id];
	});
	conf.on("delete" + postfix, function (id) {
		delete cache[id];
	});
	conf.on("clear" + postfix, function () {
		cache = {};
	});

	defineProperties(conf.memoized, {
		deleteRef: d(function () {
			var id = conf.get(arguments);
			if (id === null) return null;
			if (!cache[id]) return null;
			if (! --cache[id]) {
				conf.delete(id);
				return true;
			}
			return false;
		}),
		getRefCount: d(function () {
			var id = conf.get(arguments);
			if (id === null) return 0;
			if (!cache[id]) return 0;
			return cache[id];
		})
	});
};

},{"../lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","d":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/index.js":[function(require,module,exports){
"use strict";

var normalizeOpts = require("es5-ext/object/normalize-options"),
    resolveLength = require("./lib/resolve-length"),
    plain = require("./plain");

module.exports = function (fn /*, options*/) {
	var options = normalizeOpts(arguments[1]),
	    length;

	if (!options.normalizer) {
		length = options.length = resolveLength(options.length, fn.length, options.async);
		if (length !== 0) {
			if (options.primitive) {
				if (length === false) {
					options.normalizer = require("./normalizers/primitive");
				} else if (length > 1) {
					options.normalizer = require("./normalizers/get-primitive-fixed")(length);
				}
			} else if (length === false) options.normalizer = require("./normalizers/get")();else if (length === 1) options.normalizer = require("./normalizers/get-1")();else options.normalizer = require("./normalizers/get-fixed")(length);
		}
	}

	// Assure extensions
	if (options.async) require("./ext/async");
	if (options.promise) require("./ext/promise");
	if (options.dispose) require("./ext/dispose");
	if (options.maxAge) require("./ext/max-age");
	if (options.max) require("./ext/max");
	if (options.refCounter) require("./ext/ref-counter");

	return plain(fn, options);
};

},{"./ext/async":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/async.js","./ext/dispose":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/dispose.js","./ext/max":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/max.js","./ext/max-age":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/max-age.js","./ext/promise":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/promise.js","./ext/ref-counter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/ext/ref-counter.js","./lib/resolve-length":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-length.js","./normalizers/get":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get.js","./normalizers/get-1":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-1.js","./normalizers/get-fixed":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-fixed.js","./normalizers/get-primitive-fixed":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-primitive-fixed.js","./normalizers/primitive":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/primitive.js","./plain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/plain.js","es5-ext/object/normalize-options":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/normalize-options.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/configure-map.js":[function(require,module,exports){
/* eslint no-eq-null: 0, eqeqeq: 0, no-unused-vars: 0 */

"use strict";

var customError = require("es5-ext/error/custom"),
    defineLength = require("es5-ext/function/_define-length"),
    d = require("d"),
    ee = require("event-emitter").methods,
    resolveResolve = require("./resolve-resolve"),
    resolveNormalize = require("./resolve-normalize");

var apply = Function.prototype.apply,
    call = Function.prototype.call,
    create = Object.create,
    defineProperties = Object.defineProperties,
    _on = ee.on,
    emit = ee.emit;

module.exports = function (original, length, options) {
	var cache = create(null),
	    conf,
	    memLength,
	    _get,
	    set,
	    del,
	    _clear,
	    extDel,
	    extGet,
	    extHas,
	    normalizer,
	    getListeners,
	    setListeners,
	    deleteListeners,
	    memoized,
	    resolve;
	if (length !== false) memLength = length;else if (isNaN(original.length)) memLength = 1;else memLength = original.length;

	if (options.normalizer) {
		normalizer = resolveNormalize(options.normalizer);
		_get = normalizer.get;
		set = normalizer.set;
		del = normalizer.delete;
		_clear = normalizer.clear;
	}
	if (options.resolvers != null) resolve = resolveResolve(options.resolvers);

	if (_get) {
		memoized = defineLength(function (arg) {
			var id,
			    result,
			    args = arguments;
			if (resolve) args = resolve(args);
			id = _get(args);
			if (id !== null) {
				if (hasOwnProperty.call(cache, id)) {
					if (getListeners) conf.emit("get", id, args, this);
					return cache[id];
				}
			}
			if (args.length === 1) result = call.call(original, this, args[0]);else result = apply.call(original, this, args);
			if (id === null) {
				id = _get(args);
				if (id !== null) throw customError("Circular invocation", "CIRCULAR_INVOCATION");
				id = set(args);
			} else if (hasOwnProperty.call(cache, id)) {
				throw customError("Circular invocation", "CIRCULAR_INVOCATION");
			}
			cache[id] = result;
			if (setListeners) conf.emit("set", id, null, result);
			return result;
		}, memLength);
	} else if (length === 0) {
		memoized = function memoized() {
			var result;
			if (hasOwnProperty.call(cache, "data")) {
				if (getListeners) conf.emit("get", "data", arguments, this);
				return cache.data;
			}
			if (arguments.length) result = apply.call(original, this, arguments);else result = call.call(original, this);
			if (hasOwnProperty.call(cache, "data")) {
				throw customError("Circular invocation", "CIRCULAR_INVOCATION");
			}
			cache.data = result;
			if (setListeners) conf.emit("set", "data", null, result);
			return result;
		};
	} else {
		memoized = function memoized(arg) {
			var result,
			    args = arguments,
			    id;
			if (resolve) args = resolve(arguments);
			id = String(args[0]);
			if (hasOwnProperty.call(cache, id)) {
				if (getListeners) conf.emit("get", id, args, this);
				return cache[id];
			}
			if (args.length === 1) result = call.call(original, this, args[0]);else result = apply.call(original, this, args);
			if (hasOwnProperty.call(cache, id)) {
				throw customError("Circular invocation", "CIRCULAR_INVOCATION");
			}
			cache[id] = result;
			if (setListeners) conf.emit("set", id, null, result);
			return result;
		};
	}
	conf = {
		original: original,
		memoized: memoized,
		profileName: options.profileName,
		get: function get(args) {
			if (resolve) args = resolve(args);
			if (_get) return _get(args);
			return String(args[0]);
		},
		has: function has(id) {
			return hasOwnProperty.call(cache, id);
		},
		delete: function _delete(id) {
			var result;
			if (!hasOwnProperty.call(cache, id)) return;
			if (del) del(id);
			result = cache[id];
			delete cache[id];
			if (deleteListeners) conf.emit("delete", id, result);
		},
		clear: function clear() {
			var oldCache = cache;
			if (_clear) _clear();
			cache = create(null);
			conf.emit("clear", oldCache);
		},
		on: function on(type, listener) {
			if (type === "get") getListeners = true;else if (type === "set") setListeners = true;else if (type === "delete") deleteListeners = true;
			return _on.call(this, type, listener);
		},
		emit: emit,
		updateEnv: function updateEnv() {
			original = conf.original;
		}
	};
	if (_get) {
		extDel = defineLength(function (arg) {
			var id,
			    args = arguments;
			if (resolve) args = resolve(args);
			id = _get(args);
			if (id === null) return;
			conf.delete(id);
		}, memLength);
	} else if (length === 0) {
		extDel = function extDel() {
			return conf.delete("data");
		};
	} else {
		extDel = function extDel(arg) {
			if (resolve) arg = resolve(arguments)[0];
			return conf.delete(arg);
		};
	}
	extGet = defineLength(function () {
		var id,
		    args = arguments;
		if (resolve) args = resolve(args);
		id = _get(args);
		return cache[id];
	});
	extHas = defineLength(function () {
		var id,
		    args = arguments;
		if (resolve) args = resolve(args);
		id = _get(args);
		if (id === null) return false;
		return conf.has(id);
	});
	defineProperties(memoized, {
		__memoized__: d(true),
		delete: d(extDel),
		clear: d(conf.clear),
		_get: d(extGet),
		_has: d(extHas)
	});
	return conf;
};

},{"./resolve-normalize":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-normalize.js","./resolve-resolve":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-resolve.js","d":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/d/index.js","es5-ext/error/custom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/error/custom.js","es5-ext/function/_define-length":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/function/_define-length.js","event-emitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/event-emitter/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js":[function(require,module,exports){
"use strict";

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-length.js":[function(require,module,exports){
"use strict";

var toPosInt = require("es5-ext/number/to-pos-integer");

module.exports = function (optsLength, fnLength, isAsync) {
	var length;
	if (isNaN(optsLength)) {
		length = fnLength;
		if (!(length >= 0)) return 1;
		if (isAsync && length) return length - 1;
		return length;
	}
	if (optsLength === false) return false;
	return toPosInt(optsLength);
};

},{"es5-ext/number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-normalize.js":[function(require,module,exports){
"use strict";

var callable = require("es5-ext/object/valid-callable");

module.exports = function (userNormalizer) {
	var normalizer;
	if (typeof userNormalizer === "function") return { set: userNormalizer, get: userNormalizer };
	normalizer = { get: callable(userNormalizer.get) };
	if (userNormalizer.set !== undefined) {
		normalizer.set = callable(userNormalizer.set);
		if (userNormalizer.delete) normalizer.delete = callable(userNormalizer.delete);
		if (userNormalizer.clear) normalizer.clear = callable(userNormalizer.clear);
		return normalizer;
	}
	normalizer.set = normalizer.get;
	return normalizer;
};

},{"es5-ext/object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-resolve.js":[function(require,module,exports){
"use strict";

var toArray = require("es5-ext/array/to-array"),
    isValue = require("es5-ext/object/is-value"),
    callable = require("es5-ext/object/valid-callable");

var slice = Array.prototype.slice,
    resolveArgs;

resolveArgs = function resolveArgs(args) {
	return this.map(function (resolve, i) {
		return resolve ? resolve(args[i]) : args[i];
	}).concat(slice.call(args, this.length));
};

module.exports = function (resolvers) {
	resolvers = toArray(resolvers);
	resolvers.forEach(function (resolve) {
		if (isValue(resolve)) callable(resolve);
	});
	return resolveArgs.bind(resolvers);
};

},{"es5-ext/array/to-array":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/to-array.js","es5-ext/object/is-value":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/is-value.js","es5-ext/object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-1.js":[function(require,module,exports){
"use strict";

var indexOf = require("es5-ext/array/#/e-index-of");

module.exports = function () {
	var lastId = 0,
	    argsMap = [],
	    cache = [];
	return {
		get: function get(args) {
			var index = indexOf.call(argsMap, args[0]);
			return index === -1 ? null : cache[index];
		},
		set: function set(args) {
			argsMap.push(args[0]);
			cache.push(++lastId);
			return lastId;
		},
		delete: function _delete(id) {
			var index = indexOf.call(cache, id);
			if (index !== -1) {
				argsMap.splice(index, 1);
				cache.splice(index, 1);
			}
		},
		clear: function clear() {
			argsMap = [];
			cache = [];
		}
	};
};

},{"es5-ext/array/#/e-index-of":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/#/e-index-of.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-fixed.js":[function(require,module,exports){
"use strict";

var indexOf = require("es5-ext/array/#/e-index-of"),
    create = Object.create;

module.exports = function (length) {
	var lastId = 0,
	    map = [[], []],
	    cache = create(null);
	return {
		get: function get(args) {
			var index = 0,
			    set = map,
			    i;
			while (index < length - 1) {
				i = indexOf.call(set[0], args[index]);
				if (i === -1) return null;
				set = set[1][i];
				++index;
			}
			i = indexOf.call(set[0], args[index]);
			if (i === -1) return null;
			return set[1][i] || null;
		},
		set: function set(args) {
			var index = 0,
			    set = map,
			    i;
			while (index < length - 1) {
				i = indexOf.call(set[0], args[index]);
				if (i === -1) {
					i = set[0].push(args[index]) - 1;
					set[1].push([[], []]);
				}
				set = set[1][i];
				++index;
			}
			i = indexOf.call(set[0], args[index]);
			if (i === -1) {
				i = set[0].push(args[index]) - 1;
			}
			set[1][i] = ++lastId;
			cache[lastId] = args;
			return lastId;
		},
		delete: function _delete(id) {
			var index = 0,
			    set = map,
			    i,
			    path = [],
			    args = cache[id];
			while (index < length - 1) {
				i = indexOf.call(set[0], args[index]);
				if (i === -1) {
					return;
				}
				path.push(set, i);
				set = set[1][i];
				++index;
			}
			i = indexOf.call(set[0], args[index]);
			if (i === -1) {
				return;
			}
			id = set[1][i];
			set[0].splice(i, 1);
			set[1].splice(i, 1);
			while (!set[0].length && path.length) {
				i = path.pop();
				set = path.pop();
				set[0].splice(i, 1);
				set[1].splice(i, 1);
			}
			delete cache[id];
		},
		clear: function clear() {
			map = [[], []];
			cache = create(null);
		}
	};
};

},{"es5-ext/array/#/e-index-of":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/#/e-index-of.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get-primitive-fixed.js":[function(require,module,exports){
"use strict";

module.exports = function (length) {
	if (!length) {
		return function () {
			return "";
		};
	}
	return function (args) {
		var id = String(args[0]),
		    i = 0,
		    currentLength = length;
		while (--currentLength) {
			id += "\x01" + args[++i];
		}
		return id;
	};
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/get.js":[function(require,module,exports){
/* eslint max-statements: 0 */

"use strict";

var indexOf = require("es5-ext/array/#/e-index-of");

var create = Object.create;

module.exports = function () {
	var lastId = 0,
	    map = [],
	    cache = create(null);
	return {
		get: function get(args) {
			var index = 0,
			    set = map,
			    i,
			    length = args.length;
			if (length === 0) return set[length] || null;
			if (set = set[length]) {
				while (index < length - 1) {
					i = indexOf.call(set[0], args[index]);
					if (i === -1) return null;
					set = set[1][i];
					++index;
				}
				i = indexOf.call(set[0], args[index]);
				if (i === -1) return null;
				return set[1][i] || null;
			}
			return null;
		},
		set: function set(args) {
			var index = 0,
			    set = map,
			    i,
			    length = args.length;
			if (length === 0) {
				set[length] = ++lastId;
			} else {
				if (!set[length]) {
					set[length] = [[], []];
				}
				set = set[length];
				while (index < length - 1) {
					i = indexOf.call(set[0], args[index]);
					if (i === -1) {
						i = set[0].push(args[index]) - 1;
						set[1].push([[], []]);
					}
					set = set[1][i];
					++index;
				}
				i = indexOf.call(set[0], args[index]);
				if (i === -1) {
					i = set[0].push(args[index]) - 1;
				}
				set[1][i] = ++lastId;
			}
			cache[lastId] = args;
			return lastId;
		},
		delete: function _delete(id) {
			var index = 0,
			    set = map,
			    i,
			    args = cache[id],
			    length = args.length,
			    path = [];
			if (length === 0) {
				delete set[length];
			} else if (set = set[length]) {
				while (index < length - 1) {
					i = indexOf.call(set[0], args[index]);
					if (i === -1) {
						return;
					}
					path.push(set, i);
					set = set[1][i];
					++index;
				}
				i = indexOf.call(set[0], args[index]);
				if (i === -1) {
					return;
				}
				id = set[1][i];
				set[0].splice(i, 1);
				set[1].splice(i, 1);
				while (!set[0].length && path.length) {
					i = path.pop();
					set = path.pop();
					set[0].splice(i, 1);
					set[1].splice(i, 1);
				}
			}
			delete cache[id];
		},
		clear: function clear() {
			map = [];
			cache = create(null);
		}
	};
};

},{"es5-ext/array/#/e-index-of":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/array/#/e-index-of.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/normalizers/primitive.js":[function(require,module,exports){
"use strict";

module.exports = function (args) {
	var id,
	    i,
	    length = args.length;
	if (!length) return "\x02";
	id = String(args[i = 0]);
	while (--length) {
		id += "\x01" + args[++i];
	}return id;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/plain.js":[function(require,module,exports){
"use strict";

var callable = require("es5-ext/object/valid-callable"),
    forEach = require("es5-ext/object/for-each"),
    extensions = require("./lib/registered-extensions"),
    configure = require("./lib/configure-map"),
    resolveLength = require("./lib/resolve-length");

module.exports = function self(fn /*, options */) {
	var options, length, conf;

	callable(fn);
	options = Object(arguments[1]);

	if (options.async && options.promise) {
		throw new Error("Options 'async' and 'promise' cannot be used together");
	}

	// Do not memoize already memoized function
	if (hasOwnProperty.call(fn, "__memoized__") && !options.force) return fn;

	// Resolve length;
	length = resolveLength(options.length, fn.length, options.async && extensions.async);

	// Configure cache map
	conf = configure(fn, length, options);

	// Bind eventual extensions
	forEach(extensions, function (extFn, name) {
		if (options[name]) extFn(options[name], conf, options);
	});

	if (self.__profiler__) self.__profiler__(conf);

	conf.updateEnv();
	return conf.memoized;
};

},{"./lib/configure-map":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/configure-map.js","./lib/registered-extensions":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/registered-extensions.js","./lib/resolve-length":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/memoizee/lib/resolve-length.js","es5-ext/object/for-each":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/for-each.js","es5-ext/object/valid-callable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/object/valid-callable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/next-tick/index.js":[function(require,module,exports){
(function (process){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var callable, byObserver;

callable = function callable(fn) {
	if (typeof fn !== 'function') throw new TypeError(fn + " is not a function");
	return fn;
};

byObserver = function byObserver(Observer) {
	var node = document.createTextNode(''),
	    queue,
	    currentQueue,
	    i = 0;
	new Observer(function () {
		var callback;
		if (!queue) {
			if (!currentQueue) return;
			queue = currentQueue;
		} else if (currentQueue) {
			queue = currentQueue.concat(queue);
		}
		currentQueue = queue;
		queue = null;
		if (typeof currentQueue === 'function') {
			callback = currentQueue;
			currentQueue = null;
			callback();
			return;
		}
		node.data = i = ++i % 2; // Invoke other batch, to handle leftover callbacks in case of crash
		while (currentQueue) {
			callback = currentQueue.shift();
			if (!currentQueue.length) currentQueue = null;
			callback();
		}
	}).observe(node, { characterData: true });
	return function (fn) {
		callable(fn);
		if (queue) {
			if (typeof queue === 'function') queue = [queue, fn];else queue.push(fn);
			return;
		}
		queue = fn;
		node.data = i = ++i % 2;
	};
};

module.exports = function () {
	// Node.js
	if ((typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process && typeof process.nextTick === 'function') {
		return process.nextTick;
	}

	// MutationObserver
	if ((typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object' && document) {
		if (typeof MutationObserver === 'function') return byObserver(MutationObserver);
		if (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);
	}

	// W3C Draft
	// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html
	if (typeof setImmediate === 'function') {
		return function (cb) {
			setImmediate(callable(cb));
		};
	}

	// Wide available standard
	if (typeof setTimeout === 'function' || (typeof setTimeout === 'undefined' ? 'undefined' : _typeof(setTimeout)) === 'object') {
		return function (cb) {
			setTimeout(callable(cb), 0);
		};
	}

	return null;
}();

}).call(this,require('_process'))
},{"_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js":[function(require,module,exports){
'use strict';

var lowerCase = require('lower-case');

var NON_WORD_REGEXP = require('./vendor/non-word-regexp');
var CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp');
var CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp');

/**
 * Sentence case a string.
 *
 * @param  {string} str
 * @param  {string} locale
 * @param  {string} replacement
 * @return {string}
 */
module.exports = function (str, locale, replacement) {
  if (str == null) {
    return '';
  }

  replacement = typeof replacement !== 'string' ? ' ' : replacement;

  function replace(match, index, value) {
    if (index === 0 || index === value.length - match.length) {
      return '';
    }

    return replacement;
  }

  str = String(str)
  // Support camel case ("camelCase" -> "camel Case").
  .replace(CAMEL_CASE_REGEXP, '$1 $2')
  // Support odd camel case ("CAMELCase" -> "CAMEL Case").
  .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')
  // Remove all non-word characters and replace with a single space.
  .replace(NON_WORD_REGEXP, replace);

  // Lower case the entire string.
  return lowerCase(str, locale);
};

},{"./vendor/camel-case-regexp":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/camel-case-regexp.js","./vendor/camel-case-upper-regexp":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/camel-case-upper-regexp.js","./vendor/non-word-regexp":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/non-word-regexp.js","lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/camel-case-regexp.js":[function(require,module,exports){
"use strict";

module.exports = /([a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])/g;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/camel-case-upper-regexp.js":[function(require,module,exports){
"use strict";

module.exports = /([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]+)([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A][a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])/g;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/vendor/non-word-regexp.js":[function(require,module,exports){
"use strict";

module.exports = /[^A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js":[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/param-case/param-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');

/**
 * Param case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '-');
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/pascal-case/pascal-case.js":[function(require,module,exports){
'use strict';

var camelCase = require('camel-case');
var upperCaseFirst = require('upper-case-first');

/**
 * Pascal case a string.
 *
 * @param  {string}  value
 * @param  {string}  [locale]
 * @param  {boolean} [mergeNumbers]
 * @return {string}
 */
module.exports = function (value, locale, mergeNumbers) {
  return upperCaseFirst(camelCase(value, locale, mergeNumbers), locale);
};

},{"camel-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/camel-case/camel-case.js","upper-case-first":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case-first/upper-case-first.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/path-case/path-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');

/**
 * Path case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '/');
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js":[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/checkPropTypes.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

if (process.env.NODE_ENV !== 'production') {
  var invariant = require('fbjs/lib/invariant');
  var warning = require('fbjs/lib/warning');
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error));
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

}).call(this,require('_process'))
},{"./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/lib/ReactPropTypesSecret.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factory.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.

var factory = require('./factoryWithTypeCheckers');
module.exports = function (isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};

},{"./factoryWithTypeCheckers":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factoryWithTypeCheckers.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factoryWithThrowingShims.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

module.exports = function() {
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  function shim() {
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');

module.exports = function (isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] &&
          // Avoid spamming the console because they are often not actionable except for lib authors
          manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

}).call(this,require('_process'))
},{"./checkPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/checkPropTypes.js","./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/lib/ReactPropTypesSecret.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/index.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}

}).call(this,require('_process'))
},{"./factoryWithThrowingShims":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factoryWithThrowingShims.js","./factoryWithTypeCheckers":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factoryWithTypeCheckers.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/index.js":[function(require,module,exports){
'use strict';

module.exports = require('./lib/ReactDOM');

},{"./lib/ReactDOM":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOM.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ARIADOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/AutoFocusUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function focusDOMComponent() {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/focusNode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/BeforeInputEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js","./FallbackCompositionState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/FallbackCompositionState.js","./SyntheticCompositionEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticCompositionEvent.js","./SyntheticInputEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticInputEvent.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CSSProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CSSPropertyOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("development" !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    "development" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    "development" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function checkRenderMessage(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function warnValidStyle(name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function createMarkupForStyles(styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if ("development" !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function setValueForStyles(node, styles, component) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("development" !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"./CSSProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CSSProperty.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./dangerousStyleValue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/dangerousStyleValue.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/camelizeStyleName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/camelizeStyleName.js","fbjs/lib/hyphenateStyleName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/hyphenateStyleName.js","fbjs/lib/memoizeStringOnly":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/memoizeStringOnly.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CallbackQueue.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */

  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */

  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? "development" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */

  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */

  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ChangeEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function get() {
    return activeElementValueProp.get.call(this);
  },
  set: function set(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput') {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return targetInst;
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js","./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventTarget.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isEventSupported.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMChildrenOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if ("development" !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function dangerouslyReplaceNodeWithMarkup(oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function processUpdates(parentNode, updates) {
    if ("development" !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: { toIndex: update.toIndex, content: update.content.toString() }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./Danger":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Danger.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMNamespaces.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? "development" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if ("development" !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if ("development" !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: "development" !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function isCustomAttribute(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMPropertyOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  "development" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function createMarkupForID(id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function setAttributeForID(node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function createMarkupForRoot() {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function setAttributeForRoot(node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function createMarkupForProperty(name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function setValueForProperty(node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function setValueForAttribute(node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function deleteValueForAttribute(node, name) {
    node.removeAttribute(name);
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function deleteValueForProperty(node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }

};

module.exports = DOMPropertyOperations;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./quoteAttributeValueForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Danger.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;

},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/createNodesFromMarkup":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/createNodesFromMarkup.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DefaultEventPluginOrder.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EnterLeaveEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function putListener(inst, registrationName, listener) {
    !(typeof listener === 'function') ? "development" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : _prodInvariant('94', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function getListener(inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function deleteListener(inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function deleteAllListeners(inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function enqueueEvents(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function processEventQueue(simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? "development" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function __purge() {
    listenerBank = {};
  },

  __getListenerBank: function __getListenerBank() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginRegistry.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginUtils.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactErrorUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/forEachAccumulated.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginRegistry.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if ("development" !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: "development" !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
    !!eventPluginOrder ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function _resetEventPlugins() {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if ("development" !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function injectComponentTree(Injected) {
    ComponentTree = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function injectTreeTraversal(Injected) {
    TreeTraversal = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if ("development" !== 'production') {
  validateEventDispatches = function validateEventDispatches(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    "development" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? "development" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function getInstanceFromNode(node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function getNodeFromInstance(node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function isAncestor(a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function getParentInstance(inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;

},{"./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactErrorUtils.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/forEachAccumulated.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/FallbackCompositionState.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function destructor() {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function getText() {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function getData() {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getTextContentAccessor.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function value(node, _value) {
      if (_value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + _value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + _value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/KeyEscapeUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/LinkedValueUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypesSecret = require('./ReactPropTypesSecret');
var propTypesFactory = require('prop-types/factory');

var React = require('react/lib/React');
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function value(props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function checked(props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function checkPropTypes(tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        "development" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function getValue(inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function getChecked(inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function executeOnChange(inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;

},{"./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","prop-types/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factory.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactBrowserEventEmitter.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function setEnabled(enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function isEnabled() {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function listenTo(registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function supportsEventPageXY() {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;

},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactEventEmitterMixin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEventEmitterMixin.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ViewportMetrics.js","./getVendorPrefixedEventName":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getVendorPrefixedEventName.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isEventSupported.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactChildReconciler.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if ("development" !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if ("development" !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
  ) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function unmountChildren(renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;

}).call(this,require('_process'))
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/instantiateReactComponent.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/shouldUpdateReactComponent.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

};

module.exports = ReactComponentBrowserEnvironment;

},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMIDOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMIDOperations.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentEnvironment.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function injectEnvironment(environment) {
      !!injected ? "development" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactCompositeComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var React = require('react/lib/React');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactReconciler = require('./ReactReconciler');

if ("development" !== 'production') {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shallowEqual = require('fbjs/lib/shallowEqual');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    "development" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function construct(element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if ("development" !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? "development" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if ("development" !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        "development" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      "development" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("development" !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      "development" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
    if ("development" !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if ("development" !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if ("development" !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if ("development" !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function getHostNode() {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function unmountComponent(safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if ("development" !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function _maskContext(context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function _processContext(context) {
    var maskedContext = this._maskContext(context);
    if ("development" !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function _processChildContext(currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(_typeof(Component.childContextTypes) === 'object') ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if ("development" !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
    if ("development" !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if ("development" !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function _processPendingState(props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if ("development" !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
    var inst = this._instance;
    var renderedElement;

    if ("development" !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if ("development" !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function _renderValidatedComponent() {
    var renderedElement;
    if ("development" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? "development" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function attachRef(ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if ("development" !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      "development" !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function detachRef(ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function getName() {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function getPublicInstance() {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;

},{"./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactErrorUtils.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactNodeTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactNodeTypes.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/checkReactTypeSpec.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOM.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function getNodeFromInstance(inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if ("development" !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    "development" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    "development" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        "development" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if ("development" !== 'production') {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;

},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInvalidARIAHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","./ReactDOMNullInputValuePropHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","./ReactDOMUnknownPropertyHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","./ReactDefaultInjection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDefaultInjection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMount":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMount.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./ReactVersion":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactVersion.js","./findDOMNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/findDOMNode.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getHostComponentFromComposite.js","./renderSubtreeIntoContainer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/renderSubtreeIntoContainer.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  "development" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? "development" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ? "development" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    "development" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    "development" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || _typeof(props.style) === 'object') ? "development" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if ("development" !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    "development" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if ("development" !== 'production') {
  setAndValidateContentChildDev = function setAndValidateContentChildDev(content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? "development" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? "development" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? "development" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if ("development" !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if ("development" !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function _createInitialChildren(transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if ("development" !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function receiveComponent(nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if ("development" !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if ("development" !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function getHostNode() {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function unmountComponent(safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? "development" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if ("development" !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function getPublicInstance() {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;

},{"./AutoFocusUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/AutoFocusUtils.js","./CSSPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CSSPropertyOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMNamespaces.js","./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMPropertyOperations.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInput":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMInput.js","./ReactDOMOption":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMOption.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMSelect.js","./ReactDOMTextarea":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTextarea.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMultiChild":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMultiChild.js","./ReactServerRenderingTransaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactServerRenderingTransaction.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./isEventSupported":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isEventSupported.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentFlags.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? "development" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? "development" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMContainerInfo.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if ("development" !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;

},{"./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/validateDOMNesting.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMEmptyComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function ReactDOMEmptyComponent(instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function receiveComponent() {},
  getHostNode: function getHostNode() {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function unmountComponent() {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMFeatureFlags.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMIDOperations.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMInput.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function getHostProps(inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function mountWrapper(inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        "development" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function updateWrapper(inst) {
    var props = inst._currentElement.props;

    if ("development" !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        "development" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        "development" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        // eslint-disable-next-line
        if (value != valueAsNumber) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
        // eslint-disable-next-line
      } else if (value != node.value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function postMountWrapper(inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? "development" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;

},{"./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMPropertyOperations.js","./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      "development" !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    "development" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;

},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMOption.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var React = require('react/lib/React');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      "development" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function mountWrapper(inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function postMountWrapper(inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function getHostProps(inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;

},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMSelect.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMSelect.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    "development" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function getHostProps(inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function mountWrapper(inst, props) {
    if ("development" !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      "development" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function getSelectValueContext(inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function postUpdateWrapper(inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;

},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMSelection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

},{"./getNodeForCharacterOffset":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getNodeForCharacterOffset.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getTextContentAccessor.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTextComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function ReactDOMTextComponent(text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function receiveComponent(nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function getHostNode() {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? "development" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function unmountComponent() {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;

},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMChildrenOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTextarea.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function getHostProps(inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function mountWrapper(inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        "development" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? "development" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? "development" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function updateWrapper(inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function postMountWrapper(inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;

},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTreeTraversal.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? "development" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

if ("development" !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function validateProperty(tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      "development" !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      "development" !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function warnUnknownProperties(debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginRegistry.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDebugTool.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');
var ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    "development" !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var _isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    "development" !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (_isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!_isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || (typeof element === 'undefined' ? 'undefined' : _typeof(element)) !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function addHook(hook) {
    hooks.push(hook);
  },
  removeHook: function removeHook(hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function isProfiling() {
    return _isProfiling;
  },
  beginProfiling: function beginProfiling() {
    if (_isProfiling) {
      return;
    }

    _isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function endProfiling() {
    if (!_isProfiling) {
      return;
    }

    _isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function getFlushHistory() {
    return flushHistory;
  },
  onBeginFlush: function onBeginFlush() {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function onEndFlush() {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function onEndProcessingChildContext() {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function onHostOperation(operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function onSetState() {
    emitEvent('onSetState');
  },
  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function onMountComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function onTestEvent() {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;

},{"./ReactHostOperationHistoryHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js","./ReactInvalidSetStateWarningHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/performanceNow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performanceNow.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function close() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Transaction.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDefaultInjection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');
var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

},{"./ARIADOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ARIADOMPropertyConfig.js","./BeforeInputEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/BeforeInputEventPlugin.js","./ChangeEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ChangeEventPlugin.js","./DefaultEventPluginOrder":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DefaultEventPluginOrder.js","./EnterLeaveEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EnterLeaveEventPlugin.js","./HTMLDOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js","./ReactComponentBrowserEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js","./ReactDOMComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponent.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMEmptyComponent.js","./ReactDOMTextComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTextComponent.js","./ReactDOMTreeTraversal":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMTreeTraversal.js","./ReactDefaultBatchingStrategy":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","./ReactEventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEventListener.js","./ReactInjection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInjection.js","./ReactReconcileTransaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconcileTransaction.js","./SVGDOMPropertyConfig":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SVGDOMPropertyConfig.js","./SelectEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SelectEventPlugin.js","./SimpleEventPlugin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SimpleEventPlugin.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactElementSymbol.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEmptyComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function create(instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactErrorUtils.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function rethrowCaughtError() {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if ("development" !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEventEmitterMixin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEventListener.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function destructor() {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function setEnabled(enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function isEnabled() {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function monitorScrollValue(refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventTarget.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/EventListener.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getUnboundedScrollPosition":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getUnboundedScrollPosition.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactFeatureFlags.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactHostComponent.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function injectTextComponentClass(componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? "development" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function onHostOperation(operation) {
    history.push(operation);
  },
  clearHistory: function clearHistory() {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function getHistory() {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInjection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPluginUtils.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactHostComponent.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInputSelection.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function getSelectionInformation() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function restoreSelection(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function getSelection(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function setSelection(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMSelection.js","fbjs/lib/containsNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/containsNode.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/focusNode.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function remove(key) {
    key._reactInternalInstance = undefined;
  },

  get: function get(key) {
    return key._reactInternalInstance;
  },

  has: function has(key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function set(key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if ("development" !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };

},{"./ReactDebugTool":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDebugTool.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var warning = require('fbjs/lib/warning');

if ("development" !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function warnInvalidSetState() {
    "development" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function onEndProcessingChildContext() {
    processingChildContext = false;
  },
  onSetState: function onSetState() {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;

},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMarkupChecksum.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function addChecksumToMarkup(markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function canReuseMarkup(markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/adler32.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMount.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var React = require('react/lib/React');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function TopLevelWrapper() {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if ("development" !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function scrollMonitor(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? "development" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? "development" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    "development" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            "development" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function render(nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function unmountComponentAtNode(container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function _mountImageIntoNode(markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if ("development" !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if ("development" !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;

},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMLazyTree.js","./DOMProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMProperty.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMContainerInfo":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMContainerInfo.js","./ReactDOMFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMFeatureFlags.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMarkupChecksum":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMarkupChecksum.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdateQueue.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/instantiateReactComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setInnerHTML.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMultiChild.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if ("development" !== 'production') {
  var getDebugID = function getDebugID(inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
      if ("development" !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if ("development" !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function mountChildren(nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if ("development" !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function updateTextContent(nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function updateMarkup(nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function unmountChildren(safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function createChild(child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function removeChild(child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function _unmountChild(child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactChildReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactChildReconciler.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./flattenChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/flattenChildren.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactNodeTypes.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function getType(node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? "development" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","react/lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactOwner.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypesSecret.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconcileTransaction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function initialize() {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function close(previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function initialize() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function close() {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function getReactMountReady() {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function getUpdateQueue() {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function checkpoint() {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function rollback(checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function destructor() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInputSelection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var warning = require('fbjs/lib/warning');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
  ) {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function getHostNode(internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function unmountComponent(internalInstance, safely) {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      "development" !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;

},{"./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactRef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactRef.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactRef.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || (typeof element === 'undefined' ? 'undefined' : _typeof(element)) !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && (typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement)) === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && (typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement)) === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || (typeof element === 'undefined' ? 'undefined' : _typeof(element)) !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

},{"./ReactOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactServerRenderingTransaction.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function enqueue() {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function getReactMountReady() {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function getUpdateQueue() {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function destructor() {},

  checkpoint: function checkpoint() {},

  rollback: function rollback() {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactServerUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactServerUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactServerUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var ReactUpdateQueue = require('./ReactUpdateQueue');

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */

  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */

  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */

  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */

  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */

  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;

},{"./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdateQueue.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("development" !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      "development" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function isMounted(publicInstance) {
    if ("development" !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      "development" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function validateCallback(callback, callerName) {
    !(!callback || typeof callback === 'function') ? "development" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;

},{"./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactUpdates.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function initialize() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function close() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function initialize() {
    this.callbackQueue.reset();
  },
  close: function close() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function destructor() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function perform(method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? "development" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function flushBatchedUpdates() {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? "development" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
    !ReconcileTransaction ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
    !_batchingStrategy ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactReconciler.js","./Transaction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Transaction.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactVersion.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.5.4';

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SVGDOMPropertyConfig.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SelectEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var shallowEqual = require('fbjs/lib/shallowEqual');

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function didPutListener(inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInputSelection.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SimpleEventPlugin.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? "development" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function didPutListener(inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function willDeleteListener(inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;

},{"./EventPropagators":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticAnimationEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticAnimationEvent.js","./SyntheticClipboardEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticClipboardEvent.js","./SyntheticDragEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticDragEvent.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js","./SyntheticFocusEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticFocusEvent.js","./SyntheticKeyboardEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticKeyboardEvent.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticMouseEvent.js","./SyntheticTouchEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticTouchEvent.js","./SyntheticTransitionEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticTransitionEvent.js","./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js","./SyntheticWheelEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticWheelEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventCharCode.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/EventListener.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticAnimationEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticClipboardEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function clipboardData(event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticCompositionEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticDragEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function timeStamp(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if ("development" !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if ("development" !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function preventDefault() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      // eslint-disable-line valid-typeof
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function stopPropagation() {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // eslint-disable-line valid-typeof
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function persist() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function destructor() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if ("development" !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if ("development" !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if ("development" !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function construct(target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function apply(constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function set(target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              "development" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function E() {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    "development" !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticFocusEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticInputEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticKeyboardEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function charCode(event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function keyCode(event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function which(event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventCharCode.js","./getEventKey":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventKey.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticMouseEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function button(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function relatedTarget(event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function pageX(event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function pageY(event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ViewportMetrics.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticTouchEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticTransitionEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticUIEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function view(event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function detail(event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventTarget.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticWheelEvent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function deltaX(event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function deltaY(event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/Transaction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function reinitializeTransaction() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function isInTransaction() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function perform(method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function initializeAll(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function closeAll(startIndex) {
    !this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ViewportMetrics.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function refreshScrollValues(scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/accumulateInto.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? "development" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/adler32.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/checkReactTypeSpec.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;

}).call(this,require('_process'))
},{"./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/dangerousStyleValue.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if ("development" !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          "development" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/CSSProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/escapeTextContentForBrowser.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html


/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/findDOMNode.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("development" !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? "development" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;

},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactInstanceMap.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getHostComponentFromComposite.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/flattenChildren.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && (typeof traverseContext === 'undefined' ? 'undefined' : _typeof(traverseContext)) === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if ("development" !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if ("development" !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;

}).call(this,require('_process'))
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/KeyEscapeUtils.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/forEachAccumulated.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventCharCode.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventKey.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

},{"./getEventCharCode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventCharCode.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventModifierState.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getEventTarget.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getHostComponentFromComposite.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

},{"./ReactNodeTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactNodeTypes.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getIteratorFn.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getNodeForCharacterOffset.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getTextContentAccessor.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getVendorPrefixedEventName.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/instantiateReactComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');

var getNextDebugID = require('react/lib/getNextDebugID');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if ("development" !== 'production') {
        if (type === undefined || (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? "development" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type === 'undefined' ? 'undefined' : _typeof(type), info) : _prodInvariant('130', type == null ? type : typeof type === 'undefined' ? 'undefined' : _typeof(type), info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : _prodInvariant('131', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : void 0;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("development" !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("development" !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;

},{"./ReactCompositeComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactCompositeComponent.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactHostComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js","react/lib/getNextDebugID":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/getNextDebugID.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isEventSupported.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/isTextInputElement.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/escapeTextContentForBrowser.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/renderSubtreeIntoContainer.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;

},{"./ReactMount":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactMount.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setInnerHTML.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function setInnerHTML(node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setTextContent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function setTextContent(node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function setTextContent(node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/setInnerHTML.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/shouldUpdateReactComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/traverseAllChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/validateDOMNesting.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if ("development" !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function findOwnerStack(instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function validateDOMNesting(childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      "development" !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;

},{"fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-vega-lite/dist/react-vega-lite.min.js":[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = t(require("react"), require("react-vega"), require("vega-lite")) : "function" == typeof define && define.amd ? define(["react", "react-vega", "vega-lite"], t) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.ReactVegaLite = t(require("react"), require("react-vega"), require("vega-lite")) : e.ReactVegaLite = t(e.React, e.ReactVega, e.vl);
}(undefined, function (e, t, r) {
  return function (e) {
    function t(n) {
      if (r[n]) return r[n].exports;var a = r[n] = { i: n, l: !1, exports: {} };return e[n].call(a.exports, a, a.exports, t), a.l = !0, a.exports;
    }var r = {};return t.m = e, t.c = r, t.i = function (e) {
      return e;
    }, t.d = function (e, r, n) {
      t.o(e, r) || Object.defineProperty(e, r, { configurable: !1, enumerable: !0, get: n });
    }, t.n = function (e) {
      var r = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };return t.d(r, "a", r), r;
    }, t.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, t.p = "", t(t.s = 6);
  }([function (e, t, r) {
    "use strict";
    var n = r(1),
        a = r.n(n),
        o = r(5),
        c = (r.n(o), r(4)),
        i = r.n(c),
        u = function u(e) {
      var t = Object.assign({}, e),
          r = Object.assign({}, e.spec);return e.data && (r.data = e.data, delete t.data), t.spec = o.compile(r).spec, a.a.createElement(i.a, t);
    };u.propTypes = i.a.propTypes, t.a = u;
  }, function (t, r) {
    t.exports = e;
  }, function (e, t, r) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), r.d(t, "createClassFromLiteSpec", function () {
      return o;
    });var n = r(0),
        a = r(3);t.default = n.a;var o = a.a;
  }, function (e, t, r) {
    "use strict";
    function n() {
      function e(e) {
        return o.a.createElement(c.a, i({ spec: t }, e));
      }var t = 1 === arguments.length ? arguments.length <= 0 ? void 0 : arguments[0] : arguments.length <= 1 ? void 0 : arguments[1],
          r = Object.assign({}, c.a.propTypes);return delete r.spec, e.getSpec = function () {
        return t;
      }, e.propTypes = r, e;
    }t.a = n;var a = r(1),
        o = r.n(a),
        c = r(0),
        i = Object.assign || function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];for (var n in r) {
          Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
        }
      }return e;
    };
  }, function (e, r) {
    e.exports = t;
  }, function (e, t) {
    e.exports = r;
  }, function (e, t, r) {
    e.exports = r(2);
  }]);
});

},{"react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","react-vega":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-vega/dist/react-vega.min.js","vega-lite":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-vega/dist/react-vega.min.js":[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = t(require("prop-types"), require("react"), require("vega")) : "function" == typeof define && define.amd ? define(["prop-types", "react", "vega"], t) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.ReactVega = t(require("prop-types"), require("react"), require("vega")) : e.ReactVega = t(e.PropTypes, e.React, e.vega);
}(undefined, function (e, t, n) {
  return function (e) {
    function t(r) {
      if (n[r]) return n[r].exports;var a = n[r] = { i: r, l: !1, exports: {} };return e[r].call(a.exports, a, a.exports, t), a.l = !0, a.exports;
    }var n = {};return t.m = e, t.c = n, t.i = function (e) {
      return e;
    }, t.d = function (e, n, r) {
      t.o(e, n) || Object.defineProperty(e, n, { configurable: !1, enumerable: !0, get: r });
    }, t.n = function (e) {
      var n = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };return t.d(n, "a", n), n;
    }, t.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, t.p = "", t(t.s = 7);
  }([function (e, t, n) {
    "use strict";
    function r(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }function a(e, t) {
      if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !t || "object" != (typeof t === "undefined" ? "undefined" : _typeof(t)) && "function" != typeof t ? e : t;
    }function i(e, t) {
      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : _typeof(t)));e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
    }var o = n(6),
        u = (n.n(o), n(2)),
        c = n.n(u),
        s = n(1),
        p = n.n(s),
        f = n(5),
        l = function () {
      function e(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
        }
      }return function (t, n, r) {
        return n && e(t.prototype, n), r && e(t, r), t;
      };
    }(),
        h = { className: p.a.string, style: p.a.object, spec: p.a.object.isRequired, logLevel: p.a.number, width: p.a.number, height: p.a.number, background: p.a.string, padding: p.a.object, renderer: p.a.string, enableHover: p.a.bool, data: p.a.object, onNewView: p.a.func, onParseError: p.a.func },
        d = { className: "", renderer: "svg", enableHover: !0, onNewView: function onNewView() {}, onParseError: function onParseError() {} },
        v = function (e) {
      function t() {
        return r(this, t), a(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments));
      }return i(t, e), l(t, [{ key: "componentDidMount", value: function value() {
          this.createView(this.props.spec);
        } }, { key: "componentDidUpdate", value: function value(e) {
          var n = this;if (this.props.spec !== e.spec) this.clearView(), this.createView(this.props.spec);else if (this.view) {
            var r = this.props,
                a = this.props.spec,
                i = !1;["width", "height", "renderer", "logLevel", "background"].filter(function (t) {
              return r[t] !== e[t];
            }).forEach(function (e) {
              n.view[e](r[e]), i = !0;
            }), t.isSamePadding || (this.view.padding(r.padding || a.padding), i = !0), a.data && r.data && a.data.forEach(function (a) {
              var o = e.data[a.name],
                  u = r.data[a.name];t.isSameData(o, u) || (n.updateData(a.name, u), i = !0);
            }), r.enableHover !== e.enableHover && (i = !0), i && (r.enableHover && this.view.hover(), this.view.run());
          }
        } }, { key: "componentWillUnmount", value: function value() {
          this.clearView();
        } }, { key: "createView", value: function value(e) {
          var r = this;if (e) {
            var a = this.props;try {
              var i = o.parse(e),
                  u = new o.View(i).initialize(this.element);e.signals && e.signals.forEach(function (e) {
                u.addSignalListener(e.name, function () {
                  for (var n = arguments.length, a = Array(n), i = 0; i < n; i++) {
                    a[i] = arguments[i];
                  }var o = r.props[t.listenerName(e.name)];o && o.apply(r, a);
                });
              }), this.view = u, ["width", "height", "padding", "renderer", "logLevel", "background"].filter(function (e) {
                return n.i(f.a)(a[e]);
              }).forEach(function (e) {
                u[e](a[e]);
              }), e.data && a.data && e.data.filter(function (e) {
                return a.data[e.name];
              }).forEach(function (e) {
                r.updateData(e.name, a.data[e.name]);
              }), a.enableHover && u.hover(), u.run(), a.onNewView(u);
            } catch (e) {
              this.clearView(), a.onParseError(e);
            }
          } else this.clearView();return this;
        } }, { key: "updateData", value: function value(e, t) {
          t && (n.i(f.b)(t) ? t(this.view.data(e)) : this.view.change(e, o.changeset().remove(function () {
            return !0;
          }).insert(t)));
        } }, { key: "clearView", value: function value() {
          return this.view && (this.view.finalize(), this.view = null), this;
        } }, { key: "render", value: function value() {
          var e = this;return c.a.createElement("div", { ref: function ref(t) {
              e.element = t;
            }, className: this.props.className, style: this.props.style });
        } }], [{ key: "isSamePadding", value: function value(e, t) {
          return n.i(f.a)(e) && n.i(f.a)(t) ? e.top === t.top && e.left === t.left && e.right === t.right && e.bottom === t.bottom : e === t;
        } }, { key: "isSameData", value: function value(e, t) {
          return e === t && !n.i(f.b)(e);
        } }, { key: "isSameSpec", value: function value(e, t) {
          return e === t || JSON.stringify(e) === JSON.stringify(t);
        } }, { key: "listenerName", value: function value(e) {
          return "onSignal" + n.i(f.c)(e);
        } }]), t;
    }(c.a.Component);v.propTypes = h, v.defaultProps = d, t.a = v;
  }, function (t, n) {
    t.exports = e;
  }, function (e, n) {
    e.exports = t;
  }, function (e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", { value: !0 }), n.d(t, "createClassFromSpec", function () {
      return i;
    });var r = n(0),
        a = n(4);t.default = r.a;var i = a.a;
  }, function (e, t, n) {
    "use strict";
    function r() {
      function e(e) {
        return i.a.createElement(c.a, s({ spec: t }, e));
      }var t = 1 === arguments.length ? arguments.length <= 0 ? void 0 : arguments[0] : arguments.length <= 1 ? void 0 : arguments[1],
          n = Object.assign({}, c.a.propTypes);return delete n.spec, t.signals && t.signals.forEach(function (e) {
        n[c.a.listenerName(e.name)] = u.a.func;
      }), e.getSpec = function () {
        return t;
      }, e.propTypes = n, e;
    }t.a = r;var a = n(2),
        i = n.n(a),
        o = n(1),
        u = n.n(o),
        c = n(0),
        s = Object.assign || function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var n = arguments[t];for (var r in n) {
          Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
        }
      }return e;
    };
  }, function (e, t, n) {
    "use strict";
    function r(e) {
      return e.charAt(0).toUpperCase() + e.slice(1);
    }function a(e) {
      return null !== e && void 0 !== e;
    }function i(e) {
      var t = {};return !!e && "[object Function]" === t.toString.call(e);
    }t.c = r, t.a = a, t.b = i;
  }, function (e, t) {
    e.exports = n;
  }, function (e, t, n) {
    e.exports = n(3);
  }]);
});

},{"prop-types":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/index.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","vega":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega/build/vega.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/KeyEscapeUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/KeyEscapeUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/PooledClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/PooledClass.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactPureComponent = require('./ReactPureComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("development" !== 'production') {
  var canDefineProperty = require('./canDefineProperty');
  var ReactElementValidator = require('./ReactElementValidator');
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if ("development" !== 'production') {
  var warned = false;
  __spread = function __spread() {
    "development" !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function createMixin(mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

// TODO: Fix tests so that this deprecation warning doesn't cause failures.
if ("development" !== 'production') {
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function get() {
        "development" !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });
  }
}

module.exports = React;

},{"./ReactChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactChildren.js","./ReactClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactClass.js","./ReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponent.js","./ReactDOMFactories":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactDOMFactories.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementValidator.js","./ReactPropTypes":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypes.js","./ReactPureComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPureComponent.js","./ReactVersion":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactVersion.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/canDefineProperty.js","./onlyChild":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/onlyChild.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;

  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

},{"./PooledClass":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/PooledClass.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/traverseAllChildren.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactClass.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */

var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function displayName(Constructor, _displayName) {
    Constructor.displayName = _displayName;
  },
  mixins: function mixins(Constructor, _mixins) {
    if (_mixins) {
      for (var i = 0; i < _mixins.length; i++) {
        mixSpecIntoComponent(Constructor, _mixins[i]);
      }
    }
  },
  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, _childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
  },
  contextTypes: function contextTypes(Constructor, _contextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, _contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
    } else {
      Constructor.getDefaultProps = _getDefaultProps;
    }
  },
  propTypes: function propTypes(Constructor, _propTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, _propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
  },
  statics: function statics(Constructor, _statics) {
    mixStaticSpecIntoComponent(Constructor, _statics);
  },
  autobind: function autobind() {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      "development" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if ("development" !== 'production') {
      var typeofSpec = typeof spec === 'undefined' ? 'undefined' : _typeof(spec);
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      "development" !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? "development" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("development" !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("development" !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        "development" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        "development" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function replaceState(newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function isMounted() {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function ReactClassComponent() {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

var didWarnDeprecated = false;

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function createClass(spec) {
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;
      didWarnDeprecated = true;
    }

    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("development" !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("development" !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? "development" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      "development" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function injectMixin(mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;

},{"./ReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponent.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactNoopUpdateQueue.js","./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypeLocationNames.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? "development" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("development" !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function get() {
          "development" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;

},{"./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactNoopUpdateQueue.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/canDefineProperty.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js":[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function setItem(id, item) {
    itemMap.set(id, item);
  };
  getItem = function getItem(id) {
    return itemMap.get(id);
  };
  removeItem = function removeItem(id) {
    itemMap['delete'](id);
  };
  getItemIDs = function getItemIDs() {
    return Array.from(itemMap.keys());
  };

  addRoot = function addRoot(id) {
    rootIDSet.add(id);
  };
  removeRoot = function removeRoot(id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function getRootIDs() {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function getKeyFromID(id) {
    return '.' + id;
  };
  var getIDFromKey = function getIDFromKey(key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function setItem(id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function getItem(id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function removeItem(id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function getItemIDs() {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function addRoot(id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function removeRoot(id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function getRootIDs() {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function _getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  "development" !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function onSetChildren(id, nextChildIDs) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? "development" !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || _typeof(nextChild.element) !== 'object' || nextChild.element == null) ? "development" !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? "development" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? "development" !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function onMountComponent(id) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function onUpdateComponent(id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function onUnmountComponent(id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function purgeUnmountedComponents() {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function isMounted(id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
    var info = '';
    if (topElement) {
      var name = _getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function getStackAddendumByID(id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function getChildIDs(id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function getDisplayName(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return _getDisplayName(element);
  },
  getElement: function getElement(id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function getOwnerID(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function getParentID(id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function getSource(id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function getText(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function getUpdateCount(id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },

  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;

},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */

var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactDOMFactories.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if ("development" !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;

},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementValidator.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function warnAboutAccessingKey() {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function warnAboutAccessingRef() {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if ("development" !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if ("development" !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if ("development" !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;

},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementSymbol.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/canDefineProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementSymbol.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactElementSymbol.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementValidator.js":[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeHook = require('./ReactComponentTreeHook');
var ReactElement = require('./ReactElement');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  "development" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    "development" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function createElement(type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        "development" !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type === 'undefined' ? 'undefined' : _typeof(type), info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function createFactory(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("development" !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function get() {
            "development" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function cloneElement(element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;

},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/canDefineProperty.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/checkReactTypeSpec.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/getIteratorFn.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactNoopUpdateQueue.js":[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function isMounted(publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function enqueueCallback(publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;

},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypeLocationNames.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypes.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _require = require('./ReactElement'),
    isValidElement = _require.isValidElement;

var factory = require('prop-types/factory');

module.exports = factory(isValidElement);

},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","prop-types/factory":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/prop-types/factory.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPureComponent.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;

},{"./ReactComponent":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponent.js","./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactNoopUpdateQueue.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js","object-assign":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactVersion.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/ReactVersion.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/canDefineProperty.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if ("development" !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function get() {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/checkReactTypeSpec.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('./ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('./ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;

}).call(this,require('_process'))
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactComponentTreeHook.js","./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/getIteratorFn.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/getIteratorFn.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/getNextDebugID.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/onlyChild.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? "development" !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;

},{"./ReactElement":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElement.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/lib/reactProdInvariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/traverseAllChildren.js":[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/KeyEscapeUtils.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js":[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable.js":[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactableTable = require('./reactable/table');

var _reactableTr = require('./reactable/tr');

var _reactableTd = require('./reactable/td');

var _reactableTh = require('./reactable/th');

var _reactableTfoot = require('./reactable/tfoot');

var _reactableThead = require('./reactable/thead');

var _reactableSort = require('./reactable/sort');

var _reactableUnsafe = require('./reactable/unsafe');

_react2['default'].Children.children = function (children) {
    return _react2['default'].Children.map(children, function (x) {
        return x;
    }) || [];
};

// Array.prototype.find polyfill - see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function value(predicate) {
            if (this === null) {
                throw new TypeError('Array.prototype.find called on null or undefined');
            }
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }
            var list = Object(this);
            var length = list.length >>> 0;
            var thisArg = arguments[1];
            var value;
            for (var i = 0; i < length; i++) {
                if (i in list) {
                    value = list[i];
                    if (predicate.call(thisArg, value, i, list)) {
                        return value;
                    }
                }
            }
            return undefined;
        }
    });
}

var Reactable = { Table: _reactableTable.Table, Tr: _reactableTr.Tr, Td: _reactableTd.Td, Th: _reactableTh.Th, Tfoot: _reactableTfoot.Tfoot, Thead: _reactableThead.Thead, Sort: _reactableSort.Sort, unsafe: _reactableUnsafe.unsafe };

exports['default'] = Reactable;

if (typeof window !== 'undefined') {
    window.Reactable = Reactable;
}
module.exports = exports['default'];

},{"./reactable/sort":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/sort.js","./reactable/table":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/table.js","./reactable/td":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/td.js","./reactable/tfoot":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tfoot.js","./reactable/th":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/th.js","./reactable/thead":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/thead.js","./reactable/tr":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tr.js","./reactable/unsafe":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/unsafe.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/filterer.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var FiltererInput = function (_React$Component) {
    _inherits(FiltererInput, _React$Component);

    function FiltererInput() {
        _classCallCheck(this, FiltererInput);

        _get(Object.getPrototypeOf(FiltererInput.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(FiltererInput, [{
        key: 'onChange',
        value: function onChange() {
            this.props.onFilter(_reactDom2['default'].findDOMNode(this).value);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement('input', { type: 'text',
                className: this.props.className,
                placeholder: this.props.placeholder,
                value: this.props.value,
                onKeyUp: this.onChange.bind(this),
                onChange: this.onChange.bind(this) });
        }
    }]);

    return FiltererInput;
}(_react2['default'].Component);

exports.FiltererInput = FiltererInput;
;

var Filterer = function (_React$Component2) {
    _inherits(Filterer, _React$Component2);

    function Filterer() {
        _classCallCheck(this, Filterer);

        _get(Object.getPrototypeOf(Filterer.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Filterer, [{
        key: 'render',
        value: function render() {
            if (typeof this.props.colSpan === 'undefined') {
                throw new TypeError('Must pass a colSpan argument to Filterer');
            }

            return _react2['default'].createElement('tr', { className: 'reactable-filterer' }, _react2['default'].createElement('td', { colSpan: this.props.colSpan }, _react2['default'].createElement(FiltererInput, { onFilter: this.props.onFilter,
                value: this.props.value,
                placeholder: this.props.placeholder,
                className: this.props.className ? 'reactable-filter-input ' + this.props.className : 'reactable-filter-input' })));
        }
    }]);

    return Filterer;
}(_react2['default'].Component);

exports.Filterer = Filterer;
;

},{"react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js","react-dom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react-dom/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/extract_data_from.js":[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.extractDataFrom = extractDataFrom;

var _stringable = require('./stringable');

function extractDataFrom(key, column) {
    var value;
    if (typeof key !== 'undefined' && key !== null && key.__reactableMeta === true) {
        value = key.data[column];
    } else {
        value = key[column];
    }

    if (typeof value !== 'undefined' && value !== null && value.__reactableMeta === true) {
        value = typeof value.props.value !== 'undefined' && value.props.value !== null ? value.props.value : value.value;
    }

    return (0, _stringable.stringable)(value) ? value : '';
}

},{"./stringable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/stringable.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.filterPropsFrom = filterPropsFrom;
var internalProps = {
    hideTableHeader: true,
    column: true,
    columns: true,
    sortable: true,
    filterable: true,
    filtering: true,
    onFilter: true,
    filterPlaceholder: true,
    filterClassName: true,
    currentFilter: true,
    sort: true,
    sortBy: true,
    sortableColumns: true,
    onSort: true,
    defaultSort: true,
    defaultSortDescending: true,
    itemsPerPage: true,
    filterBy: true,
    hideFilterInput: true,
    noDataText: true,
    currentPage: true,
    onPageChange: true,
    previousPageLabel: true,
    nextPageLabel: true,
    pageButtonLimit: true,
    childNode: true,
    data: true,
    children: true
};

function filterPropsFrom(baseProps) {
    baseProps = baseProps || {};
    var props = {};
    for (var key in baseProps) {
        if (!(key in internalProps)) {
            props[key] = baseProps[key];
        }
    }

    return props;
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/is_react_component.js":[function(require,module,exports){
// this is a bit hacky - it'd be nice if React exposed an API for this
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.isReactComponent = isReactComponent;

function isReactComponent(thing) {
    return thing !== null && (typeof thing === 'undefined' ? 'undefined' : _typeof(thing)) === 'object' && typeof thing.props !== 'undefined';
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/stringable.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.stringable = stringable;

function stringable(thing) {
    return thing !== null && typeof thing !== 'undefined' && _typeof(thing.toString === 'function');
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/to_array.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.toArray = toArray;

function toArray(obj) {
    var ret = [];
    for (var attr in obj) {
        ret[attr] = obj;
    }

    return ret;
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/paginator.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function pageHref(num) {
    return '#page-' + (num + 1);
}

var Paginator = function (_React$Component) {
    _inherits(Paginator, _React$Component);

    function Paginator() {
        _classCallCheck(this, Paginator);

        _get(Object.getPrototypeOf(Paginator.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Paginator, [{
        key: 'handlePrevious',
        value: function handlePrevious(e) {
            e.preventDefault();
            this.props.onPageChange(this.props.currentPage - 1);
        }
    }, {
        key: 'handleNext',
        value: function handleNext(e) {
            e.preventDefault();
            this.props.onPageChange(this.props.currentPage + 1);
        }
    }, {
        key: 'handlePageButton',
        value: function handlePageButton(page, e) {
            e.preventDefault();
            this.props.onPageChange(page);
        }
    }, {
        key: 'renderPrevious',
        value: function renderPrevious() {
            if (this.props.currentPage > 0) {
                return _react2['default'].createElement('a', { className: 'reactable-previous-page',
                    href: pageHref(this.props.currentPage - 1),
                    onClick: this.handlePrevious.bind(this) }, this.props.previousPageLabel || 'Previous');
            }
        }
    }, {
        key: 'renderNext',
        value: function renderNext() {
            if (this.props.currentPage < this.props.numPages - 1) {
                return _react2['default'].createElement('a', { className: 'reactable-next-page',
                    href: pageHref(this.props.currentPage + 1),
                    onClick: this.handleNext.bind(this) }, this.props.nextPageLabel || 'Next');
            }
        }
    }, {
        key: 'renderPageButton',
        value: function renderPageButton(className, pageNum) {

            return _react2['default'].createElement('a', { className: className,
                key: pageNum,
                href: pageHref(pageNum),
                onClick: this.handlePageButton.bind(this, pageNum) }, pageNum + 1);
        }
    }, {
        key: 'render',
        value: function render() {
            if (typeof this.props.colSpan === 'undefined') {
                throw new TypeError('Must pass a colSpan argument to Paginator');
            }

            if (typeof this.props.numPages === 'undefined') {
                throw new TypeError('Must pass a non-zero numPages argument to Paginator');
            }

            if (typeof this.props.currentPage === 'undefined') {
                throw new TypeError('Must pass a currentPage argument to Paginator');
            }

            var pageButtons = [];
            var pageButtonLimit = this.props.pageButtonLimit;
            var currentPage = this.props.currentPage;
            var numPages = this.props.numPages;
            var lowerHalf = Math.round(pageButtonLimit / 2);
            var upperHalf = pageButtonLimit - lowerHalf;

            for (var i = 0; i < this.props.numPages; i++) {
                var showPageButton = false;
                var pageNum = i;
                var className = "reactable-page-button";
                if (currentPage === i) {
                    className += " reactable-current-page";
                }
                pageButtons.push(this.renderPageButton(className, pageNum));
            }

            if (currentPage - pageButtonLimit + lowerHalf > 0) {
                if (currentPage > numPages - lowerHalf) {
                    pageButtons.splice(0, numPages - pageButtonLimit);
                } else {
                    pageButtons.splice(0, currentPage - pageButtonLimit + lowerHalf);
                }
            }

            if (numPages - currentPage > upperHalf) {
                pageButtons.splice(pageButtonLimit, pageButtons.length - pageButtonLimit);
            }

            return _react2['default'].createElement('tbody', { className: 'reactable-pagination' }, _react2['default'].createElement('tr', null, _react2['default'].createElement('td', { colSpan: this.props.colSpan }, this.renderPrevious(), pageButtons, this.renderNext())));
        }
    }]);

    return Paginator;
}(_react2['default'].Component);

exports.Paginator = Paginator;
;

},{"react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/sort.js":[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
var Sort = {
    Numeric: function Numeric(a, b) {
        var valA = parseFloat(a.toString().replace(/,/g, ''));
        var valB = parseFloat(b.toString().replace(/,/g, ''));

        // Sort non-numeric values alphabetically at the bottom of the list
        if (isNaN(valA) && isNaN(valB)) {
            valA = a;
            valB = b;
        } else {
            if (isNaN(valA)) {
                return 1;
            }
            if (isNaN(valB)) {
                return -1;
            }
        }

        if (valA < valB) {
            return -1;
        }
        if (valA > valB) {
            return 1;
        }

        return 0;
    },

    NumericInteger: function NumericInteger(a, b) {
        if (isNaN(a) || isNaN(b)) {
            return a > b ? 1 : -1;
        }

        return a - b;
    },

    Currency: function Currency(a, b) {
        // Parse out dollar signs, then do a regular numeric sort
        a = a.replace(/[^0-9\.\-\,]+/g, '');
        b = b.replace(/[^0-9\.\-\,]+/g, '');

        return exports.Sort.Numeric(a, b);
    },

    Date: function (_Date) {
        function Date(_x, _x2) {
            return _Date.apply(this, arguments);
        }

        Date.toString = function () {
            return _Date.toString();
        };

        return Date;
    }(function (a, b) {
        // Note: this function tries to do a standard javascript string -> date conversion
        // If you need more control over the date string format, consider using a different
        // date library and writing your own function
        var valA = Date.parse(a);
        var valB = Date.parse(b);

        // Handle non-date values with numeric sort
        // Sort non-numeric values alphabetically at the bottom of the list
        if (isNaN(valA) || isNaN(valB)) {
            return exports.Sort.Numeric(a, b);
        }

        if (valA > valB) {
            return 1;
        }
        if (valB > valA) {
            return -1;
        }

        return 0;
    }),

    CaseInsensitive: function CaseInsensitive(a, b) {
        return a.toLowerCase().localeCompare(b.toLowerCase());
    }
};
exports.Sort = Sort;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/table.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _libFilter_props_from = require('./lib/filter_props_from');

var _libExtract_data_from = require('./lib/extract_data_from');

var _unsafe = require('./unsafe');

var _thead = require('./thead');

var _th = require('./th');

var _tr = require('./tr');

var _tfoot = require('./tfoot');

var _paginator = require('./paginator');

var Table = function (_React$Component) {
    _inherits(Table, _React$Component);

    function Table(props) {
        _classCallCheck(this, Table);

        _get(Object.getPrototypeOf(Table.prototype), 'constructor', this).call(this, props);

        this.state = {
            currentPage: this.props.currentPage ? this.props.currentPage : 0,
            currentSort: {
                column: null,
                direction: this.props.defaultSortDescending ? -1 : 1
            },
            filter: ''
        };

        // Set the state of the current sort to the default sort
        if (props.sortBy !== false || props.defaultSort !== false) {
            var sortingColumn = props.sortBy || props.defaultSort;
            this.state.currentSort = this.getCurrentSort(sortingColumn);
        }
    }

    _createClass(Table, [{
        key: 'filterBy',
        value: function filterBy(filter) {
            this.setState({ filter: filter });
        }

        // Translate a user defined column array to hold column objects if strings are specified
        // (e.g. ['column1'] => [{key: 'column1', label: 'column1'}])
    }, {
        key: 'translateColumnsArray',
        value: function translateColumnsArray(columns) {
            return columns.map(function (column, i) {
                if (typeof column === 'string') {
                    return {
                        key: column,
                        label: column
                    };
                } else {
                    if (typeof column.sortable !== 'undefined') {
                        var sortFunction = column.sortable === true ? 'default' : column.sortable;
                        this._sortable[column.key] = sortFunction;
                    }

                    return column;
                }
            }.bind(this));
        }
    }, {
        key: 'parseChildData',
        value: function parseChildData(props) {
            var data = [],
                tfoot = undefined;

            // Transform any children back to a data array
            if (typeof props.children !== 'undefined') {
                _react2['default'].Children.forEach(props.children, function (child) {
                    if (typeof child === 'undefined' || child === null) {
                        return;
                    }

                    switch (child.type) {
                        case _thead.Thead:
                            break;
                        case _tfoot.Tfoot:
                            if (typeof tfoot !== 'undefined') {
                                console.warn('You can only have one <Tfoot>, but more than one was specified.' + 'Ignoring all but the last one');
                            }
                            tfoot = child;
                            break;
                        case _tr.Tr:
                            var childData = child.props.data || {};

                            _react2['default'].Children.forEach(child.props.children, function (descendant) {
                                // TODO
                                /* if (descendant.type.ConvenienceConstructor === Td) { */
                                if ((typeof descendant === 'undefined' ? 'undefined' : _typeof(descendant)) !== 'object' || descendant == null) {
                                    return;
                                } else if (typeof descendant.props.column !== 'undefined') {
                                    var value = undefined;

                                    if (typeof descendant.props.data !== 'undefined') {
                                        value = descendant.props.data;
                                    } else if (typeof descendant.props.children !== 'undefined') {
                                        value = descendant.props.children;
                                    } else {
                                        console.warn('exports.Td specified without ' + 'a `data` property or children, ' + 'ignoring');
                                        return;
                                    }

                                    childData[descendant.props.column] = {
                                        value: value,
                                        props: (0, _libFilter_props_from.filterPropsFrom)(descendant.props),
                                        __reactableMeta: true
                                    };
                                } else {
                                    console.warn('exports.Td specified without a ' + '`column` property, ignoring');
                                }
                            });

                            data.push({
                                data: childData,
                                props: (0, _libFilter_props_from.filterPropsFrom)(child.props),
                                __reactableMeta: true
                            });
                            break;

                        default:
                            console.warn('The only possible children of <Table> are <Thead>, <Tr>, ' + 'or one <Tfoot>.');
                    }
                }.bind(this));
            }

            return { data: data, tfoot: tfoot };
        }
    }, {
        key: 'initialize',
        value: function initialize(props) {
            this.data = props.data || [];

            var _parseChildData = this.parseChildData(props);

            var data = _parseChildData.data;
            var tfoot = _parseChildData.tfoot;

            this.data = this.data.concat(data);
            this.tfoot = tfoot;

            this.initializeSorts(props);
            this.initializeFilters(props);
        }
    }, {
        key: 'initializeFilters',
        value: function initializeFilters(props) {
            this._filterable = {};
            // Transform filterable properties into a more friendly list
            for (var i in props.filterable) {
                var column = props.filterable[i];
                var columnName = undefined,
                    filterFunction = undefined;

                if (column instanceof Object) {
                    if (typeof column.column !== 'undefined') {
                        columnName = column.column;
                    } else {
                        console.warn('Filterable column specified without column name');
                        continue;
                    }

                    if (typeof column.filterFunction === 'function') {
                        filterFunction = column.filterFunction;
                    } else {
                        filterFunction = 'default';
                    }
                } else {
                    columnName = column;
                    filterFunction = 'default';
                }

                this._filterable[columnName] = filterFunction;
            }
        }
    }, {
        key: 'initializeSorts',
        value: function initializeSorts(props) {
            this._sortable = {};
            // Transform sortable properties into a more friendly list
            for (var i in props.sortable) {
                var column = props.sortable[i];
                var columnName = undefined,
                    sortFunction = undefined;

                if (column instanceof Object) {
                    if (typeof column.column !== 'undefined') {
                        columnName = column.column;
                    } else {
                        console.warn('Sortable column specified without column name');
                        return;
                    }

                    if (typeof column.sortFunction === 'function') {
                        sortFunction = column.sortFunction;
                    } else {
                        sortFunction = 'default';
                    }
                } else {
                    columnName = column;
                    sortFunction = 'default';
                }

                this._sortable[columnName] = sortFunction;
            }
        }
    }, {
        key: 'getCurrentSort',
        value: function getCurrentSort(column) {
            var columnName = undefined,
                sortDirection = undefined;

            if (column instanceof Object) {
                if (typeof column.column !== 'undefined') {
                    columnName = column.column;
                } else {
                    console.warn('Default column specified without column name');
                    return;
                }

                if (typeof column.direction !== 'undefined') {
                    if (column.direction === 1 || column.direction === 'asc') {
                        sortDirection = 1;
                    } else if (column.direction === -1 || column.direction === 'desc') {
                        sortDirection = -1;
                    } else {
                        var defaultDirection = this.props.defaultSortDescending ? 'descending' : 'ascending';

                        console.warn('Invalid default sort specified. Defaulting to ' + defaultDirection);
                        sortDirection = this.props.defaultSortDescending ? -1 : 1;
                    }
                } else {
                    sortDirection = this.props.defaultSortDescending ? -1 : 1;
                }
            } else {
                columnName = column;
                sortDirection = this.props.defaultSortDescending ? -1 : 1;
            }

            return {
                column: columnName,
                direction: sortDirection
            };
        }
    }, {
        key: 'updateCurrentSort',
        value: function updateCurrentSort(sortBy) {
            if (sortBy !== false && sortBy.column !== this.state.currentSort.column && sortBy.direction !== this.state.currentSort.direction) {

                this.setState({ currentSort: this.getCurrentSort(sortBy) });
            }
        }
    }, {
        key: 'updateCurrentPage',
        value: function updateCurrentPage(nextPage) {
            if (typeof nextPage !== 'undefined' && nextPage !== this.state.currentPage) {
                this.setState({ currentPage: nextPage });
            }
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.initialize(this.props);
            this.sortByCurrentSort();
            this.filterBy(this.props.filterBy);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.initialize(nextProps);
            this.updateCurrentPage(nextProps.currentPage);
            this.updateCurrentSort(nextProps.sortBy);
            this.sortByCurrentSort();
            this.filterBy(nextProps.filterBy);
        }
    }, {
        key: 'applyFilter',
        value: function applyFilter(filter, children) {
            // Helper function to apply filter text to a list of table rows
            filter = filter.toLowerCase();
            var matchedChildren = [];

            for (var i = 0; i < children.length; i++) {
                var data = children[i].props.data;

                for (var filterColumn in this._filterable) {
                    if (typeof data[filterColumn] !== 'undefined') {
                        // Default filter
                        if (typeof this._filterable[filterColumn] === 'undefined' || this._filterable[filterColumn] === 'default') {
                            if ((0, _libExtract_data_from.extractDataFrom)(data, filterColumn).toString().toLowerCase().indexOf(filter) > -1) {
                                matchedChildren.push(children[i]);
                                break;
                            }
                        } else {
                            // Apply custom filter
                            if (this._filterable[filterColumn]((0, _libExtract_data_from.extractDataFrom)(data, filterColumn).toString(), filter)) {
                                matchedChildren.push(children[i]);
                                break;
                            }
                        }
                    }
                }
            }

            return matchedChildren;
        }
    }, {
        key: 'sortByCurrentSort',
        value: function sortByCurrentSort() {
            // Apply a sort function according to the current sort in the state.
            // This allows us to perform a default sort even on a non sortable column.
            var currentSort = this.state.currentSort;

            if (currentSort.column === null) {
                return;
            }

            this.data.sort(function (a, b) {
                var keyA = (0, _libExtract_data_from.extractDataFrom)(a, currentSort.column);
                keyA = (0, _unsafe.isUnsafe)(keyA) ? keyA.toString() : keyA || '';
                var keyB = (0, _libExtract_data_from.extractDataFrom)(b, currentSort.column);
                keyB = (0, _unsafe.isUnsafe)(keyB) ? keyB.toString() : keyB || '';

                // Default sort
                if (typeof this._sortable[currentSort.column] === 'undefined' || this._sortable[currentSort.column] === 'default') {

                    // Reverse direction if we're doing a reverse sort
                    if (keyA < keyB) {
                        return -1 * currentSort.direction;
                    }

                    if (keyA > keyB) {
                        return 1 * currentSort.direction;
                    }

                    return 0;
                } else {
                    // Reverse columns if we're doing a reverse sort
                    if (currentSort.direction === 1) {
                        return this._sortable[currentSort.column](keyA, keyB);
                    } else {
                        return this._sortable[currentSort.column](keyB, keyA);
                    }
                }
            }.bind(this));
        }
    }, {
        key: 'onSort',
        value: function onSort(column) {
            // Don't perform sort on unsortable columns
            if (typeof this._sortable[column] === 'undefined') {
                return;
            }

            var currentSort = this.state.currentSort;

            if (currentSort.column === column) {
                currentSort.direction *= -1;
            } else {
                currentSort.column = column;
                currentSort.direction = this.props.defaultSortDescending ? -1 : 1;
            }

            // Set the current sort and pass it to the sort function
            this.setState({ currentSort: currentSort });
            this.sortByCurrentSort();

            if (typeof this.props.onSort === 'function') {
                this.props.onSort(currentSort);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;

            var children = [];
            var columns = undefined;
            var userColumnsSpecified = false;
            var showHeaders = typeof this.props.hideTableHeader === 'undefined';

            var firstChild = null;

            if (this.props.children) {
                if (this.props.children.length > 0 && this.props.children[0] && this.props.children[0].type === _thead.Thead) {
                    firstChild = this.props.children[0];
                } else if (this.props.children.type === _thead.Thead) {
                    firstChild = this.props.children;
                }
            }

            if (firstChild !== null) {
                columns = _thead.Thead.getColumns(firstChild);
            } else {
                columns = this.props.columns || [];
            }

            if (columns.length > 0) {
                userColumnsSpecified = true;
                columns = this.translateColumnsArray(columns);
            }

            // Build up table rows
            if (this.data && typeof this.data.map === 'function') {
                // Build up the columns array
                children = children.concat(this.data.map(function (rawData, i) {
                    var data = rawData;
                    var props = {};
                    if (rawData.__reactableMeta === true) {
                        data = rawData.data;
                        props = rawData.props;
                    }

                    // Loop through the keys in each data row and build a td for it
                    for (var k in data) {
                        if (data.hasOwnProperty(k)) {
                            // Update the columns array with the data's keys if columns were not
                            // already specified
                            if (userColumnsSpecified === false) {
                                (function () {
                                    var column = {
                                        key: k,
                                        label: k
                                    };

                                    // Only add a new column if it doesn't already exist in the columns array
                                    if (columns.find(function (element) {
                                        return element.key === column.key;
                                    }) === undefined) {
                                        columns.push(column);
                                    }
                                })();
                            }
                        }
                    }

                    return _react2['default'].createElement(_tr.Tr, _extends({ columns: columns, key: i, data: data }, props));
                }.bind(this)));
            }

            if (this.props.sortable === true) {
                for (var i = 0; i < columns.length; i++) {
                    this._sortable[columns[i].key] = 'default';
                }
            }

            // Determine if we render the filter box
            var filtering = false;
            if (this.props.filterable && Array.isArray(this.props.filterable) && this.props.filterable.length > 0 && !this.props.hideFilterInput) {
                filtering = true;
            }

            // Apply filters
            var filteredChildren = children;
            if (this.state.filter !== '') {
                filteredChildren = this.applyFilter(this.state.filter, filteredChildren);
            }

            // Determine pagination properties and which columns to display
            var itemsPerPage = 0;
            var pagination = false;
            var numPages = undefined;
            var currentPage = this.state.currentPage;
            var pageButtonLimit = this.props.pageButtonLimit || 10;

            var currentChildren = filteredChildren;
            if (this.props.itemsPerPage > 0) {
                itemsPerPage = this.props.itemsPerPage;
                numPages = Math.ceil(filteredChildren.length / itemsPerPage);

                if (currentPage > numPages - 1) {
                    currentPage = numPages - 1;
                }

                pagination = true;
                currentChildren = filteredChildren.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);
            }

            // Manually transfer props
            var props = (0, _libFilter_props_from.filterPropsFrom)(this.props);

            var noDataText = this.props.noDataText ? _react2['default'].createElement('tr', { className: 'reactable-no-data' }, _react2['default'].createElement('td', { colSpan: columns.length }, this.props.noDataText)) : null;

            var tableHeader = null;
            if (columns && columns.length > 0 && showHeaders) {
                tableHeader = _react2['default'].createElement(_thead.Thead, { columns: columns,
                    filtering: filtering,
                    onFilter: function onFilter(filter) {
                        _this.setState({ filter: filter });
                        if (_this.props.onFilter) {
                            _this.props.onFilter(filter);
                        }
                    },
                    filterPlaceholder: this.props.filterPlaceholder,
                    filterClassName: this.props.filterClassName,
                    currentFilter: this.state.filter,
                    sort: this.state.currentSort,
                    sortableColumns: this._sortable,
                    onSort: this.onSort.bind(this),
                    key: 'thead' });
            }
            return _react2['default'].createElement('table', props, tableHeader, _react2['default'].createElement('tbody', { className: 'reactable-data', key: 'tbody' }, currentChildren.length > 0 ? currentChildren : noDataText), pagination === true ? _react2['default'].createElement(_paginator.Paginator, { colSpan: columns.length,
                pageButtonLimit: pageButtonLimit,
                numPages: numPages,
                currentPage: currentPage,
                onPageChange: function onPageChange(page) {
                    _this.setState({ currentPage: page });
                    if (_this.props.onPageChange) {
                        _this.props.onPageChange(page);
                    }
                },
                previousPageLabel: this.props.previousPageLabel,
                nextPageLabel: this.props.nextPageLabel,
                key: 'paginator' }) : null, this.tfoot);
        }
    }]);

    return Table;
}(_react2['default'].Component);

exports.Table = Table;

Table.defaultProps = {
    sortBy: false,
    defaultSort: false,
    defaultSortDescending: false,
    itemsPerPage: 0,
    filterBy: '',
    hideFilterInput: false
};

},{"./lib/extract_data_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/extract_data_from.js","./lib/filter_props_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js","./paginator":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/paginator.js","./tfoot":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tfoot.js","./th":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/th.js","./thead":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/thead.js","./tr":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tr.js","./unsafe":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/unsafe.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/td.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _libIs_react_component = require('./lib/is_react_component');

var _libStringable = require('./lib/stringable');

var _unsafe = require('./unsafe');

var _libFilter_props_from = require('./lib/filter_props_from');

var Td = function (_React$Component) {
    _inherits(Td, _React$Component);

    function Td() {
        _classCallCheck(this, Td);

        _get(Object.getPrototypeOf(Td.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Td, [{
        key: 'stringifyIfNotReactComponent',
        value: function stringifyIfNotReactComponent(object) {
            if (!(0, _libIs_react_component.isReactComponent)(object) && (0, _libStringable.stringable)(object) && typeof object !== 'undefined') {
                return object.toString();
            }
            return null;
        }
    }, {
        key: 'render',
        value: function render() {
            // Attach any properties on the column to this Td object to allow things like custom event handlers
            var mergedProps = (0, _libFilter_props_from.filterPropsFrom)(this.props);
            if (_typeof(this.props.column) === 'object') {
                for (var key in this.props.column) {
                    if (key !== 'key' && key !== 'name') {
                        mergedProps[key] = this.props.column[key];
                    }
                }
            }
            // handleClick aliases onClick event
            mergedProps.onClick = this.props.handleClick;

            var stringifiedChildProps;

            if (typeof this.props.data === 'undefined') {
                stringifiedChildProps = this.stringifyIfNotReactComponent(this.props.children);
            }

            if ((0, _unsafe.isUnsafe)(this.props.children)) {
                return _react2['default'].createElement('td', _extends({}, mergedProps, {
                    dangerouslySetInnerHTML: { __html: this.props.children.toString() } }));
            } else {
                return _react2['default'].createElement('td', mergedProps, stringifiedChildProps || this.props.children);
            }
        }
    }]);

    return Td;
}(_react2['default'].Component);

exports.Td = Td;
;

},{"./lib/filter_props_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js","./lib/is_react_component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/is_react_component.js","./lib/stringable":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/stringable.js","./unsafe":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/unsafe.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tfoot.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Tfoot = function (_React$Component) {
    _inherits(Tfoot, _React$Component);

    function Tfoot() {
        _classCallCheck(this, Tfoot);

        _get(Object.getPrototypeOf(Tfoot.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Tfoot, [{
        key: 'render',
        value: function render() {
            return _react2['default'].createElement('tfoot', this.props);
        }
    }]);

    return Tfoot;
}(_react2['default'].Component);

exports.Tfoot = Tfoot;

},{"react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/th.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _unsafe = require('./unsafe');

var _libFilter_props_from = require('./lib/filter_props_from');

var Th = function (_React$Component) {
    _inherits(Th, _React$Component);

    function Th() {
        _classCallCheck(this, Th);

        _get(Object.getPrototypeOf(Th.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Th, [{
        key: 'render',
        value: function render() {
            var childProps = undefined;

            if ((0, _unsafe.isUnsafe)(this.props.children)) {
                return _react2['default'].createElement('th', _extends({}, (0, _libFilter_props_from.filterPropsFrom)(this.props), {
                    dangerouslySetInnerHTML: { __html: this.props.children.toString() } }));
            } else {
                return _react2['default'].createElement('th', (0, _libFilter_props_from.filterPropsFrom)(this.props), this.props.children);
            }
        }
    }]);

    return Th;
}(_react2['default'].Component);

exports.Th = Th;
;

},{"./lib/filter_props_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js","./unsafe":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/unsafe.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/thead.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _th = require('./th');

var _filterer = require('./filterer');

var _libFilter_props_from = require('./lib/filter_props_from');

var Thead = function (_React$Component) {
    _inherits(Thead, _React$Component);

    function Thead() {
        _classCallCheck(this, Thead);

        _get(Object.getPrototypeOf(Thead.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Thead, [{
        key: 'handleClickTh',
        value: function handleClickTh(column) {
            this.props.onSort(column.key);
        }
    }, {
        key: 'handleKeyDownTh',
        value: function handleKeyDownTh(column, event) {
            if (event.keyCode === 13) {
                this.props.onSort(column.key);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            // Declare the list of Ths
            var Ths = [];
            for (var index = 0; index < this.props.columns.length; index++) {
                var column = this.props.columns[index];
                var thClass = 'reactable-th-' + column.key.replace(/\s+/g, '-').toLowerCase();
                var sortClass = '';
                var thRole = null;

                if (this.props.sortableColumns[column.key]) {
                    sortClass += 'reactable-header-sortable ';
                    thRole = 'button';
                }

                if (this.props.sort.column === column.key) {
                    sortClass += 'reactable-header-sort';
                    if (this.props.sort.direction === 1) {
                        sortClass += '-asc';
                    } else {
                        sortClass += '-desc';
                    }
                }

                if (sortClass.length > 0) {
                    thClass += ' ' + sortClass;
                }

                if (_typeof(column.props) === 'object' && typeof column.props.className === 'string') {
                    thClass += ' ' + column.props.className;
                }

                Ths.push(_react2['default'].createElement(_th.Th, _extends({}, column.props, {
                    className: thClass,
                    key: index,
                    onClick: this.handleClickTh.bind(this, column),
                    onKeyDown: this.handleKeyDownTh.bind(this, column),
                    role: thRole,
                    tabIndex: '0' }), column.label));
            }

            // Manually transfer props
            var props = (0, _libFilter_props_from.filterPropsFrom)(this.props);

            return _react2['default'].createElement('thead', props, this.props.filtering === true ? _react2['default'].createElement(_filterer.Filterer, {
                colSpan: this.props.columns.length,
                onFilter: this.props.onFilter,
                placeholder: this.props.filterPlaceholder,
                value: this.props.currentFilter,
                className: this.props.filterClassName
            }) : null, _react2['default'].createElement('tr', { className: 'reactable-column-header' }, Ths));
        }
    }], [{
        key: 'getColumns',
        value: function getColumns(component) {
            // Can't use React.Children.map since that doesn't return a proper array
            var columns = [];
            _react2['default'].Children.forEach(component.props.children, function (th) {
                var column = {};
                if (typeof th.props !== 'undefined') {
                    column.props = (0, _libFilter_props_from.filterPropsFrom)(th.props);

                    // use the content as the label & key
                    if (typeof th.props.children !== 'undefined') {
                        column.label = th.props.children;
                        column.key = column.label;
                    }

                    // the key in the column attribute supersedes the one defined previously
                    if (typeof th.props.column === 'string') {
                        column.key = th.props.column;

                        // in case we don't have a label yet
                        if (typeof column.label === 'undefined') {
                            column.label = column.key;
                        }
                    }
                }

                if (typeof column.key === 'undefined') {
                    throw new TypeError('<th> must have either a "column" property or a string ' + 'child');
                } else {
                    columns.push(column);
                }
            });

            return columns;
        }
    }]);

    return Thead;
}(_react2['default'].Component);

exports.Thead = Thead;
;

},{"./filterer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/filterer.js","./lib/filter_props_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js","./th":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/th.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/tr.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);if (parent === null) {
                return undefined;
            } else {
                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
            }
        } else if ('value' in desc) {
            return desc.value;
        } else {
            var getter = desc.get;if (getter === undefined) {
                return undefined;
            }return getter.call(receiver);
        }
    }
};

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
}

function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _td = require('./td');

var _libTo_array = require('./lib/to_array');

var _libFilter_props_from = require('./lib/filter_props_from');

var Tr = function (_React$Component) {
    _inherits(Tr, _React$Component);

    function Tr() {
        _classCallCheck(this, Tr);

        _get(Object.getPrototypeOf(Tr.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Tr, [{
        key: 'render',
        value: function render() {
            var children = (0, _libTo_array.toArray)(_react2['default'].Children.children(this.props.children));

            if (this.props.data && this.props.columns && typeof this.props.columns.map === 'function') {
                if (typeof children.concat === 'undefined') {
                    console.log(children);
                }

                children = children.concat(this.props.columns.map(function (_ref, i) {
                    var _ref$props = _ref.props;
                    var props = _ref$props === undefined ? {} : _ref$props;

                    var column = _objectWithoutProperties(_ref, ['props']);

                    if (this.props.data.hasOwnProperty(column.key)) {
                        var value = this.props.data[column.key];

                        if (typeof value !== 'undefined' && value !== null && value.__reactableMeta === true) {
                            props = value.props;
                            value = value.value;
                        }

                        return _react2['default'].createElement(_td.Td, _extends({ column: column, key: column.key }, props), value);
                    } else {
                        return _react2['default'].createElement(_td.Td, { column: column, key: column.key });
                    }
                }.bind(this)));
            }

            // Manually transfer props
            var props = (0, _libFilter_props_from.filterPropsFrom)(this.props);

            return _react2['default'].DOM.tr(props, children);
        }
    }]);

    return Tr;
}(_react2['default'].Component);

exports.Tr = Tr;
;

Tr.childNode = _td.Td;
Tr.dataType = 'object';

},{"./lib/filter_props_from":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/filter_props_from.js","./lib/to_array":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/lib/to_array.js","./td":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/td.js","react":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/react/react.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/reactable/lib/reactable/unsafe.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

exports.unsafe = unsafe;
exports.isUnsafe = isUnsafe;

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Unsafe = function () {
    function Unsafe(content) {
        _classCallCheck(this, Unsafe);

        this.content = content;
    }

    _createClass(Unsafe, [{
        key: "toString",
        value: function toString() {
            return this.content;
        }
    }]);

    return Unsafe;
}();

function unsafe(str) {
    return new Unsafe(str);
}

;

function isUnsafe(obj) {
    return obj instanceof Unsafe;
}

;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/scrollwatch/dist/ScrollWatch-1.2.0.min.js":[function(require,module,exports){
/*! scrollwatch v1.2.0 | (c) Wed Dec 07 2016 15:19:41 GMT-0500 (EST) Evan Dull <evandull@gmail.com> | License: MIT | https://github.com/edull24/ScrollWatch.git*/
!function(t,i){"function"==typeof define&&define.amd?define([],i):"object"==typeof exports?module.exports=i():t.ScrollWatch=i()}(this,function(){"use strict";var t=0,i={},n={container:window.document.documentElement,watch:"[data-scroll-watch]",watchOnce:!0,inViewClass:"scroll-watch-in-view",ignoreClass:"scroll-watch-ignore",debounce:!1,debounceTriggerLeading:!1,scrollDebounce:250,resizeDebounce:250,scrollThrottle:250,resizeThrottle:250,watchOffset:0,infiniteScroll:!1,infiniteOffset:0,onElementInView:function(){},onElementOutOfView:function(){},onInfiniteXInView:function(){},onInfiniteYInView:function(){}},e="scrollwatchinit",l=function(t){var i,n,e,l=arguments.length;for(t=t||{},i=1;l>i;i++)if(e=arguments[i])for(n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},s=function(t,i,n){var e,l;return i=i||250,function(){var s=n||this,r=+new Date,o=arguments;e&&e+i>r?(window.clearTimeout(l),l=setTimeout(function(){e=r,t.apply(s,o)},i)):(e=r,t.apply(s,o))}},r=function(t,i,n){var e,l,s,r,o,c=function(){var a=(new Date).getTime()-r;i>a&&a>=0?e=setTimeout(c,i-a):(e=null,n||(o=t.apply(s,l),e||(s=l=null)))};return function(){var a=n&&!e;return s=this,l=arguments,r=(new Date).getTime(),e||(e=setTimeout(c,i)),a&&(o=t.apply(s,l),s=l=null),o}},o=function(){S.call(this)||(i[this._id].config.container=document.querySelector(i[this._id].config.container))},c=function(){i[this._id].elements=Array.prototype.slice.call(document.querySelectorAll(i[this._id].config.watch+":not(."+i[this._id].config.ignoreClass+")"))},a=function(){i[this._id].lastScrollPosition=p.call(this)},f=function(t){h.call(this,t),d.call(this,t),t!==e&&a.call(this)},h=function(t){var n,e,l=i[this._id],s=l.elements.length,r=l.config,o=r.inViewClass,c={eventType:t};for(e=0;s>e;e++)n=l.elements[e],c.el=n,"scroll"===t&&(c.direction=_.call(this,x.call(this))),z.call(this,n)?n.classList.contains(o)||(n.classList.add(o),r.onElementInView.call(this,c),r.watchOnce&&(l.elements.splice(e,1),s--,e--,n.classList.add(r.ignoreClass))):n.classList.contains(o)&&(n.classList.remove(o),r.onElementOutOfView.call(this,c))},d=function(t){var n,l,s,r,o,c,a,f=i[this._id],h=f.config;if(h.infiniteScroll&&!f.isInfiniteScrollPaused)for(l=["x","y"],c=["onInfiniteXInView","onInfiniteYInView"],s=h.container,r=m.call(this),o=[s.scrollWidth,s.scrollHeight],a={},n=0;2>n;n++)("scroll"===t&&b.call(this,l[n])||"resize"===t||"refresh"===t||t===e)&&r[l[n]].end+h.infiniteOffset>=o[n]&&(a.eventType=t,"scroll"===t&&(a.direction=_.call(this,l[n])),h[c[n]].call(this,a))},u=function(){var t=i[this._id],n=y.call(this);n.addEventListener("scroll",t.scrollHandler,!1),n.addEventListener("resize",t.resizeHandler,!1)},g=function(){var t=i[this._id],n=y.call(this);n.removeEventListener("scroll",t.scrollHandler),n.removeEventListener("resize",t.resizeHandler)},y=function(){return S.call(this)?window:i[this._id].config.container},w=function(){var t={w:i[this._id].config.container.clientWidth,h:i[this._id].config.container.clientHeight};return t},p=function(){var t,n={};return S.call(this)?(n.left=window.pageXOffset,n.top=window.pageYOffset):(t=i[this._id].config.container,n.left=t.scrollLeft,n.top=t.scrollTop),n},m=function(){var t={x:{},y:{}},i=p.call(this),n=w.call(this);return t.x.start=i.left,t.x.end=t.x.start+n.w,t.x.size=t.x.end-t.x.start,t.y.start=i.top,t.y.end=t.y.start+n.h,t.y.size=t.y.end-t.y.start,t},v=function(t){var n,e={x:{},y:{}},l=m.call(this),s=t.getBoundingClientRect();return S.call(this)?(e.x.start=s.left+l.x.start,e.x.end=s.right+l.x.start,e.y.start=s.top+l.y.start,e.y.end=s.bottom+l.y.start):(n=i[this._id].config.container.getBoundingClientRect(),e.x.start=s.left-n.left+l.x.start,e.x.end=e.x.start+s.width,e.y.start=s.top-n.top+l.y.start,e.y.end=e.y.start+s.height),e.x.size=e.x.end-e.x.start,e.y.size=e.y.end-e.y.start,e},x=function(){return b.call(this,"x")?"x":b.call(this,"y")?"y":void 0},_=function(t){var n={x:["right","left"],y:["down","up"]},e={x:"left",y:"top"},l=i[this._id].lastScrollPosition,s=p.call(this);return s[e[t]]>l[e[t]]?n[t][0]:n[t][1]},b=function(t){var n={x:"left",y:"top"},e=i[this._id].lastScrollPosition,l=p.call(this);return l[n[t]]!==e[n[t]]},z=function(t){var n=m.call(this),e=v.call(this,t),l=i[this._id].config.watchOffset;return I(e,n,l)&&T(e,n,l)},I=function(t,i,n){return t.y.start<i.y.end+n&&t.y.end>i.y.start-n},T=function(t,i,n){return t.x.start<i.x.end+n&&t.x.end>i.x.start-n},S=function(){return i[this._id].config.container===window.document.documentElement},O=function(t){l(i[this._id].config,n,t)},L=function(t){var i=t.type;("resize"===i||b.call(this,"x")||b.call(this,"y"))&&f.call(this,i)},E=function(n){if(!(this instanceof E))return new E(n);var l;Object.defineProperty(this,"_id",{value:t++}),l=i[this._id]={config:{},elements:[],lastScrollPosition:{top:0,left:0},isInfiniteScrollPaused:!1},O.call(this,n),l.config.debounce?(l.scrollHandler=r(L.bind(this),l.config.scrollDebounce,l.config.debounceTriggerLeading),l.resizeHandler=r(L.bind(this),l.config.resizeDebounce,l.config.debounceTriggerLeading)):(l.scrollHandler=s(L.bind(this),l.config.scrollThrottle,this),l.resizeHandler=s(L.bind(this),l.config.resizeThrottle,this)),o.call(this),u.call(this),c.call(this),f.call(this,e)};return E.prototype={refresh:function(){c.call(this),f.call(this,"refresh")},destroy:function(){g.call(this),delete i[this._id]},pauseInfiniteScroll:function(){i[this._id].isInfiniteScrollPaused=!0},resumeInfiniteScroll:function(){i[this._id].isInfiniteScrollPaused=!1}},E});

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/sentence-case/sentence-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');
var upperCaseFirst = require('upper-case-first');

/**
 * Sentence case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return upperCaseFirst(noCase(value, locale), locale);
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js","upper-case-first":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case-first/upper-case-first.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/snake-case/snake-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');

/**
 * Snake case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '_');
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/swap-case/swap-case.js":[function(require,module,exports){
'use strict';

var upperCase = require('upper-case');
var lowerCase = require('lower-case');

/**
 * Swap the case of a string. Manually iterate over every character and check
 * instead of replacing certain characters for better unicode support.
 *
 * @param  {String} str
 * @param  {String} [locale]
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return '';
  }

  var result = '';

  for (var i = 0; i < str.length; i++) {
    var c = str[i];
    var u = upperCase(c, locale);

    result += u === c ? lowerCase(c, locale) : u;
  }

  return result;
};

},{"lower-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/lower-case/lower-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/timers-ext/max-timeout.js":[function(require,module,exports){
'use strict';

module.exports = 2147483647;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/timers-ext/valid-timeout.js":[function(require,module,exports){
'use strict';

var toPosInt = require('es5-ext/number/to-pos-integer'),
    maxTimeout = require('./max-timeout');

module.exports = function (value) {
	value = toPosInt(value);
	if (value > maxTimeout) throw new TypeError(value + " exceeds maximum possible timeout");
	return value;
};

},{"./max-timeout":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/timers-ext/max-timeout.js","es5-ext/number/to-pos-integer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/es5-ext/number/to-pos-integer.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/title-case/title-case.js":[function(require,module,exports){
'use strict';

var noCase = require('no-case');
var upperCase = require('upper-case');

/**
 * Title case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale).replace(/^.| ./g, function (m) {
    return upperCase(m, locale);
  });
};

},{"no-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/no-case/no-case.js","upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js":[function(require,module,exports){
(function (global){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global global, define, System, Reflect, Promise */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var _await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
(function (factory) {
    var root = (typeof global === "undefined" ? "undefined" : _typeof(global)) === "object" ? global : (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" ? self : _typeof(this) === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) {
            factory(createExporter(root, createExporter(exports)));
        });
    } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) === "object" && _typeof(module.exports) === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    } else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        return function (id, v) {
            return exports[id] = previous ? previous(id, v) : v;
        };
    }
})(function (exporter) {
    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
        d.__proto__ = b;
    } || function (d, b) {
        for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
        }
    };

    __extends = function __extends(d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
        }
        return t;
    };

    __rest = function __rest(s, e) {
        var t = {};
        for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
        }if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
        }return t;
    };

    __decorate = function __decorate(decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        }return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function __param(paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };

    __metadata = function __metadata(metadataKey, metadataValue) {
        if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) {
                try {
                    step(generator.next(value));
                } catch (e) {
                    reject(e);
                }
            }
            function rejected(value) {
                try {
                    step(generator["throw"](value));
                } catch (e) {
                    reject(e);
                }
            }
            function step(result) {
                result.done ? resolve(result.value) : new P(function (resolve) {
                    resolve(result.value);
                }).then(fulfilled, rejected);
            }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function __generator(thisArg, body) {
        var _ = { label: 0, sent: function sent() {
                if (t[0] & 1) throw t[1];return t[1];
            }, trys: [], ops: [] },
            f,
            y,
            t,
            g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
            return this;
        }), g;
        function verb(n) {
            return function (v) {
                return step([n, v]);
            };
        }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) {
                try {
                    if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [0, t.value];
                    switch (op[0]) {
                        case 0:case 1:
                            t = op;break;
                        case 4:
                            _.label++;return { value: op[1], done: false };
                        case 5:
                            _.label++;y = op[1];op = [0];continue;
                        case 7:
                            op = _.ops.pop();_.trys.pop();continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;continue;
                            }
                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];t = op;break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];_.ops.push(op);break;
                            }
                            if (t[2]) _.ops.pop();
                            _.trys.pop();continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [6, e];y = 0;
                } finally {
                    f = t = 0;
                }
            }if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function __exportStar(m, exports) {
        for (var p in m) {
            if (!exports.hasOwnProperty(p)) exports[p] = m[p];
        }
    };

    __values = function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator],
            i = 0;
        if (m) return m.call(o);
        return {
            next: function next() {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    };

    __read = function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o),
            r,
            ar = [],
            e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
                ar.push(r.value);
            }
        } catch (error) {
            e = { error: error };
        } finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            } finally {
                if (e) throw e.error;
            }
        }
        return ar;
    };

    __spread = function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++) {
            ar = ar.concat(__read(arguments[i]));
        }return ar;
    };

    _await = function __await(v) {
        return this instanceof _await ? (this.v = v, this) : new _await(v);
    };

    __asyncGenerator = function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []),
            i,
            q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
            return this;
        }, i;
        function verb(n) {
            if (g[n]) i[n] = function (v) {
                return new Promise(function (a, b) {
                    q.push([n, v, a, b]) > 1 || resume(n, v);
                });
            };
        }
        function resume(n, v) {
            try {
                step(g[n](v));
            } catch (e) {
                settle(q[0][3], e);
            }
        }
        function step(r) {
            r.value instanceof _await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
        }
        function fulfill(value) {
            resume("next", value);
        }
        function reject(value) {
            resume("throw", value);
        }
        function settle(f, v) {
            if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
        }
    };

    __asyncDelegator = function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) {
            throw e;
        }), verb("return"), i[Symbol.iterator] = function () {
            return this;
        }, i;
        function verb(n, f) {
            if (o[n]) i[n] = function (v) {
                return (p = !p) ? { value: _await(o[n](v)), done: n === "return" } : f ? f(v) : v;
            };
        }
    };

    __asyncValues = function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator];
        return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__await", _await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case-first/upper-case-first.js":[function(require,module,exports){
'use strict';

var upperCase = require('upper-case');

/**
 * Upper case the first character of a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return '';
  }

  str = String(str);

  return upperCase(str.charAt(0), locale) + str.substr(1);
};

},{"upper-case":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/upper-case/upper-case.js":[function(require,module,exports){
'use strict';

/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /[\u0069]/g,
    map: {
      'i': '\u0130'
    }
  },
  az: {
    regexp: /[\u0069]/g,
    map: {
      'i': '\u0130'
    }
  },
  lt: {
    regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,
    map: {
      'i\u0307': 'I',
      'j\u0307': 'J',
      '\u012F\u0307': '\u012E',
      'i\u0307\u0300': '\xCC',
      'i\u0307\u0301': '\xCD',
      'i\u0307\u0303': '\u0128'
    }
  }
};

/**
 * Upper case a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale];

  str = str == null ? '' : String(str);

  if (lang) {
    str = str.replace(lang.regexp, function (m) {
      return lang.map[m];
    });
  }

  return str.toUpperCase();
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-event-selector/build/vega-event-selector.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (global, factory) {
  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.vega = global.vega || {});
})(undefined, function (exports) {
  'use strict';

  /**
   * Parse an event selector string.
   * Returns an array of event stream definitions.
   */

  var eventSelector = function eventSelector(selector, source, marks) {
    DEFAULT_SOURCE = source || VIEW;
    MARKS = marks || DEFAULT_MARKS;
    return parseMerge(selector.trim()).map(parseSelector);
  };

  var VIEW = 'view';
  var LBRACK = '[';
  var RBRACK = ']';
  var LBRACE = '{';
  var RBRACE = '}';
  var COLON = ':';
  var COMMA = ',';
  var NAME = '@';
  var GT = '>';
  var ILLEGAL = /[[\]{}]/;
  var DEFAULT_SOURCE;
  var MARKS;
  var DEFAULT_MARKS = {
    '*': 1,
    arc: 1,
    area: 1,
    group: 1,
    image: 1,
    line: 1,
    path: 1,
    rect: 1,
    rule: 1,
    shape: 1,
    symbol: 1,
    text: 1,
    trail: 1
  };

  function isMarkType(type) {
    return MARKS.hasOwnProperty(type);
  }

  function find(s, i, endChar, pushChar, popChar) {
    var count = 0,
        n = s.length,
        c;
    for (; i < n; ++i) {
      c = s[i];
      if (!count && c === endChar) return i;else if (popChar && popChar.indexOf(c) >= 0) --count;else if (pushChar && pushChar.indexOf(c) >= 0) ++count;
    }
    return i;
  }

  function parseMerge(s) {
    var output = [],
        start = 0,
        n = s.length,
        i = 0;

    while (i < n) {
      i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);
      output.push(s.substring(start, i).trim());
      start = ++i;
    }

    if (output.length === 0) {
      throw 'Empty event selector: ' + s;
    }
    return output;
  }

  function parseSelector(s) {
    return s[0] === '[' ? parseBetween(s) : parseStream(s);
  }

  function parseBetween(s) {
    var n = s.length,
        i = 1,
        b,
        stream;

    i = find(s, i, RBRACK, LBRACK, RBRACK);
    if (i === n) {
      throw 'Empty between selector: ' + s;
    }

    b = parseMerge(s.substring(1, i));
    if (b.length !== 2) {
      throw 'Between selector must have two elements: ' + s;
    }

    s = s.slice(i + 1).trim();
    if (s[0] !== GT) {
      throw 'Expected \'>\' after between selector: ' + s;
    }

    b = b.map(parseSelector);

    stream = parseSelector(s.slice(1).trim());
    if (stream.between) {
      return {
        between: b,
        stream: stream
      };
    } else {
      stream.between = b;
    }

    return stream;
  }

  function parseStream(s) {
    var stream = { source: DEFAULT_SOURCE },
        source = [],
        throttle = [0, 0],
        markname = 0,
        start = 0,
        n = s.length,
        i = 0,
        j,
        filter;

    // extract throttle from end
    if (s[n - 1] === RBRACE) {
      i = s.lastIndexOf(LBRACE);
      if (i >= 0) {
        try {
          throttle = parseThrottle(s.substring(i + 1, n - 1));
        } catch (e) {
          throw 'Invalid throttle specification: ' + s;
        }
        s = s.slice(0, i).trim();
        n = s.length;
      } else throw 'Unmatched right brace: ' + s;
      i = 0;
    }

    if (!n) throw s;

    // set name flag based on first char
    if (s[0] === NAME) markname = ++i;

    // extract first part of multi-part stream selector
    j = find(s, i, COLON);
    if (j < n) {
      source.push(s.substring(start, j).trim());
      start = i = ++j;
    }

    // extract remaining part of stream selector
    i = find(s, i, LBRACK);
    if (i === n) {
      source.push(s.substring(start, n).trim());
    } else {
      source.push(s.substring(start, i).trim());
      filter = [];
      start = ++i;
      if (start === n) throw 'Unmatched left bracket: ' + s;
    }

    // extract filters
    while (i < n) {
      i = find(s, i, RBRACK);
      if (i === n) throw 'Unmatched left bracket: ' + s;
      filter.push(s.substring(start, i).trim());
      if (i < n - 1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;
      start = ++i;
    }

    // marshall event stream specification
    if (!(n = source.length) || ILLEGAL.test(source[n - 1])) {
      throw 'Invalid event selector: ' + s;
    }

    if (n > 1) {
      stream.type = source[1];
      if (markname) {
        stream.markname = source[0].slice(1);
      } else if (isMarkType(source[0])) {
        stream.marktype = source[0];
      } else {
        stream.source = source[0];
      }
    } else {
      stream.type = source[0];
    }
    if (stream.type.slice(-1) === '!') {
      stream.consume = true;
      stream.type = stream.type.slice(0, -1);
    }
    if (filter != null) stream.filter = filter;
    if (throttle[0]) stream.throttle = throttle[0];
    if (throttle[1]) stream.debounce = throttle[1];

    return stream;
  }

  function parseThrottle(s) {
    var a = s.split(COMMA);
    if (!s.length || a.length > 2) throw s;
    return a.map(function (_) {
      var x = +_;
      if (x !== x) throw s;
      return x;
    });
  }

  exports.selector = eventSelector;

  Object.defineProperty(exports, '__esModule', { value: true });
});

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/package.json":[function(require,module,exports){
module.exports={
  "name": "vega-lite",
  "author": "Jeffrey Heer, Dominik Moritz, Kanit \"Ham\" Wongsuphasawat",
  "version": "2.0.0-rc1",
  "collaborators": [
    "Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)",
    "Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)",
    "Jeffrey Heer <jheer@uw.edu> (http://jheer.org)"
  ],
  "homepage": "https://vega.github.io/vega-lite/",
  "description": "Vega-lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications.",
  "main": "build/src/index.js",
  "types": "typings/vega-lite.d.ts",
  "bin": {
    "vl2png": "./bin/vl2png",
    "vl2svg": "./bin/vl2svg",
    "vl2vg": "./bin/vl2vg"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "pretsc": "mkdir -p build && rm -rf build/*/** && cp package.json build/",
    "tsc": "tsc",
    "prebuild": "mkdir -p build/site build/test-gallery",
    "build": "npm run build:only",
    "build:only": "npm run tsc && cp package.json build && browserify src/index.ts -p tsify -d -s vl | exorcist build/vega-lite.js.map > build/vega-lite.js",
    "postbuild": "node node_modules/uglify-js/bin/uglifyjs build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema",
    "build:examples": "npm run data && npm run build:only && npm run build:examples-only",
    "build:examples-only": "TZ=America/Los_Angeles ./scripts/build-examples.sh && rm -f examples/specs/normalized/*.vl.json && scripts/build-normalized-examples",
    "build:example": "./scripts/build-example.sh",

    "build:toc": "bundle exec jekyll build -q && scripts/generate-toc",
    "build:site": "browserify site/static/main.ts -p [tsify -p site] -d | exorcist build/site/main.js.map > build/site/main.js",
    "build:versions": "scripts/update-version.sh",
    "build:test-gallery": "browserify test-gallery/main.ts -p [tsify -p test-gallery] -d > build/test-gallery/main.js",
    "check:examples": "scripts/check-examples.sh",
    "check:schema": "scripts/check-schema.sh",
    "clean": "rm -rf build && rm -f vega-lite.* & find -E src test site examples -regex '.*\\.(js|js.map|d.ts)' -delete",
    "data": "rsync -r node_modules/vega-datasets/data/* data",
    "link": "npm link && npm link vega-lite",

    "deploy": "scripts/deploy.sh",
    "deploy:gh": "scripts/deploy-gh.sh",
    "deploy:schema": "scripts/deploy-schema.sh",

    "prestart": "npm run data && npm run build && scripts/index-examples",
    "start": "nodemon -x 'npm run build:test-gallery' & browser-sync start --server --files 'build/test-gallery/main.js' --index 'test-gallery/index.html'",
    "poststart": "rm examples/all-examples.json",

    "preschema": "npm run prebuild",
    "schema": "ts-json-schema-generator --path tsconfig.json --type TopLevelExtendedSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/",
    "renameschema": "scripts/rename-schema.sh",
    "presite": "npm run build && npm run data && npm run build:site && npm run build:toc && npm run build:versions",
    "site": "bundle exec jekyll serve",

    "lint": "tslint --project tsconfig.json -c tslint.json --type-check",
    "test": "npm run build:only && npm run test:only && npm run test:runtime && npm run lint",
    "posttest": "npm run schema && npm run data && npm run mocha:examples",
    "test:nocompile": "npm run test:only && npm run test:runtime && npm run lint && npm run mocha:examples",
    "test:only": "nyc --reporter=html --reporter=text-summary npm run mocha:test",
    "test:runtime": "TZ=America/Los_Angeles wdio wdio.conf.js",
    "test:runtime:generate": "rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime",
    "test:debug": "npm run tsc && mocha --recursive --debug-brk --inspect build/test",
    "test:debug-examples": "npm run tsc && npm run schema && mocha --recursive --debug-brk --inspect build/examples",
    "mocha:test": "mocha --require source-map-support/register --reporter dot --recursive build/test",
    "mocha:examples": "mocha --require source-map-support/register --reporter dot --recursive build/examples",

    "codecov": "nyc report --reporter=json && codecov -f coverage/*.json",
    "watch:build": "watchify src/index.ts -p tsify -v -d -s vl -o 'exorcist build/vega-lite.js.map > build/vega-lite.js'",
    "watch:tsc": "npm run tsc -- -w",
    "watch:test": "nodemon -x 'npm test'",
    "watch": "nodemon -x 'npm run build && npm run test:nocompile' # already ran schema in build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vega/vega-lite.git"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/vega/vega-lite/issues"
  },
  "devDependencies": {
    "@types/chai": "^4.0.2",
    "@types/d3": "^4.10.0",
    "@types/highlight.js": "^9.1.9",
    "@types/json-stable-stringify": "^1.0.31",
    "@types/mkdirp": "^0.5.0",
    "@types/mocha": "^2.2.41",
    "@types/node": "^8.0.19",
    "@types/webdriverio": "^4.8.4",
    "ajv": "5.2.2",
    "browser-sync": "^2.18.13",
    "browserify": "^14.4.0",
    "browserify-shim": "^3.8.14",
    "chai": "^4.1.0",
    "cheerio": "^1.0.0-rc.2",
    "chromedriver": "^2.30.1",
    "codecov": "^2.3.0",
    "d3": "^4.10.0",
    "exorcist": "^0.4.0",
    "highlight.js": "^9.12.0",
    "mkdirp": "^0.5.1",
    "mocha": "^3.5.0",
    "nodemon": "^1.11.0",
    "nyc": "^11.1.0",
    "source-map-support": "^0.4.15",
    "ts-json-schema-generator": "^0.12.0",
    "ts-node": "^3.2.1",
    "tsify": "^3.0.1",
    "tslint": "5.4.3",
    "tslint-eslint-rules": "^4.1.1",
    "typescript": "^2.4.2",
    "uglify-js": "^3.0.27",
    "vega": "^3.0.0",
    "vega-datasets": "vega/vega-datasets#gh-pages",
    "vega-embed": "^3.0.0-beta.20",
    "vega-tooltip": "^0.4.2",
    "watchify": "^3.9.0",
    "wdio-chromedriver-service": "^0.1.0",
    "wdio-dot-reporter": "0.0.9",
    "wdio-mocha-framework": "^0.5.10",
    "wdio-static-server-service": "^1.0.1",
    "webdriverio": "^4.8.0",
    "yaml-front-matter": "^3.4.0"
  },
  "dependencies": {
    "json-stable-stringify": "^1.0.1",
    "tslib": "^1.7.1",
    "vega-event-selector": "^2.0.0",
    "vega-util": "^1.5.0",
    "yargs": "^8.0.2"
  }
}

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
var AGGREGATE_OP_INDEX = {
    values: 1,
    count: 1,
    valid: 1,
    missing: 1,
    distinct: 1,
    sum: 1,
    mean: 1,
    average: 1,
    variance: 1,
    variancep: 1,
    stdev: 1,
    stdevp: 1,
    median: 1,
    q1: 1,
    q3: 1,
    ci0: 1,
    ci1: 1,
    min: 1,
    max: 1,
    argmin: 1,
    argmax: 1
};
exports.AGGREGATE_OPS = util_1.flagKeys(AGGREGATE_OP_INDEX);
function isAggregateOp(a) {
    return !!AGGREGATE_OP_INDEX[a];
}
exports.isAggregateOp = isAggregateOp;
exports.COUNTING_OPS = ['count', 'valid', 'missing', 'distinct'];
function isCountingAggregateOp(aggregate) {
    return aggregate && util_1.contains(exports.COUNTING_OPS, aggregate);
}
exports.isCountingAggregateOp = isCountingAggregateOp;
/** Additive-based aggregation operations.  These can be applied to stack. */
exports.SUM_OPS = ['count', 'sum', 'distinct', 'valid', 'missing'];
/**
 * Aggregation operators that always produce values within the range [domainMin, domainMax].
 */
exports.SHARED_DOMAIN_OPS = ['mean', 'average', 'median', 'q1', 'q3', 'min', 'max'];
exports.SHARED_DOMAIN_OP_INDEX = util_1.toSet(exports.SHARED_DOMAIN_OPS);

},{"./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/axis.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A dictionary listing whether a certain axis property is applicable for only main axes or only grid axes.
 * (Properties not listed are applicable for both)
 */
exports.AXIS_PROPERTY_TYPE = {
    grid: 'grid',
    labelOverlap: 'main',
    offset: 'main',
    title: 'main'
};
exports.AXIS_PROPERTIES = ['domain', 'format', 'grid', 'labelPadding', 'labels', 'labelOverlap', 'maxExtent', 'minExtent', 'offset', 'orient', 'position', 'tickCount', 'ticks', 'tickSize', 'title', 'titlePadding', 'values', 'zindex'];
exports.VG_AXIS_PROPERTIES = [].concat(exports.AXIS_PROPERTIES, ['gridScale']);

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/bin.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("./channel");
var util_1 = require("./util");
function binToString(bin) {
    if (util_1.isBoolean(bin)) {
        return 'bin';
    }
    return 'bin' + util_1.keys(bin).map(function (p) {
        return "_" + p + "_" + bin[p];
    }).join('');
}
exports.binToString = binToString;
function autoMaxBins(channel) {
    switch (channel) {
        case channel_1.ROW:
        case channel_1.COLUMN:
        case channel_1.SIZE:
        case channel_1.COLOR:
        case channel_1.OPACITY:
        // Facets and Size shouldn't have too many bins
        // We choose 6 like shape to simplify the rule
        case channel_1.SHAPE:
            return 6; // Vega's "shape" has 6 distinct values
        default:
            return 10;
    }
}
exports.autoMaxBins = autoMaxBins;

},{"./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js":[function(require,module,exports){
"use strict";
/*
 * Constants and utilities for encoding channels (Visual variables)
 * such as 'x', 'y', 'color'.
 */

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var util_1 = require("./util");
var Channel;
(function (Channel) {
    // Facet
    Channel.ROW = 'row';
    Channel.COLUMN = 'column';
    // Position
    Channel.X = 'x';
    Channel.Y = 'y';
    Channel.X2 = 'x2';
    Channel.Y2 = 'y2';
    // Mark property with scale
    Channel.COLOR = 'color';
    Channel.SHAPE = 'shape';
    Channel.SIZE = 'size';
    Channel.OPACITY = 'opacity';
    // Non-scale channel
    Channel.TEXT = 'text';
    Channel.ORDER = 'order';
    Channel.DETAIL = 'detail';
    Channel.TOOLTIP = 'tooltip';
})(Channel = exports.Channel || (exports.Channel = {}));
exports.X = Channel.X;
exports.Y = Channel.Y;
exports.X2 = Channel.X2;
exports.Y2 = Channel.Y2;
exports.ROW = Channel.ROW;
exports.COLUMN = Channel.COLUMN;
exports.SHAPE = Channel.SHAPE;
exports.SIZE = Channel.SIZE;
exports.COLOR = Channel.COLOR;
exports.TEXT = Channel.TEXT;
exports.DETAIL = Channel.DETAIL;
exports.ORDER = Channel.ORDER;
exports.OPACITY = Channel.OPACITY;
exports.TOOLTIP = Channel.TOOLTIP;
var UNIT_CHANNEL_INDEX = {
    x: 1,
    y: 1,
    x2: 1,
    y2: 1,
    size: 1,
    shape: 1,
    color: 1,
    order: 1,
    opacity: 1,
    text: 1,
    detail: 1,
    tooltip: 1
};
var FACET_CHANNEL_INDEX = {
    row: 1,
    column: 1
};
var CHANNEL_INDEX = tslib_1.__assign({}, UNIT_CHANNEL_INDEX, FACET_CHANNEL_INDEX);
exports.CHANNELS = util_1.flagKeys(CHANNEL_INDEX);
var _o = CHANNEL_INDEX.order,
    _d = CHANNEL_INDEX.detail,
    SINGLE_DEF_CHANNEL_INDEX = tslib_1.__rest(CHANNEL_INDEX, ["order", "detail"]);
/**
 * Channels that cannot have an array of channelDef.
 * model.fieldDef, getFieldDef only work for these channels.
 *
 * (The only two channels that can have an array of channelDefs are "detail" and "order".
 * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef
 * are not applicable for them.  Similarly, selection projecttion won't work with "detail" and "order".)
 */
exports.SINGLE_DEF_CHANNELS = util_1.flagKeys(SINGLE_DEF_CHANNEL_INDEX);
function isChannel(str) {
    return !!CHANNEL_INDEX[str];
}
exports.isChannel = isChannel;
// CHANNELS without COLUMN, ROW
exports.UNIT_CHANNELS = util_1.flagKeys(UNIT_CHANNEL_INDEX);
// NONSPATIAL_CHANNELS = UNIT_CHANNELS without X, Y, X2, Y2;
var _x = UNIT_CHANNEL_INDEX.x,
    _y = UNIT_CHANNEL_INDEX.y,

// x2 and y2 share the same scale as x and y
_x2 = UNIT_CHANNEL_INDEX.x2,
    _y2 = UNIT_CHANNEL_INDEX.y2,

// The rest of unit channels then have scale
NONSPATIAL_CHANNEL_INDEX = tslib_1.__rest(UNIT_CHANNEL_INDEX, ["x", "y", "x2", "y2"]);
exports.NONSPATIAL_CHANNELS = util_1.flagKeys(NONSPATIAL_CHANNEL_INDEX);
// SPATIAL_SCALE_CHANNELS = X and Y;
var SPATIAL_SCALE_CHANNEL_INDEX = { x: 1, y: 1 };
exports.SPATIAL_SCALE_CHANNELS = util_1.flagKeys(SPATIAL_SCALE_CHANNEL_INDEX);
// NON_SPATIAL_SCALE_CHANNEL = SCALE_CHANNELS without X, Y
var
// x2 and y2 share the same scale as x and y
// text and tooltip has format instead of scale
_t = NONSPATIAL_CHANNEL_INDEX.text,
    _tt = NONSPATIAL_CHANNEL_INDEX.tooltip,

// detail and order have no scale
_dd = NONSPATIAL_CHANNEL_INDEX.detail,
    _oo = NONSPATIAL_CHANNEL_INDEX.order,
    NONSPATIAL_SCALE_CHANNEL_INDEX = tslib_1.__rest(NONSPATIAL_CHANNEL_INDEX, ["text", "tooltip", "detail", "order"]);
exports.NONSPATIAL_SCALE_CHANNELS = util_1.flagKeys(NONSPATIAL_SCALE_CHANNEL_INDEX);
// Declare SCALE_CHANNEL_INDEX
var SCALE_CHANNEL_INDEX = tslib_1.__assign({}, SPATIAL_SCALE_CHANNEL_INDEX, NONSPATIAL_SCALE_CHANNEL_INDEX);
/** List of channels with scales */
exports.SCALE_CHANNELS = util_1.flagKeys(SCALE_CHANNEL_INDEX);
function isScaleChannel(channel) {
    return !!SCALE_CHANNEL_INDEX[channel];
}
exports.isScaleChannel = isScaleChannel;
/**
 * Return whether a channel supports a particular mark type.
 * @param channel  channel name
 * @param mark the mark type
 * @return whether the mark supports the channel
 */
function supportMark(channel, mark) {
    return mark in getSupportedMark(channel);
}
exports.supportMark = supportMark;
/**
 * Return a dictionary showing whether a channel supports mark type.
 * @param channel
 * @return A dictionary mapping mark types to boolean values.
 */
function getSupportedMark(channel) {
    switch (channel) {
        case exports.X:
        case exports.Y:
        case exports.COLOR:
        case exports.DETAIL:
        case exports.TOOLTIP:
        case exports.ORDER: // TODO: revise (order might not support rect, which is not stackable?)
        case exports.OPACITY:
        case exports.ROW:
        case exports.COLUMN:
            return {
                point: true, tick: true, rule: true, circle: true, square: true,
                bar: true, rect: true, line: true, area: true, text: true
            };
        case exports.X2:
        case exports.Y2:
            return {
                rule: true, bar: true, rect: true, area: true
            };
        case exports.SIZE:
            return {
                point: true, tick: true, rule: true, circle: true, square: true,
                bar: true, text: true, line: true
            };
        case exports.SHAPE:
            return { point: true };
        case exports.TEXT:
            return { text: true };
    }
}
exports.getSupportedMark = getSupportedMark;
function rangeType(channel) {
    switch (channel) {
        case exports.X:
        case exports.Y:
        case exports.SIZE:
        case exports.OPACITY:
        // X2 and Y2 use X and Y scales, so they similarly have continuous range.
        case exports.X2:
        case exports.Y2:
            return 'continuous';
        case exports.ROW:
        case exports.COLUMN:
        case exports.SHAPE:
        // TEXT and TOOLTIP have no scale but have discrete output
        case exports.TEXT:
        case exports.TOOLTIP:
            return 'discrete';
        // Color can be either continuous or discrete, depending on scale type.
        case exports.COLOR:
            return 'flexible';
        // No scale, no range type.
        case exports.DETAIL:
        case exports.ORDER:
            return undefined;
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('getSupportedRole not implemented for ' + channel);
}
exports.rangeType = rangeType;

},{"./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/assemble.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mainAxisReducer = getAxisReducer('main');
var gridAxisReducer = getAxisReducer('grid');
function getAxisReducer(axisType) {
    return function (axes, axis) {
        if (axis[axisType]) {
            // Need to cast here so it's not longer partial type.
            axes.push(axis[axisType].combine());
        }
        return axes;
    };
}
function assembleAxes(axisComponents) {
    return [].concat(axisComponents.x ? [].concat(axisComponents.x.reduce(mainAxisReducer, []), axisComponents.x.reduce(gridAxisReducer, [])) : [], axisComponents.y ? [].concat(axisComponents.y.reduce(mainAxisReducer, []), axisComponents.y.reduce(gridAxisReducer, [])) : []);
}
exports.assembleAxes = assembleAxes;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/component.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var split_1 = require("../split");
var AxisComponentPart = /** @class */function (_super) {
    tslib_1.__extends(AxisComponentPart, _super);
    function AxisComponentPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AxisComponentPart;
}(split_1.Split);
exports.AxisComponentPart = AxisComponentPart;

},{"../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/encode.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var scale_1 = require("../../scale");
var type_1 = require("../../type");
var util_1 = require("../../util");
var common_1 = require("../common");
function labels(model, channel, specifiedLabelsSpec, def) {
    var fieldDef = model.fieldDef(channel) || (channel === 'x' ? model.fieldDef('x2') : channel === 'y' ? model.fieldDef('y2') : undefined);
    var axis = model.axis(channel);
    var config = model.config;
    var labelsSpec = {};
    // Text
    if (fielddef_1.isTimeFieldDef(fieldDef)) {
        var isUTCScale = model.getScaleComponent(channel).get('type') === scale_1.ScaleType.UTC;
        labelsSpec.text = {
            signal: common_1.timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, config.timeFormat, isUTCScale)
        };
    }
    // Label Angle
    var angle = labelAngle(axis, channel, fieldDef);
    if (angle) {
        labelsSpec.angle = { value: angle };
    }
    if (labelsSpec.angle && channel === 'x') {
        var align = labelAlign(angle, def.get('orient'));
        if (align) {
            labelsSpec.align = { value: align };
        }
        // Auto set baseline if x is rotated by 90, or -90
        if (util_1.contains([90, 270], angle)) {
            labelsSpec.baseline = { value: 'middle' };
        }
    }
    labelsSpec = tslib_1.__assign({}, labelsSpec, specifiedLabelsSpec);
    return util_1.keys(labelsSpec).length === 0 ? undefined : labelsSpec;
}
exports.labels = labels;
function labelAngle(axis, channel, fieldDef) {
    if (axis.labelAngle !== undefined) {
        // Make angle within [0,360)
        return (axis.labelAngle % 360 + 360) % 360;
    } else {
        // auto rotate for X
        if (channel === channel_1.X && (util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) || !!fieldDef.bin || fielddef_1.isTimeFieldDef(fieldDef))) {
            return 270;
        }
    }
    return undefined;
}
exports.labelAngle = labelAngle;
function labelAlign(angle, orient) {
    if (angle && angle > 0) {
        if (angle > 180) {
            return orient === 'top' ? 'left' : 'right';
        } else if (angle < 180) {
            return orient === 'top' ? 'right' : 'left';
        }
    }
    return undefined;
}
exports.labelAlign = labelAlign;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/parse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var axis_1 = require("../../axis");
var channel_1 = require("../../channel");
var util_1 = require("../../util");
var common_1 = require("../common");
var resolve_1 = require("../resolve");
var split_1 = require("../split");
var component_1 = require("./component");
var encode = require("./encode");
var properties = require("./properties");
var AXIS_PARTS = ['domain', 'grid', 'labels', 'ticks', 'title'];
function parseUnitAxis(model) {
    return channel_1.SPATIAL_SCALE_CHANNELS.reduce(function (axis, channel) {
        if (model.axis(channel)) {
            var axisComponent = {};
            // TODO: support multiple axis
            var main = parseMainAxis(channel, model);
            if (main && isVisibleAxis(main)) {
                axisComponent.main = main;
            }
            var grid = parseGridAxis(channel, model);
            if (grid && isVisibleAxis(grid)) {
                axisComponent.grid = grid;
            }
            axis[channel] = [axisComponent];
        }
        return axis;
    }, {});
}
exports.parseUnitAxis = parseUnitAxis;
var OPPOSITE_ORIENT = {
    bottom: 'top',
    top: 'bottom',
    left: 'right',
    right: 'left'
};
function parseLayerAxis(model) {
    var _a = model.component,
        axes = _a.axes,
        resolve = _a.resolve;
    var axisCount = { top: 0, bottom: 0, right: 0, left: 0 };
    var _loop_1 = function _loop_1(child) {
        child.parseAxisAndHeader();
        util_1.keys(child.component.axes).forEach(function (channel) {
            resolve.axis[channel] = resolve_1.parseGuideResolve(model.component.resolve, channel);
            if (resolve.axis[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                axes[channel] = mergeAxisComponents(axes[channel], child.component.axes[channel]);
                if (!axes[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the axis shared.
                    // Thus, mark axis as independent and remove the axis component.
                    resolve.axis[channel] = 'independent';
                    delete axes[channel];
                }
            }
        });
    };
    for (var _i = 0, _b = model.children; _i < _b.length; _i++) {
        var child = _b[_i];
        _loop_1(child);
    }
    // Move axes to layer's axis component and merge shared axes
    ['x', 'y'].forEach(function (channel) {
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            if (!child.component.axes[channel]) {
                // skip if the child does not have a particular axis
                continue;
            }
            if (resolve.axis[channel] === 'independent') {
                // If axes are independent, concat the axisComponent array.
                axes[channel] = (axes[channel] || []).concat(child.component.axes[channel]);
                // Automatically adjust orient
                child.component.axes[channel].forEach(function (axisComponent) {
                    var _a = axisComponent.main.getWithExplicit('orient'),
                        orient = _a.value,
                        explicit = _a.explicit;
                    if (axisCount[orient] > 0 && !explicit) {
                        // Change axis orient if the number do not match
                        var oppositeOrient = OPPOSITE_ORIENT[orient];
                        if (axisCount[orient] > axisCount[oppositeOrient]) {
                            axisComponent.main.set('orient', oppositeOrient, false);
                        }
                    }
                    axisCount[orient]++;
                    // TODO(https://github.com/vega/vega-lite/issues/2634): automaticaly add extra offset?
                });
            }
            // After merging, make sure to remove axes from child
            delete child.component.axes[channel];
        }
    });
}
exports.parseLayerAxis = parseLayerAxis;
function mergeAxisComponents(mergedAxisCmpts, childAxisCmpts) {
    if (mergedAxisCmpts) {
        if (mergedAxisCmpts.length !== childAxisCmpts.length) {
            return undefined; // Cannot merge axis component with different number of axes.
        }
        var length_1 = mergedAxisCmpts.length;
        for (var i = 0; i < length_1; i++) {
            var mergedMain = mergedAxisCmpts[i].main;
            var childMain = childAxisCmpts[i].main;
            if (!!mergedMain !== !!childMain) {
                return undefined;
            } else if (mergedMain && childMain) {
                var mergedOrient = mergedMain.getWithExplicit('orient');
                var childOrient = childMain.getWithExplicit('orient');
                if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
                    // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
                    // Cannot merge due to inconsistent orient
                    return undefined;
                } else {
                    mergedAxisCmpts[i].main = mergeAxisComponentPart(mergedMain, childMain);
                }
            }
            var mergedGrid = mergedAxisCmpts[i].grid;
            var childGrid = childAxisCmpts[i].grid;
            if (!!mergedGrid !== !!childGrid) {
                return undefined;
            } else if (mergedGrid && childGrid) {
                mergedAxisCmpts[i].grid = mergeAxisComponentPart(mergedGrid, childGrid);
            }
        }
    } else {
        // For first one, return a copy of the child
        return childAxisCmpts.map(function (axisComponent) {
            return tslib_1.__assign({}, axisComponent.main ? { main: axisComponent.main.clone() } : {}, axisComponent.grid ? { grid: axisComponent.grid.clone() } : {});
        });
    }
    return mergedAxisCmpts;
}
function mergeAxisComponentPart(merged, child) {
    var _loop_2 = function _loop_2(prop) {
        var mergedValueWithExplicit = split_1.mergeValuesWithExplicit(merged.getWithExplicit(prop), child.getWithExplicit(prop), prop, 'axis',
        // Tie breaker function
        function (v1, v2) {
            switch (prop) {
                case 'title':
                    return common_1.titleMerger(v1, v2);
                case 'gridScale':
                    return {
                        explicit: v1.explicit,
                        value: v1.value || v2.value
                    };
            }
            return split_1.defaultTieBreaker(v1, v2, prop, 'axis');
        });
        merged.setWithExplicit(prop, mergedValueWithExplicit);
    };
    for (var _i = 0, VG_AXIS_PROPERTIES_1 = axis_1.VG_AXIS_PROPERTIES; _i < VG_AXIS_PROPERTIES_1.length; _i++) {
        var prop = VG_AXIS_PROPERTIES_1[_i];
        _loop_2(prop);
    }
    return merged;
}
function isFalseOrNull(v) {
    return v === false || v === null;
}
/**
 * Return if an axis is visible (shows at least one part of the axis).
 */
function isVisibleAxis(axis) {
    return util_1.some(AXIS_PARTS, function (part) {
        return hasAxisPart(axis, part);
    });
}
function hasAxisPart(axis, part) {
    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.
    if (part === 'axis') {
        return true;
    }
    if (part === 'grid' || part === 'title') {
        return !!axis.get(part);
    }
    // Other parts are enabled by default, so they should not be false or null.
    return !isFalseOrNull(axis.get(part));
}
/**
 * Make an inner axis for showing grid for shared axis.
 */
function parseGridAxis(channel, model) {
    // FIXME: support adding ticks for grid axis that are inner axes of faceted plots.
    return parseAxis(channel, model, true);
}
exports.parseGridAxis = parseGridAxis;
function parseMainAxis(channel, model) {
    return parseAxis(channel, model, false);
}
exports.parseMainAxis = parseMainAxis;
function parseAxis(channel, model, isGridAxis) {
    var axis = model.axis(channel);
    var axisComponent = new component_1.AxisComponentPart({}, { scale: model.scaleName(channel) } // implicit
    );
    // 1.2. Add properties
    axis_1.AXIS_PROPERTIES.forEach(function (property) {
        var value = getProperty(property, axis, channel, model, isGridAxis);
        if (value !== undefined) {
            var explicit = property === 'values' ? !!axis.values : value === axis[property];
            axisComponent.set(property, value, explicit);
        }
    });
    // Special case for gridScale since gridScale is not a Vega-Lite Axis property.
    var gridScale = properties.gridScale(model, channel, isGridAxis);
    if (gridScale !== undefined) {
        axisComponent.set('gridScale', gridScale, false);
    }
    // 2) Add guide encode definition groups
    var axisEncoding = axis.encoding || {};
    var axisEncode = AXIS_PARTS.reduce(function (e, part) {
        if (!hasAxisPart(axisComponent, part)) {
            // No need to create encode for a disabled part.
            return e;
        }
        var value = part === 'labels' ? encode.labels(model, channel, axisEncoding.labels || {}, axisComponent) : axisEncoding[part] || {};
        if (value !== undefined && util_1.keys(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    // FIXME: By having encode as one property, we won't have fine grained encode merging.
    if (util_1.keys(axisEncode).length > 0) {
        axisComponent.set('encode', axisEncode, !!axis.encoding || !!axis.labelAngle);
    }
    return axisComponent;
}
function getProperty(property, specifiedAxis, channel, model, isGridAxis) {
    var fieldDef = model.fieldDef(channel);
    if (isGridAxis && axis_1.AXIS_PROPERTY_TYPE[property] === 'main' || !isGridAxis && axis_1.AXIS_PROPERTY_TYPE[property] === 'grid') {
        // Do not apply unapplicable properties
        return undefined;
    }
    switch (property) {
        case 'domain':
            return properties.domain(property, specifiedAxis, isGridAxis, channel);
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            return common_1.numberFormat(fieldDef, specifiedAxis.format, model.config);
        case 'grid':
            {
                var scaleType = model.getScaleComponent(channel).get('type');
                return common_1.getSpecifiedOrDefaultValue(specifiedAxis.grid, properties.grid(scaleType, fieldDef));
            }
        case 'labels':
            return isGridAxis ? false : specifiedAxis.labels;
        case 'labelOverlap':
            {
                var scaleType = model.getScaleComponent(channel).get('type');
                return properties.labelOverlap(fieldDef, specifiedAxis, channel, scaleType);
            }
        case 'minExtent':
            {
                return properties.minMaxExtent(specifiedAxis.minExtent, isGridAxis);
            }
        case 'maxExtent':
            {
                return properties.minMaxExtent(specifiedAxis.maxExtent, isGridAxis);
            }
        case 'orient':
            return common_1.getSpecifiedOrDefaultValue(specifiedAxis.orient, properties.orient(channel));
        case 'tickCount':
            {
                var scaleType = model.getScaleComponent(channel).get('type');
                var sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
                var size = sizeType ? model.getSizeSignalRef(sizeType) : undefined;
                return common_1.getSpecifiedOrDefaultValue(specifiedAxis.tickCount, properties.tickCount(channel, fieldDef, scaleType, size));
            }
        case 'ticks':
            return properties.ticks(property, specifiedAxis, isGridAxis, channel);
        case 'title':
            return common_1.getSpecifiedOrDefaultValue(specifiedAxis.title, properties.title(specifiedAxis.titleMaxLength, fieldDef, model.config));
        case 'values':
            return properties.values(specifiedAxis, model, fieldDef);
        case 'zindex':
            return common_1.getSpecifiedOrDefaultValue(specifiedAxis.zindex, properties.zindex(isGridAxis));
    }
    // Otherwise, return specified property.
    return specifiedAxis[property];
}

},{"../../axis":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/axis.js","../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../resolve":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/resolve.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","./component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/component.js","./encode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/encode.js","./properties":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/properties.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/properties.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var datetime_1 = require("../../datetime");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
function domainAndTicks(property, specifiedAxis, isGridAxis, channel) {
    if (isGridAxis) {
        return false;
    }
    return specifiedAxis[property];
}
exports.domainAndTicks = domainAndTicks;
exports.domain = domainAndTicks;
exports.ticks = domainAndTicks;
// TODO: we need to refactor this method after we take care of config refactoring
/**
 * Default rules for whether to show a grid should be shown for a channel.
 * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned
 */
function grid(scaleType, fieldDef) {
    return !scale_1.hasDiscreteDomain(scaleType) && !fieldDef.bin;
}
exports.grid = grid;
function gridScale(model, channel, isGridAxis) {
    if (isGridAxis) {
        var gridChannel = channel === 'x' ? 'y' : 'x';
        if (model.getScaleComponent(gridChannel)) {
            return model.scaleName(gridChannel);
        }
    }
    return undefined;
}
exports.gridScale = gridScale;
function labelOverlap(fieldDef, specifiedAxis, channel, scaleType) {
    // do not prevent overlap for nominal data because there is no way to infer what the missing labels are
    if (fieldDef.type !== 'nominal') {
        if (scaleType === 'log') {
            return 'greedy';
        }
        return true;
    }
    return undefined;
}
exports.labelOverlap = labelOverlap;
function minMaxExtent(specifiedExtent, isGridAxis) {
    if (isGridAxis) {
        // Always return 0 to make sure that `config.axis*.minExtent` and `config.axis*.maxExtent`
        // would not affect gridAxis
        return 0;
    } else {
        return specifiedExtent;
    }
}
exports.minMaxExtent = minMaxExtent;
function orient(channel) {
    switch (channel) {
        case channel_1.X:
            return 'bottom';
        case channel_1.Y:
            return 'left';
    }
    /* istanbul ignore next: This should never happen. */
    throw new Error(log.message.INVALID_CHANNEL_FOR_AXIS);
}
exports.orient = orient;
function tickCount(channel, fieldDef, scaleType, size) {
    if (!scale_1.hasDiscreteDomain(scaleType) && scaleType !== 'log' && !util_1.contains(['month', 'hours', 'day', 'quarter'], fieldDef.timeUnit)) {
        if (fieldDef.bin) {
            // for binned data, we don't want more ticks than maxbins
            return { signal: "min(ceil(" + size.signal + "/40), " + fieldDef.bin.maxbins + ")" };
        }
        return { signal: "ceil(" + size.signal + "/40)" };
    }
    return undefined;
}
exports.tickCount = tickCount;
function title(maxLength, fieldDef, config) {
    // if not defined, automatically determine axis title from field def
    var fieldTitle = fielddef_1.title(fieldDef, config);
    return maxLength ? util_1.truncate(fieldTitle, maxLength) : fieldTitle;
}
exports.title = title;
function values(specifiedAxis, model, fieldDef) {
    var vals = specifiedAxis.values;
    if (specifiedAxis.values && datetime_1.isDateTime(vals[0])) {
        return vals.map(function (dt) {
            // normalize = true as end user won't put 0 = January
            return { signal: datetime_1.dateTimeExpr(dt, true) };
        });
    }
    return vals;
}
exports.values = values;
function zindex(isGridAxis) {
    if (isGridAxis) {
        // if grid is true, need to put layer on the back so that grid is behind marks
        return 0;
    }
    return 1; // otherwise return undefined and use Vega's default.
}
exports.zindex = zindex;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/baseconcat.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var util_1 = require("../util");
var parse_1 = require("./data/parse");
var assemble_1 = require("./layoutsize/assemble");
var model_1 = require("./model");
var BaseConcatModel = /** @class */function (_super) {
    tslib_1.__extends(BaseConcatModel, _super);
    function BaseConcatModel(spec, parent, parentGivenName, config, resolve) {
        return _super.call(this, spec, parent, parentGivenName, config, resolve) || this;
    }
    BaseConcatModel.prototype.parseData = function () {
        this.component.data = parse_1.parseData(this);
        this.children.forEach(function (child) {
            child.parseData();
        });
    };
    BaseConcatModel.prototype.parseSelection = function () {
        var _this = this;
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        var _loop_1 = function _loop_1(child) {
            child.parseSelection();
            util_1.keys(child.component.selection).forEach(function (key) {
                _this.component.selection[key] = child.component.selection[key];
            });
        };
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            _loop_1(child);
        }
    };
    BaseConcatModel.prototype.parseMarkGroup = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseMarkGroup();
        }
    };
    BaseConcatModel.prototype.parseAxisAndHeader = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseAxisAndHeader();
        }
        // TODO(#2415): support shared axes
    };
    BaseConcatModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.children.reduce(function (sg, child) {
            return child.assembleSelectionTopLevelSignals(sg);
        }, signals);
    };
    BaseConcatModel.prototype.assembleSelectionSignals = function () {
        this.children.forEach(function (child) {
            return child.assembleSelectionSignals();
        });
        return [];
    };
    BaseConcatModel.prototype.assembleLayoutSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleLayoutSignals());
        }, assemble_1.assembleLayoutSignals(this));
    };
    BaseConcatModel.prototype.assembleSelectionData = function (data) {
        return this.children.reduce(function (db, child) {
            return child.assembleSelectionData(db);
        }, []);
    };
    BaseConcatModel.prototype.assembleMarks = function () {
        // only children have marks
        return this.children.map(function (child) {
            var title = child.assembleTitle();
            var style = child.assembleGroupStyle();
            var layoutSizeEncodeEntry = child.assembleLayoutSize();
            return tslib_1.__assign({ type: 'group', name: child.getName('group') }, title ? { title: title } : {}, style ? { style: style } : {}, layoutSizeEncodeEntry ? {
                encode: {
                    update: layoutSizeEncodeEntry
                }
            } : {}, child.assembleGroup());
        });
    };
    return BaseConcatModel;
}(model_1.Model);
exports.BaseConcatModel = BaseConcatModel;

},{"../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./data/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/parse.js","./layoutsize/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/assemble.js","./model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/buildmodel.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var log = require("../log");
var spec_1 = require("../spec");
var concat_1 = require("./concat");
var facet_1 = require("./facet");
var layer_1 = require("./layer");
var repeat_1 = require("./repeat");
var unit_1 = require("./unit");
function buildModel(spec, parent, parentGivenName, unitSize, repeater, config) {
    if (spec_1.isFacetSpec(spec)) {
        return new facet_1.FacetModel(spec, parent, parentGivenName, repeater, config);
    }
    if (spec_1.isLayerSpec(spec)) {
        return new layer_1.LayerModel(spec, parent, parentGivenName, unitSize, repeater, config);
    }
    if (spec_1.isUnitSpec(spec)) {
        return new unit_1.UnitModel(spec, parent, parentGivenName, unitSize, repeater, config);
    }
    if (spec_1.isRepeatSpec(spec)) {
        return new repeat_1.RepeatModel(spec, parent, parentGivenName, repeater, config);
    }
    if (spec_1.isConcatSpec(spec)) {
        return new concat_1.ConcatModel(spec, parent, parentGivenName, repeater, config);
    }
    throw new Error(log.message.INVALID_SPEC);
}
exports.buildModel = buildModel;

},{"../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../spec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js","./concat":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/concat.js","./facet":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/facet.js","./layer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layer.js","./repeat":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/repeat.js","./unit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/unit.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../channel");
var fielddef_1 = require("../fielddef");
var scale_1 = require("../scale");
var timeunit_1 = require("../timeunit");
var type_1 = require("../type");
var util_1 = require("../util");
function applyConfig(e, config, // TODO(#1842): consolidate MarkConfig | TextConfig?
propsList) {
    for (var _i = 0, propsList_1 = propsList; _i < propsList_1.length; _i++) {
        var property = propsList_1[_i];
        var value = config[property];
        if (value !== undefined) {
            e[property] = { value: value };
        }
    }
    return e;
}
exports.applyConfig = applyConfig;
function applyMarkConfig(e, model, propsList) {
    for (var _i = 0, propsList_2 = propsList; _i < propsList_2.length; _i++) {
        var property = propsList_2[_i];
        var value = getMarkConfig(property, model.markDef, model.config);
        if (value !== undefined) {
            e[property] = { value: value };
        }
    }
    return e;
}
exports.applyMarkConfig = applyMarkConfig;
function getStyles(mark) {
    if (mark.style) {
        return util_1.isArray(mark.style) ? mark.style : [mark.style];
    }
    return [mark.type];
}
exports.getStyles = getStyles;
/**
 * Return value mark specific config property if exists.
 * Otherwise, return general mark specific config.
 */
function getMarkConfig(prop, mark, config) {
    // By default, read from mark config first!
    var value = config.mark[prop];
    // Then read mark specific config, which has higher precedence
    var markSpecificConfig = config[mark.type];
    if (markSpecificConfig[prop] !== undefined) {
        value = markSpecificConfig[prop];
    }
    var styles = getStyles(mark);
    for (var _i = 0, styles_1 = styles; _i < styles_1.length; _i++) {
        var style = styles_1[_i];
        var styleConfig = config.style[style];
        // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style
        // However here we also check if it is defined, so it is okay to cast here
        var p = prop;
        if (styleConfig && styleConfig[p] !== undefined) {
            value = styleConfig[p];
        }
    }
    return value;
}
exports.getMarkConfig = getMarkConfig;
function formatSignalRef(fieldDef, specifiedFormat, expr, config) {
    var format = numberFormat(fieldDef, specifiedFormat, config);
    if (fieldDef.bin) {
        var startField = fielddef_1.field(fieldDef, { expr: expr });
        var endField = fielddef_1.field(fieldDef, { expr: expr, binSuffix: 'end' });
        return {
            signal: binFormatExpression(startField, endField, format, config)
        };
    } else if (fieldDef.type === 'quantitative') {
        return {
            signal: "" + formatExpr(fielddef_1.field(fieldDef, { expr: expr }), format)
        };
    } else if (fielddef_1.isTimeFieldDef(fieldDef)) {
        var isUTCScale = fielddef_1.isScaleFieldDef(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === scale_1.ScaleType.UTC;
        return {
            signal: timeFormatExpression(fielddef_1.field(fieldDef, { expr: expr }), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale)
        };
    } else {
        return {
            signal: "''+" + fielddef_1.field(fieldDef, { expr: expr })
        };
    }
}
exports.formatSignalRef = formatSignalRef;
function getSpecifiedOrDefaultValue(specifiedValue, defaultValue) {
    if (specifiedValue !== undefined) {
        return specifiedValue;
    }
    return defaultValue;
}
exports.getSpecifiedOrDefaultValue = getSpecifiedOrDefaultValue;
/**
 * Returns number format for a fieldDef
 *
 * @param format explicitly specified format
 */
function numberFormat(fieldDef, specifiedFormat, config) {
    if (fieldDef.type === type_1.QUANTITATIVE) {
        // add number format for quantitative type only
        // Specified format in axis/legend has higher precedence than fieldDef.format
        if (specifiedFormat) {
            return specifiedFormat;
        }
        // TODO: need to make this work correctly for numeric ordinal / nominal type
        return config.numberFormat;
    }
    return undefined;
}
exports.numberFormat = numberFormat;
function formatExpr(field, format) {
    return "format(" + field + ", \"" + (format || '') + "\")";
}
function numberFormatExpr(field, specifiedFormat, config) {
    return formatExpr(field, specifiedFormat || config.numberFormat);
}
exports.numberFormatExpr = numberFormatExpr;
function binFormatExpression(startField, endField, format, config) {
    return startField + " === null || isNaN(" + startField + ") ? \"null\" : " + numberFormatExpr(startField, format, config) + " + \" - \" + " + numberFormatExpr(endField, format, config);
}
exports.binFormatExpression = binFormatExpression;
/**
 * Returns the time expression used for axis/legend labels or text mark for a temporal field
 */
function timeFormatExpression(field, timeUnit, format, shortTimeLabels, timeFormatConfig, isUTCScale) {
    if (!timeUnit || format) {
        // If there is not time unit, or if user explicitly specify format for axis/legend/text.
        var _format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.
        if (isUTCScale) {
            return "utcFormat(" + field + ", '" + _format + "')";
        } else {
            return "timeFormat(" + field + ", '" + _format + "')";
        }
    } else {
        return timeunit_1.formatExpression(timeUnit, field, shortTimeLabels, isUTCScale);
    }
}
exports.timeFormatExpression = timeFormatExpression;
/**
 * Return Vega sort parameters (tuple of field and order).
 */
function sortParams(orderDef, fieldRefOption) {
    return (util_1.isArray(orderDef) ? orderDef : [orderDef]).reduce(function (s, orderChannelDef) {
        s.field.push(fielddef_1.field(orderChannelDef, fieldRefOption));
        s.order.push(orderChannelDef.sort || 'ascending');
        return s;
    }, { field: [], order: [] });
}
exports.sortParams = sortParams;
function titleMerger(v1, v2) {
    return {
        explicit: v1.explicit,
        value: v1.value === v2.value ? v1.value : v1.value + ', ' + v2.value // join title with comma if different
    };
}
exports.titleMerger = titleMerger;
/**
 * Checks whether a fieldDef for a particular channel requires a computed bin range.
 */
function binRequiresRange(fieldDef, channel) {
    if (!fieldDef.bin) {
        console.warn('Only use this method with binned field defs');
        return false;
    }
    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.
    // We could check whether the axis or legend exists (not disabled) but that seems overkill.
    return channel_1.isScaleChannel(channel) && util_1.contains(['ordinal', 'nominal'], fieldDef.type);
}
exports.binRequiresRange = binRequiresRange;

},{"../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/compile.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * Module for compiling Vega-lite spec into Vega spec.
 */
var config_1 = require("../config");
var log = require("../log");
var spec_1 = require("../spec");
var toplevelprops_1 = require("../toplevelprops");
var buildmodel_1 = require("./buildmodel");
var assemble_1 = require("./data/assemble");
var optimize_1 = require("./data/optimize");
function compile(inputSpec, logger) {
    if (logger) {
        // set the singleton logger to the provided logger
        log.set(logger);
    }
    try {
        // 1. initialize config
        var config = config_1.initConfig(inputSpec.config);
        // 2. Convert input spec into a normalized form
        // (Decompose all extended unit specs into composition of unit spec.)
        var spec = spec_1.normalize(inputSpec, config);
        // 3. Instantiate the models with default config by doing a top-down traversal.
        // This allows us to pass properties that child models derive from their parents via their constructors.
        var model = buildmodel_1.buildModel(spec, null, '', undefined, undefined, config);
        // 4. Parse parts of each model to produce components that can be merged
        // and assembled easily as a part of a model.
        // In this phase, we do a bottom-up traversal over the whole tree to
        // parse for each type of components once (e.g., data, layout, mark, scale).
        // By doing bottom-up traversal, we start parsing components of unit specs and
        // then merge child components of parent composite specs.
        //
        // Please see inside model.parse() for order of different components parsed.
        model.parse();
        // 5. Optimize the datafow.
        optimize_1.optimizeDataflow(model.component.data);
        // 6. Assemble a Vega Spec from the parsed components.
        return assembleTopLevelModel(model, getTopLevelProperties(inputSpec, config));
    } finally {
        // Reset the singleton logger if a logger is provided
        if (logger) {
            log.reset();
        }
    }
}
exports.compile = compile;
function getTopLevelProperties(topLevelSpec, config) {
    return tslib_1.__assign({}, toplevelprops_1.extractTopLevelProperties(config), toplevelprops_1.extractTopLevelProperties(topLevelSpec));
}
/*
 * Assemble the top-level model.
 *
 * Note: this couldn't be `model.assemble()` since the top-level model
 * needs some special treatment to generate top-level properties.
 */
function assembleTopLevelModel(model, topLevelProperties) {
    // TODO: change type to become VgSpec
    // Config with Vega-Lite only config removed.
    var vgConfig = model.config ? config_1.stripAndRedirectConfig(model.config) : undefined;
    // autoResize has to be put under autosize
    var autoResize = topLevelProperties.autoResize,
        topLevelProps = tslib_1.__rest(topLevelProperties, ["autoResize"]);
    var title = model.assembleTitle();
    var style = model.assembleGroupStyle();
    var output = tslib_1.__assign({ $schema: 'https://vega.github.io/schema/vega/v3.0.json' }, model.description ? { description: model.description } : {}, {
        // By using Vega layout, we don't support custom autosize
        autosize: topLevelProperties.autoResize ? { type: 'pad', resize: true } : 'pad' }, topLevelProps, title ? { title: title } : {}, style ? { style: style } : {}, { data: [].concat(model.assembleSelectionData([]),
        // only assemble data in the root
        assemble_1.assembleRootData(model.component.data)) }, model.assembleGroup(model.assembleLayoutSignals().concat(model.assembleSelectionTopLevelSignals([]))), vgConfig ? { config: vgConfig } : {});
    return {
        spec: output
        // TODO: add warning / errors here
    };
}

},{"../config":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/config.js","../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../spec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js","../toplevelprops":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/toplevelprops.js","./buildmodel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/buildmodel.js","./data/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/assemble.js","./data/optimize":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/optimize.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/concat.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var spec_1 = require("../spec");
var baseconcat_1 = require("./baseconcat");
var buildmodel_1 = require("./buildmodel");
var parse_1 = require("./layoutsize/parse");
var ConcatModel = /** @class */function (_super) {
    tslib_1.__extends(ConcatModel, _super);
    function ConcatModel(spec, parent, parentGivenName, repeater, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, spec.resolve) || this;
        _this.type = 'concat';
        _this.isVConcat = spec_1.isVConcatSpec(spec);
        _this.children = (spec_1.isVConcatSpec(spec) ? spec.vconcat : spec.hconcat).map(function (child, i) {
            return buildmodel_1.buildModel(child, _this, _this.getName('concat_' + i), undefined, repeater, config);
        });
        return _this;
    }
    ConcatModel.prototype.parseLayoutSize = function () {
        parse_1.parseConcatLayoutSize(this);
    };
    ConcatModel.prototype.parseAxisGroup = function () {
        return null;
    };
    ConcatModel.prototype.assembleLayout = function () {
        // TODO: allow customization
        return tslib_1.__assign({ padding: { row: 10, column: 10 }, offset: 10 }, this.isVConcat ? { columns: 1 } : {}, { bounds: 'full',
            // Use align each so it can work with multiple plots with different size
            align: 'each' });
    };
    return ConcatModel;
}(baseconcat_1.BaseConcatModel);
exports.ConcatModel = ConcatModel;

},{"../spec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js","./baseconcat":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/baseconcat.js","./buildmodel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/buildmodel.js","./layoutsize/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/aggregate.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var util_1 = require("../../util");
var common_1 = require("../common");
var dataflow_1 = require("./dataflow");
function addDimension(dims, channel, fieldDef) {
    if (fieldDef.bin) {
        dims[fielddef_1.field(fieldDef, {})] = true;
        dims[fielddef_1.field(fieldDef, { binSuffix: 'end' })] = true;
        if (common_1.binRequiresRange(fieldDef, channel)) {
            dims[fielddef_1.field(fieldDef, { binSuffix: 'range' })] = true;
        }
    } else {
        dims[fielddef_1.field(fieldDef)] = true;
    }
    return dims;
}
function mergeMeasures(parentMeasures, childMeasures) {
    for (var f in childMeasures) {
        if (childMeasures.hasOwnProperty(f)) {
            // when we merge a measure, we either have to add an aggregation operator or even a new field
            var ops = childMeasures[f];
            for (var op in ops) {
                if (ops.hasOwnProperty(op)) {
                    if (f in parentMeasures) {
                        // add operator to existing measure field
                        parentMeasures[f][op] = ops[op];
                    } else {
                        parentMeasures[f] = { op: ops[op] };
                    }
                }
            }
        }
    }
}
var AggregateNode = /** @class */function (_super) {
    tslib_1.__extends(AggregateNode, _super);
    /**
     * @param dimensions string set for dimensions
     * @param measures dictionary mapping field name => dict of aggregation functions and names to use
     */
    function AggregateNode(dimensions, measures) {
        var _this = _super.call(this) || this;
        _this.dimensions = dimensions;
        _this.measures = measures;
        return _this;
    }
    AggregateNode.prototype.clone = function () {
        return new AggregateNode(tslib_1.__assign({}, this.dimensions), util_1.duplicate(this.measures));
    };
    AggregateNode.makeFromEncoding = function (model) {
        var isAggregate = false;
        model.forEachFieldDef(function (fd) {
            if (fd.aggregate) {
                isAggregate = true;
            }
        });
        var meas = {};
        var dims = {};
        if (!isAggregate) {
            // no need to create this node if the model has no aggregation
            return null;
        }
        model.forEachFieldDef(function (fieldDef, channel) {
            if (fieldDef.aggregate) {
                if (fieldDef.aggregate === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = fielddef_1.field(fieldDef, { aggregate: 'count' });
                } else {
                    meas[fieldDef.field] = meas[fieldDef.field] || {};
                    meas[fieldDef.field][fieldDef.aggregate] = fielddef_1.field(fieldDef);
                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain
                    if (channel_1.isScaleChannel(channel) && model.scaleDomain(channel) === 'unaggregated') {
                        meas[fieldDef.field]['min'] = fielddef_1.field(fieldDef, { aggregate: 'min' });
                        meas[fieldDef.field]['max'] = fielddef_1.field(fieldDef, { aggregate: 'max' });
                    }
                }
            } else {
                addDimension(dims, channel, fieldDef);
            }
        });
        if (util_1.keys(dims).length + util_1.keys(meas).length === 0) {
            return null;
        }
        return new AggregateNode(dims, meas);
    };
    AggregateNode.makeFromTransform = function (t) {
        var dims = {};
        var meas = {};
        for (var _i = 0, _a = t.summarize; _i < _a.length; _i++) {
            var s = _a[_i];
            if (s.aggregate) {
                if (s.aggregate === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = s.as || fielddef_1.field(s);
                } else {
                    meas[s.field] = meas[s.field] || {};
                    meas[s.field][s.aggregate] = s.as || fielddef_1.field(s);
                }
            }
        }
        for (var _b = 0, _c = t.groupby; _b < _c.length; _b++) {
            var s = _c[_b];
            dims[s] = true;
        }
        if (util_1.keys(dims).length + util_1.keys(meas).length === 0) {
            return null;
        }
        return new AggregateNode(dims, meas);
    };
    AggregateNode.prototype.merge = function (other) {
        if (!util_1.differ(this.dimensions, other.dimensions)) {
            mergeMeasures(this.measures, other.measures);
            other.remove();
        } else {
            log.debug('different dimensions, cannot merge');
        }
    };
    AggregateNode.prototype.addDimensions = function (fields) {
        var _this = this;
        fields.forEach(function (f) {
            return _this.dimensions[f] = true;
        });
    };
    AggregateNode.prototype.dependentFields = function () {
        var out = {};
        util_1.keys(this.dimensions).forEach(function (f) {
            return out[f] = true;
        });
        util_1.keys(this.measures).forEach(function (m) {
            return out[m] = true;
        });
        return out;
    };
    AggregateNode.prototype.producedFields = function () {
        var _this = this;
        var out = {};
        util_1.keys(this.measures).forEach(function (field) {
            util_1.keys(_this.measures[field]).forEach(function (op) {
                out[op + "_" + field] = true;
            });
        });
        return out;
    };
    AggregateNode.prototype.assemble = function () {
        var _this = this;
        var ops = [];
        var fields = [];
        var as = [];
        util_1.keys(this.measures).forEach(function (field) {
            util_1.keys(_this.measures[field]).forEach(function (op) {
                as.push(_this.measures[field][op]);
                ops.push(op);
                fields.push(field);
            });
        });
        var result = {
            type: 'aggregate',
            groupby: util_1.keys(this.dimensions),
            ops: ops,
            fields: fields,
            as: as
        };
        return result;
    };
    return AggregateNode;
}(dataflow_1.DataFlowNode);
exports.AggregateNode = AggregateNode;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/assemble.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var data_1 = require("../../data");
var util_1 = require("../../util");
var aggregate_1 = require("./aggregate");
var bin_1 = require("./bin");
var calculate_1 = require("./calculate");
var dataflow_1 = require("./dataflow");
var facet_1 = require("./facet");
var filter_1 = require("./filter");
var formatparse_1 = require("./formatparse");
var indentifier_1 = require("./indentifier");
var lookup_1 = require("./lookup");
var nonpositivefilter_1 = require("./nonpositivefilter");
var nullfilter_1 = require("./nullfilter");
var source_1 = require("./source");
var stack_1 = require("./stack");
var timeunit_1 = require("./timeunit");
/**
 * Print debug information for dataflow tree.
 */
// tslint:disable-next-line
function debug(node) {
    console.log("" + node.constructor.name + (node.debugName ? " (" + node.debugName + ")" : '') + " -> " + node.children.map(function (c) {
        return "" + c.constructor.name + (c.debugName ? " (" + c.debugName + ")" : '');
    }));
    console.log(node);
    node.children.forEach(debug);
}
function makeWalkTree(data) {
    // to name datasources
    var datasetIndex = 0;
    /**
     * Recursively walk down the tree.
     */
    function walkTree(node, dataSource) {
        if (node instanceof source_1.SourceNode) {
            // If the source is a named data source or a data source with values, we need
            // to put it in a different data source. Otherwise, Vega may override the data.
            if (!data_1.isUrlData(node.data)) {
                data.push(dataSource);
                var newData = {
                    name: null,
                    source: dataSource.name,
                    transform: []
                };
                dataSource = newData;
            }
        }
        if (node instanceof formatparse_1.ParseNode) {
            if (node.parent instanceof source_1.SourceNode && !dataSource.source) {
                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse
                dataSource.format = tslib_1.__assign({}, dataSource.format || {}, { parse: node.assembleFormatParse() });
            } else {
                // Otherwise use Vega expression to parse
                dataSource.transform = dataSource.transform.concat(node.assembleTransforms());
            }
        }
        if (node instanceof facet_1.FacetNode) {
            if (!dataSource.name) {
                dataSource.name = "data_" + datasetIndex++;
            }
            if (!dataSource.source || dataSource.transform.length > 0) {
                data.push(dataSource);
                node.data = dataSource.name;
            } else {
                node.data = dataSource.source;
            }
            node.assemble().forEach(function (d) {
                return data.push(d);
            });
            // break here because the rest of the tree has to be taken care of by the facet.
            return;
        }
        if (node instanceof filter_1.FilterNode || node instanceof nullfilter_1.NullFilterNode || node instanceof calculate_1.CalculateNode || node instanceof aggregate_1.AggregateNode || node instanceof lookup_1.LookupNode || node instanceof indentifier_1.IdentifierNode) {
            dataSource.transform.push(node.assemble());
        }
        if (node instanceof nonpositivefilter_1.NonPositiveFilterNode || node instanceof bin_1.BinNode || node instanceof timeunit_1.TimeUnitNode || node instanceof stack_1.StackNode) {
            dataSource.transform = dataSource.transform.concat(node.assemble());
        }
        if (node instanceof aggregate_1.AggregateNode) {
            if (!dataSource.name) {
                dataSource.name = "data_" + datasetIndex++;
            }
        }
        if (node instanceof dataflow_1.OutputNode) {
            if (dataSource.source && dataSource.transform.length === 0) {
                node.setSource(dataSource.source);
            } else if (node.parent instanceof dataflow_1.OutputNode) {
                // Note that an output node may be required but we still do not assemble a
                // separate data source for it.
                node.setSource(dataSource.name);
            } else {
                if (!dataSource.name) {
                    dataSource.name = "data_" + datasetIndex++;
                }
                // Here we set the name of the datasource we generated. From now on
                // other assemblers can use it.
                node.setSource(dataSource.name);
                // if this node has more than one child, we will add a datasource automatically
                if (node.numChildren() === 1) {
                    data.push(dataSource);
                    var newData = {
                        name: null,
                        source: dataSource.name,
                        transform: []
                    };
                    dataSource = newData;
                }
            }
        }
        switch (node.numChildren()) {
            case 0:
                // done
                if (node instanceof dataflow_1.OutputNode && (!dataSource.source || dataSource.transform.length > 0)) {
                    // do not push empty datasources that are simply references
                    data.push(dataSource);
                }
                break;
            case 1:
                walkTree(node.children[0], dataSource);
                break;
            default:
                if (!dataSource.name) {
                    dataSource.name = "data_" + datasetIndex++;
                }
                var source_2 = dataSource.name;
                if (!dataSource.source || dataSource.transform.length > 0) {
                    data.push(dataSource);
                } else {
                    source_2 = dataSource.source;
                }
                node.children.forEach(function (child) {
                    var newData = {
                        name: null,
                        source: source_2,
                        transform: []
                    };
                    walkTree(child, newData);
                });
                break;
        }
    }
    return walkTree;
}
/**
 * Assemble data sources that are derived from faceted data.
 */
function assembleFacetData(root) {
    var data = [];
    var walkTree = makeWalkTree(data);
    root.children.forEach(function (child) {
        return walkTree(child, {
            source: root.name,
            name: null,
            transform: []
        });
    });
    return data;
}
exports.assembleFacetData = assembleFacetData;
/**
 * Create Vega Data array from a given compiled model and append all of them to the given array
 *
 * @param  model
 * @param  data array
 * @return modified data array
 */
function assembleRootData(dataComponent) {
    var roots = util_1.vals(dataComponent.sources);
    var data = [];
    // roots.forEach(debug);
    var walkTree = makeWalkTree(data);
    var sourceIndex = 0;
    roots.forEach(function (root) {
        // assign a name if the source does not have a name yet
        if (!root.hasName()) {
            root.dataName = "source_" + sourceIndex++;
        }
        var newData = root.assemble();
        walkTree(root, newData);
    });
    // remove empty transform arrays for cleaner output
    data.forEach(function (d) {
        if (d.transform.length === 0) {
            delete d.transform;
        }
    });
    // move sources without transforms (the ones that are potentially used in lookups) to the beginning
    data.sort(function (a, b) {
        return (a.transform || []).length === 0 ? -1 : (b.transform || []).length === 0 ? 1 : 0;
    });
    // now fix the from references in lookup transforms
    for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
        var d = data_2[_i];
        for (var _a = 0, _b = d.transform || []; _a < _b.length; _a++) {
            var t = _b[_a];
            if (t.type === 'lookup') {
                t.from = dataComponent.outputNodes[t.from].getSource();
            }
        }
    }
    return data;
}
exports.assembleRootData = assembleRootData;

},{"../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/aggregate.js","./bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/bin.js","./calculate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/calculate.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","./facet":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/facet.js","./filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/filter.js","./formatparse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/formatparse.js","./indentifier":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/indentifier.js","./lookup":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/lookup.js","./nonpositivefilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nonpositivefilter.js","./nullfilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nullfilter.js","./source":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/source.js","./stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/stack.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/timeunit.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/bin.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var bin_1 = require("../../bin");
var fielddef_1 = require("../../fielddef");
var util_1 = require("../../util");
var common_1 = require("../common");
var model_1 = require("../model");
var dataflow_1 = require("./dataflow");
function rangeFormula(model, fieldDef, channel, config) {
    if (common_1.binRequiresRange(fieldDef, channel)) {
        // read format from axis or legend, if there is no format then use config.numberFormat
        var guide = model_1.isUnitModel(model) ? model.axis(channel) || model.legend(channel) || {} : {};
        var startField = fielddef_1.field(fieldDef, { expr: 'datum' });
        var endField = fielddef_1.field(fieldDef, { expr: 'datum', binSuffix: 'end' });
        return {
            formulaAs: fielddef_1.field(fieldDef, { binSuffix: 'range' }),
            formula: common_1.binFormatExpression(startField, endField, guide.format, config)
        };
    }
    return {};
}
function binKey(bin, field) {
    return bin_1.binToString(bin) + "_" + field;
}
function isModelParams(p) {
    return !!p['model'];
}
function getSignalsFromParams(params, key) {
    if (isModelParams(params)) {
        var model = params.model;
        return {
            signal: model.getName(key + "_bins"),
            extentSignal: model.getName(key + "_extent")
        };
    }
    return params;
}
function createBinComponent(t, params) {
    var bin = fielddef_1.normalizeBin(t.bin, undefined) || {};
    var key = binKey(bin, t.field);
    var _a = getSignalsFromParams(params, key),
        signal = _a.signal,
        extentSignal = _a.extentSignal;
    var binComponent = tslib_1.__assign({ bin: bin, field: t.field, as: [fielddef_1.field(t, {}), fielddef_1.field(t, { binSuffix: 'end' })] }, signal ? { signal: signal } : {}, extentSignal ? { extentSignal: extentSignal } : {});
    return { key: key, binComponent: binComponent };
}
var BinNode = /** @class */function (_super) {
    tslib_1.__extends(BinNode, _super);
    function BinNode(bins) {
        var _this = _super.call(this) || this;
        _this.bins = bins;
        return _this;
    }
    BinNode.prototype.clone = function () {
        return new BinNode(util_1.duplicate(this.bins));
    };
    BinNode.makeBinFromEncoding = function (model) {
        var bins = model.reduceFieldDef(function (binComponentIndex, fieldDef, channel) {
            if (fieldDef.bin) {
                var _a = createBinComponent(fieldDef, { model: model }),
                    key = _a.key,
                    binComponent = _a.binComponent;
                binComponentIndex[key] = tslib_1.__assign({}, binComponent, binComponentIndex[key], rangeFormula(model, fieldDef, channel, model.config));
            }
            return binComponentIndex;
        }, {});
        if (util_1.keys(bins).length === 0) {
            return null;
        }
        return new BinNode(bins);
    };
    /**
     * Creates a bin node from BinTransform.
     * The optional parameter should provide
     */
    BinNode.makeFromTransform = function (t, params) {
        var _a = createBinComponent(t, params),
            key = _a.key,
            binComponent = _a.binComponent;
        return new BinNode((_b = {}, _b[key] = binComponent, _b));
        var _b;
    };
    BinNode.prototype.merge = function (other) {
        this.bins = tslib_1.__assign({}, this.bins, other.bins);
        other.remove();
    };
    BinNode.prototype.producedFields = function () {
        var out = {};
        util_1.vals(this.bins).forEach(function (c) {
            c.as.forEach(function (f) {
                return out[f] = true;
            });
        });
        return out;
    };
    BinNode.prototype.dependentFields = function () {
        var out = {};
        util_1.vals(this.bins).forEach(function (c) {
            out[c.field] = true;
        });
        return out;
    };
    BinNode.prototype.assemble = function () {
        return util_1.flatten(util_1.vals(this.bins).map(function (bin) {
            var transform = [];
            var binTrans = tslib_1.__assign({ type: 'bin', field: bin.field, as: bin.as, signal: bin.signal }, bin.bin);
            if (!bin.bin.extent && bin.extentSignal) {
                transform.push({
                    type: 'extent',
                    field: bin.field,
                    signal: bin.extentSignal
                });
                binTrans.extent = { signal: bin.extentSignal };
            }
            transform.push(binTrans);
            if (bin.formula) {
                transform.push({
                    type: 'formula',
                    expr: bin.formula,
                    as: bin.formulaAs
                });
            }
            return transform;
        }));
    };
    return BinNode;
}(dataflow_1.DataFlowNode);
exports.BinNode = BinNode;

},{"../../bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/bin.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/calculate.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
/**
 * We don't know what a calculate node depends on so we should never move it beyond anything that produces fields.
 */
var CalculateNode = /** @class */function (_super) {
    tslib_1.__extends(CalculateNode, _super);
    function CalculateNode(transform) {
        var _this = _super.call(this) || this;
        _this.transform = transform;
        return _this;
    }
    CalculateNode.prototype.clone = function () {
        return new CalculateNode(util_1.duplicate(this.transform));
    };
    CalculateNode.prototype.producedFields = function () {
        var out = {};
        out[this.transform.as] = true;
        return out;
    };
    CalculateNode.prototype.assemble = function () {
        return {
            type: 'formula',
            expr: this.transform.calculate,
            as: this.transform.as
        };
    };
    return CalculateNode;
}(dataflow_1.DataFlowNode);
exports.CalculateNode = CalculateNode;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * A node in the dataflow tree.
 */
var DataFlowNode = /** @class */function () {
    function DataFlowNode(debugName) {
        this.debugName = debugName;
        this._children = [];
        this._parent = null;
    }
    /**
     * Clone this node with a deep copy but don't clone links to children or parents.
     */
    DataFlowNode.prototype.clone = function () {
        throw new Error('Cannot clone node');
    };
    /**
     * Set of fields that are being created by this node.
     */
    DataFlowNode.prototype.producedFields = function () {
        return {};
    };
    DataFlowNode.prototype.dependentFields = function () {
        return {};
    };
    Object.defineProperty(DataFlowNode.prototype, "parent", {
        get: function get() {
            return this._parent;
        },
        /**
         * Set the parent of the node and also add this not to the parent's children.
         */
        set: function set(parent) {
            this._parent = parent;
            parent.addChild(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataFlowNode.prototype, "children", {
        get: function get() {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    DataFlowNode.prototype.numChildren = function () {
        return this._children.length;
    };
    DataFlowNode.prototype.addChild = function (child) {
        this._children.push(child);
    };
    DataFlowNode.prototype.removeChild = function (oldChild) {
        this._children.splice(this._children.indexOf(oldChild), 1);
    };
    /**
     * Remove node from the dataflow.
     */
    DataFlowNode.prototype.remove = function () {
        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parent = this._parent;
        }
        this._parent.removeChild(this);
    };
    /**
     * Insert another node as a parent of this node.
     */
    DataFlowNode.prototype.insertAsParentOf = function (other) {
        var parent = other.parent;
        parent.removeChild(this);
        this.parent = parent;
        other.parent = this;
    };
    DataFlowNode.prototype.swapWithParent = function () {
        var parent = this._parent;
        var newParent = parent.parent;
        // reconnect the children
        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parent = parent;
        }
        // remove old links
        this._children = []; // equivalent to removing every child link one by one
        parent.removeChild(this);
        parent.parent.removeChild(parent);
        // swap two nodes
        this.parent = newParent;
        parent.parent = this;
    };
    return DataFlowNode;
}();
exports.DataFlowNode = DataFlowNode;
var OutputNode = /** @class */function (_super) {
    tslib_1.__extends(OutputNode, _super);
    /**
     * @param source The name of the source. Will change in assemble.
     * @param type The type of the output node.
     * @param refCounts A global ref counter map.
     */
    function OutputNode(source, type, refCounts) {
        var _this = _super.call(this, source) || this;
        _this.type = type;
        _this.refCounts = refCounts;
        _this._source = _this._name = source;
        if (_this.refCounts && !(_this._name in _this.refCounts)) {
            _this.refCounts[_this._name] = 0;
        }
        return _this;
    }
    OutputNode.prototype.clone = function () {
        var cloneObj = new this.constructor();
        cloneObj.debugName = 'clone_' + this.debugName;
        cloneObj._source = this._source;
        cloneObj._name = 'clone_' + this._name;
        cloneObj.type = this.type;
        cloneObj.refCounts = this.refCounts;
        cloneObj.refCounts[cloneObj._name] = 0;
        return cloneObj;
    };
    /**
     * Request the datasource name and increase the ref counter.
     *
     * During the parsing phase, this will return the simple name such as 'main' or 'raw'.
     * It is crucial to request the name from an output node to mark it as a required node.
     * If nobody ever requests the name, this datasource will not be instantiated in the assemble phase.
     *
     * In the assemble phase, this will return the correct name.
     */
    OutputNode.prototype.getSource = function () {
        this.refCounts[this._name]++;
        return this._source;
    };
    OutputNode.prototype.isRequired = function () {
        return !!this.refCounts[this._name];
    };
    OutputNode.prototype.setSource = function (source) {
        this._source = source;
    };
    return OutputNode;
}(DataFlowNode);
exports.OutputNode = OutputNode;

},{"tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/facet.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var log = require("../../log");
var scale_1 = require("../../scale");
var vega_schema_1 = require("../../vega.schema");
var domain_1 = require("../scale/domain");
var dataflow_1 = require("./dataflow");
/**
 * A node that helps us track what fields we are faceting by.
 */
var FacetNode = /** @class */function (_super) {
    tslib_1.__extends(FacetNode, _super);
    /**
     * @param model The facet model.
     * @param name The name that this facet source will have.
     * @param data The source data for this facet data.
     */
    function FacetNode(model, name, data) {
        var _this = _super.call(this) || this;
        _this.model = model;
        _this.name = name;
        _this.data = data;
        if (model.facet.column) {
            _this.columnFields = [model.field(channel_1.COLUMN)];
            _this.columnName = model.getName('column_domain');
            if (model.fieldDef(channel_1.COLUMN).bin) {
                _this.columnFields.push(model.field(channel_1.COLUMN, { binSuffix: 'end' }));
            }
        }
        if (model.facet.row) {
            _this.rowFields = [model.field(channel_1.ROW)];
            _this.rowName = model.getName('row_domain');
            if (model.fieldDef(channel_1.ROW).bin) {
                _this.rowFields.push(model.field(channel_1.ROW, { binSuffix: 'end' }));
            }
        }
        _this.childModel = model.child;
        return _this;
    }
    Object.defineProperty(FacetNode.prototype, "fields", {
        get: function get() {
            var fields = [];
            if (this.columnFields) {
                fields = fields.concat(this.columnFields);
            }
            if (this.rowFields) {
                fields = fields.concat(this.rowFields);
            }
            return fields;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The name to reference this source is its name.
     */
    FacetNode.prototype.getSource = function () {
        return this.name;
    };
    FacetNode.prototype.getChildIndependentFieldsWithStep = function () {
        var childIndependentFieldsWithStep = {};
        for (var _i = 0, _a = ['x', 'y']; _i < _a.length; _i++) {
            var channel = _a[_i];
            var childScaleComponent = this.childModel.component.scales[channel];
            if (childScaleComponent && !childScaleComponent.merged) {
                var type = childScaleComponent.get('type');
                var range = childScaleComponent.get('range');
                if (scale_1.hasDiscreteDomain(type) && vega_schema_1.isVgRangeStep(range)) {
                    var domain = domain_1.assembleDomain(this.childModel, channel);
                    var field = domain_1.getFieldFromDomain(domain);
                    if (field) {
                        childIndependentFieldsWithStep[channel] = field;
                    } else {
                        log.warn('Unknown field for ${channel}.  Cannot calculate view size.');
                    }
                }
            }
        }
        return childIndependentFieldsWithStep;
    };
    FacetNode.prototype.assembleRowColumnData = function (channel, crossedDataName, childIndependentFieldsWithStep) {
        var aggregateChildField = {};
        var childChannel = channel === 'row' ? 'y' : 'x';
        if (childIndependentFieldsWithStep[childChannel]) {
            if (crossedDataName) {
                aggregateChildField = {
                    // If there is a crossed data, calculate max
                    fields: ["distinct_" + childIndependentFieldsWithStep[childChannel]],
                    ops: ['max'],
                    // Although it is technically a max, just name it distinct so it's easier to refer to it
                    as: ["distinct_" + childIndependentFieldsWithStep[childChannel]]
                };
            } else {
                aggregateChildField = {
                    // If there is no crossed data, just calculate distinct
                    fields: [childIndependentFieldsWithStep[childChannel]],
                    ops: ['distinct']
                };
            }
        }
        return {
            name: channel === 'row' ? this.rowName : this.columnName,
            // Use data from the crossed one if it exist
            source: crossedDataName || this.data,
            transform: [tslib_1.__assign({ type: 'aggregate', groupby: channel === 'row' ? this.rowFields : this.columnFields }, aggregateChildField)]
        };
    };
    FacetNode.prototype.assemble = function () {
        var data = [];
        var crossedDataName = null;
        var childIndependentFieldsWithStep = this.getChildIndependentFieldsWithStep();
        if (this.columnName && this.rowName && (childIndependentFieldsWithStep.x || childIndependentFieldsWithStep.y)) {
            // Need to create a cross dataset to correctly calculate cardinality
            crossedDataName = "cross_" + this.columnName + "_" + this.rowName;
            var fields = [].concat(childIndependentFieldsWithStep.x ? [childIndependentFieldsWithStep.x] : [], childIndependentFieldsWithStep.y ? [childIndependentFieldsWithStep.y] : []);
            var ops = fields.map(function () {
                return 'distinct';
            });
            data.push({
                name: crossedDataName,
                source: this.data,
                transform: [{
                    type: 'aggregate',
                    groupby: this.columnFields.concat(this.rowFields),
                    fields: fields,
                    ops: ops
                }]
            });
        }
        if (this.columnName) {
            data.push(this.assembleRowColumnData('column', crossedDataName, childIndependentFieldsWithStep));
        }
        if (this.rowName) {
            data.push(this.assembleRowColumnData('row', crossedDataName, childIndependentFieldsWithStep));
        }
        return data;
    };
    return FacetNode;
}(dataflow_1.DataFlowNode);
exports.FacetNode = FacetNode;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../scale/domain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/filter.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var filter_1 = require("../../filter");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var FilterNode = /** @class */function (_super) {
    tslib_1.__extends(FilterNode, _super);
    function FilterNode(model, filter) {
        var _this = _super.call(this) || this;
        _this.model = model;
        _this.filter = filter;
        _this.expr = filter_1.expression(_this.model, _this.filter, _this);
        return _this;
    }
    FilterNode.prototype.clone = function () {
        return new FilterNode(this.model, util_1.duplicate(this.filter));
    };
    FilterNode.prototype.assemble = function () {
        return {
            type: 'filter',
            expr: this.expr
        };
    };
    return FilterNode;
}(dataflow_1.DataFlowNode);
exports.FilterNode = FilterNode;

},{"../../filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/filter.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/formatparse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var aggregate_1 = require("../../aggregate");
var fielddef_1 = require("../../fielddef");
var filter_1 = require("../../filter");
var log = require("../../log");
var logical_1 = require("../../logical");
var transform_1 = require("../../transform");
var util_1 = require("../../util");
var model_1 = require("../model");
var dataflow_1 = require("./dataflow");
function parseExpression(field, parse) {
    var f = "datum[" + util_1.stringValue(field) + "]";
    if (parse === 'number') {
        return "toNumber(" + f + ")";
    } else if (parse === 'boolean') {
        return "toBoolean(" + f + ")";
    } else if (parse === 'string') {
        return "toString(" + f + ")";
    } else if (parse === 'date') {
        return "toDate(" + f + ")";
    } else if (parse.indexOf('date:') === 0) {
        var specifier = parse.slice(5, parse.length);
        return "timeParse(" + f + "," + specifier + ")";
    } else if (parse.indexOf('utc:') === 0) {
        var specifier = parse.slice(4, parse.length);
        return "utcParse(" + f + "," + specifier + ")";
    } else {
        log.warn(log.message.unrecognizedParse(parse));
        return null;
    }
}
var ParseNode = /** @class */function (_super) {
    tslib_1.__extends(ParseNode, _super);
    function ParseNode(parse) {
        var _this = _super.call(this) || this;
        _this._parse = {};
        _this._parse = parse;
        return _this;
    }
    ParseNode.prototype.clone = function () {
        return new ParseNode(util_1.duplicate(this.parse));
    };
    ParseNode.make = function (model) {
        var parse = {};
        var calcFieldMap = {};
        (model.transforms || []).forEach(function (transform) {
            if (transform_1.isCalculate(transform)) {
                calcFieldMap[transform.as] = true;
            } else if (transform_1.isFilter(transform)) {
                logical_1.forEachLeave(transform.filter, function (filter) {
                    if (filter_1.isEqualFilter(filter) || filter_1.isRangeFilter(filter) || filter_1.isOneOfFilter(filter)) {
                        if (filter.timeUnit) {
                            parse[filter.field] = 'date';
                        }
                    }
                });
            }
        }, {});
        if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {
            // Parse encoded fields
            model.forEachFieldDef(function (fieldDef) {
                if (fielddef_1.isTimeFieldDef(fieldDef)) {
                    parse[fieldDef.field] = 'date';
                } else if (fielddef_1.isNumberFieldDef(fieldDef)) {
                    if (calcFieldMap[fieldDef.field] || aggregate_1.isCountingAggregateOp(fieldDef.aggregate)) {
                        return;
                    }
                    parse[fieldDef.field] = 'number';
                }
            });
        }
        // Custom parse should override inferred parse
        var data = model.data;
        if (data && data.format && data.format.parse) {
            var p_1 = data.format.parse;
            util_1.keys(p_1).forEach(function (field) {
                parse[field] = p_1[field];
            });
        }
        // We should not parse what has already been parsed in a parent
        var modelParse = model.component.data.ancestorParse;
        util_1.keys(modelParse).forEach(function (field) {
            if (parse[field] !== modelParse[field]) {
                log.warn(log.message.differentParse(field, parse[field], modelParse[field]));
            } else {
                delete parse[field];
            }
        });
        if (util_1.keys(parse).length === 0) {
            return null;
        }
        return new ParseNode(parse);
    };
    Object.defineProperty(ParseNode.prototype, "parse", {
        get: function get() {
            return this._parse;
        },
        enumerable: true,
        configurable: true
    });
    ParseNode.prototype.merge = function (other) {
        this._parse = tslib_1.__assign({}, this._parse, other.parse);
        other.remove();
    };
    ParseNode.prototype.assembleFormatParse = function () {
        return this._parse;
    };
    // format parse depends and produces all fields in its parse
    ParseNode.prototype.producedFields = function () {
        return util_1.toSet(util_1.keys(this.parse));
    };
    ParseNode.prototype.dependentFields = function () {
        return util_1.toSet(util_1.keys(this.parse));
    };
    ParseNode.prototype.assembleTransforms = function () {
        var _this = this;
        return util_1.keys(this._parse).map(function (field) {
            var expr = parseExpression(field, _this._parse[field]);
            if (!expr) {
                return null;
            }
            var formula = {
                type: 'formula',
                expr: expr,
                as: field
            };
            return formula;
        }).filter(function (t) {
            return t !== null;
        });
    };
    return ParseNode;
}(dataflow_1.DataFlowNode);
exports.ParseNode = ParseNode;

},{"../../aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/filter.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../logical":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/logical.js","../../transform":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/transform.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/indentifier.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var selection_1 = require("../../selection");
var dataflow_1 = require("./dataflow");
var IdentifierNode = /** @class */function (_super) {
    tslib_1.__extends(IdentifierNode, _super);
    function IdentifierNode() {
        return _super.call(this) || this;
    }
    IdentifierNode.prototype.clone = function () {
        return new IdentifierNode();
    };
    IdentifierNode.prototype.producedFields = function () {
        return _a = {}, _a[selection_1.SELECTION_ID] = true, _a;
        var _a;
    };
    IdentifierNode.prototype.assemble = function () {
        return { type: 'identifier', as: selection_1.SELECTION_ID };
    };
    return IdentifierNode;
}(dataflow_1.DataFlowNode);
exports.IdentifierNode = IdentifierNode;

},{"../../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/selection.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/lookup.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var log = require("../../log");
var dataflow_1 = require("./dataflow");
var source_1 = require("./source");
var LookupNode = /** @class */function (_super) {
    tslib_1.__extends(LookupNode, _super);
    function LookupNode(transform, secondary) {
        var _this = _super.call(this) || this;
        _this.transform = transform;
        _this.secondary = secondary;
        return _this;
    }
    LookupNode.make = function (model, transform, counter) {
        var sources = model.component.data.sources;
        var s = new source_1.SourceNode(transform.from.data);
        var fromSource = sources[s.hash()];
        if (!fromSource) {
            sources[s.hash()] = s;
            fromSource = s;
        }
        var fromOutputName = model.getName("lookup_" + counter);
        var fromOutputNode = new dataflow_1.OutputNode(fromOutputName, 'lookup', model.component.data.outputNodeRefCounts);
        fromOutputNode.parent = fromSource;
        model.component.data.outputNodes[fromOutputName] = fromOutputNode;
        return new LookupNode(transform, fromOutputNode.getSource());
    };
    LookupNode.prototype.producedFields = function () {
        return vega_util_1.toSet(this.transform.from.fields || (this.transform.as instanceof Array ? this.transform.as : [this.transform.as]));
    };
    LookupNode.prototype.assemble = function () {
        var foreign;
        if (this.transform.from.fields) {
            // lookup a few fields and add create a flat output
            foreign = tslib_1.__assign({ values: this.transform.from.fields }, this.transform.as ? { as: this.transform.as instanceof Array ? this.transform.as : [this.transform.as] } : {});
        } else {
            // lookup full record and nest it
            var asName = this.transform.as;
            if (!vega_util_1.isString(asName)) {
                log.warn(log.message.NO_FIELDS_NEEDS_AS);
                asName = '_lookup';
            }
            foreign = {
                as: [asName]
            };
        }
        return tslib_1.__assign({ type: 'lookup', from: this.secondary, key: this.transform.from.key, fields: [this.transform.lookup] }, foreign, this.transform.default ? { default: this.transform.default } : {});
    };
    return LookupNode;
}(dataflow_1.DataFlowNode);
exports.LookupNode = LookupNode;

},{"../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","./source":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/source.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nonpositivefilter.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var NonPositiveFilterNode = /** @class */function (_super) {
    tslib_1.__extends(NonPositiveFilterNode, _super);
    function NonPositiveFilterNode(filter) {
        var _this = _super.call(this) || this;
        _this._filter = filter;
        return _this;
    }
    NonPositiveFilterNode.prototype.clone = function () {
        return new NonPositiveFilterNode(tslib_1.__assign({}, this._filter));
    };
    NonPositiveFilterNode.make = function (model) {
        var filter = channel_1.SCALE_CHANNELS.reduce(function (nonPositiveComponent, channel) {
            var scale = model.getScaleComponent(channel);
            if (!scale || !model.field(channel)) {
                // don't set anything
                return nonPositiveComponent;
            }
            nonPositiveComponent[model.field(channel)] = scale.get('type') === scale_1.ScaleType.LOG;
            return nonPositiveComponent;
        }, {});
        if (!util_1.keys(filter).length) {
            return null;
        }
        return new NonPositiveFilterNode(filter);
    };
    Object.defineProperty(NonPositiveFilterNode.prototype, "filter", {
        get: function get() {
            return this._filter;
        },
        enumerable: true,
        configurable: true
    });
    NonPositiveFilterNode.prototype.assemble = function () {
        var _this = this;
        return util_1.keys(this._filter).filter(function (field) {
            // Only filter fields (keys) with value = true
            return _this._filter[field];
        }).map(function (field) {
            return {
                type: 'filter',
                expr: "datum[" + util_1.stringValue(field) + "] > 0"
            };
        });
    };
    return NonPositiveFilterNode;
}(dataflow_1.DataFlowNode);
exports.NonPositiveFilterNode = NonPositiveFilterNode;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nullfilter.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var scale_1 = require("../../scale");
var type_1 = require("../../type");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var NullFilterNode = /** @class */function (_super) {
    tslib_1.__extends(NullFilterNode, _super);
    function NullFilterNode(fields) {
        var _this = _super.call(this) || this;
        _this._filteredFields = fields;
        return _this;
    }
    NullFilterNode.prototype.clone = function () {
        return new NullFilterNode(util_1.duplicate(this._filteredFields));
    };
    NullFilterNode.make = function (model) {
        var fields = model.reduceFieldDef(function (aggregator, fieldDef, channel) {
            if (model.config.invalidValues === 'filter' && !fieldDef.aggregate && fieldDef.field) {
                // Vega's aggregate operator already handle invalid values, so we only have to consider non-aggregate field here.
                var scaleComponent = channel_1.isScaleChannel(channel) && model.getScaleComponent(channel);
                if (scaleComponent) {
                    var scaleType = scaleComponent.get('type');
                    // only automatically filter null for continuous domain since discrete domain scales can handle invalid values.
                    if (scale_1.hasContinuousDomain(scaleType)) {
                        aggregator[fieldDef.field] = fieldDef;
                    }
                }
            }
            return aggregator;
        }, {});
        if (util_1.keys(fields).length === 0) {
            return null;
        }
        return new NullFilterNode(fields);
    };
    Object.defineProperty(NullFilterNode.prototype, "filteredFields", {
        get: function get() {
            return this._filteredFields;
        },
        enumerable: true,
        configurable: true
    });
    NullFilterNode.prototype.merge = function (other) {
        var _this = this;
        var t = util_1.keys(this._filteredFields).map(function (k) {
            return k + ' ' + util_1.hash(_this._filteredFields[k]);
        });
        var o = util_1.keys(other.filteredFields).map(function (k) {
            return k + ' ' + util_1.hash(other.filteredFields[k]);
        });
        if (!util_1.differArray(t, o)) {
            this._filteredFields = tslib_1.__assign({}, this._filteredFields, other._filteredFields);
            other.remove();
        }
    };
    NullFilterNode.prototype.assemble = function () {
        var _this = this;
        var filters = util_1.keys(this._filteredFields).reduce(function (_filters, field) {
            var fieldDef = _this._filteredFields[field];
            if (fieldDef !== null) {
                _filters.push("datum[" + util_1.stringValue(fieldDef.field) + "] !== null");
                if (util_1.contains([type_1.QUANTITATIVE, type_1.TEMPORAL], fieldDef.type)) {
                    // TODO(https://github.com/vega/vega-lite/issues/1436):
                    // We can be even smarter and add NaN filter for N,O that are numbers
                    // based on the `parse` property once we have it.
                    _filters.push("!isNaN(datum[" + util_1.stringValue(fieldDef.field) + "])");
                }
            }
            return _filters;
        }, []);
        return filters.length > 0 ? {
            type: 'filter',
            expr: filters.join(' && ')
        } : null;
    };
    return NullFilterNode;
}(dataflow_1.DataFlowNode);
exports.NullFilterNode = NullFilterNode;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/optimize.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_1 = require("../../data");
var util_1 = require("../../util");
var aggregate_1 = require("./aggregate");
var dataflow_1 = require("./dataflow");
var facet_1 = require("./facet");
var nonpositivefilter_1 = require("./nonpositivefilter");
var nullfilter_1 = require("./nullfilter");
var optimizers = require("./optimizers");
var stack_1 = require("./stack");
exports.FACET_SCALE_PREFIX = 'scale_';
/**
 * Clones the subtree and ignores output nodes except for the leafs, which are renamed.
 */
function cloneSubtree(facet) {
    function clone(node) {
        if (!(node instanceof facet_1.FacetNode)) {
            var copy_1 = node.clone();
            if (copy_1 instanceof dataflow_1.OutputNode) {
                var newName = exports.FACET_SCALE_PREFIX + copy_1.getSource();
                copy_1.setSource(newName);
                facet.model.component.data.outputNodes[newName] = copy_1;
            } else if (copy_1 instanceof aggregate_1.AggregateNode || copy_1 instanceof stack_1.StackNode) {
                copy_1.addDimensions(facet.fields);
            }
            util_1.flatten(node.children.map(clone)).forEach(function (n) {
                return n.parent = copy_1;
            });
            return [copy_1];
        }
        return util_1.flatten(node.children.map(clone));
    }
    return clone;
}
/**
 * Move facet nodes down to the next fork or output node. Also pull the main output with the facet node.
 * After moving down the facet node, make a copy of the subtree and make it a child of the main output.
 */
function moveFacetDown(node) {
    if (node instanceof facet_1.FacetNode) {
        if (node.numChildren() === 1 && !(node.children[0] instanceof dataflow_1.OutputNode)) {
            // move down until we hit a fork or output node
            var child = node.children[0];
            if (child instanceof aggregate_1.AggregateNode || child instanceof stack_1.StackNode) {
                child.addDimensions(node.fields);
            }
            child.swapWithParent();
            moveFacetDown(node);
        } else {
            // move main to facet
            moveMainDownToFacet(node.model.component.data.main);
            // replicate the subtree and place it before the facet's main node
            var copy = util_1.flatten(node.children.map(cloneSubtree(node)));
            copy.forEach(function (c) {
                return c.parent = node.model.component.data.main;
            });
        }
    } else {
        node.children.forEach(moveFacetDown);
    }
}
function moveMainDownToFacet(node) {
    if (node instanceof dataflow_1.OutputNode && node.type === data_1.MAIN) {
        if (node.numChildren() === 1) {
            var child = node.children[0];
            if (!(child instanceof facet_1.FacetNode)) {
                child.swapWithParent();
                moveMainDownToFacet(node);
            }
        }
    }
}
/**
 * Start optimization path from the root. Useful for removing nodes.
 */
function removeUnnecessaryNodes(node) {
    // remove empty non positive filter
    if (node instanceof nonpositivefilter_1.NonPositiveFilterNode && util_1.every(util_1.vals(node.filter), function (b) {
        return b === false;
    })) {
        node.remove();
    }
    // remove empty null filter nodes
    if (node instanceof nullfilter_1.NullFilterNode && util_1.every(util_1.vals(node.filteredFields), function (f) {
        return f === null;
    })) {
        node.remove();
    }
    // remove output nodes that are not required
    if (node instanceof dataflow_1.OutputNode && !node.isRequired()) {
        node.remove();
    }
    node.children.forEach(removeUnnecessaryNodes);
}
/**
 * Return all leaf nodes.
 */
function getLeaves(roots) {
    var leaves = [];
    function append(node) {
        if (node.numChildren() === 0) {
            leaves.push(node);
        } else {
            node.children.forEach(append);
        }
    }
    roots.forEach(append);
    return leaves;
}
/**
 * Optimizes the dataflow of the passed in data component.
 */
function optimizeDataflow(dataComponent) {
    var roots = util_1.vals(dataComponent.sources);
    roots.forEach(removeUnnecessaryNodes);
    // remove source nodes that don't have any children because they also don't have output nodes
    roots = roots.filter(function (r) {
        return r.numChildren() > 0;
    });
    getLeaves(roots).forEach(optimizers.iterateFromLeaves(optimizers.removeUnusedSubtrees));
    roots = roots.filter(function (r) {
        return r.numChildren() > 0;
    });
    getLeaves(roots).forEach(optimizers.iterateFromLeaves(optimizers.moveParseUp));
    getLeaves(roots).forEach(optimizers.removeDuplicateTimeUnits);
    roots.forEach(moveFacetDown);
    util_1.keys(dataComponent.sources).forEach(function (s) {
        if (dataComponent.sources[s].numChildren() === 0) {
            delete dataComponent.sources[s];
        }
    });
}
exports.optimizeDataflow = optimizeDataflow;

},{"../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/aggregate.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","./facet":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/facet.js","./nonpositivefilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nonpositivefilter.js","./nullfilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nullfilter.js","./optimizers":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/optimizers.js","./stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/stack.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/optimizers.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var formatparse_1 = require("./formatparse");
var source_1 = require("./source");
var timeunit_1 = require("./timeunit");
/**
 * Start optimization path at the leaves. Useful for merging up or removing things.
 *
 * If the callback returns true, the recursion continues.
 */
function iterateFromLeaves(f) {
    function optimizeNextFromLeaves(node) {
        if (node instanceof source_1.SourceNode) {
            return;
        }
        var next = node.parent;
        if (f(node)) {
            optimizeNextFromLeaves(next);
        }
    }
    return optimizeNextFromLeaves;
}
exports.iterateFromLeaves = iterateFromLeaves;
/**
 * Move parse nodes up to forks.
 */
function moveParseUp(node) {
    var parent = node.parent;
    // move parse up by merging or swapping
    if (node instanceof formatparse_1.ParseNode) {
        if (parent instanceof source_1.SourceNode) {
            return false;
        }
        if (parent.numChildren() > 1) {
            // don't move parse further up but continue with parent.
            return true;
        }
        if (parent instanceof formatparse_1.ParseNode) {
            parent.merge(node);
        } else {
            // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)
            if (util_1.hasIntersection(parent.producedFields(), node.dependentFields())) {
                return true;
            }
            node.swapWithParent();
        }
    }
    return true;
}
exports.moveParseUp = moveParseUp;
/**
 * Repeatedly remove leaf nodes that are not output nodes.
 * The reason is that we don't need subtrees that don't have any output nodes.
 */
function removeUnusedSubtrees(node) {
    if (node instanceof dataflow_1.OutputNode || node.numChildren() > 0) {
        // no need to continue with parent because it is output node or will have children (there was a fork)
        return false;
    } else {
        node.remove();
    }
    return true;
}
exports.removeUnusedSubtrees = removeUnusedSubtrees;
/**
 * Removes duplicate time unit nodes (as determined by the name of the
 * output field) that may be generated due to selections projected over
 * time units.
 */
function removeDuplicateTimeUnits(leaf) {
    var fields = {};
    return iterateFromLeaves(function (node) {
        if (node instanceof timeunit_1.TimeUnitNode) {
            var pfields = node.producedFields();
            var dupe = util_1.keys(pfields).every(function (k) {
                return !!fields[k];
            });
            if (dupe) {
                node.remove();
            } else {
                fields = tslib_1.__assign({}, fields, pfields);
            }
        }
        return true;
    })(leaf);
}
exports.removeDuplicateTimeUnits = removeDuplicateTimeUnits;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","./formatparse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/formatparse.js","./source":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/source.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/timeunit.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/parse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var data_1 = require("../../data");
var datetime_1 = require("../../datetime");
var filter_1 = require("../../filter");
var log = require("../../log");
var transform_1 = require("../../transform");
var util_1 = require("../../util");
var model_1 = require("../model");
var selection_1 = require("../selection/selection");
var aggregate_1 = require("./aggregate");
var bin_1 = require("./bin");
var calculate_1 = require("./calculate");
var dataflow_1 = require("./dataflow");
var facet_1 = require("./facet");
var filter_2 = require("./filter");
var formatparse_1 = require("./formatparse");
var indentifier_1 = require("./indentifier");
var lookup_1 = require("./lookup");
var nonpositivefilter_1 = require("./nonpositivefilter");
var nullfilter_1 = require("./nullfilter");
var source_1 = require("./source");
var stack_1 = require("./stack");
var timeunit_1 = require("./timeunit");
function parseRoot(model, sources) {
    if (model.data || !model.parent) {
        // if the model defines a data source or is the root, create a source node
        var source = new source_1.SourceNode(model.data);
        var hash = source.hash();
        if (hash in sources) {
            // use a reference if we already have a source
            return sources[hash];
        } else {
            // otherwise add a new one
            sources[hash] = source;
            return source;
        }
    } else {
        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.
        return model.parent.component.data.facetRoot ? model.parent.component.data.facetRoot : model.parent.component.data.main;
    }
}
/**
 * Parses a transforms array into a chain of connected dataflow nodes.
 */
function parseTransformArray(model) {
    var first = null;
    var node;
    var previous;
    var lookupCounter = 0;
    function insert(newNode) {
        if (!first) {
            // A parent may be inserted during node construction
            // (e.g., selection FilterNodes may add a TimeUnitNode).
            first = newNode.parent || newNode;
        } else if (newNode.parent) {
            previous.insertAsParentOf(newNode);
        } else {
            newNode.parent = previous;
        }
        previous = newNode;
    }
    model.transforms.forEach(function (t) {
        if (transform_1.isCalculate(t)) {
            node = new calculate_1.CalculateNode(t);
        } else if (transform_1.isFilter(t)) {
            // Automatically add a parse node for filters with filter objects
            var parse = {};
            var filter = t.filter;
            var val = null;
            // For EqualFilter, just use the equal property.
            // For RangeFilter and OneOfFilter, all array members should have
            // the same type, so we only use the first one.
            if (filter_1.isEqualFilter(filter)) {
                val = filter.equal;
            } else if (filter_1.isRangeFilter(filter)) {
                val = filter.range[0];
            } else if (filter_1.isOneOfFilter(filter)) {
                val = (filter.oneOf || filter['in'])[0];
            } // else -- for filter expression, we can't infer anything
            if (val) {
                if (datetime_1.isDateTime(val)) {
                    parse[filter['field']] = 'date';
                } else if (vega_util_1.isNumber(val)) {
                    parse[filter['field']] = 'number';
                } else if (vega_util_1.isString(val)) {
                    parse[filter['field']] = 'string';
                }
            }
            if (util_1.keys(parse).length > 0) {
                var parseNode = new formatparse_1.ParseNode(parse);
                insert(parseNode);
            }
            node = new filter_2.FilterNode(model, t.filter);
        } else if (transform_1.isBin(t)) {
            node = bin_1.BinNode.makeFromTransform(t, { model: model });
        } else if (transform_1.isTimeUnit(t)) {
            node = timeunit_1.TimeUnitNode.makeFromTransform(t);
        } else if (transform_1.isSummarize(t)) {
            node = aggregate_1.AggregateNode.makeFromTransform(t);
            if (selection_1.requiresSelectionId(model)) {
                insert(node);
                node = new indentifier_1.IdentifierNode();
            }
        } else if (transform_1.isLookup(t)) {
            node = lookup_1.LookupNode.make(model, t, lookupCounter++);
        } else {
            log.warn(log.message.invalidTransformIgnored(t));
            return;
        }
        insert(node);
    });
    var last = node;
    return { first: first, last: last };
}
exports.parseTransformArray = parseTransformArray;
/*
Description of the dataflow (http://asciiflow.com/):

     +--------+
     | Source |
     +---+----+
         |
         v
     Transforms
(Filter, Calculate, ...)
         |
         v
     FormatParse
         |
         v
     Null Filter
         |
         v
      Binning
         |
         v
      Timeunit
         |
         v
      +--+--+
      | Raw |
      +-----+
         |
         v
     Aggregate
         |
         v
       Stack
         |
         v
      >0 Filter
         |
         v
     Path Order
         |
         v
   +----------+
   |   Main   |
   +----------+
         |
         v
     +-------+
     | Facet |----> "column", "column-layout", and "row"
     +-------+
         |
         v
  ...Child data...

*/
function parseData(model) {
    var root = parseRoot(model, model.component.data.sources);
    var outputNodes = model.component.data.outputNodes;
    var outputNodeRefCounts = model.component.data.outputNodeRefCounts;
    // the current head of the tree that we are appending to
    var head = root;
    // Default discrete selections require an identifier transform to
    // uniquely identify data points as the _id field is volatile. Add
    // this transform at the head of our pipeline such that the identifier
    // field is available for all subsequent datasets. Additional identifier
    // transforms will be necessary when new tuples are constructed
    // (e.g., post-aggregation).
    if (selection_1.requiresSelectionId(model) && !model.parent) {
        var ident = new indentifier_1.IdentifierNode();
        ident.parent = head;
        head = ident;
    }
    // HACK: This is equivalent for merging bin extent for union scale.
    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale
    var parentIsLayer = model.parent && model_1.isLayerModel(model.parent);
    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {
        if (parentIsLayer) {
            var bin = bin_1.BinNode.makeBinFromEncoding(model);
            if (bin) {
                bin.parent = head;
                head = bin;
            }
        }
    }
    if (model.transforms.length > 0) {
        var _a = parseTransformArray(model),
            first = _a.first,
            last = _a.last;
        first.parent = head;
        head = last;
    }
    var parse = formatparse_1.ParseNode.make(model);
    if (parse) {
        parse.parent = head;
        head = parse;
    }
    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {
        var nullFilter = nullfilter_1.NullFilterNode.make(model);
        if (nullFilter) {
            nullFilter.parent = head;
            head = nullFilter;
        }
        if (!parentIsLayer) {
            var bin = bin_1.BinNode.makeBinFromEncoding(model);
            if (bin) {
                bin.parent = head;
                head = bin;
            }
        }
        var tu = timeunit_1.TimeUnitNode.makeFromEncoding(model);
        if (tu) {
            tu.parent = head;
            head = tu;
        }
    }
    // add an output node pre aggregation
    var rawName = model.getName(data_1.RAW);
    var raw = new dataflow_1.OutputNode(rawName, data_1.RAW, outputNodeRefCounts);
    outputNodes[rawName] = raw;
    raw.parent = head;
    head = raw;
    if (model_1.isUnitModel(model)) {
        var agg = aggregate_1.AggregateNode.makeFromEncoding(model);
        if (agg) {
            agg.parent = head;
            head = agg;
            if (selection_1.requiresSelectionId(model)) {
                var ident = new indentifier_1.IdentifierNode();
                ident.parent = head;
                head = ident;
            }
        }
        var stack = stack_1.StackNode.make(model);
        if (stack) {
            stack.parent = head;
            head = stack;
        }
        var nonPosFilter = nonpositivefilter_1.NonPositiveFilterNode.make(model);
        if (nonPosFilter) {
            nonPosFilter.parent = head;
            head = nonPosFilter;
        }
    }
    // output node for marks
    var mainName = model.getName(data_1.MAIN);
    var main = new dataflow_1.OutputNode(mainName, data_1.MAIN, outputNodeRefCounts);
    outputNodes[mainName] = main;
    main.parent = head;
    head = main;
    // add facet marker
    var facetRoot = null;
    if (model_1.isFacetModel(model)) {
        var facetName = model.getName('facet');
        facetRoot = new facet_1.FacetNode(model, facetName, main.getSource());
        outputNodes[facetName] = facetRoot;
        facetRoot.parent = head;
        head = facetRoot;
    }
    // add the format parse from this model so that children don't parse the same field again
    var ancestorParse = tslib_1.__assign({}, model.component.data.ancestorParse, parse ? parse.parse : {});
    return tslib_1.__assign({}, model.component.data, { outputNodes: outputNodes,
        outputNodeRefCounts: outputNodeRefCounts,
        raw: raw,
        main: main,
        facetRoot: facetRoot,
        ancestorParse: ancestorParse });
}
exports.parseData = parseData;

},{"../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","../../filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/filter.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../transform":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/transform.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/aggregate.js","./bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/bin.js","./calculate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/calculate.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","./facet":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/facet.js","./filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/filter.js","./formatparse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/formatparse.js","./indentifier":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/indentifier.js","./lookup":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/lookup.js","./nonpositivefilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nonpositivefilter.js","./nullfilter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/nullfilter.js","./source":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/source.js","./stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/stack.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/timeunit.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/source.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var data_1 = require("../../data");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var SourceNode = /** @class */function (_super) {
    tslib_1.__extends(SourceNode, _super);
    function SourceNode(data) {
        var _this = _super.call(this) || this;
        data = data || { name: 'source' };
        if (data_1.isInlineData(data)) {
            _this._data = {
                values: data.values
            };
        } else if (data_1.isUrlData(data)) {
            // Extract extension from URL using snippet from
            // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript
            var defaultExtension = /(?:\.([^.]+))?$/.exec(data.url)[1];
            if (!util_1.contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {
                defaultExtension = 'json';
            }
            var dataFormat = data.format || {};
            // For backward compatibility for former `data.formatType` property
            var formatType = dataFormat.type || data['formatType'];
            var property = dataFormat.property,
                feature = dataFormat.feature,
                mesh = dataFormat.mesh;
            var format = tslib_1.__assign({ type: formatType ? formatType : defaultExtension }, property ? { property: property } : {}, feature ? { feature: feature } : {}, mesh ? { mesh: mesh } : {});
            _this._data = {
                url: data.url,
                format: format
            };
        } else if (data_1.isNamedData(data)) {
            _this._name = data.name;
            _this._data = {};
        }
        return _this;
    }
    Object.defineProperty(SourceNode.prototype, "data", {
        get: function get() {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    SourceNode.prototype.hasName = function () {
        return !!this._name;
    };
    Object.defineProperty(SourceNode.prototype, "dataName", {
        get: function get() {
            return this._name;
        },
        set: function set(name) {
            this._name = name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SourceNode.prototype, "parent", {
        set: function set(parent) {
            throw new Error('Source nodes have to be roots.');
        },
        enumerable: true,
        configurable: true
    });
    SourceNode.prototype.remove = function () {
        throw new Error('Source nodes are roots and cannot be removed.');
    };
    /**
     * Return a unique identifir for this data source.
     */
    SourceNode.prototype.hash = function () {
        if (data_1.isInlineData(this._data)) {
            return util_1.hash(this._data);
        } else if (data_1.isUrlData(this._data)) {
            return this._data.url + " " + util_1.hash(this._data.format);
        } else {
            return this._name;
        }
    };
    SourceNode.prototype.assemble = function () {
        return tslib_1.__assign({ name: this._name }, this._data, { transform: [] });
    };
    return SourceNode;
}(dataflow_1.DataFlowNode);
exports.SourceNode = SourceNode;

},{"../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/stack.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var fielddef_1 = require("../../fielddef");
var util_1 = require("../../util");
var common_1 = require("../common");
var dataflow_1 = require("./dataflow");
function getStackByFields(model) {
    return model.stack.stackBy.reduce(function (fields, by) {
        var fieldDef = by.fieldDef;
        var _field = fielddef_1.field(fieldDef);
        if (_field) {
            fields.push(_field);
        }
        return fields;
    }, []);
}
var StackNode = /** @class */function (_super) {
    tslib_1.__extends(StackNode, _super);
    function StackNode(stack) {
        var _this = _super.call(this) || this;
        _this._stack = stack;
        return _this;
    }
    StackNode.prototype.clone = function () {
        return new StackNode(util_1.duplicate(this._stack));
    };
    StackNode.make = function (model) {
        var stackProperties = model.stack;
        if (!stackProperties) {
            return null;
        }
        var dimensionFieldDef;
        if (stackProperties.groupbyChannel) {
            dimensionFieldDef = model.fieldDef(stackProperties.groupbyChannel);
        }
        var stackby = getStackByFields(model);
        var orderDef = model.encoding.order;
        var sort;
        if (orderDef) {
            sort = common_1.sortParams(orderDef);
        } else {
            // default = descending by stackFields
            // FIXME is the default here correct for binned fields?
            sort = stackby.reduce(function (s, field) {
                s.field.push(field);
                s.order.push('descending');
                return s;
            }, { field: [], order: [] });
        }
        return new StackNode({
            dimensionFieldDef: dimensionFieldDef,
            field: model.field(stackProperties.fieldChannel),
            facetby: [],
            stackby: stackby,
            sort: sort,
            offset: stackProperties.offset,
            impute: stackProperties.impute
        });
    };
    Object.defineProperty(StackNode.prototype, "stack", {
        get: function get() {
            return this._stack;
        },
        enumerable: true,
        configurable: true
    });
    StackNode.prototype.addDimensions = function (fields) {
        this._stack.facetby = this._stack.facetby.concat(fields);
    };
    StackNode.prototype.dependentFields = function () {
        var out = {};
        out[this._stack.field] = true;
        this.getGroupbyFields().forEach(function (f) {
            return out[f] = true;
        });
        this._stack.facetby.forEach(function (f) {
            return out[f] = true;
        });
        var field = this._stack.sort.field;
        vega_util_1.isArray(field) ? field.forEach(function (f) {
            return out[f] = true;
        }) : out[field] = true;
        return out;
    };
    StackNode.prototype.producedFields = function () {
        var out = {};
        out[this._stack.field + '_start'] = true;
        out[this._stack.field + '_end'] = true;
        return out;
    };
    StackNode.prototype.getGroupbyFields = function () {
        var _a = this._stack,
            dimensionFieldDef = _a.dimensionFieldDef,
            impute = _a.impute;
        if (dimensionFieldDef) {
            if (dimensionFieldDef.bin) {
                if (impute) {
                    // For binned group by field with impute, we calculate bin_mid
                    // as we cannot impute two fields simultaneously
                    return [fielddef_1.field(dimensionFieldDef, { binSuffix: 'mid' })];
                }
                return [
                // For binned group by field without impute, we need both bin (start) and bin_end
                fielddef_1.field(dimensionFieldDef, {}), fielddef_1.field(dimensionFieldDef, { binSuffix: 'end' })];
            }
            return [fielddef_1.field(dimensionFieldDef)];
        }
        return [];
    };
    StackNode.prototype.assemble = function () {
        var transform = [];
        var _a = this._stack,
            facetby = _a.facetby,
            stackField = _a.field,
            dimensionFieldDef = _a.dimensionFieldDef,
            impute = _a.impute,
            offset = _a.offset,
            sort = _a.sort,
            stackby = _a.stackby;
        // Impute
        if (impute && dimensionFieldDef) {
            var dimensionField = dimensionFieldDef ? fielddef_1.field(dimensionFieldDef, { binSuffix: 'mid' }) : undefined;
            if (dimensionFieldDef.bin) {
                // As we can only impute one field at a time, we need to calculate
                // mid point for a binned field
                transform.push({
                    type: 'formula',
                    expr: '(' + fielddef_1.field(dimensionFieldDef, { expr: 'datum' }) + '+' + fielddef_1.field(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' }) + ')/2',
                    as: dimensionField
                });
            }
            transform.push({
                type: 'impute',
                field: stackField,
                groupby: stackby,
                key: dimensionField,
                method: 'value',
                value: 0
            });
        }
        // Stack
        transform.push({
            type: 'stack',
            groupby: this.getGroupbyFields().concat(facetby),
            field: stackField,
            sort: sort,
            as: [stackField + '_start', stackField + '_end'],
            offset: offset
        });
        return transform;
    };
    return StackNode;
}(dataflow_1.DataFlowNode);
exports.StackNode = StackNode;

},{"../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/timeunit.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fielddef_1 = require("../../fielddef");
var timeunit_1 = require("../../timeunit");
var util_1 = require("../../util");
var dataflow_1 = require("./dataflow");
var TimeUnitNode = /** @class */function (_super) {
    tslib_1.__extends(TimeUnitNode, _super);
    function TimeUnitNode(formula) {
        var _this = _super.call(this) || this;
        _this.formula = formula;
        return _this;
    }
    TimeUnitNode.prototype.clone = function () {
        return new TimeUnitNode(util_1.duplicate(this.formula));
    };
    TimeUnitNode.makeFromEncoding = function (model) {
        var formula = model.reduceFieldDef(function (timeUnitComponent, fieldDef) {
            if (fieldDef.timeUnit) {
                var f = fielddef_1.field(fieldDef);
                timeUnitComponent[f] = {
                    as: f,
                    timeUnit: fieldDef.timeUnit,
                    field: fieldDef.field
                };
            }
            return timeUnitComponent;
        }, {});
        if (util_1.keys(formula).length === 0) {
            return null;
        }
        return new TimeUnitNode(formula);
    };
    TimeUnitNode.makeFromTransform = function (t) {
        return new TimeUnitNode((_a = {}, _a[t.field] = {
            as: t.as,
            timeUnit: t.timeUnit,
            field: t.field
        }, _a));
        var _a;
    };
    TimeUnitNode.prototype.merge = function (other) {
        this.formula = tslib_1.__assign({}, this.formula, other.formula);
        other.remove();
    };
    TimeUnitNode.prototype.producedFields = function () {
        var out = {};
        util_1.vals(this.formula).forEach(function (f) {
            out[f.as] = true;
        });
        return out;
    };
    TimeUnitNode.prototype.dependentFields = function () {
        var out = {};
        util_1.vals(this.formula).forEach(function (f) {
            out[f.field] = true;
        });
        return out;
    };
    TimeUnitNode.prototype.assemble = function () {
        return util_1.vals(this.formula).map(function (c) {
            return {
                type: 'formula',
                as: c.as,
                expr: timeunit_1.fieldExpr(c.timeUnit, c.field)
            };
        });
    };
    return TimeUnitNode;
}(dataflow_1.DataFlowNode);
exports.TimeUnitNode = TimeUnitNode;

},{"../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./dataflow":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/dataflow.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/facet.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../channel");
var encoding_1 = require("../encoding");
var fielddef_1 = require("../fielddef");
var log = require("../log");
var scale_1 = require("../scale");
var util_1 = require("../util");
var vega_schema_1 = require("../vega.schema");
var buildmodel_1 = require("./buildmodel");
var assemble_1 = require("./data/assemble");
var parse_1 = require("./data/parse");
var header_1 = require("./layout/header");
var parse_2 = require("./layoutsize/parse");
var model_1 = require("./model");
var repeater_1 = require("./repeater");
var resolve_1 = require("./resolve");
var domain_1 = require("./scale/domain");
var FacetModel = /** @class */function (_super) {
    tslib_1.__extends(FacetModel, _super);
    function FacetModel(spec, parent, parentGivenName, repeater, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, spec.resolve) || this;
        _this.type = 'facet';
        _this.child = buildmodel_1.buildModel(spec.spec, _this, _this.getName('child'), undefined, repeater, config);
        _this.children = [_this.child];
        var facet = repeater_1.replaceRepeaterInFacet(spec.facet, repeater);
        _this.facet = _this.initFacet(facet);
        return _this;
    }
    FacetModel.prototype.initFacet = function (facet) {
        // clone to prevent side effect to the original spec
        return encoding_1.reduce(facet, function (normalizedFacet, fieldDef, channel) {
            if (!util_1.contains([channel_1.ROW, channel_1.COLUMN], channel)) {
                // Drop unsupported channel
                log.warn(log.message.incompatibleChannel(channel, 'facet'));
                return normalizedFacet;
            }
            if (fieldDef.field === undefined) {
                log.warn(log.message.emptyFieldDef(fieldDef, channel));
                return normalizedFacet;
            }
            // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
            normalizedFacet[channel] = fielddef_1.normalize(fieldDef, channel);
            return normalizedFacet;
        }, {});
    };
    FacetModel.prototype.channelHasField = function (channel) {
        return !!this.facet[channel];
    };
    FacetModel.prototype.fieldDef = function (channel) {
        return this.facet[channel];
    };
    FacetModel.prototype.parseData = function () {
        this.component.data = parse_1.parseData(this);
        this.child.parseData();
    };
    FacetModel.prototype.parseLayoutSize = function () {
        parse_2.parseChildrenLayoutSize(this);
    };
    FacetModel.prototype.parseSelection = function () {
        // As a facet has a single child, the selection components are the same.
        // The child maintains its selections to assemble signals, which remain
        // within its unit.
        this.child.parseSelection();
        this.component.selection = this.child.component.selection;
    };
    FacetModel.prototype.parseMarkGroup = function () {
        this.child.parseMarkGroup();
    };
    FacetModel.prototype.parseAxisAndHeader = function () {
        this.child.parseAxisAndHeader();
        this.parseHeader('column');
        this.parseHeader('row');
        this.mergeChildAxis('x');
        this.mergeChildAxis('y');
    };
    FacetModel.prototype.parseHeader = function (channel) {
        if (this.channelHasField(channel)) {
            var fieldDef = this.facet[channel];
            var header = fieldDef.header || {};
            var title = header.title !== undefined ? header.title : fielddef_1.title(fieldDef, this.config);
            if (this.child.component.layoutHeaders[channel].title) {
                // merge title with child to produce "Title / Subtitle / Sub-subtitle"
                title += ' / ' + this.child.component.layoutHeaders[channel].title;
                this.child.component.layoutHeaders[channel].title = null;
            }
            this.component.layoutHeaders[channel] = {
                title: title,
                facetFieldDef: fieldDef,
                // TODO: support adding label to footer as well
                header: [this.makeHeaderComponent(channel, true)]
            };
        }
    };
    FacetModel.prototype.makeHeaderComponent = function (channel, labels) {
        var sizeType = channel === 'row' ? 'height' : 'width';
        return {
            labels: labels,
            sizeSignal: this.child.component.layoutSize.get(sizeType) ? this.child.getSizeSignalRef(sizeType) : undefined,
            axes: []
        };
    };
    FacetModel.prototype.mergeChildAxis = function (channel) {
        var child = this.child;
        if (child.component.axes[channel]) {
            var _a = this.component,
                layoutHeaders = _a.layoutHeaders,
                resolve = _a.resolve;
            resolve.axis[channel] = resolve_1.parseGuideResolve(resolve, channel);
            if (resolve.axis[channel] === 'shared') {
                // For shared axis, move the axes to facet's header or footer
                var headerChannel = channel === 'x' ? 'column' : 'row';
                var layoutHeader = layoutHeaders[headerChannel];
                for (var _i = 0, _b = child.component.axes[channel]; _i < _b.length; _i++) {
                    var axisComponent = _b[_i];
                    var mainAxis = axisComponent.main;
                    var headerType = header_1.getHeaderType(mainAxis.get('orient'));
                    layoutHeader[headerType] = layoutHeader[headerType] || [this.makeHeaderComponent(headerChannel, false)];
                    // LayoutHeader no longer keep track of property precedence, thus let's combine.
                    layoutHeader[headerType][0].axes.push(mainAxis.combine());
                    delete axisComponent.main;
                }
            } else {
                // Otherwise do nothing for independent axes
            }
        }
    };
    FacetModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.child.assembleSelectionTopLevelSignals(signals);
    };
    FacetModel.prototype.assembleSelectionSignals = function () {
        this.child.assembleSelectionSignals();
        return [];
    };
    FacetModel.prototype.assembleSelectionData = function (data) {
        return this.child.assembleSelectionData(data);
    };
    FacetModel.prototype.getLayoutBandMixins = function (headerType) {
        var bandMixins = {};
        var bandType = headerType === 'header' ? 'headerBand' : 'footerBand';
        for (var _i = 0, _a = ['row', 'column']; _i < _a.length; _i++) {
            var channel = _a[_i];
            var layoutHeaderComponent = this.component.layoutHeaders[channel];
            var headerComponent = layoutHeaderComponent[headerType];
            if (headerComponent && headerComponent[0]) {
                var sizeType = channel === 'row' ? 'height' : 'width';
                if (!this.child.component.layoutSize.get(sizeType)) {
                    // If facet child does not have size signal, then apply headerBand
                    bandMixins[bandType] = bandMixins[bandType] || {};
                    bandMixins[bandType][channel] = 0.5;
                }
            }
        }
        return bandMixins;
    };
    FacetModel.prototype.assembleLayout = function () {
        var columns = this.channelHasField('column') ? this.columnDistinctSignal() : 1;
        // TODO: determine default align based on shared / independent scales
        return tslib_1.__assign({ padding: { row: 10, column: 10 } }, this.getLayoutBandMixins('header'), this.getLayoutBandMixins('footer'), {
            // TODO: support offset for rowHeader/rowFooter/rowTitle/columnHeader/columnFooter/columnTitle
            offset: 10, columns: columns, bounds: 'full', align: 'all' });
    };
    FacetModel.prototype.assembleLayoutSignals = function () {
        // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.
        return this.child.assembleLayoutSignals();
    };
    FacetModel.prototype.columnDistinctSignal = function () {
        if (this.parent && this.parent instanceof FacetModel) {
            // For nested facet, we will add columns to group mark instead
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return undefined;
        } else {
            // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.
            var facetLayoutDataName = this.getName('column_domain');
            return { signal: "length(data('" + facetLayoutDataName + "'))" };
        }
    };
    FacetModel.prototype.assembleGroup = function (signals) {
        if (this.parent && this.parent instanceof FacetModel) {
            // Provide number of columns for layout.
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return tslib_1.__assign({}, this.channelHasField('column') ? {
                encode: {
                    update: {
                        // TODO(https://github.com/vega/vega-lite/issues/2759):
                        // Correct the signal for facet of concat of facet_column
                        columns: { field: fielddef_1.field(this.facet.column, { prefix: 'distinct' }) }
                    }
                }
            } : {}, _super.prototype.assembleGroup.call(this, signals));
        }
        return _super.prototype.assembleGroup.call(this, signals);
    };
    /**
     * Aggregate cardinality for calculating size
     */
    FacetModel.prototype.getCardinalityAggregateForChild = function () {
        var fields = [];
        var ops = [];
        if (this.child instanceof FacetModel) {
            if (this.child.channelHasField('column')) {
                fields.push(fielddef_1.field(this.child.facet.column));
                ops.push('distinct');
            }
        } else {
            for (var _i = 0, _a = ['x', 'y']; _i < _a.length; _i++) {
                var channel = _a[_i];
                var childScaleComponent = this.child.component.scales[channel];
                if (childScaleComponent && !childScaleComponent.merged) {
                    var type = childScaleComponent.get('type');
                    var range = childScaleComponent.get('range');
                    if (scale_1.hasDiscreteDomain(type) && vega_schema_1.isVgRangeStep(range)) {
                        var domain = domain_1.assembleDomain(this.child, channel);
                        var field_1 = domain_1.getFieldFromDomain(domain);
                        if (field_1) {
                            fields.push(field_1);
                            ops.push('distinct');
                        } else {
                            log.warn('Unknown field for ${channel}.  Cannot calculate view size.');
                        }
                    }
                }
            }
        }
        return fields.length ? { fields: fields, ops: ops } : undefined;
    };
    FacetModel.prototype.assembleMarks = function () {
        var _a = this,
            child = _a.child,
            facet = _a.facet;
        var facetRoot = this.component.data.facetRoot;
        var data = assemble_1.assembleFacetData(facetRoot);
        // If we facet by two dimensions, we need to add a cross operator to the aggregation
        // so that we create all groups
        var hasRow = this.channelHasField(channel_1.ROW);
        var hasColumn = this.channelHasField(channel_1.COLUMN);
        var layoutSizeEncodeEntry = child.assembleLayoutSize();
        var aggregateMixins = {};
        if (hasRow && hasColumn) {
            aggregateMixins.aggregate = { cross: true };
        }
        var cardinalityAggregateForChild = this.getCardinalityAggregateForChild();
        if (cardinalityAggregateForChild) {
            aggregateMixins.aggregate = tslib_1.__assign({}, aggregateMixins.aggregate, cardinalityAggregateForChild);
        }
        var title = child.assembleTitle();
        var style = child.assembleGroupStyle();
        var markGroup = tslib_1.__assign({ name: this.getName('cell'), type: 'group' }, title ? { title: title } : {}, style ? { style: style } : {}, { from: {
                facet: tslib_1.__assign({ name: facetRoot.name, data: facetRoot.data, groupby: [].concat(hasRow ? [this.field(channel_1.ROW)] : [], hasColumn ? [this.field(channel_1.COLUMN)] : []) }, aggregateMixins)
            }, sort: {
                field: [].concat(hasRow ? [this.field(channel_1.ROW, { expr: 'datum' })] : [], hasColumn ? [this.field(channel_1.COLUMN, { expr: 'datum' })] : []),
                order: [].concat(hasRow ? [facet.row.sort || 'ascending'] : [], hasColumn ? [facet.column.sort || 'ascending'] : [])
            } }, data.length > 0 ? { data: data } : {}, layoutSizeEncodeEntry ? { encode: { update: layoutSizeEncodeEntry } } : {}, child.assembleGroup());
        return [markGroup];
    };
    FacetModel.prototype.getMapping = function () {
        return this.facet;
    };
    return FacetModel;
}(model_1.ModelWithField);
exports.FacetModel = FacetModel;

},{"../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","./buildmodel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/buildmodel.js","./data/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/assemble.js","./data/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/parse.js","./layout/header":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layout/header.js","./layoutsize/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js","./model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./repeater":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/repeater.js","./resolve":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/resolve.js","./scale/domain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layer.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var log = require("../log");
var spec_1 = require("../spec");
var util_1 = require("../util");
var parse_1 = require("./axis/parse");
var parse_2 = require("./data/parse");
var assemble_1 = require("./layoutsize/assemble");
var parse_3 = require("./layoutsize/parse");
var model_1 = require("./model");
var selection_1 = require("./selection/selection");
var unit_1 = require("./unit");
var LayerModel = /** @class */function (_super) {
    tslib_1.__extends(LayerModel, _super);
    function LayerModel(spec, parent, parentGivenName, parentGivenSize, repeater, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, spec.resolve) || this;
        _this.type = 'layer';
        var layoutSize = tslib_1.__assign({}, parentGivenSize, spec.width ? { width: spec.width } : {}, spec.height ? { height: spec.height } : {});
        _this.initSize(layoutSize);
        _this.children = spec.layer.map(function (layer, i) {
            if (spec_1.isLayerSpec(layer)) {
                return new LayerModel(layer, _this, _this.getName('layer_' + i), layoutSize, repeater, config);
            }
            if (spec_1.isUnitSpec(layer)) {
                return new unit_1.UnitModel(layer, _this, _this.getName('layer_' + i), layoutSize, repeater, config);
            }
            throw new Error(log.message.INVALID_SPEC);
        });
        return _this;
    }
    LayerModel.prototype.parseData = function () {
        this.component.data = parse_2.parseData(this);
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseData();
        }
    };
    LayerModel.prototype.parseLayoutSize = function () {
        parse_3.parseLayerLayoutSize(this);
    };
    LayerModel.prototype.parseSelection = function () {
        var _this = this;
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        var _loop_1 = function _loop_1(child) {
            child.parseSelection();
            util_1.keys(child.component.selection).forEach(function (key) {
                _this.component.selection[key] = child.component.selection[key];
            });
        };
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            _loop_1(child);
        }
    };
    LayerModel.prototype.parseMarkGroup = function () {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            child.parseMarkGroup();
        }
    };
    LayerModel.prototype.parseAxisAndHeader = function () {
        parse_1.parseLayerAxis(this);
    };
    LayerModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return this.children.reduce(function (sg, child) {
            return child.assembleSelectionTopLevelSignals(sg);
        }, signals);
    };
    // TODO: Support same named selections across children.
    LayerModel.prototype.assembleSelectionSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleSelectionSignals());
        }, []);
    };
    LayerModel.prototype.assembleLayoutSignals = function () {
        return this.children.reduce(function (signals, child) {
            return signals.concat(child.assembleLayoutSignals());
        }, assemble_1.assembleLayoutSignals(this));
    };
    LayerModel.prototype.assembleSelectionData = function (data) {
        return this.children.reduce(function (db, child) {
            return child.assembleSelectionData(db);
        }, []);
    };
    LayerModel.prototype.assembleTitle = function () {
        var title = _super.prototype.assembleTitle.call(this);
        if (title) {
            return title;
        }
        // If title does not provide layer, look into children
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            title = child.assembleTitle();
            if (title) {
                return title;
            }
        }
        return undefined;
    };
    LayerModel.prototype.assembleLayout = function () {
        return null;
    };
    LayerModel.prototype.assembleMarks = function () {
        return selection_1.assembleLayerSelectionMarks(this, util_1.flatten(this.children.map(function (child) {
            return child.assembleMarks();
        })));
    };
    return LayerModel;
}(model_1.Model);
exports.LayerModel = LayerModel;

},{"../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../spec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./axis/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/parse.js","./data/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/parse.js","./layoutsize/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/assemble.js","./layoutsize/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js","./model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./unit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/unit.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layout/header.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fielddef_1 = require("../../fielddef");
var common_1 = require("../common");
exports.HEADER_CHANNELS = ['row', 'column'];
exports.HEADER_TYPES = ['header', 'footer'];
function getHeaderType(orient) {
    if (orient === 'top' || orient === 'left') {
        return 'header';
    }
    return 'footer';
}
exports.getHeaderType = getHeaderType;
function getTitleGroup(model, channel) {
    var title = model.component.layoutHeaders[channel].title;
    var textOrient = channel === 'row' ? 'vertical' : undefined;
    return {
        name: model.getName(channel + "_title"),
        role: channel + "-title",
        type: 'group',
        marks: [{
            type: 'text',
            role: channel + "-title-text",
            style: 'guide-title',
            encode: {
                update: tslib_1.__assign({
                    // TODO: add title align
                    align: { value: 'center' }, text: { value: title } }, textOrient === 'vertical' ? { angle: { value: 270 } } : {})
            }
        }]
    };
}
exports.getTitleGroup = getTitleGroup;
function getHeaderGroup(model, channel, headerType, layoutHeader, header) {
    if (header) {
        var title = null;
        if (layoutHeader.facetFieldDef && header.labels) {
            var facetFieldDef = layoutHeader.facetFieldDef;
            var format = facetFieldDef.header ? facetFieldDef.header.format : undefined;
            title = {
                text: common_1.formatSignalRef(facetFieldDef, format, 'parent', model.config),
                offset: 10,
                orient: channel === 'row' ? 'left' : 'top',
                style: 'guide-label',
                encode: {
                    update: tslib_1.__assign({ fontWeight: { value: 'normal' }, angle: { value: 0 }, fontSize: { value: 10 } }, channel === 'row' ? {
                        align: { value: 'right' },
                        baseline: { value: 'middle' }
                    } : {})
                }
            };
        }
        var axes = header.axes;
        var hasAxes = axes && axes.length > 0;
        if (title || hasAxes) {
            var sizeChannel = channel === 'row' ? 'height' : 'width';
            return tslib_1.__assign({ name: model.getName(channel + "_" + headerType), type: 'group', role: channel + "-" + headerType }, layoutHeader.facetFieldDef ? {
                from: { data: model.getName(channel + '_domain') },
                sort: {
                    field: fielddef_1.field(layoutHeader.facetFieldDef, { expr: 'datum' }),
                    order: layoutHeader.facetFieldDef.header && layoutHeader.facetFieldDef.sort || 'ascending'
                }
            } : {}, title ? { title: title } : {}, header.sizeSignal ? {
                encode: {
                    update: (_a = {}, _a[sizeChannel] = header.sizeSignal, _a)
                }
            } : {}, hasAxes ? { axes: axes } : {});
        }
    }
    return null;
    var _a;
}
exports.getHeaderGroup = getHeaderGroup;

},{"../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/assemble.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var scale_1 = require("../../scale");
var vega_schema_1 = require("../../vega.schema");
var model_1 = require("../model");
function assembleLayoutSignals(model) {
    return [].concat(sizeSignals(model, 'width'), sizeSignals(model, 'height'));
}
exports.assembleLayoutSignals = assembleLayoutSignals;
function sizeSignals(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var size = model.component.layoutSize.get(sizeType);
    if (!size || size === 'merged') {
        return [];
    }
    // Read size signal name from name map, just in case it is the top-level size signal that got renamed.
    var name = model.getSizeSignalRef(sizeType).signal;
    if (size === 'range-step') {
        var scaleComponent = model.getScaleComponent(channel);
        if (scaleComponent) {
            var type = scaleComponent.get('type');
            var range = scaleComponent.get('range');
            if (scale_1.hasDiscreteDomain(type) && vega_schema_1.isVgRangeStep(range)) {
                var scaleName = model.scaleName(channel);
                if (model_1.isFacetModel(model.parent)) {
                    // If parent is facet and this is an independent scale, return only signal signal
                    // as the width/height will be calculated using the cardinality from
                    // facet's aggregate rather than reading from scale domain
                    var parentResolve = model.parent.component.resolve;
                    if (parentResolve.scale[channel] === 'independent') {
                        return [stepSignal(scaleName, range)];
                    }
                }
                return [stepSignal(scaleName, range), {
                    name: name,
                    update: sizeExpr(scaleName, scaleComponent, "domain('" + scaleName + "').length")
                }];
            }
        }
        /* istanbul ignore next: Condition should not happen -- only for warning in development. */
        throw new Error('layout size is range step although there is no rangeStep.');
    } else {
        return [{
            name: name,
            update: "" + size
        }];
    }
}
exports.sizeSignals = sizeSignals;
function stepSignal(scaleName, range) {
    return {
        name: scaleName + '_step',
        value: range.step
    };
}
function sizeExpr(scaleName, scaleComponent, cardinality) {
    var type = scaleComponent.get('type');
    var padding = scaleComponent.get('padding');
    var paddingOuter = scaleComponent.get('paddingOuter');
    paddingOuter = paddingOuter !== undefined ? paddingOuter : padding;
    var paddingInner = scaleComponent.get('paddingInner');
    paddingInner = type === 'band' ?
    // only band has real paddingInner
    paddingInner !== undefined ? paddingInner : padding :
    // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,
    // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.
    1;
    return "bandspace(" + cardinality + ", " + paddingInner + ", " + paddingOuter + ") * " + scaleName + "_step";
}
exports.sizeExpr = sizeExpr;

},{"../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var scale_1 = require("../../scale");
var vega_schema_1 = require("../../vega.schema");
var split_1 = require("../split");
function parseLayerLayoutSize(model) {
    parseChildrenLayoutSize(model);
    var layoutSizeCmpt = model.component.layoutSize;
    layoutSizeCmpt.setWithExplicit('width', parseNonUnitLayoutSizeForChannel(model, 'width'));
    layoutSizeCmpt.setWithExplicit('height', parseNonUnitLayoutSizeForChannel(model, 'height'));
}
exports.parseLayerLayoutSize = parseLayerLayoutSize;
exports.parseRepeatLayoutSize = parseLayerLayoutSize;
function parseConcatLayoutSize(model) {
    parseChildrenLayoutSize(model);
    var layoutSizeCmpt = model.component.layoutSize;
    var sizeTypeToMerge = model.isVConcat ? 'width' : 'height';
    layoutSizeCmpt.setWithExplicit(sizeTypeToMerge, parseNonUnitLayoutSizeForChannel(model, sizeTypeToMerge));
}
exports.parseConcatLayoutSize = parseConcatLayoutSize;
function parseChildrenLayoutSize(model) {
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        child.parseLayoutSize();
    }
}
exports.parseChildrenLayoutSize = parseChildrenLayoutSize;
function parseNonUnitLayoutSizeForChannel(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var resolve = model.component.resolve;
    var mergedSize;
    // Try to merge layout size
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        var childSize = child.component.layoutSize.getWithExplicit(sizeType);
        var scaleResolve = resolve.scale[channel];
        if (scaleResolve === 'independent' && childSize.value === 'range-step') {
            // Do not merge independent scales with range-step as their size depends
            // on the scale domains, which can be different between scales.
            mergedSize = undefined;
            break;
        }
        if (mergedSize) {
            if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {
                // For independent scale, only merge if all the sizes are the same.
                // If the values are different, abandon the merge!
                mergedSize = undefined;
                break;
            }
            mergedSize = split_1.mergeValuesWithExplicit(mergedSize, childSize, sizeType, '', split_1.defaultTieBreaker);
        } else {
            mergedSize = childSize;
        }
    }
    if (mergedSize) {
        // If merged, rename size and set size of all children.
        for (var _b = 0, _c = model.children; _b < _c.length; _b++) {
            var child = _c[_b];
            model.renameLayoutSize(child.getName(sizeType), model.getName(sizeType));
            child.component.layoutSize.set(sizeType, 'merged', false);
        }
        return mergedSize;
    } else {
        // Otherwise, there is no merged size.
        return {
            explicit: false,
            value: undefined
        };
    }
}
function parseUnitLayoutSize(model) {
    var layoutSizeComponent = model.component.layoutSize;
    if (!layoutSizeComponent.explicit.width) {
        var width = defaultUnitSize(model, 'width');
        layoutSizeComponent.set('width', width, false);
    }
    if (!layoutSizeComponent.explicit.height) {
        var height = defaultUnitSize(model, 'height');
        layoutSizeComponent.set('height', height, false);
    }
}
exports.parseUnitLayoutSize = parseUnitLayoutSize;
function defaultUnitSize(model, sizeType) {
    var channel = sizeType === 'width' ? 'x' : 'y';
    var config = model.config;
    var scaleComponent = model.getScaleComponent(channel);
    if (scaleComponent) {
        var scaleType = scaleComponent.get('type');
        var range = scaleComponent.get('range');
        if (scale_1.hasDiscreteDomain(scaleType) && vega_schema_1.isVgRangeStep(range)) {
            // For discrete domain with range.step, use dynamic width/height
            return 'range-step';
        } else {
            return config.view[sizeType];
        }
    } else {
        // No scale - set default size
        if (sizeType === 'width' && model.mark() === 'text') {
            // width for text mark without x-field is a bit wider than typical range step
            return config.scale.textXRangeStep;
        }
        // Set width/height equal to rangeStep config or if rangeStep is null, use value from default scale config.
        return config.scale.rangeStep || scale_1.defaultScaleConfig.rangeStep;
    }
}

},{"../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/assemble.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var stringify = require("json-stable-stringify");
var util_1 = require("../../util");
var parse_1 = require("./parse");
function assembleLegends(model) {
    var legendComponentIndex = model.component.legends;
    var legendByDomain = {};
    util_1.keys(legendComponentIndex).forEach(function (channel) {
        var scaleComponent = model.getScaleComponent(channel);
        var domainHash = stringify(scaleComponent.domains);
        if (legendByDomain[domainHash]) {
            for (var _i = 0, _a = legendByDomain[domainHash]; _i < _a.length; _i++) {
                var mergedLegendComponent = _a[_i];
                var merged = parse_1.mergeLegendComponent(mergedLegendComponent, legendComponentIndex[channel]);
                if (!merged) {
                    // If cannot merge, need to add this legend separately
                    legendByDomain[domainHash].push(legendComponentIndex[channel]);
                }
            }
        } else {
            legendByDomain[domainHash] = [legendComponentIndex[channel].clone()];
        }
    });
    return util_1.flatten(util_1.vals(legendByDomain)).map(function (legendCmpt) {
        return legendCmpt.combine();
    });
}
exports.assembleLegends = assembleLegends;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/parse.js","json-stable-stringify":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/node_modules/json-stable-stringify/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/component.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var split_1 = require("../split");
var LegendComponent = /** @class */function (_super) {
    tslib_1.__extends(LegendComponent, _super);
    function LegendComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LegendComponent;
}(split_1.Split);
exports.LegendComponent = LegendComponent;

},{"../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/encode.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var mark_1 = require("../../mark");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
var common_1 = require("../common");
var mixins = require("../mark/mixins");
function symbols(fieldDef, symbolsSpec, model, channel, legendCmpt) {
    if (legendCmpt.get('type') === 'gradient') {
        return undefined;
    }
    var symbols = {};
    var mark = model.mark();
    switch (mark) {
        case mark_1.BAR:
        case mark_1.TICK:
        case mark_1.TEXT:
            symbols.shape = { value: 'square' };
            break;
        case mark_1.CIRCLE:
        case mark_1.SQUARE:
            symbols.shape = { value: mark };
            break;
        case mark_1.POINT:
        case mark_1.LINE:
        case mark_1.AREA:
            // use default circle
            break;
    }
    var filled = model.markDef.filled;
    var config = channel === channel_1.COLOR ?
    /* For color's legend, do not set fill (when filled) or stroke (when unfilled) property from config because the legend's `fill` or `stroke` scale should have precedence */
    util_1.without(mark_1.FILL_STROKE_CONFIG, [filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :
    /* For other legend, no need to omit. */
    mark_1.FILL_STROKE_CONFIG;
    config = util_1.without(config, ['strokeDash', 'strokeDashOffset']);
    common_1.applyMarkConfig(symbols, model, config);
    if (channel !== channel_1.COLOR) {
        var colorMixins = mixins.color(model);
        // If there are field for fill or stroke, remove them as we already apply channels.
        if (colorMixins.fill && (colorMixins.fill['field'] || colorMixins.fill['value'] === 'transparent')) {
            delete colorMixins.fill;
        }
        if (colorMixins.stroke && (colorMixins.stroke['field'] || colorMixins.stroke['value'] === 'transparent')) {
            delete colorMixins.stroke;
        }
        symbols = tslib_1.__assign({}, symbols, colorMixins);
    }
    if (channel !== channel_1.SHAPE) {
        var shapeDef = model.encoding.shape;
        if (fielddef_1.isValueDef(shapeDef)) {
            symbols.shape = { value: shapeDef.value };
        }
    }
    if (channel !== channel_1.OPACITY) {
        var opacityDef = model.encoding.opacity;
        if (fielddef_1.isValueDef(opacityDef)) {
            symbols.opacity = { value: opacityDef.value };
        }
    }
    symbols = tslib_1.__assign({}, symbols, symbolsSpec);
    return util_1.keys(symbols).length > 0 ? symbols : undefined;
}
exports.symbols = symbols;
function gradient(fieldDef, gradientSpec, model, channel, legendCmpt) {
    var gradient = {};
    if (legendCmpt.get('type') === 'gradient') {
        var opacityDef = model.encoding.opacity;
        if (fielddef_1.isValueDef(opacityDef)) {
            gradient.opacity = { value: opacityDef.value };
        }
    }
    gradient = tslib_1.__assign({}, gradient, gradientSpec);
    return util_1.keys(gradient).length > 0 ? gradient : undefined;
}
exports.gradient = gradient;
function labels(fieldDef, labelsSpec, model, channel, legendCmpt) {
    var legend = model.legend(channel);
    var config = model.config;
    var labels = {};
    if (fielddef_1.isTimeFieldDef(fieldDef)) {
        var isUTCScale = model.getScaleComponent(channel).get('type') === scale_1.ScaleType.UTC;
        labelsSpec = tslib_1.__assign({ text: {
                signal: common_1.timeFormatExpression('datum.value', fieldDef.timeUnit, legend.format, config.legend.shortTimeLabels, config.timeFormat, isUTCScale)
            } }, labelsSpec);
    }
    labels = tslib_1.__assign({}, labels, labelsSpec);
    return util_1.keys(labels).length > 0 ? labels : undefined;
}
exports.labels = labels;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../mark/mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/parse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var legend_1 = require("../../legend");
var util_1 = require("../../util");
var common_1 = require("../common");
var model_1 = require("../model");
var resolve_1 = require("../resolve");
var split_1 = require("../split");
var split_2 = require("../split");
var component_1 = require("./component");
var encode = require("./encode");
var properties = require("./properties");
function parseLegend(model) {
    if (model_1.isUnitModel(model)) {
        model.component.legends = parseUnitLegend(model);
    } else {
        model.component.legends = parseNonUnitLegend(model);
    }
}
exports.parseLegend = parseLegend;
function parseUnitLegend(model) {
    return [channel_1.COLOR, channel_1.SIZE, channel_1.SHAPE, channel_1.OPACITY].reduce(function (legendComponent, channel) {
        if (model.legend(channel)) {
            legendComponent[channel] = parseLegendForChannel(model, channel);
        }
        return legendComponent;
    }, {});
}
function getLegendDefWithScale(model, channel) {
    // For binned field with continuous scale, use a special scale so we can overrride the mark props and labels
    switch (channel) {
        case channel_1.COLOR:
            var scale = model.scaleName(channel_1.COLOR);
            return model.markDef.filled ? { fill: scale } : { stroke: scale };
        case channel_1.SIZE:
            return { size: model.scaleName(channel_1.SIZE) };
        case channel_1.SHAPE:
            return { shape: model.scaleName(channel_1.SHAPE) };
        case channel_1.OPACITY:
            return { opacity: model.scaleName(channel_1.OPACITY) };
    }
    return null;
}
function parseLegendForChannel(model, channel) {
    var fieldDef = model.fieldDef(channel);
    var legend = model.legend(channel);
    var legendCmpt = new component_1.LegendComponent({}, getLegendDefWithScale(model, channel));
    legend_1.LEGEND_PROPERTIES.forEach(function (property) {
        var value = getProperty(property, legend, channel, model);
        if (value !== undefined) {
            var explicit = property === 'values' ? !!legend.values : value === legend[property];
            legendCmpt.set(property, value, explicit);
        }
    });
    // 2) Add mark property definition groups
    var legendEncoding = legend.encoding || {};
    var legendEncode = ['labels', 'legend', 'title', 'symbols', 'gradient'].reduce(function (e, part) {
        var value = encode[part] ? encode[part](fieldDef, legendEncoding[part], model, channel, legendCmpt) : legendEncoding[part]; // no rule -- just default values
        if (value !== undefined && util_1.keys(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    if (util_1.keys(legendEncode).length > 0) {
        legendCmpt.set('encode', legendEncode, !!legend.encoding);
    }
    return legendCmpt;
}
exports.parseLegendForChannel = parseLegendForChannel;
function getProperty(property, specifiedLegend, channel, model) {
    var fieldDef = model.fieldDef(channel);
    switch (property) {
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            return common_1.numberFormat(fieldDef, specifiedLegend.format, model.config);
        case 'title':
            return common_1.getSpecifiedOrDefaultValue(specifiedLegend.title, fielddef_1.title(fieldDef, model.config));
        case 'values':
            return properties.values(specifiedLegend);
        case 'type':
            return common_1.getSpecifiedOrDefaultValue(specifiedLegend.type, properties.type(fieldDef.type, channel, model.getScaleComponent(channel).get('type')));
    }
    // Otherwise, return specified property.
    return specifiedLegend[property];
}
function parseNonUnitLegend(model) {
    var _a = model.component,
        legends = _a.legends,
        resolve = _a.resolve;
    var _loop_1 = function _loop_1(child) {
        parseLegend(child);
        util_1.keys(child.component.legends).forEach(function (channel) {
            resolve.legend[channel] = resolve_1.parseGuideResolve(model.component.resolve, channel);
            if (resolve.legend[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                legends[channel] = mergeLegendComponent(legends[channel], child.component.legends[channel]);
                if (!legends[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the legend shared.
                    // Thus, mark legend as independent and remove the legend component.
                    resolve.legend[channel] = 'independent';
                    delete legends[channel];
                }
            }
        });
    };
    for (var _i = 0, _b = model.children; _i < _b.length; _i++) {
        var child = _b[_i];
        _loop_1(child);
    }
    util_1.keys(legends).forEach(function (channel) {
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            if (!child.component.legends[channel]) {
                // skip if the child does not have a particular legend
                continue;
            }
            if (resolve.legend[channel] === 'shared') {
                // After merging shared legend, make sure to remove legend from child
                delete child.component.legends[channel];
            }
        }
    });
    return legends;
}
function mergeLegendComponent(mergedLegend, childLegend) {
    if (!mergedLegend) {
        return childLegend.clone();
    }
    var mergedOrient = mergedLegend.getWithExplicit('orient');
    var childOrient = childLegend.getWithExplicit('orient');
    if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
        // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
        // Cannot merge due to inconsistent orient
        return undefined;
    }
    var typeMerged = false;
    var _loop_2 = function _loop_2(prop) {
        var mergedValueWithExplicit = split_2.mergeValuesWithExplicit(mergedLegend.getWithExplicit(prop), childLegend.getWithExplicit(prop), prop, 'legend',
        // Tie breaker function
        function (v1, v2) {
            switch (prop) {
                case 'title':
                    return common_1.titleMerger(v1, v2);
                case 'type':
                    // There are only two types. If we have different types, then prefer symbol over gradient.
                    typeMerged = true;
                    return split_1.makeImplicit('symbol');
            }
            return split_2.defaultTieBreaker(v1, v2, prop, 'legend');
        });
        mergedLegend.setWithExplicit(prop, mergedValueWithExplicit);
    };
    // Otherwise, let's merge
    for (var _i = 0, VG_LEGEND_PROPERTIES_1 = legend_1.VG_LEGEND_PROPERTIES; _i < VG_LEGEND_PROPERTIES_1.length; _i++) {
        var prop = VG_LEGEND_PROPERTIES_1[_i];
        _loop_2(prop);
    }
    if (typeMerged) {
        if (((mergedLegend.implicit || {}).encode || {}).gradient) {
            util_1.deleteNestedProperty(mergedLegend.implicit, ['encode', 'gradient']);
        }
        if (((mergedLegend.explicit || {}).encode || {}).gradient) {
            util_1.deleteNestedProperty(mergedLegend.explicit, ['encode', 'gradient']);
        }
    }
    return mergedLegend;
}
exports.mergeLegendComponent = mergeLegendComponent;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../legend":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/legend.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../resolve":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/resolve.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","./component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/component.js","./encode":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/encode.js","./properties":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/properties.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/properties.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var datetime_1 = require("../../datetime");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
function values(legend) {
    var vals = legend.values;
    if (vals && datetime_1.isDateTime(vals[0])) {
        return vals.map(function (dt) {
            // normalize = true as end user won't put 0 = January
            return { signal: datetime_1.dateTimeExpr(dt, true) };
        });
    }
    return vals;
}
exports.values = values;
function type(type, channel, scaleType) {
    if (channel === channel_1.COLOR && (type === 'quantitative' && !scale_1.isBinScale(scaleType) || type === 'temporal' && util_1.contains(['time', 'utc'], scaleType))) {
        return 'gradient';
    }
    return undefined;
}
exports.type = type;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/area.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var mixins = require("./mixins");
exports.area = {
    vgMark: 'area',
    encodeEntry: function encodeEntry(model) {
        return tslib_1.__assign({}, mixins.pointPosition('x', model, 'zeroOrMin'), mixins.pointPosition('y', model, 'zeroOrMin'), mixins.pointPosition2(model, 'zeroOrMin'), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model), mixins.markDefProperties(model.markDef, ['orient', 'interpolate', 'tension']));
    }
};

},{"./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/bar.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var scale_1 = require("../../scale");
var vega_schema_1 = require("../../vega.schema");
var mixins = require("./mixins");
var ref = require("./valueref");
exports.bar = {
    vgMark: 'rect',
    encodeEntry: function encodeEntry(model) {
        var stack = model.stack;
        return tslib_1.__assign({}, x(model, stack), y(model, stack), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model));
    }
};
function x(model, stack) {
    var config = model.config,
        width = model.width;
    var orient = model.markDef.orient;
    var sizeDef = model.encoding.size;
    var xDef = model.encoding.x;
    var xScaleName = model.scaleName(channel_1.X);
    var xScale = model.getScaleComponent(channel_1.X);
    // x, x2, and width -- we must specify two of these in all conditions
    if (orient === 'horizontal') {
        return tslib_1.__assign({}, mixins.pointPosition('x', model, 'zeroOrMin'), mixins.pointPosition2(model, 'zeroOrMin'));
    } else {
        if (fielddef_1.isFieldDef(xDef)) {
            var xScaleType = xScale.get('type');
            if (xDef.bin && !sizeDef && !scale_1.hasDiscreteDomain(xScaleType)) {
                return mixins.binnedPosition(xDef, 'x', model.scaleName('x'), config.bar.binSpacing, xScale.get('reverse'));
            } else {
                if (xScaleType === scale_1.ScaleType.BAND) {
                    return mixins.bandPosition(xDef, 'x', model);
                }
            }
        }
        // sized bin, normal point-ordinal axis, quantitative x-axis, or no x
        return mixins.centeredBandPosition('x', model, tslib_1.__assign({}, ref.mid(width)), defaultSizeRef(xScaleName, xScale, config));
    }
}
function y(model, stack) {
    var config = model.config,
        encoding = model.encoding,
        height = model.height;
    var orient = model.markDef.orient;
    var sizeDef = encoding.size;
    var yDef = encoding.y;
    var yScaleName = model.scaleName(channel_1.Y);
    var yScale = model.getScaleComponent(channel_1.Y);
    // y, y2 & height -- we must specify two of these in all conditions
    if (orient === 'vertical') {
        return tslib_1.__assign({}, mixins.pointPosition('y', model, 'zeroOrMin'), mixins.pointPosition2(model, 'zeroOrMin'));
    } else {
        if (fielddef_1.isFieldDef(yDef)) {
            var yScaleType = yScale.get('type');
            if (yDef.bin && !sizeDef && !scale_1.hasDiscreteDomain(yScaleType)) {
                return mixins.binnedPosition(yDef, 'y', model.scaleName('y'), config.bar.binSpacing, yScale.get('reverse'));
            } else if (yScaleType === scale_1.ScaleType.BAND) {
                return mixins.bandPosition(yDef, 'y', model);
            }
        }
        return mixins.centeredBandPosition('y', model, ref.mid(height), defaultSizeRef(yScaleName, yScale, config));
    }
}
function defaultSizeRef(scaleName, scale, config) {
    if (config.bar.discreteBandSize) {
        return { value: config.bar.discreteBandSize };
    }
    if (scale) {
        var scaleType = scale.get('type');
        if (scaleType === scale_1.ScaleType.POINT) {
            var scaleRange = scale.get('range');
            if (vega_schema_1.isVgRangeStep(scaleRange) && vega_util_1.isNumber(scaleRange.step)) {
                return { value: scaleRange.step - 1 };
            }
            log.warn(log.message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL);
        } else if (scaleType === scale_1.ScaleType.BAND) {
            return ref.band(scaleName);
        } else {
            return { value: config.bar.continuousBandSize };
        }
    }
    if (config.scale.rangeStep && config.scale.rangeStep !== null) {
        return { value: config.scale.rangeStep - 1 };
    }
    return { value: 20 };
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/init.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var encoding_1 = require("../../encoding");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var mark_1 = require("../../mark");
var scale_1 = require("../../scale");
var type_1 = require("../../type");
var util_1 = require("../../util");
var common_1 = require("../common");
function normalizeMarkDef(markDef, encoding, scales, config) {
    var specifiedOrient = markDef.orient || common_1.getMarkConfig('orient', markDef, config);
    markDef.orient = orient(markDef.type, encoding, scales, specifiedOrient);
    if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {
        log.warn(log.message.orientOverridden(markDef.orient, specifiedOrient));
    }
    var specifiedFilled = markDef.filled;
    if (specifiedFilled === undefined) {
        markDef.filled = filled(markDef, config);
    }
}
exports.normalizeMarkDef = normalizeMarkDef;
/**
 * Initialize encoding's value with some special default values
 */
function initEncoding(mark, encoding, stacked, config) {
    var opacityConfig = common_1.getMarkConfig('opacity', mark, config);
    if (!encoding.opacity && opacityConfig === undefined) {
        var opacity = defaultOpacity(mark.type, encoding, stacked);
        if (opacity !== undefined) {
            encoding.opacity = { value: opacity };
        }
    }
    return encoding;
}
exports.initEncoding = initEncoding;
function defaultOpacity(mark, encoding, stacked) {
    if (util_1.contains([mark_1.POINT, mark_1.TICK, mark_1.CIRCLE, mark_1.SQUARE], mark)) {
        // point-based marks
        if (!encoding_1.isAggregate(encoding)) {
            return 0.7;
        }
    }
    return undefined;
}
function filled(markDef, config) {
    var filledConfig = common_1.getMarkConfig('filled', markDef, config);
    var mark = markDef.type;
    return filledConfig !== undefined ? filledConfig : mark !== mark_1.POINT && mark !== mark_1.LINE && mark !== mark_1.RULE;
}
function orient(mark, encoding, scales, specifiedOrient) {
    switch (mark) {
        case mark_1.POINT:
        case mark_1.CIRCLE:
        case mark_1.SQUARE:
        case mark_1.TEXT:
        case mark_1.RECT:
            // orient is meaningless for these marks.
            return undefined;
    }
    var yIsRange = encoding.y && encoding.y2;
    var xIsRange = encoding.x && encoding.x2;
    switch (mark) {
        case mark_1.TICK:
            var xScaleType = scales.x ? scales.x.get('type') : null;
            var yScaleType = scales.y ? scales.y.get('type') : null;
            // Tick is opposite to bar, line, area and never have ranged mark.
            if (!scale_1.hasDiscreteDomain(xScaleType) && (!encoding.y || scale_1.hasDiscreteDomain(yScaleType) || fielddef_1.isFieldDef(encoding.y) && encoding.y.bin)) {
                return 'vertical';
            }
            // y:Q or Ambiguous case, return horizontal
            return 'horizontal';
        case mark_1.RULE:
        case mark_1.BAR:
        case mark_1.AREA:
            // If there are range for both x and y, y (vertical) has higher precedence.
            if (yIsRange) {
                return 'vertical';
            } else if (xIsRange) {
                return 'horizontal';
            } else if (mark === mark_1.RULE) {
                if (encoding.x && !encoding.y) {
                    return 'vertical';
                } else if (encoding.y && !encoding.x) {
                    return 'horizontal';
                }
            }
        /* tslint:disable */
        case mark_1.LINE:
            // intentional fall through
            /* tslint:enable */
            var xIsContinuous = fielddef_1.isFieldDef(encoding.x) && fielddef_1.isContinuous(encoding.x);
            var yIsContinuous = fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y);
            if (xIsContinuous && !yIsContinuous) {
                return 'horizontal';
            } else if (!xIsContinuous && yIsContinuous) {
                return 'vertical';
            } else if (xIsContinuous && yIsContinuous) {
                var xDef = encoding.x; // we can cast here since they are surely fieldDef
                var yDef = encoding.y;
                var xIsTemporal = xDef.type === type_1.TEMPORAL;
                var yIsTemporal = yDef.type === type_1.TEMPORAL;
                // temporal without timeUnit is considered continuous, but better serves as dimension
                if (xIsTemporal && !yIsTemporal) {
                    return 'vertical';
                } else if (!xIsTemporal && yIsTemporal) {
                    return 'horizontal';
                }
                if (!xDef.aggregate && yDef.aggregate) {
                    return 'vertical';
                } else if (xDef.aggregate && !yDef.aggregate) {
                    return 'horizontal';
                }
                if (specifiedOrient) {
                    // When ambiguous, use user specified one.
                    return specifiedOrient;
                }
                if (!(mark === mark_1.LINE && encoding.order)) {
                    // Except for connected scatterplot, we should log warning for unclear orientation of QxQ plots.
                    log.warn(log.message.unclearOrientContinuous(mark));
                }
                return 'vertical';
            } else {
                // For Discrete x Discrete case, return undefined.
                log.warn(log.message.unclearOrientDiscreteOrEmpty(mark));
                return undefined;
            }
    }
    return 'vertical';
}

},{"../../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/line.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var mixins = require("./mixins");
var ref = require("./valueref");
exports.line = {
    vgMark: 'line',
    encodeEntry: function encodeEntry(model) {
        var width = model.width,
            height = model.height;
        return tslib_1.__assign({}, mixins.pointPosition('x', model, ref.mid(width)), mixins.pointPosition('y', model, ref.mid(height)), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model), mixins.nonPosition('size', model, {
            vgChannel: 'strokeWidth' // VL's line size is strokeWidth
        }), mixins.markDefProperties(model.markDef, ['interpolate', 'tension']));
    }
};

},{"./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mark.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var channel_1 = require("../../channel");
var data_1 = require("../../data");
var encoding_1 = require("../../encoding");
var fielddef_1 = require("../../fielddef");
var mark_1 = require("../../mark");
var sort_1 = require("../../sort");
var util_1 = require("../../util");
var common_1 = require("../common");
var model_1 = require("../model");
var area_1 = require("./area");
var bar_1 = require("./bar");
var init_1 = require("./init");
var line_1 = require("./line");
var point_1 = require("./point");
var rect_1 = require("./rect");
var rule_1 = require("./rule");
var text_1 = require("./text");
var tick_1 = require("./tick");
var markCompiler = {
    area: area_1.area,
    bar: bar_1.bar,
    line: line_1.line,
    point: point_1.point,
    text: text_1.text,
    tick: tick_1.tick,
    rect: rect_1.rect,
    rule: rule_1.rule,
    circle: point_1.circle,
    square: point_1.square
};
function parseMarkDef(model) {
    if (model_1.isUnitModel(model)) {
        init_1.normalizeMarkDef(model.markDef, model.encoding, model.component.scales, model.config);
    } else {
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            parseMarkDef(child);
        }
    }
}
exports.parseMarkDef = parseMarkDef;
function parseMarkGroup(model) {
    if (util_1.contains([mark_1.LINE, mark_1.AREA], model.mark())) {
        return parsePathMark(model);
    } else {
        return parseNonPathMark(model);
    }
}
exports.parseMarkGroup = parseMarkGroup;
var FACETED_PATH_PREFIX = 'faceted_path_';
function parsePathMark(model) {
    var mark = model.mark();
    // FIXME: replace this with more general case for composition
    var details = detailFields(model);
    var clip = model.markDef.clip !== undefined ? !!model.markDef.clip : scaleClip(model);
    var style = common_1.getStyles(model.markDef);
    var sort = getPathSort(model);
    var pathMarks = [tslib_1.__assign({ name: model.getName('marks'), type: markCompiler[mark].vgMark }, clip ? { clip: true } : {}, style ? { style: style } : {}, sort ? { sort: sort } : {}, {
        // If has subfacet for line/area group, need to use faceted data from below.
        // FIXME: support sorting path order (in connected scatterplot)
        from: { data: (details.length > 0 ? FACETED_PATH_PREFIX : '') + model.requestDataName(data_1.MAIN) }, encode: { update: markCompiler[mark].encodeEntry(model) } })];
    if (details.length > 0) {
        // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)
        return [{
            name: model.getName('pathgroup'),
            type: 'group',
            from: {
                facet: {
                    name: FACETED_PATH_PREFIX + model.requestDataName(data_1.MAIN),
                    data: model.requestDataName(data_1.MAIN),
                    groupby: details
                }
            },
            encode: {
                update: {
                    width: { field: { group: 'width' } },
                    height: { field: { group: 'height' } }
                }
            },
            marks: pathMarks
        }];
    } else {
        return pathMarks;
    }
}
function getPathSort(model) {
    if (model.mark() === 'line' && model.channelHasField('order')) {
        // For only line, sort by the order field if it is specified.
        return common_1.sortParams(model.encoding.order, { expr: 'datum' });
    } else {
        // For both line and area, we sort values based on dimension by default
        var dimensionChannel = model.markDef.orient === 'horizontal' ? 'y' : 'x';
        var s = model.sort(dimensionChannel);
        var sortField = sort_1.isSortField(s) ? fielddef_1.field({
            // FIXME: this op might not already exist?
            // FIXME: what if dimensionChannel (x or y) contains custom domain?
            aggregate: encoding_1.isAggregate(model.encoding) ? s.op : undefined,
            field: s.field
        }, { expr: 'datum' }) : model.field(dimensionChannel, {
            // For stack with imputation, we only have bin_mid
            binSuffix: model.stack && model.stack.impute ? 'mid' : undefined,
            expr: 'datum'
        });
        return {
            field: sortField,
            order: 'descending'
        };
    }
}
exports.getPathSort = getPathSort;
function parseNonPathMark(model) {
    var mark = model.mark();
    var style = common_1.getStyles(model.markDef);
    var clip = model.markDef.clip !== undefined ? !!model.markDef.clip : scaleClip(model);
    var marks = []; // TODO: vgMarks
    // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)
    marks.push(tslib_1.__assign({ name: model.getName('marks'), type: markCompiler[mark].vgMark }, clip ? { clip: true } : {}, style ? { style: style } : {}, { from: { data: model.requestDataName(data_1.MAIN) }, encode: { update: markCompiler[mark].encodeEntry(model) } }));
    return marks;
}
/**
 * Returns list of detail (group-by) fields
 * that the model's spec contains.
 */
function detailFields(model) {
    return channel_1.NONSPATIAL_CHANNELS.reduce(function (details, channel) {
        var encoding = model.encoding;
        if (channel === 'order') {
            return details;
        }
        if (channel === 'detail') {
            var channelDef = encoding[channel];
            if (channelDef) {
                (vega_util_1.isArray(channelDef) ? channelDef : [channelDef]).forEach(function (fieldDef) {
                    if (!fieldDef.aggregate) {
                        details.push(fielddef_1.field(fieldDef, {}));
                    }
                });
            }
        } else {
            var fieldDef = fielddef_1.getFieldDef(encoding[channel]);
            if (fieldDef && !fieldDef.aggregate) {
                details.push(fielddef_1.field(fieldDef, {}));
            }
        }
        return details;
    }, []);
}
/**
 * If scales are bound to interval selections, we want to automatically clip
 * marks to account for panning/zooming interactions. We identify bound scales
 * by the domainRaw property, which gets added during scale parsing.
 */
function scaleClip(model) {
    var xScale = model.getScaleComponent('x');
    var yScale = model.getScaleComponent('y');
    return xScale && xScale.get('domainRaw') || yScale && yScale.get('domainRaw') ? true : false;
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","../../sort":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/sort.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./area":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/area.js","./bar":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/bar.js","./init":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/init.js","./line":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/line.js","./point":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/point.js","./rect":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/rect.js","./rule":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/rule.js","./text":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/text.js","./tick":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/tick.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var util = require("../../util");
var common_1 = require("../common");
var selection_1 = require("../selection/selection");
var ref = require("./valueref");
function color(model) {
    var config = model.config;
    var filled = model.markDef.filled;
    var vgChannel = filled ? 'fill' : 'stroke';
    var e = nonPosition('color', model, {
        vgChannel: vgChannel,
        // fill/stroke has higher precedence than color
        defaultValue: common_1.getMarkConfig(vgChannel, model.markDef, config) || common_1.getMarkConfig('color', model.markDef, config)
    });
    // If there is no fill, always fill symbols
    // with transparent fills https://github.com/vega/vega-lite/issues/1316
    if (!e.fill && util.contains(['bar', 'point', 'circle', 'square'], model.mark())) {
        e.fill = { value: 'transparent' };
    }
    return e;
}
exports.color = color;
function markDefProperties(mark, props) {
    return props.reduce(function (m, prop) {
        if (mark[prop]) {
            m[prop] = { value: mark[prop] };
        }
        return m;
    }, {});
}
exports.markDefProperties = markDefProperties;
function valueIfDefined(prop, value) {
    if (value !== undefined) {
        return _a = {}, _a[prop] = { value: value }, _a;
    }
    return undefined;
    var _a;
}
exports.valueIfDefined = valueIfDefined;
/**
 * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)
 */
function nonPosition(channel, model, opt) {
    // TODO: refactor how we refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613
    if (opt === void 0) {
        opt = {};
    }
    var defaultValue = opt.defaultValue,
        vgChannel = opt.vgChannel;
    var defaultRef = opt.defaultRef || (defaultValue !== undefined ? { value: defaultValue } : undefined);
    var channelDef = model.encoding[channel];
    return wrapCondition(model, channelDef, vgChannel || channel, function (cDef) {
        return ref.midPoint(channel, cDef, model.scaleName(channel), model.getScaleComponent(channel), null, // No need to provide stack for non-position as it does not affect mid point
        defaultRef);
    });
}
exports.nonPosition = nonPosition;
/**
 * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.
 * or a simple mixin if channel def has no condition.
 */
function wrapCondition(model, channelDef, vgChannel, refFn) {
    var condition = channelDef && channelDef.condition;
    var valueRef = refFn(channelDef);
    if (condition) {
        var conditionValueRef = refFn(condition);
        return _a = {}, _a[vgChannel] = [tslib_1.__assign({ test: selection_1.predicate(model, condition.selection) }, conditionValueRef)].concat(valueRef !== undefined ? [valueRef] : []), _a;
    } else {
        return valueRef !== undefined ? (_b = {}, _b[vgChannel] = valueRef, _b) : {};
    }
    var _a, _b;
}
function text(model, channel) {
    if (channel === void 0) {
        channel = 'text';
    }
    var channelDef = model.encoding[channel];
    return wrapCondition(model, channelDef, channel, function (cDef) {
        return ref.text(cDef, model.config);
    });
}
exports.text = text;
function bandPosition(fieldDef, channel, model) {
    var scaleName = model.scaleName(channel);
    var sizeChannel = channel === 'x' ? 'width' : 'height';
    if (model.encoding.size) {
        var orient = model.markDef.orient;
        if (orient) {
            var centeredBandPositionMixins = (_a = {},
            // Use xc/yc and place the mark at the middle of the band
            // This way we never have to deal with size's condition for x/y position.
            _a[channel + 'c'] = ref.fieldRef(fieldDef, scaleName, {}, { band: 0.5 }), _a);
            if (fielddef_1.getFieldDef(model.encoding.size)) {
                log.warn(log.message.cannotUseSizeFieldWithBandSize(channel));
                // TODO: apply size to band and set scale range to some values between 0-1.
                // return {
                //   ...centeredBandPositionMixins,
                //   ...bandSize('size', model, {vgChannel: sizeChannel})
                // };
            } else if (fielddef_1.isValueDef(model.encoding.size)) {
                return tslib_1.__assign({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));
            }
        } else {
            log.warn(log.message.cannotApplySizeToNonOrientedMark(model.markDef.type));
        }
    }
    return _b = {}, _b[channel] = ref.fieldRef(fieldDef, scaleName, { binSuffix: 'range' }), _b[sizeChannel] = ref.band(scaleName), _b;
    var _a, _b;
}
exports.bandPosition = bandPosition;
function centeredBandPosition(channel, model, defaultPosRef, defaultSizeRef) {
    var centerChannel = channel === 'x' ? 'xc' : 'yc';
    var sizeChannel = channel === 'x' ? 'width' : 'height';
    return tslib_1.__assign({}, pointPosition(channel, model, defaultPosRef, centerChannel), nonPosition('size', model, { defaultRef: defaultSizeRef, vgChannel: sizeChannel }));
}
exports.centeredBandPosition = centeredBandPosition;
function binnedPosition(fieldDef, channel, scaleName, spacing, reverse) {
    if (channel === 'x') {
        return {
            x2: ref.bin(fieldDef, scaleName, 'start', reverse ? 0 : spacing),
            x: ref.bin(fieldDef, scaleName, 'end', reverse ? spacing : 0)
        };
    } else {
        return {
            y2: ref.bin(fieldDef, scaleName, 'start', reverse ? spacing : 0),
            y: ref.bin(fieldDef, scaleName, 'end', reverse ? 0 : spacing)
        };
    }
}
exports.binnedPosition = binnedPosition;
/**
 * Return mixins for point (non-band) position channels.
 */
function pointPosition(channel, model, defaultRef, vgChannel) {
    // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613
    var encoding = model.encoding,
        stack = model.stack;
    var valueRef = ref.stackable(channel, encoding[channel], model.scaleName(channel), model.getScaleComponent(channel), stack, defaultRef);
    return _a = {}, _a[vgChannel || channel] = valueRef, _a;
    var _a;
}
exports.pointPosition = pointPosition;
/**
 * Return mixins for x2, y2.
 * If channel is not specified, return one channel based on orientation.
 */
function pointPosition2(model, defaultRef, channel) {
    var encoding = model.encoding,
        markDef = model.markDef,
        stack = model.stack;
    channel = channel || (markDef.orient === 'horizontal' ? 'x2' : 'y2');
    var baseChannel = channel === 'x2' ? 'x' : 'y';
    var valueRef = ref.stackable2(channel, encoding[baseChannel], encoding[channel], model.scaleName(baseChannel), model.getScaleComponent(baseChannel), stack, defaultRef);
    return _a = {}, _a[channel] = valueRef, _a;
    var _a;
}
exports.pointPosition2 = pointPosition2;

},{"../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/point.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var common_1 = require("../common");
var mixins = require("./mixins");
var ref = require("./valueref");
function _encodeEntry(model, fixedShape) {
    var config = model.config,
        width = model.width,
        height = model.height;
    return tslib_1.__assign({}, mixins.pointPosition('x', model, ref.mid(width)), mixins.pointPosition('y', model, ref.mid(height)), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('size', model), shapeMixins(model, config, fixedShape), mixins.nonPosition('opacity', model));
}
function shapeMixins(model, config, fixedShape) {
    if (fixedShape) {
        return { shape: { value: fixedShape } };
    }
    return mixins.nonPosition('shape', model, { defaultValue: common_1.getMarkConfig('shape', model.markDef, config) });
}
exports.shapeMixins = shapeMixins;
exports.point = {
    vgMark: 'symbol',
    encodeEntry: function encodeEntry(model) {
        return _encodeEntry(model);
    }
};
exports.circle = {
    vgMark: 'symbol',
    encodeEntry: function encodeEntry(model) {
        return _encodeEntry(model, 'circle');
    }
};
exports.square = {
    vgMark: 'symbol',
    encodeEntry: function encodeEntry(model) {
        return _encodeEntry(model, 'square');
    }
};

},{"../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/rect.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var log = require("../../log");
var mark_1 = require("../../mark");
var scale_1 = require("../../scale");
var mixins = require("./mixins");
exports.rect = {
    vgMark: 'rect',
    encodeEntry: function encodeEntry(model) {
        return tslib_1.__assign({}, x(model), y(model), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model));
    }
};
function x(model) {
    var xDef = model.encoding.x;
    var x2Def = model.encoding.x2;
    var xScale = model.getScaleComponent(channel_1.X);
    var xScaleType = xScale ? xScale.get('type') : undefined;
    if (fielddef_1.isFieldDef(xDef) && xDef.bin && !x2Def) {
        return mixins.binnedPosition(xDef, 'x', model.scaleName('x'), 0, xScale.get('reverse'));
    } else if (fielddef_1.isFieldDef(xDef) && xScale && scale_1.hasDiscreteDomain(xScaleType)) {
        /* istanbul ignore else */
        if (xScaleType === scale_1.ScaleType.BAND) {
            return mixins.bandPosition(xDef, 'x', model);
        } else {
            // We don't support rect mark with point/ordinal scale
            throw new Error(log.message.scaleTypeNotWorkWithMark(mark_1.RECT, xScaleType));
        }
    } else {
        return tslib_1.__assign({}, mixins.pointPosition('x', model, 'zeroOrMax'), mixins.pointPosition2(model, 'zeroOrMin', 'x2'));
    }
}
function y(model) {
    var yDef = model.encoding.y;
    var y2Def = model.encoding.y2;
    var yScale = model.getScaleComponent(channel_1.Y);
    var yScaleType = yScale ? yScale.get('type') : undefined;
    if (fielddef_1.isFieldDef(yDef) && yDef.bin && !y2Def) {
        return mixins.binnedPosition(yDef, 'y', model.scaleName('y'), 0, yScale.get('reverse'));
    } else if (fielddef_1.isFieldDef(yDef) && yScale && scale_1.hasDiscreteDomain(yScaleType)) {
        /* istanbul ignore else */
        if (yScaleType === scale_1.ScaleType.BAND) {
            return mixins.bandPosition(yDef, 'y', model);
        } else {
            // We don't support rect mark with point/ordinal scale
            throw new Error(log.message.scaleTypeNotWorkWithMark(mark_1.RECT, yScaleType));
        }
    } else {
        return tslib_1.__assign({}, mixins.pointPosition('y', model, 'zeroOrMax'), mixins.pointPosition2(model, 'zeroOrMin', 'y2'));
    }
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/rule.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var mixins = require("./mixins");
var ref = require("./valueref");
exports.rule = {
    vgMark: 'rule',
    encodeEntry: function encodeEntry(model) {
        var _config = model.config,
            markDef = model.markDef,
            width = model.width,
            height = model.height;
        var orient = markDef.orient;
        return tslib_1.__assign({}, mixins.pointPosition('x', model, orient === 'horizontal' ? 'zeroOrMin' : ref.mid(width)), mixins.pointPosition('y', model, orient === 'vertical' ? 'zeroOrMin' : ref.mid(height)), mixins.pointPosition2(model, 'zeroOrMax'), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model), mixins.nonPosition('size', model, {
            vgChannel: 'strokeWidth' // VL's rule size is strokeWidth
        }));
    }
};

},{"./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/text.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var encoding_1 = require("../../encoding");
var fielddef_1 = require("../../fielddef");
var type_1 = require("../../type");
var common_1 = require("../common");
var mixins = require("./mixins");
var ref = require("./valueref");
exports.text = {
    vgMark: 'text',
    encodeEntry: function encodeEntry(model) {
        var config = model.config,
            encoding = model.encoding,
            height = model.height;
        var textDef = encoding.text;
        return tslib_1.__assign({}, mixins.pointPosition('x', model, xDefault(config, textDef)), mixins.pointPosition('y', model, ref.mid(height)), mixins.text(model), mixins.color(model), mixins.text(model, 'tooltip'), mixins.nonPosition('opacity', model), mixins.nonPosition('size', model, {
            vgChannel: 'fontSize' // VL's text size is fontSize
        }), mixins.valueIfDefined('align', align(model.markDef, encoding, config)));
    }
};
function xDefault(config, textDef) {
    if (fielddef_1.isFieldDef(textDef) && textDef.type === type_1.QUANTITATIVE) {
        return { field: { group: 'width' }, offset: -5 };
    }
    // TODO: allow this to fit (Be consistent with ref.midX())
    return { value: config.scale.textXRangeStep / 2 };
}
function align(markDef, encoding, config) {
    var alignConfig = common_1.getMarkConfig('align', markDef, config);
    if (alignConfig === undefined) {
        return encoding_1.channelHasField(encoding, channel_1.X) ? 'center' : 'right';
    }
    // If there is a config, Vega-parser will process this already.
    return undefined;
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/tick.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_schema_1 = require("../../vega.schema");
var mixins = require("./mixins");
var ref = require("./valueref");
exports.tick = {
    vgMark: 'rect',
    encodeEntry: function encodeEntry(model) {
        var config = model.config,
            markDef = model.markDef,
            width = model.width,
            height = model.height;
        var orient = markDef.orient;
        var vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';
        var vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';
        return tslib_1.__assign({}, mixins.pointPosition('x', model, ref.mid(width), 'xc'), mixins.pointPosition('y', model, ref.mid(height), 'yc'), mixins.nonPosition('size', model, {
            defaultValue: defaultSize(model),
            vgChannel: vgSizeChannel
        }), (_a = {}, _a[vgThicknessChannel] = { value: config.tick.thickness }, _a), mixins.color(model), mixins.nonPosition('opacity', model));
        var _a;
    }
};
function defaultSize(model) {
    var config = model.config;
    var orient = model.markDef.orient;
    var scale = model.getScaleComponent(orient === 'horizontal' ? 'x' : 'y');
    if (config.tick.bandSize !== undefined) {
        return config.tick.bandSize;
    } else {
        var scaleRange = scale ? scale.get('range') : undefined;
        var rangeStep = scaleRange && vega_schema_1.isVgRangeStep(scaleRange) ? scaleRange.step : config.scale.rangeStep;
        if (typeof rangeStep !== 'number') {
            // FIXME consolidate this log
            throw new Error('Function does not handle non-numeric rangeStep');
        }
        return rangeStep / 1.5;
    }
}

},{"../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","./mixins":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mixins.js","./valueref":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/valueref.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * Utility files for producing Vega ValueRef for marks
 */
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
var common_1 = require("../common");
// TODO: we need to find a way to refactor these so that scaleName is a part of scale
// but that's complicated.  For now, this is a huge step moving forward.
/**
 * @return Vega ValueRef for stackable x or y
 */
function stackable(channel, channelDef, scaleName, scale, stack, defaultRef) {
    if (fielddef_1.isFieldDef(channelDef) && stack && channel === stack.fieldChannel) {
        // x or y use stack_end so that stacked line's point mark use stack_end too.
        return fieldRef(channelDef, scaleName, { suffix: 'end' });
    }
    return midPoint(channel, channelDef, scaleName, scale, stack, defaultRef);
}
exports.stackable = stackable;
/**
 * @return Vega ValueRef for stackable x2 or y2
 */
function stackable2(channel, aFieldDef, a2fieldDef, scaleName, scale, stack, defaultRef) {
    if (fielddef_1.isFieldDef(aFieldDef) && stack &&
    // If fieldChannel is X and channel is X2 (or Y and Y2)
    channel.charAt(0) === stack.fieldChannel.charAt(0)) {
        return fieldRef(aFieldDef, scaleName, { suffix: 'start' });
    }
    return midPoint(channel, a2fieldDef, scaleName, scale, stack, defaultRef);
}
exports.stackable2 = stackable2;
/**
 * Value Ref for binned fields
 */
function bin(fieldDef, scaleName, side, offset) {
    var binSuffix = side === 'start' ? undefined : 'end';
    return fieldRef(fieldDef, scaleName, { binSuffix: binSuffix }, offset ? { offset: offset } : {});
}
exports.bin = bin;
function fieldRef(fieldDef, scaleName, opt, mixins) {
    var ref = {
        scale: scaleName,
        field: fielddef_1.field(fieldDef, opt)
    };
    if (mixins) {
        return tslib_1.__assign({}, ref, mixins);
    }
    return ref;
}
exports.fieldRef = fieldRef;
function band(scaleName, band) {
    if (band === void 0) {
        band = true;
    }
    return {
        scale: scaleName,
        band: band
    };
}
exports.band = band;
/**
 * Signal that returns the middle of a bin. Should only be used with x and y.
 */
function binMidSignal(fieldDef, scaleName) {
    return {
        signal: "(" + ("scale(\"" + scaleName + "\", " + fielddef_1.field(fieldDef, { expr: 'datum' }) + ")") + " + " + ("scale(\"" + scaleName + "\", " + fielddef_1.field(fieldDef, { binSuffix: 'end', expr: 'datum' }) + ")") + ")/2"
    };
}
/**
 * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.
 */
function midPoint(channel, channelDef, scaleName, scale, stack, defaultRef) {
    // TODO: datum support
    if (channelDef) {
        /* istanbul ignore else */
        if (fielddef_1.isFieldDef(channelDef)) {
            if (channelDef.bin) {
                // Use middle only for x an y to place marks in the center between start and end of the bin range.
                // We do not use the mid point for other channels (e.g. size) so that properties of legends and marks match.
                if (util_1.contains(['x', 'y'], channel) && channelDef.type === 'quantitative') {
                    if (stack && stack.impute) {
                        // For stack, we computed bin_mid so we can impute.
                        return fieldRef(channelDef, scaleName, { binSuffix: 'mid' });
                    }
                    // For non-stack, we can just calculate bin mid on the fly using signal.
                    return binMidSignal(channelDef, scaleName);
                }
                return fieldRef(channelDef, scaleName, common_1.binRequiresRange(channelDef, channel) ? { binSuffix: 'range' } : {});
            }
            var scaleType = scale.get('type');
            if (scale_1.hasDiscreteDomain(scaleType)) {
                if (scaleType === 'band') {
                    // For band, to get mid point, need to offset by half of the band
                    return fieldRef(channelDef, scaleName, { binSuffix: 'range' }, { band: 0.5 });
                }
                return fieldRef(channelDef, scaleName, { binSuffix: 'range' });
            } else {
                return fieldRef(channelDef, scaleName, {}); // no need for bin suffix
            }
        } else if (fielddef_1.isValueDef(channelDef)) {
            return { value: channelDef.value };
        } else {
            throw new Error('FieldDef without field or value.'); // FIXME add this to log.message
        }
    }
    if (defaultRef === 'zeroOrMin') {
        /* istanbul ignore else */
        if (channel === channel_1.X || channel === channel_1.X2) {
            return zeroOrMinX(scaleName, scale);
        } else if (channel === channel_1.Y || channel === channel_1.Y2) {
            return zeroOrMinY(scaleName, scale);
        } else {
            throw new Error("Unsupported channel " + channel + " for base function"); // FIXME add this to log.message
        }
    } else if (defaultRef === 'zeroOrMax') {
        /* istanbul ignore else */
        if (channel === channel_1.X || channel === channel_1.X2) {
            return zeroOrMaxX(scaleName, scale);
        } else if (channel === channel_1.Y || channel === channel_1.Y2) {
            return zeroOrMaxY(scaleName, scale);
        } else {
            throw new Error("Unsupported channel " + channel + " for base function"); // FIXME add this to log.message
        }
    }
    return defaultRef;
}
exports.midPoint = midPoint;
function text(textDef, config) {
    // text
    if (textDef) {
        if (fielddef_1.isFieldDef(textDef)) {
            return common_1.formatSignalRef(textDef, textDef.format, 'datum', config);
        } else if (fielddef_1.isValueDef(textDef)) {
            return { value: textDef.value };
        }
    }
    return undefined;
}
exports.text = text;
function mid(sizeRef) {
    return tslib_1.__assign({}, sizeRef, { mult: 0.5 });
}
exports.mid = mid;
function zeroOrMinX(scaleName, scale) {
    if (scaleName) {
        // Log / Time / UTC scale do not support zero
        if (!util_1.contains([scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.get('type')) && scale.get('zero') !== false) {
            return {
                scale: scaleName,
                value: 0
            };
        }
    }
    // Put the mark on the x-axis
    return { value: 0 };
}
/**
 * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist
 */
function zeroOrMaxX(scaleName, scale) {
    if (scaleName) {
        // Log / Time / UTC scale do not support zero
        if (!util_1.contains([scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.get('type')) && scale.get('zero') !== false) {
            return {
                scale: scaleName,
                value: 0
            };
        }
    }
    return { field: { group: 'width' } };
}
function zeroOrMinY(scaleName, scale) {
    if (scaleName) {
        // Log / Time / UTC scale do not support zero
        if (!util_1.contains([scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.get('type')) && scale.get('zero') !== false) {
            return {
                scale: scaleName,
                value: 0
            };
        }
    }
    // Put the mark on the y-axis
    return { field: { group: 'height' } };
}
/**
 * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist
 */
function zeroOrMaxY(scaleName, scale) {
    if (scaleName) {
        // Log / Time / UTC scale do not support zero
        if (!util_1.contains([scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.get('type')) && scale.get('zero') !== false) {
            return {
                scale: scaleName,
                value: 0
            };
        }
    }
    // Put the mark on the y-axis
    return { value: 0 };
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var channel_1 = require("../channel");
var encoding_1 = require("../encoding");
var fielddef_1 = require("../fielddef");
var log = require("../log");
var scale_1 = require("../scale");
var title_1 = require("../title");
var transform_1 = require("../transform");
var util_1 = require("../util");
var vega_schema_1 = require("../vega.schema");
var assemble_1 = require("./axis/assemble");
var header_1 = require("./layout/header");
var assemble_2 = require("./layoutsize/assemble");
var assemble_3 = require("./legend/assemble");
var parse_1 = require("./legend/parse");
var mark_1 = require("./mark/mark");
var assemble_4 = require("./scale/assemble");
var domain_1 = require("./scale/domain");
var parse_2 = require("./scale/parse");
var split_1 = require("./split");
var NameMap = /** @class */function () {
    function NameMap() {
        this.nameMap = {};
    }
    NameMap.prototype.rename = function (oldName, newName) {
        this.nameMap[oldName] = newName;
    };
    NameMap.prototype.has = function (name) {
        return this.nameMap[name] !== undefined;
    };
    NameMap.prototype.get = function (name) {
        // If the name appears in the _nameMap, we need to read its new name.
        // We have to loop over the dict just in case the new name also gets renamed.
        while (this.nameMap[name] && name !== this.nameMap[name]) {
            name = this.nameMap[name];
        }
        return name;
    };
    return NameMap;
}();
exports.NameMap = NameMap;
/*
  We use type guards instead of `instanceof` as `instanceof` makes
  different parts of the compiler depend on the actual implementation of
  the model classes, which in turn depend on different parts of the compiler.
  Thus, `instanceof` leads to circular dependency problems.

  On the other hand, type guards only make different parts of the compiler
  depend on the type of the model classes, but not the actual implementation.
*/
function isUnitModel(model) {
    return model && model.type === 'unit';
}
exports.isUnitModel = isUnitModel;
function isFacetModel(model) {
    return model && model.type === 'facet';
}
exports.isFacetModel = isFacetModel;
function isRepeatModel(model) {
    return model && model.type === 'repeat';
}
exports.isRepeatModel = isRepeatModel;
function isConcatModel(model) {
    return model && model.type === 'concat';
}
exports.isConcatModel = isConcatModel;
function isLayerModel(model) {
    return model && model.type === 'layer';
}
exports.isLayerModel = isLayerModel;
var Model = /** @class */function () {
    function Model(spec, parent, parentGivenName, config, resolve) {
        var _this = this;
        this.children = [];
        /**
         * Corrects the data references in marks after assemble.
         */
        this.correctDataNames = function (mark) {
            // TODO: make this correct
            // for normal data references
            if (mark.from && mark.from.data) {
                mark.from.data = _this.lookupDataSource(mark.from.data);
            }
            // for access to facet data
            if (mark.from && mark.from.facet && mark.from.facet.data) {
                mark.from.facet.data = _this.lookupDataSource(mark.from.facet.data);
            }
            return mark;
        };
        this.parent = parent;
        this.config = config;
        // If name is not provided, always use parent's givenName to avoid name conflicts.
        this.name = spec.name || parentGivenName;
        this.title = vega_util_1.isString(spec.title) ? { text: spec.title } : spec.title;
        // Shared name maps
        this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();
        this.layoutSizeNameMap = parent ? parent.layoutSizeNameMap : new NameMap();
        this.data = spec.data;
        this.description = spec.description;
        this.transforms = transform_1.normalizeTransform(spec.transform || []);
        this.component = {
            data: {
                sources: parent ? parent.component.data.sources : {},
                outputNodes: parent ? parent.component.data.outputNodes : {},
                outputNodeRefCounts: parent ? parent.component.data.outputNodeRefCounts : {},
                ancestorParse: parent ? tslib_1.__assign({}, parent.component.data.ancestorParse) : {}
            },
            layoutSize: new split_1.Split(),
            layoutHeaders: { row: {}, column: {} },
            mark: null,
            resolve: tslib_1.__assign({ scale: {}, axis: {}, legend: {} }, resolve || {}),
            selection: null,
            scales: null,
            axes: {},
            legends: {}
        };
    }
    Object.defineProperty(Model.prototype, "width", {
        get: function get() {
            return this.getSizeSignalRef('width');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Model.prototype, "height", {
        get: function get() {
            return this.getSizeSignalRef('height');
        },
        enumerable: true,
        configurable: true
    });
    Model.prototype.initSize = function (size) {
        var width = size.width,
            height = size.height;
        if (width) {
            this.component.layoutSize.set('width', width, true);
        }
        if (height) {
            this.component.layoutSize.set('height', height, true);
        }
    };
    Model.prototype.parse = function () {
        this.parseScale();
        this.parseMarkDef();
        this.parseLayoutSize(); // depends on scale
        this.renameTopLevelLayoutSize();
        this.parseSelection();
        this.parseData(); // (pathorder) depends on markDef; selection filters depend on parsed selections.
        this.parseAxisAndHeader(); // depends on scale and layout size
        this.parseLegend(); // depends on scale, markDef
        this.parseMarkGroup(); // depends on data name, scale, layout size, axisGroup, and children's scale, axis, legend and mark.
    };
    Model.prototype.parseScale = function () {
        parse_2.parseScale(this);
    };
    /**
     * Rename top-level spec's size to be just width / height, ignoring model name.
     * This essentially merges the top-level spec's width/height signals with the width/height signals
     * to help us reduce redundant signals declaration.
     */
    Model.prototype.renameTopLevelLayoutSize = function () {
        if (this.getName('width') !== 'width') {
            this.renameLayoutSize(this.getName('width'), 'width');
        }
        if (this.getName('height') !== 'height') {
            this.renameLayoutSize(this.getName('height'), 'height');
        }
    };
    Model.prototype.parseMarkDef = function () {
        mark_1.parseMarkDef(this);
    };
    Model.prototype.parseLegend = function () {
        parse_1.parseLegend(this);
    };
    Model.prototype.assembleGroupStyle = function () {
        if (this.type === 'unit' || this.type === 'layer') {
            return 'cell';
        }
        return undefined;
    };
    Model.prototype.assembleLayoutSize = function () {
        if (this.type === 'unit' || this.type === 'layer') {
            return {
                width: this.getSizeSignalRef('width'),
                height: this.getSizeSignalRef('height')
            };
        }
        return undefined;
    };
    Model.prototype.assembleHeaderMarks = function () {
        var layoutHeaders = this.component.layoutHeaders;
        var headerMarks = [];
        for (var _i = 0, HEADER_CHANNELS_1 = header_1.HEADER_CHANNELS; _i < HEADER_CHANNELS_1.length; _i++) {
            var channel = HEADER_CHANNELS_1[_i];
            if (layoutHeaders[channel].title) {
                headerMarks.push(header_1.getTitleGroup(this, channel));
            }
        }
        for (var _a = 0, HEADER_CHANNELS_2 = header_1.HEADER_CHANNELS; _a < HEADER_CHANNELS_2.length; _a++) {
            var channel = HEADER_CHANNELS_2[_a];
            var layoutHeader = layoutHeaders[channel];
            for (var _b = 0, HEADER_TYPES_1 = header_1.HEADER_TYPES; _b < HEADER_TYPES_1.length; _b++) {
                var headerType = HEADER_TYPES_1[_b];
                if (layoutHeader[headerType]) {
                    for (var _c = 0, _d = layoutHeader[headerType]; _c < _d.length; _c++) {
                        var header = _d[_c];
                        var headerGroup = header_1.getHeaderGroup(this, channel, headerType, layoutHeader, header);
                        if (headerGroup) {
                            headerMarks.push(headerGroup);
                        }
                    }
                }
            }
        }
        return headerMarks;
    };
    Model.prototype.assembleAxes = function () {
        return assemble_1.assembleAxes(this.component.axes);
    };
    Model.prototype.assembleLegends = function () {
        return assemble_3.assembleLegends(this);
    };
    Model.prototype.assembleTitle = function () {
        var title = tslib_1.__assign({}, title_1.extractTitleConfig(this.config.title).nonMark, this.title);
        if (title.text) {
            if (!util_1.contains(['unit', 'layer'], this.type)) {
                // As described in https://github.com/vega/vega-lite/issues/2875:
                // Due to vega/vega#960 (comment), we only support title's anchor for unit and layered spec for now.
                if (title.anchor && title.anchor !== 'start') {
                    log.warn(log.message.cannotSetTitleAnchor(this.type));
                }
                title.anchor = 'start';
            }
            return util_1.keys(title).length > 0 ? title : undefined;
        }
        return undefined;
    };
    /**
     * Assemble the mark group for this model.  We accept optional `signals` so that we can include concat top-level signals with the top-level model's local signals.
     */
    Model.prototype.assembleGroup = function (signals) {
        if (signals === void 0) {
            signals = [];
        }
        var group = {};
        signals = signals.concat(this.assembleSelectionSignals());
        if (signals.length > 0) {
            group.signals = signals;
        }
        var layout = this.assembleLayout();
        if (layout) {
            group.layout = layout;
        }
        group.marks = [].concat(this.assembleHeaderMarks(), this.assembleMarks());
        // Only include scales if this spec is top-level or if parent is facet.
        // (Otherwise, it will be merged with upper-level's scope.)
        var scales = !this.parent || isFacetModel(this.parent) ? assemble_4.assembleScales(this) : [];
        if (scales.length > 0) {
            group.scales = scales;
        }
        var axes = this.assembleAxes();
        if (axes.length > 0) {
            group.axes = axes;
        }
        var legends = this.assembleLegends();
        if (legends.length > 0) {
            group.legends = legends;
        }
        return group;
    };
    Model.prototype.hasDescendantWithFieldOnChannel = function (channel) {
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var child = _a[_i];
            if (isUnitModel(child)) {
                if (child.channelHasField(channel)) {
                    return true;
                }
            } else {
                if (child.hasDescendantWithFieldOnChannel(channel)) {
                    return true;
                }
            }
        }
        return false;
    };
    Model.prototype.getName = function (text) {
        return util_1.varName((this.name ? this.name + '_' : '') + text);
    };
    /**
     * Request a data source name for the given data source type and mark that data source as required. This method should be called in parse, so that all used data source can be correctly instantiated in assembleData().
     */
    Model.prototype.requestDataName = function (name) {
        var fullName = this.getName(name);
        // Increase ref count. This is critical because otherwise we won't create a data source.
        // We also increase the ref counts on OutputNode.getSource() calls.
        var refCounts = this.component.data.outputNodeRefCounts;
        refCounts[fullName] = (refCounts[fullName] || 0) + 1;
        return fullName;
    };
    Model.prototype.getSizeSignalRef = function (sizeType) {
        if (isFacetModel(this.parent)) {
            var channel = sizeType === 'width' ? 'x' : 'y';
            var scaleComponent = this.component.scales[channel];
            if (scaleComponent && !scaleComponent.merged) {
                var type = scaleComponent.get('type');
                var range = scaleComponent.get('range');
                if (scale_1.hasDiscreteDomain(type) && vega_schema_1.isVgRangeStep(range)) {
                    var scaleName = scaleComponent.get('name');
                    var domain = domain_1.assembleDomain(this, channel);
                    var fieldName = domain_1.getFieldFromDomain(domain);
                    if (fieldName) {
                        var fieldRef = fielddef_1.field({ aggregate: 'distinct', field: fieldName }, { expr: 'datum' });
                        return {
                            signal: assemble_2.sizeExpr(scaleName, scaleComponent, fieldRef)
                        };
                    } else {
                        log.warn('Unknown field for ${channel}.  Cannot calculate view size.');
                        return null;
                    }
                }
            }
        }
        return {
            signal: this.layoutSizeNameMap.get(this.getName(sizeType))
        };
    };
    /**
     * Lookup the name of the datasource for an output node. You probably want to call this in assemble.
     */
    Model.prototype.lookupDataSource = function (name) {
        var node = this.component.data.outputNodes[name];
        if (!node) {
            // Name not found in map so let's just return what we got.
            // This can happen if we already have the correct name.
            return name;
        }
        return node.getSource();
    };
    Model.prototype.getSizeName = function (oldSizeName) {
        return this.layoutSizeNameMap.get(oldSizeName);
    };
    Model.prototype.renameLayoutSize = function (oldName, newName) {
        this.layoutSizeNameMap.rename(oldName, newName);
    };
    Model.prototype.renameScale = function (oldName, newName) {
        this.scaleNameMap.rename(oldName, newName);
    };
    /**
     * @return scale name for a given channel after the scale has been parsed and named.
     */
    Model.prototype.scaleName = function (originalScaleName, parse) {
        if (parse) {
            // During the parse phase always return a value
            // No need to refer to rename map because a scale can't be renamed
            // before it has the original name.
            return this.getName(originalScaleName);
        }
        // If there is a scale for the channel, it should either
        // be in the scale component or exist in the name map
        if (
        // If there is a scale for the channel, there should be a local scale component for it
        channel_1.isChannel(originalScaleName) && channel_1.isScaleChannel(originalScaleName) && this.component.scales[originalScaleName] ||
        // in the scale name map (the the scale get merged by its parent)
        this.scaleNameMap.has(this.getName(originalScaleName))) {
            return this.scaleNameMap.get(this.getName(originalScaleName));
        }
        return undefined;
    };
    /**
     * Traverse a model's hierarchy to get the scale component for a particular channel.
     */
    Model.prototype.getScaleComponent = function (channel) {
        /* istanbul ignore next: This is warning for debugging test */
        if (!this.component.scales) {
            throw new Error('getScaleComponent cannot be called before parseScale().  Make sure you have called parseScale or use parseUnitModelWithScale().');
        }
        var localScaleComponent = this.component.scales[channel];
        if (localScaleComponent && !localScaleComponent.merged) {
            return localScaleComponent;
        }
        return this.parent ? this.parent.getScaleComponent(channel) : undefined;
    };
    /**
     * Traverse a model's hierarchy to get a particular selection component.
     */
    Model.prototype.getSelectionComponent = function (varName, origName) {
        var sel = this.component.selection[varName];
        if (!sel && this.parent) {
            sel = this.parent.getSelectionComponent(varName, origName);
        }
        if (!sel) {
            throw new Error(log.message.selectionNotFound(origName));
        }
        return sel;
    };
    return Model;
}();
exports.Model = Model;
/** Abstract class for UnitModel and FacetModel.  Both of which can contain fieldDefs as a part of its own specification. */
var ModelWithField = /** @class */function (_super) {
    tslib_1.__extends(ModelWithField, _super);
    function ModelWithField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** Get "field" reference for vega */
    ModelWithField.prototype.field = function (channel, opt) {
        if (opt === void 0) {
            opt = {};
        }
        var fieldDef = this.fieldDef(channel);
        if (!fieldDef) {
            return undefined;
        }
        return fielddef_1.field(fieldDef, opt);
    };
    ModelWithField.prototype.reduceFieldDef = function (f, init, t) {
        return encoding_1.reduce(this.getMapping(), function (acc, cd, c) {
            var fieldDef = fielddef_1.getFieldDef(cd);
            if (fieldDef) {
                return f(acc, fieldDef, c);
            }
            return acc;
        }, init, t);
    };
    ModelWithField.prototype.forEachFieldDef = function (f, t) {
        encoding_1.forEach(this.getMapping(), function (cd, c) {
            var fieldDef = fielddef_1.getFieldDef(cd);
            if (fieldDef) {
                f(fieldDef, c);
            }
        }, t);
    };
    return ModelWithField;
}(Model);
exports.ModelWithField = ModelWithField;

},{"../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../title":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/title.js","../transform":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/transform.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","./axis/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/assemble.js","./layout/header":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layout/header.js","./layoutsize/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/assemble.js","./legend/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/assemble.js","./legend/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/legend/parse.js","./mark/mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mark.js","./scale/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/assemble.js","./scale/domain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js","./scale/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/parse.js","./split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/repeat.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var baseconcat_1 = require("./baseconcat");
var buildmodel_1 = require("./buildmodel");
var parse_1 = require("./layoutsize/parse");
var RepeatModel = /** @class */function (_super) {
    tslib_1.__extends(RepeatModel, _super);
    function RepeatModel(spec, parent, parentGivenName, repeatValues, config) {
        var _this = _super.call(this, spec, parent, parentGivenName, config, spec.resolve) || this;
        _this.type = 'repeat';
        _this.repeat = spec.repeat;
        _this.children = _this._initChildren(spec, _this.repeat, repeatValues, config);
        return _this;
    }
    RepeatModel.prototype._initChildren = function (spec, repeat, repeater, config) {
        var children = [];
        var row = repeat.row || [repeater ? repeater.row : null];
        var column = repeat.column || [repeater ? repeater.column : null];
        // cross product
        for (var _i = 0, row_1 = row; _i < row_1.length; _i++) {
            var rowField = row_1[_i];
            for (var _a = 0, column_1 = column; _a < column_1.length; _a++) {
                var columnField = column_1[_a];
                var name_1 = (rowField ? '_' + rowField : '') + (columnField ? '_' + columnField : '');
                var childRepeat = {
                    row: rowField,
                    column: columnField
                };
                children.push(buildmodel_1.buildModel(spec.spec, this, this.getName('child' + name_1), undefined, childRepeat, config));
            }
        }
        return children;
    };
    RepeatModel.prototype.parseLayoutSize = function () {
        parse_1.parseRepeatLayoutSize(this);
    };
    RepeatModel.prototype.assembleLayout = function () {
        // TODO: allow customization
        return {
            padding: { row: 10, column: 10 },
            offset: 10,
            columns: this.repeat && this.repeat.column ? this.repeat.column.length : 1,
            bounds: 'full',
            align: 'all'
        };
    };
    return RepeatModel;
}(baseconcat_1.BaseConcatModel);
exports.RepeatModel = RepeatModel;

},{"./baseconcat":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/baseconcat.js","./buildmodel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/buildmodel.js","./layoutsize/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/repeater.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var fielddef_1 = require("../fielddef");
var log = require("../log");
function replaceRepeaterInFacet(facet, repeater) {
    return replaceRepeater(facet, repeater);
}
exports.replaceRepeaterInFacet = replaceRepeaterInFacet;
function replaceRepeaterInEncoding(encoding, repeater) {
    return replaceRepeater(encoding, repeater);
}
exports.replaceRepeaterInEncoding = replaceRepeaterInEncoding;
/**
 * Replace repeater values in a field def with the concrete field name.
 */
function replaceRepeaterInFieldDef(fieldDef, repeater) {
    var field = fieldDef.field;
    if (fielddef_1.isRepeatRef(field)) {
        if (field.repeat in repeater) {
            return tslib_1.__assign({}, fieldDef, { field: repeater[field.repeat] });
        } else {
            log.warn(log.message.noSuchRepeatedValue(field.repeat));
            return null;
        }
    } else {
        // field is not a repeat ref so we can just return the field def
        return fieldDef;
    }
}
function replaceRepeater(mapping, repeater) {
    var out = {};
    for (var channel in mapping) {
        if (mapping.hasOwnProperty(channel)) {
            var fieldDef = mapping[channel];
            if (vega_util_1.isArray(fieldDef)) {
                out[channel] = fieldDef.map(function (fd) {
                    return replaceRepeaterInFieldDef(fd, repeater);
                }).filter(function (fd) {
                    return fd !== null;
                });
            } else {
                var fd = replaceRepeaterInFieldDef(fieldDef, repeater);
                if (fd !== null) {
                    out[channel] = fd;
                }
            }
        }
    }
    return out;
}

},{"../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/resolve.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../channel");
var log = require("../log");
var util_1 = require("../util");
var model_1 = require("./model");
function defaultScaleResolve(channel, model) {
    if (model_1.isLayerModel(model) || model_1.isFacetModel(model)) {
        return 'shared';
    } else if (model_1.isConcatModel(model) || model_1.isRepeatModel(model)) {
        return util_1.contains(channel_1.SPATIAL_SCALE_CHANNELS, channel) ? 'independent' : 'shared';
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('invalid model type for resolve');
}
exports.defaultScaleResolve = defaultScaleResolve;
function parseGuideResolve(resolve, channel) {
    var channelScaleResolve = resolve.scale[channel];
    var guide = util_1.contains(channel_1.SPATIAL_SCALE_CHANNELS, channel) ? 'axis' : 'legend';
    if (channelScaleResolve === 'independent') {
        if (resolve[guide][channel] === 'shared') {
            log.warn(log.message.independentScaleMeansIndependentGuide(channel));
        }
        return 'independent';
    }
    return resolve[guide][channel] || 'shared';
}
exports.parseGuideResolve = parseGuideResolve;

},{"../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/assemble.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var util_1 = require("../../util");
var vega_schema_1 = require("../../vega.schema");
var model_1 = require("../model");
var selection_1 = require("../selection/selection");
var domain_1 = require("./domain");
function assembleScales(model) {
    if (model_1.isLayerModel(model) || model_1.isConcatModel(model) || model_1.isRepeatModel(model)) {
        // For concat / layer / repeat, include scales of children too
        return model.children.reduce(function (scales, child) {
            return scales.concat(assembleScales(child));
        }, assembleScalesForModel(model));
    } else {
        // For facet, child scales would not be included in the parent's scope.
        // For unit, there is no child.
        return assembleScalesForModel(model);
    }
}
exports.assembleScales = assembleScales;
function assembleScalesForModel(model) {
    return util_1.keys(model.component.scales).reduce(function (scales, channel) {
        var scaleComponent = model.component.scales[channel];
        if (scaleComponent.merged) {
            // Skipped merged scales
            return scales;
        }
        var scale = scaleComponent.combine();
        // need to separate const and non const object destruction
        var domainRaw = scale.domainRaw,
            range = scale.range;
        var name = scale.name,
            type = scale.type,
            _d = scale.domainRaw,
            _r = scale.range,
            otherScaleProps = tslib_1.__rest(scale, ["name", "type", "domainRaw", "range"]);
        range = assembleScaleRange(range, name, model, channel);
        // As scale parsing occurs before selection parsing, a temporary signal
        // is used for domainRaw. Here, we detect if this temporary signal
        // is set, and replace it with the correct domainRaw signal.
        // For more information, see isRawSelectionDomain in selection.ts.
        if (domainRaw && selection_1.isRawSelectionDomain(domainRaw)) {
            domainRaw = selection_1.selectionScaleDomain(model, domainRaw);
        }
        scales.push(tslib_1.__assign({ name: name,
            type: type, domain: domain_1.assembleDomain(model, channel) }, domainRaw ? { domainRaw: domainRaw } : {}, { range: range }, otherScaleProps));
        return scales;
    }, []);
}
exports.assembleScalesForModel = assembleScalesForModel;
function assembleScaleRange(scaleRange, scaleName, model, channel) {
    // add signals to x/y range
    if (channel === 'x' || channel === 'y') {
        if (vega_schema_1.isVgRangeStep(scaleRange)) {
            // For x/y range step, use a signal created in layout assemble instead of a constant range step.
            return {
                step: { signal: scaleName + '_step' }
            };
        } else if (vega_util_1.isArray(scaleRange) && scaleRange.length === 2) {
            var r0 = scaleRange[0];
            var r1 = scaleRange[1];
            if (r0 === 0 && vega_schema_1.isVgSignalRef(r1)) {
                // Replace width signal just in case it is renamed.
                return [0, { signal: model.getSizeName(r1.signal) }];
            } else if (vega_schema_1.isVgSignalRef(r0) && r1 === 0) {
                // Replace height signal just in case it is renamed.
                return [{ signal: model.getSizeName(r0.signal) }, 0];
            }
        }
    }
    return scaleRange;
}
exports.assembleScaleRange = assembleScaleRange;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./domain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/component.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var split_1 = require("../split");
var ScaleComponent = /** @class */function (_super) {
    tslib_1.__extends(ScaleComponent, _super);
    function ScaleComponent(name, typeWithExplicit) {
        var _this = _super.call(this, {}, // no initial explicit property
        { name: name } // name as initial implicit property
        ) || this;
        _this.merged = false;
        _this.domains = [];
        _this.setWithExplicit('type', typeWithExplicit);
        return _this;
    }
    return ScaleComponent;
}(split_1.Split);
exports.ScaleComponent = ScaleComponent;

},{"../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var aggregate_1 = require("../../aggregate");
var bin_1 = require("../../bin");
var channel_1 = require("../../channel");
var data_1 = require("../../data");
var datetime_1 = require("../../datetime");
var log = require("../../log");
var scale_1 = require("../../scale");
var sort_1 = require("../../sort");
var util = require("../../util");
var vega_schema_1 = require("../../vega.schema");
var vega_schema_2 = require("../../vega.schema");
var common_1 = require("../common");
var optimize_1 = require("../data/optimize");
var model_1 = require("../model");
var selection_1 = require("../selection/selection");
function parseScaleDomain(model) {
    if (model_1.isUnitModel(model)) {
        parseUnitScaleDomain(model);
    } else {
        parseNonUnitScaleDomain(model);
    }
}
exports.parseScaleDomain = parseScaleDomain;
function parseUnitScaleDomain(model) {
    var scales = model.specifiedScales;
    var localScaleComponents = model.component.scales;
    util.keys(localScaleComponents).forEach(function (channel) {
        var specifiedScale = scales[channel];
        var specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;
        var domains = parseDomainForChannel(model, channel);
        var localScaleCmpt = localScaleComponents[channel];
        localScaleCmpt.domains = domains;
        if (scale_1.isSelectionDomain(specifiedDomain)) {
            // As scale parsing occurs before selection parsing, we use a temporary
            // signal here and append the scale.domain definition. This is replaced
            // with the correct domainRaw signal during scale assembly.
            // For more information, see isRawSelectionDomain in selection.ts.
            // FIXME: replace this with a special property in the scaleComponent
            localScaleCmpt.set('domainRaw', {
                signal: selection_1.SELECTION_DOMAIN + JSON.stringify(specifiedDomain)
            }, true);
        }
    });
}
function parseNonUnitScaleDomain(model) {
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        parseScaleDomain(child);
    }
    var localScaleComponents = model.component.scales;
    util.keys(localScaleComponents).forEach(function (channel) {
        // FIXME: Arvind -- Please revise logic for merging selectionDomain / domainRaw
        var domains;
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childComponent = child.component.scales[channel];
            if (childComponent) {
                if (domains === undefined) {
                    domains = childComponent.domains;
                } else {
                    domains = domains.concat(childComponent.domains);
                }
            }
        }
        if (model_1.isFacetModel(model)) {
            domains.forEach(function (domain) {
                // Replace the scale domain with data output from a cloned subtree after the facet.
                if (vega_schema_1.isDataRefDomain(domain)) {
                    // use data from cloned subtree (which is the same as data but with a prefix added once)
                    domain.data = optimize_1.FACET_SCALE_PREFIX + domain.data.replace(optimize_1.FACET_SCALE_PREFIX, '');
                }
            });
        }
        localScaleComponents[channel].domains = domains;
    });
}
/**
 * Remove unaggregated domain if it is not applicable
 * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.
 */
function normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {
    if (domain === 'unaggregated') {
        var _a = canUseUnaggregatedDomain(fieldDef, scaleType),
            valid = _a.valid,
            reason = _a.reason;
        if (!valid) {
            log.warn(reason);
            return undefined;
        }
    } else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {
        // Apply config if domain is not specified.
        var valid = canUseUnaggregatedDomain(fieldDef, scaleType).valid;
        if (valid) {
            return 'unaggregated';
        }
    }
    return domain;
}
function parseDomainForChannel(model, channel) {
    var scaleType = model.getScaleComponent(channel).get('type');
    var domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);
    if (domain !== model.scaleDomain(channel)) {
        model.specifiedScales[channel] = tslib_1.__assign({}, model.specifiedScales[channel], { domain: domain });
    }
    // If channel is either X or Y then union them with X2 & Y2 if they exist
    if (channel === 'x' && model.channelHasField('x2')) {
        if (model.channelHasField('x')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));
        } else {
            return parseSingleChannelDomain(scaleType, domain, model, 'x2');
        }
    } else if (channel === 'y' && model.channelHasField('y2')) {
        if (model.channelHasField('y')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));
        } else {
            return parseSingleChannelDomain(scaleType, domain, model, 'y2');
        }
    }
    return parseSingleChannelDomain(scaleType, domain, model, channel);
}
exports.parseDomainForChannel = parseDomainForChannel;
function parseSingleChannelDomain(scaleType, domain, model, channel) {
    var fieldDef = model.fieldDef(channel);
    if (domain && domain !== 'unaggregated' && !scale_1.isSelectionDomain(domain)) {
        if (fieldDef.bin) {
            log.warn(log.message.conflictedDomain(channel));
        } else {
            if (datetime_1.isDateTime(domain[0])) {
                return domain.map(function (dt) {
                    return { signal: "{data: " + datetime_1.dateTimeExpr(dt, true) + "}" };
                });
            }
            return [domain];
        }
    }
    var stack = model.stack;
    if (stack && channel === stack.fieldChannel) {
        if (stack.offset === 'normalize') {
            return [[0, 1]];
        }
        var data = model.requestDataName(data_1.MAIN);
        return [{
            data: data,
            field: model.field(channel, { suffix: 'start' })
        }, {
            data: data,
            field: model.field(channel, { suffix: 'end' })
        }];
    }
    var sort = channel_1.isScaleChannel(channel) ? domainSort(model, channel, scaleType) : undefined;
    if (domain === 'unaggregated') {
        var data = model.requestDataName(data_1.MAIN);
        return [{
            data: data,
            field: model.field(channel, { aggregate: 'min' })
        }, {
            data: data,
            field: model.field(channel, { aggregate: 'max' })
        }];
    } else if (fieldDef.bin) {
        if (scale_1.isBinScale(scaleType)) {
            var signal = model.getName(bin_1.binToString(fieldDef.bin) + "_" + fieldDef.field + "_bins");
            return [{ signal: "sequence(" + signal + ".start, " + signal + ".stop + " + signal + ".step, " + signal + ".step)" }];
        }
        if (scale_1.hasDiscreteDomain(scaleType)) {
            // ordinal bin scale takes domain from bin_range, ordered by bin start
            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).
            return [{
                // If sort by aggregation of a specified sort field, we need to use RAW table,
                // so we can aggregate values for the scale independently from the main aggregation.
                data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),
                // Use range if we added it and the scale does not support computing a range as a signal.
                field: model.field(channel, common_1.binRequiresRange(fieldDef, channel) ? { binSuffix: 'range' } : {}),
                // we have to use a sort object if sort = true to make the sort correct by bin start
                sort: sort === true || !sort_1.isSortField(sort) ? {
                    field: model.field(channel, {}),
                    op: 'min' // min or max doesn't matter since we sort by the start of the bin range
                } : sort
            }];
        } else {
            if (channel === 'x' || channel === 'y') {
                // X/Y position have to include start and end for non-ordinal scale
                var data = model.requestDataName(data_1.MAIN);
                return [{
                    data: data,
                    field: model.field(channel, {})
                }, {
                    data: data,
                    field: model.field(channel, { binSuffix: 'end' })
                }];
            } else {
                // TODO: use bin_mid
                return [{
                    data: model.requestDataName(data_1.MAIN),
                    field: model.field(channel, {})
                }];
            }
        }
    } else if (sort) {
        return [{
            // If sort by aggregation of a specified sort field, we need to use RAW table,
            // so we can aggregate values for the scale independently from the main aggregation.
            data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),
            field: model.field(channel),
            sort: sort
        }];
    } else {
        return [{
            data: model.requestDataName(data_1.MAIN),
            field: model.field(channel)
        }];
    }
}
function domainSort(model, channel, scaleType) {
    if (!scale_1.hasDiscreteDomain(scaleType)) {
        return undefined;
    }
    var sort = model.sort(channel);
    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)
    if (sort_1.isSortField(sort)) {
        return sort;
    }
    if (sort === 'descending') {
        return {
            op: 'min',
            field: model.field(channel),
            order: 'descending'
        };
    }
    if (util.contains(['ascending', undefined /* default =ascending*/], sort)) {
        return true;
    }
    // sort === 'none'
    return undefined;
}
exports.domainSort = domainSort;
/**
 * Determine if a scale can use unaggregated domain.
 * @return {Boolean} Returns true if all of the following conditons applies:
 * 1. `scale.domain` is `unaggregated`
 * 2. Aggregation function is not `count` or `sum`
 * 3. The scale is quantitative or time scale.
 */
function canUseUnaggregatedDomain(fieldDef, scaleType) {
    if (!fieldDef.aggregate) {
        return {
            valid: false,
            reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)
        };
    }
    if (!aggregate_1.SHARED_DOMAIN_OP_INDEX[fieldDef.aggregate]) {
        return {
            valid: false,
            reason: log.message.unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)
        };
    }
    if (fieldDef.type === 'quantitative') {
        if (scaleType === 'log') {
            return {
                valid: false,
                reason: log.message.unaggregatedDomainWithLogScale(fieldDef)
            };
        }
    }
    return { valid: true };
}
exports.canUseUnaggregatedDomain = canUseUnaggregatedDomain;
/**
 * Converts an array of domains to a single Vega scale domain.
 */
function mergeDomains(domains) {
    var uniqueDomains = util.unique(domains.map(function (domain) {
        // ignore sort property when computing the unique domains
        if (vega_schema_1.isDataRefDomain(domain)) {
            var _s = domain.sort,
                domainWithoutSort = tslib_1.__rest(domain, ["sort"]);
            return domainWithoutSort;
        }
        return domain;
    }), util.hash);
    var sorts = util.unique(domains.map(function (d) {
        if (vega_schema_1.isDataRefDomain(d)) {
            var s = d.sort;
            if (s !== undefined && !util.isBoolean(s)) {
                if (s.op === 'count') {
                    // let's make sure that if op is count, we don't use a field
                    delete s.field;
                }
                if (s.order === 'ascending') {
                    // drop order: ascending as it is the default
                    delete s.order;
                }
            }
            return s;
        }
        return undefined;
    }).filter(function (s) {
        return s !== undefined;
    }), util.hash);
    if (uniqueDomains.length === 1) {
        var domain = domains[0];
        if (vega_schema_1.isDataRefDomain(domain) && sorts.length > 0) {
            var sort_2 = sorts[0];
            if (sorts.length > 1) {
                log.warn(log.message.MORE_THAN_ONE_SORT);
                sort_2 = true;
            }
            return tslib_1.__assign({}, domain, { sort: sort_2 });
        }
        return domain;
    }
    // only keep simple sort properties that work with unioned domains
    var onlySimpleSorts = sorts.filter(function (s) {
        if (util.isBoolean(s)) {
            return true;
        }
        if (s.op === 'count') {
            return true;
        }
        log.warn(log.message.domainSortDropped(s));
        return false;
    });
    var sort = true;
    if (onlySimpleSorts.length === 1) {
        sort = onlySimpleSorts[0];
    } else if (onlySimpleSorts.length > 1) {
        // ignore sort = false if we have another sort property
        var filteredSorts = onlySimpleSorts.filter(function (s) {
            return s !== false;
        });
        if (filteredSorts.length > 1) {
            log.warn(log.message.MORE_THAN_ONE_SORT);
            sort = true;
        } else {
            sort = filteredSorts[0];
        }
    }
    var allData = util.unique(domains.map(function (d) {
        if (vega_schema_1.isDataRefDomain(d)) {
            return d.data;
        }
        return null;
    }), function (x) {
        return x;
    });
    if (allData.length === 1 && allData[0] !== null) {
        // create a union domain of different fields with a single data source
        var domain = {
            data: allData[0],
            fields: uniqueDomains.map(function (d) {
                return d.field;
            }),
            sort: sort
        };
        return domain;
    }
    return { fields: uniqueDomains, sort: sort };
}
exports.mergeDomains = mergeDomains;
/**
 * Return a field if a scale single field.
 * Return `undefined` otherwise.
 *
 */
function getFieldFromDomain(domain) {
    if (vega_schema_1.isDataRefDomain(domain) && vega_util_1.isString(domain.field)) {
        return domain.field;
    } else if (vega_schema_2.isDataRefUnionedDomain(domain)) {
        var field = void 0;
        for (var _i = 0, _a = domain.fields; _i < _a.length; _i++) {
            var nonUnionDomain = _a[_i];
            if (vega_schema_1.isDataRefDomain(nonUnionDomain) && vega_util_1.isString(nonUnionDomain.field)) {
                if (!field) {
                    field = nonUnionDomain.field;
                } else if (field !== nonUnionDomain.field) {
                    log.warn('Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect.');
                    return field;
                }
            }
        }
        log.warn('Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect.');
        return field;
    } else if (vega_schema_2.isFieldRefUnionDomain(domain) && vega_util_1.isString) {
        log.warn('Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.');
        var field = domain.fields[0];
        return vega_util_1.isString(field) ? field : undefined;
    }
    return undefined;
}
exports.getFieldFromDomain = getFieldFromDomain;
function assembleDomain(model, channel) {
    var scaleComponent = model.component.scales[channel];
    var domains = scaleComponent.domains.map(function (domain) {
        // Correct references to data as the original domain's data was determined
        // in parseScale, which happens before parseData. Thus the original data
        // reference can be incorrect.
        if (vega_schema_1.isDataRefDomain(domain)) {
            domain.data = model.lookupDataSource(domain.data);
        }
        return domain;
    });
    // domains is an array that has to be merged into a single vega domain
    return mergeDomains(domains);
}
exports.assembleDomain = assembleDomain;

},{"../../aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js","../../bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/bin.js","../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","../../datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../sort":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/sort.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../common":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/common.js","../data/optimize":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/optimize.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/parse.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var fielddef_1 = require("../../fielddef");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
var model_1 = require("../model");
var resolve_1 = require("../resolve");
var split_1 = require("../split");
var component_1 = require("./component");
var domain_1 = require("./domain");
var properties_1 = require("./properties");
var range_1 = require("./range");
var type_1 = require("./type");
function parseScale(model) {
    parseScaleCore(model);
    domain_1.parseScaleDomain(model);
    for (var _i = 0, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1 = scale_1.NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES; _i < NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1.length; _i++) {
        var prop = NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1[_i];
        properties_1.parseScaleProperty(model, prop);
    }
    // range depends on zero
    range_1.parseScaleRange(model);
}
exports.parseScale = parseScale;
function parseScaleCore(model) {
    if (model_1.isUnitModel(model)) {
        model.component.scales = parseUnitScaleCore(model);
    } else {
        model.component.scales = parseNonUnitScaleCore(model);
    }
}
exports.parseScaleCore = parseScaleCore;
/**
 * Parse scales for all channels of a model.
 */
function parseUnitScaleCore(model) {
    var encoding = model.encoding,
        config = model.config;
    var mark = model.mark();
    return channel_1.SCALE_CHANNELS.reduce(function (scaleComponents, channel) {
        var fieldDef;
        var specifiedScale = {};
        var channelDef = encoding[channel];
        if (fielddef_1.isFieldDef(channelDef)) {
            fieldDef = channelDef;
            specifiedScale = channelDef.scale || {};
        } else if (fielddef_1.isConditionalDef(channelDef) && fielddef_1.isFieldDef(channelDef.condition)) {
            fieldDef = channelDef.condition;
            specifiedScale = channelDef.condition.scale || {};
        } else if (channel === 'x') {
            fieldDef = fielddef_1.getFieldDef(encoding.x2);
        } else if (channel === 'y') {
            fieldDef = fielddef_1.getFieldDef(encoding.y2);
        }
        if (fieldDef) {
            var specifiedScaleType = specifiedScale.type;
            var sType = type_1.scaleType(specifiedScale.type, channel, fieldDef, mark, config.scale);
            scaleComponents[channel] = new component_1.ScaleComponent(model.scaleName(channel + '', true), { value: sType, explicit: specifiedScaleType === sType });
        }
        return scaleComponents;
    }, {});
}
var scaleTypeTieBreaker = split_1.tieBreakByComparing(function (st1, st2) {
    return scale_1.scaleTypePrecedence(st1) - scale_1.scaleTypePrecedence(st2);
});
function parseNonUnitScaleCore(model) {
    var scaleComponents = model.component.scales = {};
    var scaleTypeWithExplicitIndex = {};
    var resolve = model.component.resolve;
    var _loop_1 = function _loop_1(child) {
        parseScaleCore(child);
        // Instead of always merging right away -- check if it is compatible to merge first!
        util_1.keys(child.component.scales).forEach(function (channel) {
            // if resolve is undefined, set default first
            resolve.scale[channel] = resolve.scale[channel] || resolve_1.defaultScaleResolve(channel, model);
            if (resolve.scale[channel] === 'shared') {
                var scaleType_1 = scaleTypeWithExplicitIndex[channel];
                var childScaleType = child.component.scales[channel].getWithExplicit('type');
                if (scaleType_1) {
                    if (scale_1.scaleCompatible(scaleType_1.value, childScaleType.value)) {
                        // merge scale component if type are compatible
                        scaleTypeWithExplicitIndex[channel] = split_1.mergeValuesWithExplicit(scaleType_1, childScaleType, 'type', 'scale', scaleTypeTieBreaker);
                    } else {
                        // Otherwise, update conflicting channel to be independent
                        resolve.scale[channel] = 'independent';
                        // Remove from the index so they don't get merged
                        delete scaleTypeWithExplicitIndex[channel];
                    }
                } else {
                    scaleTypeWithExplicitIndex[channel] = childScaleType;
                }
            }
        });
    };
    // Parse each child scale and determine if a particular channel can be merged.
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        _loop_1(child);
    }
    // Merge each channel listed in the index
    util_1.keys(scaleTypeWithExplicitIndex).forEach(function (channel) {
        // Create new merged scale component
        var name = model.scaleName(channel, true);
        var typeWithExplicit = scaleTypeWithExplicitIndex[channel];
        scaleComponents[channel] = new component_1.ScaleComponent(name, typeWithExplicit);
        // rename each child and mark them as merged
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childScale = child.component.scales[channel];
            if (childScale) {
                child.renameScale(childScale.get('name'), name);
                childScale.merged = true;
            }
        }
    });
    return scaleComponents;
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../resolve":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/resolve.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","./component":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/component.js","./domain":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/domain.js","./properties":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/properties.js","./range":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/range.js","./type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/type.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/properties.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var log = require("../../log");
var scale_1 = require("../../scale");
var timeunit_1 = require("../../timeunit");
var util = require("../../util");
var util_1 = require("../../util");
var model_1 = require("../model");
var split_1 = require("../split");
var range_1 = require("./range");
function parseScaleProperty(model, property) {
    if (model_1.isUnitModel(model)) {
        parseUnitScaleProperty(model, property);
    } else {
        parseNonUnitScaleProperty(model, property);
    }
}
exports.parseScaleProperty = parseScaleProperty;
function parseUnitScaleProperty(model, property) {
    var localScaleComponents = model.component.scales;
    util_1.keys(localScaleComponents).forEach(function (channel) {
        var specifiedScale = model.specifiedScales[channel];
        var localScaleCmpt = localScaleComponents[channel];
        var mergedScaleCmpt = model.getScaleComponent(channel);
        var fieldDef = model.fieldDef(channel);
        var sort = model.sort(channel);
        var config = model.config;
        var specifiedValue = specifiedScale[property];
        var sType = mergedScaleCmpt.get('type');
        var supportedByScaleType = scale_1.scaleTypeSupportProperty(sType, property);
        var channelIncompatability = scale_1.channelScalePropertyIncompatability(channel, property);
        if (specifiedValue !== undefined) {
            // If there is a specified value, check if it is compatible with scale type and channel
            if (!supportedByScaleType) {
                log.warn(log.message.scalePropertyNotWorkWithScaleType(sType, property, channel));
            } else if (channelIncompatability) {
                log.warn(channelIncompatability);
            }
        }
        if (supportedByScaleType && channelIncompatability === undefined) {
            if (specifiedValue !== undefined) {
                // copyKeyFromObject ensure type safety
                localScaleCmpt.copyKeyFromObject(property, specifiedScale);
            } else {
                var value = getDefaultValue(property, channel, fieldDef, sort, mergedScaleCmpt.get('type'), mergedScaleCmpt.get('padding'), mergedScaleCmpt.get('paddingInner'), specifiedScale.domain, config.scale);
                if (value !== undefined) {
                    localScaleCmpt.set(property, value, false);
                }
            }
        }
    });
}
// Note: This method is used in Voyager.
function getDefaultValue(property, channel, fieldDef, sort, scaleType, scalePadding, scalePaddingInner, specifiedDomain, scaleConfig) {
    // If we have default rule-base, determine default value first
    switch (property) {
        case 'nice':
            return nice(scaleType, channel, fieldDef);
        case 'padding':
            return padding(channel, scaleType, scaleConfig);
        case 'paddingInner':
            return paddingInner(scalePadding, channel, scaleConfig);
        case 'paddingOuter':
            return paddingOuter(scalePadding, channel, scaleType, scalePaddingInner, scaleConfig);
        case 'reverse':
            return reverse(scaleType, sort);
        case 'zero':
            return zero(channel, fieldDef, specifiedDomain);
    }
    // Otherwise, use scale config
    return scaleConfig[property];
}
exports.getDefaultValue = getDefaultValue;
function parseNonUnitScaleProperty(model, property) {
    var localScaleComponents = model.component.scales;
    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
        var child = _a[_i];
        if (property === 'range') {
            range_1.parseScaleRange(child);
        } else {
            parseScaleProperty(child, property);
        }
    }
    util_1.keys(localScaleComponents).forEach(function (channel) {
        var valueWithExplicit;
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var childComponent = child.component.scales[channel];
            if (childComponent) {
                var childValueWithExplicit = childComponent.getWithExplicit(property);
                valueWithExplicit = split_1.mergeValuesWithExplicit(valueWithExplicit, childValueWithExplicit, property, 'scale', split_1.tieBreakByComparing(function (v1, v2) {
                    switch (property) {
                        case 'range':
                            // For range step, prefer larger step
                            if (v1.step && v2.step) {
                                return v1.step - v2.step;
                            }
                            return 0;
                    }
                    return 0;
                }));
            }
        }
        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);
    });
}
exports.parseNonUnitScaleProperty = parseNonUnitScaleProperty;
function nice(scaleType, channel, fieldDef) {
    if (util.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scaleType)) {
        return timeunit_1.smallestUnit(fieldDef.timeUnit);
    }
    if (fieldDef.bin) {
        return undefined;
    }
    return util.contains([channel_1.X, channel_1.Y], channel); // return true for quantitative X/Y unless binned
}
exports.nice = nice;
function padding(channel, scaleType, scaleConfig) {
    if (util.contains([channel_1.X, channel_1.Y], channel)) {
        if (scaleType === scale_1.ScaleType.POINT) {
            return scaleConfig.pointPadding;
        }
    }
    return undefined;
}
exports.padding = padding;
function paddingInner(padding, channel, scaleConfig) {
    if (padding !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingInner.
        return undefined;
    }
    if (util.contains([channel_1.X, channel_1.Y], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.
        return scaleConfig.bandPaddingInner;
    }
    return undefined;
}
exports.paddingInner = paddingInner;
function paddingOuter(padding, channel, scaleType, paddingInner, scaleConfig) {
    if (padding !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingOuter.
        return undefined;
    }
    if (util.contains([channel_1.X, channel_1.Y], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        if (scaleType === scale_1.ScaleType.BAND) {
            if (scaleConfig.bandPaddingOuter !== undefined) {
                return scaleConfig.bandPaddingOuter;
            }
            /* By default, paddingOuter is paddingInner / 2. The reason is that
                size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).
                and we want the width/height to be integer by default.
                Note that step (by default) and cardinality are integers.) */
            return paddingInner / 2;
        }
    }
    return undefined;
}
exports.paddingOuter = paddingOuter;
function reverse(scaleType, sort) {
    if (scale_1.hasContinuousDomain(scaleType) && sort === 'descending') {
        // For continuous domain scales, Vega does not support domain sort.
        // Thus, we reverse range instead if sort is descending
        return true;
    }
    return undefined;
}
exports.reverse = reverse;
function zero(channel, fieldDef, specifiedScale) {
    // By default, return true only for the following cases:
    // 1) using quantitative field with size
    // While this can be either ratio or interval fields, our assumption is that
    // ratio are more common.
    if (channel === 'size' && fieldDef.type === 'quantitative') {
        return true;
    }
    // 2) non-binned, quantitative x-scale or y-scale if no custom domain is provided.
    // (For binning, we should not include zero by default because binning are calculated without zero.
    // Similar, if users explicitly provide a domain range, we should not augment zero as that will be unexpected.)
    var hasCustomDomain = !!specifiedScale && specifiedScale !== 'unaggregated';
    if (!hasCustomDomain && !fieldDef.bin && util.contains([channel_1.X, channel_1.Y], channel)) {
        return true;
    }
    return false;
}
exports.zero = zero;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","./range":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/range.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/range.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var vega_util_1 = require("vega-util");
var channel_1 = require("../../channel");
var log = require("../../log");
var scale_1 = require("../../scale");
var util = require("../../util");
var vega_schema_1 = require("../../vega.schema");
var model_1 = require("../model");
var split_1 = require("../split");
var properties_1 = require("./properties");
exports.RANGE_PROPERTIES = ['range', 'rangeStep', 'scheme'];
function parseScaleRange(model) {
    if (model_1.isUnitModel(model)) {
        parseUnitScaleRange(model);
    } else {
        properties_1.parseNonUnitScaleProperty(model, 'range');
    }
}
exports.parseScaleRange = parseScaleRange;
function parseUnitScaleRange(model) {
    var localScaleComponents = model.component.scales;
    // use SCALE_CHANNELS instead of scales[channel] to ensure that x, y come first!
    channel_1.SCALE_CHANNELS.forEach(function (channel) {
        var localScaleCmpt = localScaleComponents[channel];
        if (!localScaleCmpt) {
            return;
        }
        var mergedScaleCmpt = model.getScaleComponent(channel);
        var specifiedScale = model.specifiedScales[channel];
        var fieldDef = model.fieldDef(channel);
        // Read if there is a specified width/height
        var sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
        var specifiedSize = sizeType ? model.component.layoutSize.get(sizeType) : undefined;
        var xyRangeSteps = getXYRangeStep(model);
        var rangeWithExplicit = parseRangeForChannel(channel, mergedScaleCmpt.get('type'), fieldDef.type, specifiedScale, model.config, localScaleCmpt.get('zero'), model.mark(), specifiedSize, model.getName(sizeType), xyRangeSteps);
        localScaleCmpt.setWithExplicit('range', rangeWithExplicit);
    });
}
function getXYRangeStep(model) {
    var xyRangeSteps = [];
    var xScale = model.getScaleComponent('x');
    var xRange = xScale && xScale.get('range');
    if (xRange && vega_schema_1.isVgRangeStep(xRange) && vega_util_1.isNumber(xRange.step)) {
        xyRangeSteps.push(xRange.step);
    }
    var yScale = model.getScaleComponent('y');
    var yRange = yScale && yScale.get('range');
    if (yRange && vega_schema_1.isVgRangeStep(yRange) && vega_util_1.isNumber(yRange.step)) {
        xyRangeSteps.push(yRange.step);
    }
    return xyRangeSteps;
}
/**
 * Return mixins that includes one of the range properties (range, rangeStep, scheme).
 */
function parseRangeForChannel(channel, scaleType, type, specifiedScale, config, zero, mark, specifiedSize, sizeSignal, xyRangeSteps) {
    var noRangeStep = !!specifiedSize || specifiedScale.rangeStep === null;
    // Check if any of the range properties is specified.
    // If so, check if it is compatible and make sure that we only output one of the properties
    for (var _i = 0, RANGE_PROPERTIES_1 = exports.RANGE_PROPERTIES; _i < RANGE_PROPERTIES_1.length; _i++) {
        var property = RANGE_PROPERTIES_1[_i];
        if (specifiedScale[property] !== undefined) {
            var supportedByScaleType = scale_1.scaleTypeSupportProperty(scaleType, property);
            var channelIncompatability = scale_1.channelScalePropertyIncompatability(channel, property);
            if (!supportedByScaleType) {
                log.warn(log.message.scalePropertyNotWorkWithScaleType(scaleType, property, channel));
            } else if (channelIncompatability) {
                log.warn(channelIncompatability);
            } else {
                switch (property) {
                    case 'range':
                        return split_1.makeImplicit(specifiedScale[property]);
                    case 'scheme':
                        return split_1.makeImplicit(parseScheme(specifiedScale[property]));
                    case 'rangeStep':
                        var rangeStep = specifiedScale[property];
                        if (rangeStep !== null) {
                            if (specifiedSize === undefined) {
                                return split_1.makeImplicit({ step: rangeStep });
                            } else {
                                // If top-level size is specified, we ignore specified rangeStep.
                                log.warn(log.message.rangeStepDropped(channel));
                            }
                        }
                }
            }
        }
    }
    return {
        explicit: false,
        value: defaultRange(channel, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep)
    };
}
exports.parseRangeForChannel = parseRangeForChannel;
function parseScheme(scheme) {
    if (scale_1.isExtendedScheme(scheme)) {
        var r = { scheme: scheme.name };
        if (scheme.count) {
            r.count = scheme.count;
        }
        if (scheme.extent) {
            r.extent = scheme.extent;
        }
        return r;
    }
    return { scheme: scheme };
}
function defaultRange(channel, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep) {
    switch (channel) {
        case channel_1.X:
        case channel_1.Y:
            if (util.contains(['point', 'band'], scaleType) && !noRangeStep) {
                if (channel === channel_1.X && mark === 'text') {
                    if (config.scale.textXRangeStep) {
                        return { step: config.scale.textXRangeStep };
                    }
                } else {
                    if (config.scale.rangeStep) {
                        return { step: config.scale.rangeStep };
                    }
                }
            }
            // If range step is null, assign temporary range signals,
            // which will be later replaced with proper signals in assemble.
            // We cannot set the right size signal here since parseLayoutSize() happens after parseScale().
            return channel === channel_1.X ? [0, { signal: sizeSignal }] : [{ signal: sizeSignal }, 0];
        case channel_1.SIZE:
            // TODO: support custom rangeMin, rangeMax
            var rangeMin = sizeRangeMin(mark, zero, config);
            var rangeMax = sizeRangeMax(mark, xyRangeSteps, config);
            return [rangeMin, rangeMax];
        case channel_1.SHAPE:
            return 'symbol';
        case channel_1.COLOR:
            if (scaleType === 'ordinal') {
                // Only nominal data uses ordinal scale by default
                return type === 'nominal' ? 'category' : 'ordinal';
            }
            return mark === 'rect' ? 'heatmap' : 'ramp';
        case channel_1.OPACITY:
            // TODO: support custom rangeMin, rangeMax
            return [config.scale.minOpacity, config.scale.maxOpacity];
    }
    /* istanbul ignore next: should never reach here */
    throw new Error("Scale range undefined for channel " + channel);
}
exports.defaultRange = defaultRange;
function sizeRangeMin(mark, zero, config) {
    if (zero) {
        return 0;
    }
    switch (mark) {
        case 'bar':
        case 'tick':
            return config.scale.minBandSize;
        case 'line':
        case 'rule':
            return config.scale.minStrokeWidth;
        case 'text':
            return config.scale.minFontSize;
        case 'point':
        case 'square':
        case 'circle':
            return config.scale.minSize;
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMin not implemented for the mark
    throw new Error(log.message.incompatibleChannel('size', mark));
}
function sizeRangeMax(mark, xyRangeSteps, config) {
    var scaleConfig = config.scale;
    // TODO(#1168): make max size scale based on rangeStep / overall plot size
    switch (mark) {
        case 'bar':
        case 'tick':
            if (config.scale.maxBandSize !== undefined) {
                return config.scale.maxBandSize;
            }
            return minXYRangeStep(xyRangeSteps, config.scale) - 1;
        case 'line':
        case 'rule':
            return config.scale.maxStrokeWidth;
        case 'text':
            return config.scale.maxFontSize;
        case 'point':
        case 'square':
        case 'circle':
            if (config.scale.maxSize) {
                return config.scale.maxSize;
            }
            // FIXME this case totally should be refactored
            var pointStep = minXYRangeStep(xyRangeSteps, scaleConfig);
            return (pointStep - 2) * (pointStep - 2);
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMax not implemented for the mark
    throw new Error(log.message.incompatibleChannel('size', mark));
}
/**
 * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.
 */
function minXYRangeStep(xyRangeSteps, scaleConfig) {
    if (xyRangeSteps.length > 0) {
        return Math.min.apply(null, xyRangeSteps);
    }
    if (scaleConfig.rangeStep) {
        return scaleConfig.rangeStep;
    }
    return 21; // FIXME: re-evaluate the default value here.
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../../vega.schema":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","../split":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js","./properties":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/properties.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/scale/type.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("../../channel");
var log = require("../../log");
var scale_1 = require("../../scale");
var scale_2 = require("../../scale");
var type_1 = require("../../type");
var util = require("../../util");
var util_1 = require("../../util");
/**
 * Determine if there is a specified scale type and if it is appropriate,
 * or determine default type if type is unspecified or inappropriate.
 */
// NOTE: CompassQL uses this method.
function scaleType(specifiedType, channel, fieldDef, mark, scaleConfig) {
    var defaultScaleType = defaultType(channel, fieldDef, mark, scaleConfig);
    if (!channel_1.isScaleChannel(channel)) {
        // There is no scale for these channels
        return null;
    }
    if (specifiedType !== undefined) {
        // Check if explicitly specified scale type is supported by the channel
        if (!scale_1.channelSupportScaleType(channel, specifiedType)) {
            log.warn(log.message.scaleTypeNotWorkWithChannel(channel, specifiedType, defaultScaleType));
            return defaultScaleType;
        }
        // Check if explicitly specified scale type is supported by the data type
        if (!fieldDefMatchScaleType(specifiedType, fieldDef)) {
            log.warn(log.message.scaleTypeNotWorkWithFieldDef(specifiedType, defaultScaleType));
            return defaultScaleType;
        }
        return specifiedType;
    }
    return defaultScaleType;
}
exports.scaleType = scaleType;
/**
 * Determine appropriate default scale type.
 */
// NOTE: Voyager uses this method.
function defaultType(channel, fieldDef, mark, scaleConfig) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
            if (channel === 'color' || channel_1.rangeType(channel) === 'discrete') {
                if (channel === 'shape' && fieldDef.type === 'ordinal') {
                    log.warn(log.message.discreteChannelCannotEncode(channel, 'ordinal'));
                }
                return 'ordinal';
            }
            if (util.contains(['x', 'y'], channel)) {
                if (mark === 'rect') {
                    // The rect mark should fit into a band.
                    return 'band';
                }
                if (mark === 'bar') {
                    return 'band';
                }
            }
            // Otherwise, use ordinal point scale so we can easily get center positions of the marks.
            return 'point';
        case 'temporal':
            if (channel === 'color') {
                return 'sequential';
            } else if (channel_1.rangeType(channel) === 'discrete') {
                log.warn(log.message.discreteChannelCannotEncode(channel, 'temporal'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            return 'time';
        case 'quantitative':
            if (channel === 'color') {
                if (fieldDef.bin) {
                    return 'bin-ordinal';
                }
                // Use `sequential` as the default color scale for continuous data
                // since it supports both array range and scheme range.
                return 'sequential';
            } else if (channel_1.rangeType(channel) === 'discrete') {
                log.warn(log.message.discreteChannelCannotEncode(channel, 'quantitative'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            // x and y use a linear scale because selections don't work with bin scales.
            // Binned scales apply discretization but pan/zoom apply transformations to a [min, max] extent domain.
            if (fieldDef.bin && channel !== 'x' && channel !== 'y') {
                return 'bin-linear';
            }
            return 'linear';
    }
    /* istanbul ignore next: should never reach this */
    throw new Error(log.message.invalidFieldType(fieldDef.type));
}
function fieldDefMatchScaleType(specifiedType, fieldDef) {
    var type = fieldDef.type;
    if (util_1.contains([type_1.Type.ORDINAL, type_1.Type.NOMINAL], type)) {
        return specifiedType === undefined || scale_2.hasDiscreteDomain(specifiedType);
    } else if (type === type_1.Type.TEMPORAL) {
        return util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.SEQUENTIAL, undefined], specifiedType);
    } else if (type === type_1.Type.QUANTITATIVE) {
        if (fieldDef.bin) {
            return util_1.contains([scale_1.ScaleType.BIN_LINEAR, scale_1.ScaleType.BIN_ORDINAL, scale_1.ScaleType.LINEAR], specifiedType);
        }
        return util_1.contains([scale_1.ScaleType.LOG, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT, scale_1.ScaleType.QUANTILE, scale_1.ScaleType.QUANTIZE, scale_1.ScaleType.LINEAR, scale_1.ScaleType.SEQUENTIAL, undefined], specifiedType);
    }
    return true;
}
exports.fieldDefMatchScaleType = fieldDefMatchScaleType;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/interval.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../../channel");
var log_1 = require("../../log");
var scale_1 = require("../../scale");
var util_1 = require("../../util");
var selection_1 = require("./selection");
var scales_1 = require("./transforms/scales");
exports.BRUSH = '_brush';
exports.SCALE_TRIGGER = '_scale_trigger';
var interval = {
    predicate: 'vlInterval',
    scaleDomain: 'vlIntervalDomain',
    signals: function signals(model, selCmpt) {
        var name = selCmpt.name;
        var hasScales = scales_1.default.has(selCmpt);
        var signals = [];
        var intervals = [];
        var tupleTriggers = [];
        var scaleTriggers = [];
        if (selCmpt.translate && !hasScales) {
            var filterExpr_1 = "!event.item || event.item.mark.name !== " + util_1.stringValue(name + exports.BRUSH);
            events(selCmpt, function (_, evt) {
                var filters = evt.between[0].filter || (evt.between[0].filter = []);
                if (filters.indexOf(filterExpr_1) < 0) {
                    filters.push(filterExpr_1);
                }
            });
        }
        selCmpt.project.forEach(function (p) {
            var channel = p.channel;
            if (channel !== channel_1.X && channel !== channel_1.Y) {
                log_1.warn('Interval selections only support x and y encoding channels.');
                return;
            }
            var cs = channelSignals(model, selCmpt, channel);
            var dname = selection_1.channelSignalName(selCmpt, channel, 'data');
            var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');
            var scaleStr = util_1.stringValue(model.scaleName(channel));
            var scaleType = model.getScaleComponent(channel).get('type');
            var toNum = scale_1.hasContinuousDomain(scaleType) ? '+' : '';
            signals.push.apply(signals, cs);
            tupleTriggers.push(dname);
            intervals.push("{encoding: " + util_1.stringValue(channel) + ", " + ("field: " + util_1.stringValue(p.field) + ", extent: " + dname + "}"));
            scaleTriggers.push({
                scaleName: model.scaleName(channel),
                expr: "(!isArray(" + dname + ") || " + ("(" + toNum + "invert(" + scaleStr + ", " + vname + ")[0] === " + toNum + dname + "[0] && ") + (toNum + "invert(" + scaleStr + ", " + vname + ")[1] === " + toNum + dname + "[1]))")
            });
        });
        // Proxy scale reactions to ensure that an infinite loop doesn't occur
        // when an interval selection filter touches the scale.
        if (!hasScales) {
            signals.push({
                name: name + exports.SCALE_TRIGGER,
                update: scaleTriggers.map(function (t) {
                    return t.expr;
                }).join(' && ') + (" ? " + (name + exports.SCALE_TRIGGER) + " : {}")
            });
        }
        // Only add an interval to the store if it has valid data extents. Data extents
        // are set to null if pixel extents are equal to account for intervals over
        // ordinal/nominal domains which, when inverted, will still produce a valid datum.
        return signals.concat({
            name: name + selection_1.TUPLE,
            on: [{
                events: tupleTriggers.map(function (t) {
                    return { signal: t };
                }),
                update: tupleTriggers.join(' && ') + (" ? {unit: " + selection_1.unitName(model) + ", intervals: [" + intervals.join(', ') + "]} : null")
            }]
        });
    },
    modifyExpr: function modifyExpr(model, selCmpt) {
        var tpl = selCmpt.name + selection_1.TUPLE;
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : "{unit: " + selection_1.unitName(model) + "}");
    },
    marks: function marks(model, selCmpt, _marks) {
        var name = selCmpt.name;
        var _a = selection_1.spatialProjections(selCmpt),
            xi = _a.xi,
            yi = _a.yi;
        var store = "data(" + util_1.stringValue(selCmpt.name + selection_1.STORE) + ")";
        // Do not add a brush if we're binding to scales.
        if (scales_1.default.has(selCmpt)) {
            return _marks;
        }
        var update = {
            x: xi !== null ? { signal: name + "_x[0]" } : { value: 0 },
            y: yi !== null ? { signal: name + "_y[0]" } : { value: 0 },
            x2: xi !== null ? { signal: name + "_x[1]" } : { field: { group: 'width' } },
            y2: yi !== null ? { signal: name + "_y[1]" } : { field: { group: 'height' } }
        };
        // If the selection is resolved to global, only a single interval is in
        // the store. Wrap brush mark's encodings with a production rule to test
        // this based on the `unit` property. Hide the brush mark if it corresponds
        // to a unit different from the one in the store.
        if (selCmpt.resolve === 'global') {
            util_1.keys(update).forEach(function (key) {
                update[key] = [tslib_1.__assign({ test: store + ".length && " + store + "[0].unit === " + selection_1.unitName(model) }, update[key]), { value: 0 }];
            });
        }
        // Two brush marks ensure that fill colors and other aesthetic choices do
        // not interefere with the core marks, but that the brushed region can still
        // be interacted with (e.g., dragging it around).
        var _b = selCmpt.mark,
            fill = _b.fill,
            fillOpacity = _b.fillOpacity,
            stroke = tslib_1.__rest(_b, ["fill", "fillOpacity"]);
        var vgStroke = util_1.keys(stroke).reduce(function (def, k) {
            def[k] = { value: stroke[k] };
            return def;
        }, {});
        return [{
            name: name + exports.BRUSH + '_bg',
            type: 'rect',
            clip: true,
            encode: {
                enter: {
                    fill: { value: fill },
                    fillOpacity: { value: fillOpacity }
                },
                update: update
            }
        }].concat(_marks, {
            name: name + exports.BRUSH,
            type: 'rect',
            clip: true,
            encode: {
                enter: tslib_1.__assign({ fill: { value: 'transparent' } }, vgStroke),
                update: update
            }
        });
    }
};
exports.default = interval;
/**
 * Returns the visual and data signals for an interval selection.
 */
function channelSignals(model, selCmpt, channel) {
    var vname = selection_1.channelSignalName(selCmpt, channel, 'visual');
    var dname = selection_1.channelSignalName(selCmpt, channel, 'data');
    var hasScales = scales_1.default.has(selCmpt);
    var scaleName = model.scaleName(channel);
    var scaleStr = util_1.stringValue(scaleName);
    var scale = model.getScaleComponent(channel);
    var scaleType = scale ? scale.get('type') : undefined;
    var size = model.getSizeSignalRef(channel === channel_1.X ? 'width' : 'height').signal;
    var coord = channel + "(unit)";
    var on = events(selCmpt, function (def, evt) {
        return def.concat({ events: evt.between[0], update: "[" + coord + ", " + coord + "]" }, // Brush Start
        { events: evt, update: "[" + vname + "[0], clamp(" + coord + ", 0, " + size + ")]" } // Brush End
        );
    });
    // React to pan/zooms of continuous scales. Non-continuous scales
    // (bin-linear, band, point) cannot be pan/zoomed and any other changes
    // to their domains (e.g., filtering) should clear the brushes.
    on.push({
        events: { signal: selCmpt.name + exports.SCALE_TRIGGER },
        update: scale_1.hasContinuousDomain(scaleType) && !scale_1.isBinScale(scaleType) ? "[scale(" + scaleStr + ", " + dname + "[0]), scale(" + scaleStr + ", " + dname + "[1])]" : "[0, 0]"
    });
    return hasScales ? [{ name: dname, on: [] }] : [{
        name: vname, value: [], on: on
    }, {
        name: dname,
        on: [{ events: { signal: vname }, update: vname + "[0] === " + vname + "[1] ? null : invert(" + scaleStr + ", " + vname + ")" }]
    }];
}
function events(selCmpt, cb) {
    return selCmpt.events.reduce(function (on, evt) {
        if (!evt.between) {
            log_1.warn(evt + " is not an ordered event stream for interval selections");
            return on;
        }
        return cb(on, evt);
    }, []);
}

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./transforms/scales":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/multi.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../util");
var selection_1 = require("./selection");
var nearest_1 = require("./transforms/nearest");
var multi = {
    predicate: 'vlMulti',
    scaleDomain: 'vlMultiDomain',
    signals: function signals(model, selCmpt) {
        var proj = selCmpt.project;
        var datum = nearest_1.default.has(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';
        var bins = [];
        var encodings = proj.map(function (p) {
            return util_1.stringValue(p.channel);
        }).filter(function (e) {
            return e;
        }).join(', ');
        var fields = proj.map(function (p) {
            return util_1.stringValue(p.field);
        }).join(', ');
        var values = proj.map(function (p) {
            var channel = p.channel;
            var fieldDef = model.fieldDef(channel);
            // Binned fields should capture extents, for a range test against the raw field.
            return fieldDef && fieldDef.bin ? (bins.push(p.field), "[" + datum + "[" + util_1.stringValue(model.field(channel, {})) + "], " + (datum + "[" + util_1.stringValue(model.field(channel, { binSuffix: 'end' })) + "]]")) : datum + "[" + util_1.stringValue(p.field) + "]";
        }).join(', ');
        // Only add a discrete selection to the store if a datum is present _and_
        // the interaction isn't occuring on a group mark. This guards against
        // polluting interactive state with invalid values in faceted displays
        // as the group marks are also data-driven. We force the update to account
        // for constant null states but varying toggles (e.g., shift-click in
        // whitespace followed by a click in whitespace; the store should only
        // be cleared on the second click).
        return [{
            name: selCmpt.name + selection_1.TUPLE,
            value: {},
            on: [{
                events: selCmpt.events,
                update: "datum && item().mark.marktype !== 'group' ? " + ("{unit: " + selection_1.unitName(model) + ", encodings: [" + encodings + "], ") + ("fields: [" + fields + "], values: [" + values + "]") + (bins.length ? ', ' + bins.map(function (b) {
                    return util_1.stringValue('bin_' + b) + ": 1";
                }).join(', ') : '') + '} : null',
                force: true
            }]
        }];
    },
    modifyExpr: function modifyExpr(model, selCmpt) {
        var tpl = selCmpt.name + selection_1.TUPLE;
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'null' : "{unit: " + selection_1.unitName(model) + "}");
    }
};
exports.default = multi;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./transforms/nearest":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_event_selector_1 = require("vega-event-selector");
var channel_1 = require("../../channel");
var log_1 = require("../../log");
var selection_1 = require("../../selection");
var util_1 = require("../../util");
var model_1 = require("../model");
var interval_1 = require("./interval");
var multi_1 = require("./multi");
var single_1 = require("./single");
var transforms_1 = require("./transforms/transforms");
exports.STORE = '_store';
exports.TUPLE = '_tuple';
exports.MODIFY = '_modify';
exports.SELECTION_DOMAIN = '_selection_domain_';
function parseUnitSelection(model, selDefs) {
    var selCmpts = {};
    var selectionConfig = model.config.selection;
    var _loop_1 = function _loop_1(name_1) {
        if (!selDefs.hasOwnProperty(name_1)) {
            return "continue";
        }
        var selDef = selDefs[name_1];
        var cfg = selectionConfig[selDef.type];
        // Set default values from config if a property hasn't been specified,
        // or if it is true. E.g., "translate": true should use the default
        // event handlers for translate. However, true may be a valid value for
        // a property (e.g., "nearest": true).
        for (var key in cfg) {
            // A selection should contain either `encodings` or `fields`, only use
            // default values for these two values if neither of them is specified.
            if (key === 'encodings' && selDef.fields || key === 'fields' && selDef.encodings) {
                continue;
            }
            if (key === 'mark') {
                selDef[key] = tslib_1.__assign({}, cfg[key], selDef[key]);
            }
            if (selDef[key] === undefined || selDef[key] === true) {
                selDef[key] = cfg[key] || selDef[key];
            }
        }
        name_1 = util_1.varName(name_1);
        var selCmpt = selCmpts[name_1] = tslib_1.__assign({}, selDef, { name: name_1, events: util_1.isString(selDef.on) ? vega_event_selector_1.selector(selDef.on, 'scope') : selDef.on });
        transforms_1.forEachTransform(selCmpt, function (txCompiler) {
            if (txCompiler.parse) {
                txCompiler.parse(model, selDef, selCmpt);
            }
        });
    };
    for (var name_1 in selDefs) {
        _loop_1(name_1);
    }
    return selCmpts;
}
exports.parseUnitSelection = parseUnitSelection;
function assembleUnitSelectionSignals(model, signals) {
    forEachSelection(model, function (selCmpt, selCompiler) {
        var name = selCmpt.name;
        var modifyExpr = selCompiler.modifyExpr(model, selCmpt);
        signals.push.apply(signals, selCompiler.signals(model, selCmpt));
        transforms_1.forEachTransform(selCmpt, function (txCompiler) {
            if (txCompiler.signals) {
                signals = txCompiler.signals(model, selCmpt, signals);
            }
            if (txCompiler.modifyExpr) {
                modifyExpr = txCompiler.modifyExpr(model, selCmpt, modifyExpr);
            }
        });
        signals.push({
            name: name + exports.MODIFY,
            on: [{
                events: { signal: name + exports.TUPLE },
                update: "modify(" + util_1.stringValue(selCmpt.name + exports.STORE) + ", " + modifyExpr + ")"
            }]
        });
    });
    var facetModel = getFacetModel(model);
    if (signals.length && facetModel) {
        var name_2 = util_1.stringValue(facetModel.getName('cell'));
        signals.unshift({
            name: 'facet',
            value: {},
            on: [{
                events: vega_event_selector_1.selector('mousemove', 'scope'),
                update: "isTuple(facet) ? facet : group(" + name_2 + ").datum"
            }]
        });
    }
    return signals;
}
exports.assembleUnitSelectionSignals = assembleUnitSelectionSignals;
function assembleTopLevelSignals(model, signals) {
    var needsUnit = false;
    forEachSelection(model, function (selCmpt, selCompiler) {
        if (selCompiler.topLevelSignals) {
            signals = selCompiler.topLevelSignals(model, selCmpt, signals);
        }
        transforms_1.forEachTransform(selCmpt, function (txCompiler) {
            if (txCompiler.topLevelSignals) {
                signals = txCompiler.topLevelSignals(model, selCmpt, signals);
            }
        });
        needsUnit = true;
    });
    if (needsUnit) {
        var hasUnit = signals.filter(function (s) {
            return s.name === 'unit';
        });
        if (!hasUnit.length) {
            signals.unshift({
                name: 'unit',
                value: {},
                on: [{ events: 'mousemove', update: 'isTuple(group()) ? group() : unit' }]
            });
        }
    }
    return signals;
}
exports.assembleTopLevelSignals = assembleTopLevelSignals;
function assembleUnitSelectionData(model, data) {
    forEachSelection(model, function (selCmpt) {
        var contains = data.filter(function (d) {
            return d.name === selCmpt.name + exports.STORE;
        });
        if (!contains.length) {
            data.push({ name: selCmpt.name + exports.STORE });
        }
    });
    return data;
}
exports.assembleUnitSelectionData = assembleUnitSelectionData;
function assembleUnitSelectionMarks(model, marks) {
    var selMarks = marks;
    forEachSelection(model, function (selCmpt, selCompiler) {
        selMarks = selCompiler.marks ? selCompiler.marks(model, selCmpt, selMarks) : selMarks;
        transforms_1.forEachTransform(selCmpt, function (txCompiler) {
            if (txCompiler.marks) {
                selMarks = txCompiler.marks(model, selCmpt, marks, selMarks);
            }
        });
    });
    return selMarks;
}
exports.assembleUnitSelectionMarks = assembleUnitSelectionMarks;
function assembleLayerSelectionMarks(model, marks) {
    model.children.forEach(function (child) {
        if (model_1.isUnitModel(child)) {
            marks = assembleUnitSelectionMarks(child, marks);
        }
    });
    return marks;
}
exports.assembleLayerSelectionMarks = assembleLayerSelectionMarks;
function predicate(model, selections, dfnode) {
    var stores = [];
    function expr(name) {
        var vname = util_1.varName(name);
        var selCmpt = model.getSelectionComponent(vname, name);
        var store = util_1.stringValue(vname + exports.STORE);
        if (selCmpt.timeUnit) {
            var child = dfnode || model.component.data.raw;
            var tunode = selCmpt.timeUnit.clone();
            if (child.parent) {
                tunode.insertAsParentOf(child);
            } else {
                child.parent = tunode;
            }
        }
        stores.push(store);
        return compiler(selCmpt.type).predicate + ("(" + store + ", datum") + (selCmpt.resolve === 'global' ? ')' : ", " + util_1.stringValue(selCmpt.resolve) + ")");
    }
    var predicateStr = util_1.logicalExpr(selections, expr);
    return '!(' + stores.map(function (s) {
        return "length(data(" + s + "))";
    }).join(' || ') + (") || (" + predicateStr + ")");
}
exports.predicate = predicate;
// Selections are parsed _after_ scales. If a scale domain is set to
// use a selection, the SELECTION_DOMAIN constant is used as the
// domainRaw.signal during scale.parse and then replaced with the necessary
// selection expression function during scale.assemble. To not pollute the
// type signatures to account for this setup, the selection domain definition
// is coerced to a string and appended to SELECTION_DOMAIN.
function isRawSelectionDomain(domainRaw) {
    return domainRaw.signal.indexOf(exports.SELECTION_DOMAIN) >= 0;
}
exports.isRawSelectionDomain = isRawSelectionDomain;
function selectionScaleDomain(model, domainRaw) {
    var selDomain = JSON.parse(domainRaw.signal.replace(exports.SELECTION_DOMAIN, ''));
    var name = util_1.varName(selDomain.selection);
    var selCmpt = model.component.selection && model.component.selection[name];
    if (selCmpt) {
        log_1.warn('Use "bind": "scales" to setup a binding for scales and selections within the same view.');
    } else {
        selCmpt = model.getSelectionComponent(name, selDomain.selection);
        if (!selDomain.encoding && !selDomain.field) {
            selDomain.field = selCmpt.project[0].field;
            if (selCmpt.project.length > 1) {
                log_1.warn('A "field" or "encoding" must be specified when using a selection as a scale domain. ' + ("Using \"field\": " + util_1.stringValue(selDomain.field) + "."));
            }
        }
        return {
            signal: compiler(selCmpt.type).scaleDomain + ("(" + util_1.stringValue(name + exports.STORE) + ", " + util_1.stringValue(selDomain.encoding || null) + ", ") + util_1.stringValue(selDomain.field || null) + (selCmpt.resolve === 'global' ? ')' : ", " + util_1.stringValue(selCmpt.resolve) + ")")
        };
    }
    return { signal: 'null' };
}
exports.selectionScaleDomain = selectionScaleDomain;
// Utility functions
function forEachSelection(model, cb) {
    var selections = model.component.selection;
    for (var name_3 in selections) {
        if (selections.hasOwnProperty(name_3)) {
            var sel = selections[name_3];
            cb(sel, compiler(sel.type));
        }
    }
}
function compiler(type) {
    switch (type) {
        case 'single':
            return single_1.default;
        case 'multi':
            return multi_1.default;
        case 'interval':
            return interval_1.default;
    }
    return null;
}
function getFacetModel(model) {
    var parent = model.parent;
    while (parent) {
        if (model_1.isFacetModel(parent)) {
            break;
        }
        parent = parent.parent;
    }
    return parent;
}
function unitName(model) {
    var name = util_1.stringValue(model.name);
    var facet = getFacetModel(model);
    if (facet) {
        name += (facet.facet.row ? " + '_' + facet[" + util_1.stringValue(facet.field('row')) + "]" : '') + (facet.facet.column ? " + '_' + facet[" + util_1.stringValue(facet.field('column')) + "]" : '');
    }
    return name;
}
exports.unitName = unitName;
function requiresSelectionId(model) {
    var identifier = false;
    forEachSelection(model, function (selCmpt) {
        identifier = identifier || selCmpt.project.some(function (proj) {
            return proj.field === selection_1.SELECTION_ID;
        });
    });
    return identifier;
}
exports.requiresSelectionId = requiresSelectionId;
function channelSignalName(selCmpt, channel, range) {
    return util_1.varName(selCmpt.name + '_' + (range === 'visual' ? channel : selCmpt.fields[channel]));
}
exports.channelSignalName = channelSignalName;
function spatialProjections(selCmpt) {
    var x = null;
    var xi = null;
    var y = null;
    var yi = null;
    selCmpt.project.forEach(function (p, i) {
        if (p.channel === channel_1.X) {
            x = p;
            xi = i;
        } else if (p.channel === channel_1.Y) {
            y = p;
            yi = i;
        }
    });
    return { x: x, xi: xi, y: y, yi: yi };
}
exports.spatialProjections = spatialProjections;

},{"../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/selection.js","../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./interval":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/interval.js","./multi":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/multi.js","./single":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/single.js","./transforms/transforms":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-event-selector":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-event-selector/build/vega-event-selector.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/single.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../util");
var multi_1 = require("./multi");
var selection_1 = require("./selection");
var single = {
    predicate: 'vlSingle',
    scaleDomain: 'vlSingleDomain',
    signals: multi_1.default.signals,
    topLevelSignals: function topLevelSignals(model, selCmpt, signals) {
        var hasSignal = signals.filter(function (s) {
            return s.name === selCmpt.name;
        });
        var data = "data(" + util_1.stringValue(selCmpt.name + selection_1.STORE) + ")";
        var values = data + "[0].values";
        return hasSignal.length ? signals : signals.concat({
            name: selCmpt.name,
            update: data + ".length && {" + selCmpt.project.map(function (p, i) {
                return p.field + ": " + values + "[" + i + "]";
            }).join(', ') + '}'
        });
    },
    modifyExpr: function modifyExpr(model, selCmpt) {
        var tpl = selCmpt.name + selection_1.TUPLE;
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : "{unit: " + selection_1.unitName(model) + "}");
    }
};
exports.default = single;

},{"../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./multi":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/multi.js","./selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../../util");
var selection_1 = require("../selection");
var nearest_1 = require("./nearest");
var inputBindings = {
    has: function has(selCmpt) {
        return selCmpt.type === 'single' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind !== 'scales';
    },
    topLevelSignals: function topLevelSignals(model, selCmpt, signals) {
        var name = selCmpt.name;
        var proj = selCmpt.project;
        var bind = selCmpt.bind;
        var datum = nearest_1.default.has(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';
        proj.forEach(function (p) {
            var sgname = util_1.varName(name + "_" + p.field);
            var hasSignal = signals.filter(function (s) {
                return s.name === sgname;
            });
            if (!hasSignal.length) {
                signals.unshift({
                    name: sgname,
                    value: '',
                    on: [{
                        events: selCmpt.events,
                        update: "datum && item().mark.marktype !== 'group' ? " + datum + "[" + util_1.stringValue(p.field) + "] : null"
                    }],
                    bind: bind[p.field] || bind[p.channel] || bind
                });
            }
        });
        return signals;
    },
    signals: function signals(model, selCmpt, _signals) {
        var name = selCmpt.name;
        var proj = selCmpt.project;
        var signal = _signals.filter(function (s) {
            return s.name === name + selection_1.TUPLE;
        })[0];
        var fields = proj.map(function (p) {
            return util_1.stringValue(p.field);
        }).join(', ');
        var values = proj.map(function (p) {
            return util_1.varName(name + "_" + p.field);
        });
        signal.update = values.join(' && ') + " ? {fields: [" + fields + "], values: [" + values.join(', ') + "]} : null";
        delete signal.value;
        delete signal.on;
        return _signals;
    }
};
exports.default = inputBindings;

},{"../../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./nearest":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var selection_1 = require("../selection");
var VORONOI = 'voronoi';
var nearest = {
    has: function has(selCmpt) {
        return selCmpt.type !== 'interval' && selCmpt.nearest;
    },
    marks: function marks(model, selCmpt, _marks, selMarks) {
        var _a = selection_1.spatialProjections(selCmpt),
            x = _a.x,
            y = _a.y;
        var mark = _marks[0];
        var index = selMarks.indexOf(mark);
        var isPathgroup = mark.name === model.getName('pathgroup');
        var exists = function exists(m) {
            return m.name && m.name.indexOf(VORONOI) >= 0;
        };
        var cellDef = {
            name: model.getName(VORONOI),
            type: 'path',
            from: { data: model.getName('marks') },
            encode: {
                enter: {
                    fill: { value: 'transparent' },
                    strokeWidth: { value: 0.35 },
                    stroke: { value: 'transparent' },
                    isVoronoi: { value: true }
                }
            },
            transform: [{
                type: 'voronoi',
                x: x || !x && !y ? 'datum.x' : { expr: '0' },
                y: y || !x && !y ? 'datum.y' : { expr: '0' },
                size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]
            }]
        };
        if (isPathgroup && !mark.marks.filter(exists).length) {
            mark.marks.push(cellDef);
            selMarks.splice(index, 1, mark);
        } else if (!isPathgroup && !selMarks.filter(exists).length) {
            selMarks.splice(index + 1, 0, cellDef);
        }
        return selMarks;
    }
};
exports.default = nearest;

},{"../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/project.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var log = require("../../../log");
var util_1 = require("../../../util");
var timeunit_1 = require("../../data/timeunit");
var project = {
    has: function has(selDef) {
        return selDef.fields !== undefined || selDef.encodings !== undefined;
    },
    parse: function parse(model, selDef, selCmpt) {
        var channels = {};
        var timeUnits = {};
        // TODO: find a possible channel mapping for these fields.
        (selDef.fields || []).forEach(function (field) {
            return channels[field] = null;
        });
        (selDef.encodings || []).forEach(function (channel) {
            var fieldDef = model.fieldDef(channel);
            if (fieldDef) {
                if (fieldDef.timeUnit) {
                    var tuField = model.field(channel);
                    channels[tuField] = channel;
                    // Construct TimeUnitComponents which will be combined into a
                    // TimeUnitNode. This node may need to be inserted into the
                    // dataflow if the selection is used across views that do not
                    // have these time units defined.
                    timeUnits[tuField] = {
                        as: tuField,
                        field: fieldDef.field,
                        timeUnit: fieldDef.timeUnit
                    };
                } else {
                    channels[fieldDef.field] = channel;
                }
            } else {
                log.warn(log.message.cannotProjectOnChannelWithoutField(channel));
            }
        });
        var projection = selCmpt.project || (selCmpt.project = []);
        for (var field in channels) {
            if (channels.hasOwnProperty(field)) {
                projection.push({ field: field, channel: channels[field] });
            }
        }
        var fields = selCmpt.fields || (selCmpt.fields = {});
        projection.filter(function (p) {
            return p.channel;
        }).forEach(function (p) {
            return fields[p.channel] = p.field;
        });
        if (util_1.keys(timeUnits).length) {
            selCmpt.timeUnit = new timeunit_1.TimeUnitNode(timeUnits);
        }
    }
};
exports.default = project;

},{"../../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../../data/timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/timeunit.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var log_1 = require("../../../log");
var scale_1 = require("../../../scale");
var util_1 = require("../../../util");
var selection_1 = require("../selection");
var scaleBindings = {
    has: function has(selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind === 'scales';
    },
    parse: function parse(model, selDef, selCmpt) {
        var bound = selCmpt.scales = [];
        selCmpt.project.forEach(function (p) {
            var channel = p.channel;
            var scale = model.getScaleComponent(channel);
            var scaleType = scale ? scale.get('type') : undefined;
            if (!scale || !scale_1.hasContinuousDomain(scaleType) || scale_1.isBinScale(scaleType)) {
                log_1.warn('Scale bindings are currently only supported for scales with unbinned, continuous domains.');
                return;
            }
            scale.set('domainRaw', { signal: selection_1.channelSignalName(selCmpt, channel, 'data') }, true);
            bound.push(channel);
        });
    },
    topLevelSignals: function topLevelSignals(model, selCmpt, signals) {
        // Top-level signals are only needed when coordinating composed views.
        if (!model.parent) {
            return signals;
        }
        var channels = selCmpt.scales.filter(function (channel) {
            return !signals.filter(function (s) {
                return s.name === selection_1.channelSignalName(selCmpt, channel, 'data');
            }).length;
        });
        return signals.concat(channels.map(function (channel) {
            return { name: selection_1.channelSignalName(selCmpt, channel, 'data') };
        }));
    },
    signals: function signals(model, selCmpt, _signals) {
        // Nested signals need only push to top-level signals when within composed views.
        if (model.parent) {
            selCmpt.scales.forEach(function (channel) {
                var signal = _signals.filter(function (s) {
                    return s.name === selection_1.channelSignalName(selCmpt, channel, 'data');
                })[0];
                signal.push = 'outer';
                delete signal.value;
                delete signal.update;
            });
        }
        return _signals;
    }
};
exports.default = scaleBindings;
function domain(model, channel) {
    var scale = util_1.stringValue(model.scaleName(channel));
    return "domain(" + scale + ")";
}
exports.domain = domain;

},{"../../../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../../../scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","../../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var selection_1 = require("../selection");
var TOGGLE = '_toggle';
var toggle = {
    has: function has(selCmpt) {
        return selCmpt.type === 'multi' && selCmpt.toggle;
    },
    signals: function signals(model, selCmpt, _signals) {
        return _signals.concat({
            name: selCmpt.name + TOGGLE,
            value: false,
            on: [{ events: selCmpt.events, update: selCmpt.toggle }]
        });
    },
    modifyExpr: function modifyExpr(model, selCmpt, expr) {
        var tpl = selCmpt.name + selection_1.TUPLE;
        var signal = selCmpt.name + TOGGLE;
        return signal + " ? null : " + tpl + ", " + (selCmpt.resolve === 'global' ? signal + " ? null : true, " : signal + " ? null : {unit: " + selection_1.unitName(model) + "}, ") + (signal + " ? " + tpl + " : null");
    }
};
exports.default = toggle;

},{"../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var inputs_1 = require("./inputs");
var nearest_1 = require("./nearest");
var project_1 = require("./project");
var scales_1 = require("./scales");
var toggle_1 = require("./toggle");
var translate_1 = require("./translate");
var zoom_1 = require("./zoom");
var compilers = { project: project_1.default, toggle: toggle_1.default, scales: scales_1.default,
    translate: translate_1.default, zoom: zoom_1.default, inputs: inputs_1.default, nearest: nearest_1.default };
function forEachTransform(selCmpt, cb) {
    for (var t in compilers) {
        if (compilers[t].has(selCmpt)) {
            cb(compilers[t]);
        }
    }
}
exports.forEachTransform = forEachTransform;

},{"./inputs":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js","./nearest":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js","./project":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/project.js","./scales":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js","./toggle":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js","./translate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/translate.js","./zoom":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/translate.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var vega_event_selector_1 = require("vega-event-selector");
var channel_1 = require("../../../channel");
var interval_1 = require("../interval");
var selection_1 = require("../selection");
var scales_1 = require("./scales");
var ANCHOR = '_translate_anchor';
var DELTA = '_translate_delta';
var translate = {
    has: function has(selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.translate;
    },
    signals: function signals(model, selCmpt, _signals) {
        var name = selCmpt.name;
        var hasScales = scales_1.default.has(selCmpt);
        var anchor = name + ANCHOR;
        var _a = selection_1.spatialProjections(selCmpt),
            x = _a.x,
            y = _a.y;
        var events = vega_event_selector_1.selector(selCmpt.translate, 'scope');
        if (!hasScales) {
            events = events.map(function (e) {
                return e.between[0].markname = name + interval_1.BRUSH, e;
            });
        }
        _signals.push({
            name: anchor,
            value: {},
            on: [{
                events: events.map(function (e) {
                    return e.between[0];
                }),
                update: '{x: x(unit), y: y(unit)' + (x !== null ? ', extent_x: ' + (hasScales ? scales_1.domain(model, channel_1.X) : "slice(" + selection_1.channelSignalName(selCmpt, 'x', 'visual') + ")") : '') + (y !== null ? ', extent_y: ' + (hasScales ? scales_1.domain(model, channel_1.Y) : "slice(" + selection_1.channelSignalName(selCmpt, 'y', 'visual') + ")") : '') + '}'
            }]
        }, {
            name: name + DELTA,
            value: {},
            on: [{
                events: events,
                update: "{x: " + anchor + ".x - x(unit), y: " + anchor + ".y - y(unit)}"
            }]
        });
        if (x !== null) {
            onDelta(model, selCmpt, channel_1.X, 'width', _signals);
        }
        if (y !== null) {
            onDelta(model, selCmpt, channel_1.Y, 'height', _signals);
        }
        return _signals;
    }
};
exports.default = translate;
function onDelta(model, selCmpt, channel, size, signals) {
    var name = selCmpt.name;
    var hasScales = scales_1.default.has(selCmpt);
    var signal = signals.filter(function (s) {
        return s.name === selection_1.channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');
    })[0];
    var anchor = name + ANCHOR;
    var delta = name + DELTA;
    var sizeSg = model.getSizeSignalRef(size).signal;
    var scaleCmpt = model.getScaleComponent(channel);
    var scaleType = scaleCmpt.get('type');
    var sign = hasScales && channel === channel_1.X ? '-' : ''; // Invert delta when panning x-scales.
    var extent = anchor + ".extent_" + channel;
    var offset = "" + sign + delta + "." + channel + " / " + (hasScales ? "" + sizeSg : "span(" + extent + ")");
    var panFn = !hasScales ? 'panLinear' : scaleType === 'log' ? 'panLog' : scaleType === 'pow' ? 'panPow' : 'panLinear';
    var update = panFn + "(" + extent + ", " + offset + (hasScales && scaleType === 'pow' ? ", " + (scaleCmpt.get('exponent') || 1) : '') + ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : "clampRange(" + update + ", 0, " + sizeSg + ")"
    });
}

},{"../../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../interval":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/interval.js","../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./scales":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js","vega-event-selector":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-event-selector/build/vega-event-selector.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var vega_event_selector_1 = require("vega-event-selector");
var channel_1 = require("../../../channel");
var util_1 = require("../../../util");
var interval_1 = require("../interval");
var selection_1 = require("../selection");
var scales_1 = require("./scales");
var ANCHOR = '_zoom_anchor';
var DELTA = '_zoom_delta';
var zoom = {
    has: function has(selCmpt) {
        return selCmpt.type === 'interval' && selCmpt.zoom;
    },
    signals: function signals(model, selCmpt, _signals) {
        var name = selCmpt.name;
        var hasScales = scales_1.default.has(selCmpt);
        var delta = name + DELTA;
        var _a = selection_1.spatialProjections(selCmpt),
            x = _a.x,
            y = _a.y;
        var sx = util_1.stringValue(model.scaleName(channel_1.X));
        var sy = util_1.stringValue(model.scaleName(channel_1.Y));
        var events = vega_event_selector_1.selector(selCmpt.zoom, 'scope');
        if (!hasScales) {
            events = events.map(function (e) {
                return e.markname = name + interval_1.BRUSH, e;
            });
        }
        _signals.push({
            name: name + ANCHOR,
            on: [{
                events: events,
                update: !hasScales ? "{x: x(unit), y: y(unit)}" : '{' + [sx ? "x: invert(" + sx + ", x(unit))" : '', sy ? "y: invert(" + sy + ", y(unit))" : ''].filter(function (expr) {
                    return !!expr;
                }).join(', ') + '}'
            }]
        }, {
            name: delta,
            on: [{
                events: events,
                force: true,
                update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'
            }]
        });
        if (x !== null) {
            onDelta(model, selCmpt, 'x', 'width', _signals);
        }
        if (y !== null) {
            onDelta(model, selCmpt, 'y', 'height', _signals);
        }
        return _signals;
    }
};
exports.default = zoom;
function onDelta(model, selCmpt, channel, size, signals) {
    var name = selCmpt.name;
    var hasScales = scales_1.default.has(selCmpt);
    var signal = signals.filter(function (s) {
        return s.name === selection_1.channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');
    })[0];
    var sizeSg = model.getSizeSignalRef(size).signal;
    var scaleCmpt = model.getScaleComponent(channel);
    var scaleType = scaleCmpt.get('type');
    var base = hasScales ? scales_1.domain(model, channel) : signal.name;
    var delta = name + DELTA;
    var anchor = "" + name + ANCHOR + "." + channel;
    var zoomFn = !hasScales ? 'zoomLinear' : scaleType === 'log' ? 'zoomLog' : scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';
    var update = zoomFn + "(" + base + ", " + anchor + ", " + delta + (hasScales && scaleType === 'pow' ? ", " + (scaleCmpt.get('exponent') || 1) : '') + ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : "clampRange(" + update + ", 0, " + sizeSg + ")"
    });
}

},{"../../../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../../../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","../interval":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/interval.js","../selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./scales":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js","vega-event-selector":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-event-selector/build/vega-event-selector.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/split.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var log = require("../log");
var util_1 = require("../util");
/**
 * Generic class for storing properties that are explicitly specified
 * and implicitly determined by the compiler.
 * This is important for scale/axis/legend merging as
 * we want to prioritize properties that users explicitly specified.
 */
var Split = /** @class */function () {
    function Split(explicit, implicit) {
        if (explicit === void 0) {
            explicit = {};
        }
        if (implicit === void 0) {
            implicit = {};
        }
        this.explicit = explicit;
        this.implicit = implicit;
    }
    Split.prototype.clone = function () {
        return new Split(util_1.duplicate(this.explicit), util_1.duplicate(this.implicit));
    };
    Split.prototype.combine = function () {
        // FIXME remove "as any".
        // Add "as any" to avoid an error "Spread types may only be created from object types".
        return tslib_1.__assign({}, this.explicit, this.implicit);
    };
    Split.prototype.get = function (key) {
        // Explicit has higher precedence
        return this.explicit[key] !== undefined ? this.explicit[key] : this.implicit[key];
    };
    Split.prototype.getWithExplicit = function (key) {
        // Explicit has higher precedence
        if (this.explicit[key] !== undefined) {
            return { explicit: true, value: this.explicit[key] };
        } else if (this.implicit[key] !== undefined) {
            return { explicit: false, value: this.implicit[key] };
        }
        return { explicit: false, value: undefined };
    };
    Split.prototype.setWithExplicit = function (key, value) {
        if (value.value !== undefined) {
            this.set(key, value.value, value.explicit);
        }
    };
    Split.prototype.set = function (key, value, explicit) {
        delete this[explicit ? 'implicit' : 'explicit'][key];
        this[explicit ? 'explicit' : 'implicit'][key] = value;
        return this;
    };
    Split.prototype.copyKeyFromSplit = function (key, s) {
        // Explicit has higher precedence
        if (s.explicit[key] !== undefined) {
            this.set(key, s.explicit[key], true);
        } else if (s.implicit[key] !== undefined) {
            this.set(key, s.implicit[key], false);
        }
    };
    Split.prototype.copyKeyFromObject = function (key, s) {
        // Explicit has higher precedence
        if (s[key] !== undefined) {
            this.set(key, s[key], true);
        }
    };
    return Split;
}();
exports.Split = Split;
function makeExplicit(value) {
    return {
        explicit: true,
        value: value
    };
}
exports.makeExplicit = makeExplicit;
function makeImplicit(value) {
    return {
        explicit: false,
        value: value
    };
}
exports.makeImplicit = makeImplicit;
function tieBreakByComparing(compare) {
    return function (v1, v2, property, propertyOf) {
        var diff = compare(v1.value, v2.value);
        if (diff > 0) {
            return v1;
        } else if (diff < 0) {
            return v2;
        }
        return defaultTieBreaker(v1, v2, property, propertyOf);
    };
}
exports.tieBreakByComparing = tieBreakByComparing;
function defaultTieBreaker(v1, v2, property, propertyOf) {
    if (v1.explicit && v2.explicit) {
        log.warn(log.message.mergeConflictingProperty(property, propertyOf, v1.value, v2.value));
    }
    // If equal score, prefer v1.
    return v1;
}
exports.defaultTieBreaker = defaultTieBreaker;
function mergeValuesWithExplicit(v1, v2, property, propertyOf, tieBreaker) {
    if (tieBreaker === void 0) {
        tieBreaker = defaultTieBreaker;
    }
    if (v1 === undefined || v1.value === undefined) {
        // For first run
        return v2;
    }
    if (v1.explicit && !v2.explicit) {
        return v1;
    } else if (v2.explicit && !v1.explicit) {
        return v2;
    } else if (v1.value === v2.value) {
        return v1;
    } else {
        return tieBreaker(v1, v2, property, propertyOf);
    }
}
exports.mergeValuesWithExplicit = mergeValuesWithExplicit;

},{"../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/unit.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("../channel");
var vlEncoding = require("../encoding");
var encoding_1 = require("../encoding");
var fielddef_1 = require("../fielddef");
var mark_1 = require("../mark");
var stack_1 = require("../stack");
var util_1 = require("../util");
var parse_1 = require("./axis/parse");
var parse_2 = require("./data/parse");
var assemble_1 = require("./layoutsize/assemble");
var parse_3 = require("./layoutsize/parse");
var init_1 = require("./mark/init");
var mark_2 = require("./mark/mark");
var model_1 = require("./model");
var repeater_1 = require("./repeater");
var selection_1 = require("./selection/selection");
/**
 * Internal model of Vega-Lite specification for the compiler.
 */
var UnitModel = /** @class */function (_super) {
    tslib_1.__extends(UnitModel, _super);
    function UnitModel(spec, parent, parentGivenName, parentGivenSize, repeater, config) {
        if (parentGivenSize === void 0) {
            parentGivenSize = {};
        }
        var _this = _super.call(this, spec, parent, parentGivenName, config, undefined) || this;
        _this.type = 'unit';
        _this.specifiedScales = {};
        _this.specifiedAxes = {};
        _this.specifiedLegends = {};
        _this.selection = {};
        _this.children = [];
        _this.initSize(tslib_1.__assign({}, parentGivenSize, spec.width ? { width: spec.width } : {}, spec.height ? { height: spec.height } : {}));
        _this.markDef = mark_1.isMarkDef(spec.mark) ? tslib_1.__assign({}, spec.mark) : { type: spec.mark };
        var mark = _this.markDef.type;
        var encoding = _this.encoding = encoding_1.normalizeEncoding(repeater_1.replaceRepeaterInEncoding(spec.encoding || {}, repeater), mark);
        // calculate stack properties
        _this.stack = stack_1.stack(mark, encoding, _this.config.stack);
        _this.specifiedScales = _this.initScales(mark, encoding);
        // FIXME: this one seems out of place!
        _this.encoding = init_1.initEncoding(_this.markDef, encoding, _this.stack, _this.config);
        _this.specifiedAxes = _this.initAxes(encoding);
        _this.specifiedLegends = _this.initLegend(encoding);
        // Selections will be initialized upon parse.
        _this.selection = spec.selection;
        return _this;
    }
    /**
     * Return specified Vega-lite scale domain for a particular channel
     * @param channel
     */
    UnitModel.prototype.scaleDomain = function (channel) {
        var scale = this.specifiedScales[channel];
        return scale ? scale.domain : undefined;
    };
    UnitModel.prototype.sort = function (channel) {
        return (this.getMapping()[channel] || {}).sort;
    };
    UnitModel.prototype.axis = function (channel) {
        return this.specifiedAxes[channel];
    };
    UnitModel.prototype.legend = function (channel) {
        return this.specifiedLegends[channel];
    };
    UnitModel.prototype.initScales = function (mark, encoding) {
        return channel_1.SCALE_CHANNELS.reduce(function (scales, channel) {
            var fieldDef;
            var specifiedScale;
            var channelDef = encoding[channel];
            if (fielddef_1.isFieldDef(channelDef)) {
                fieldDef = channelDef;
                specifiedScale = channelDef.scale;
            } else if (fielddef_1.isConditionalDef(channelDef) && fielddef_1.isFieldDef(channelDef.condition)) {
                fieldDef = channelDef.condition;
                specifiedScale = channelDef.condition.scale;
            } else if (channel === 'x') {
                fieldDef = fielddef_1.getFieldDef(encoding.x2);
            } else if (channel === 'y') {
                fieldDef = fielddef_1.getFieldDef(encoding.y2);
            }
            if (fieldDef) {
                scales[channel] = specifiedScale || {};
            }
            return scales;
        }, {});
    };
    UnitModel.prototype.initAxes = function (encoding) {
        return [channel_1.X, channel_1.Y].reduce(function (_axis, channel) {
            // Position Axis
            // TODO: handle ConditionFieldDef
            var channelDef = encoding[channel];
            if (fielddef_1.isFieldDef(channelDef) || channel === channel_1.X && fielddef_1.isFieldDef(encoding.x2) || channel === channel_1.Y && fielddef_1.isFieldDef(encoding.y2)) {
                var axisSpec = fielddef_1.isFieldDef(channelDef) ? channelDef.axis : null;
                // We no longer support false in the schema, but we keep false here for backward compatability.
                if (axisSpec !== null && axisSpec !== false) {
                    _axis[channel] = tslib_1.__assign({}, axisSpec);
                }
            }
            return _axis;
        }, {});
    };
    UnitModel.prototype.initLegend = function (encoding) {
        return channel_1.NONSPATIAL_SCALE_CHANNELS.reduce(function (_legend, channel) {
            var channelDef = encoding[channel];
            if (channelDef) {
                var legend = fielddef_1.isFieldDef(channelDef) ? channelDef.legend : channelDef.condition && fielddef_1.isFieldDef(channelDef.condition) ? channelDef.condition.legend : null;
                if (legend !== null && legend !== false) {
                    _legend[channel] = tslib_1.__assign({}, legend);
                }
            }
            return _legend;
        }, {});
    };
    UnitModel.prototype.parseData = function () {
        this.component.data = parse_2.parseData(this);
    };
    UnitModel.prototype.parseLayoutSize = function () {
        parse_3.parseUnitLayoutSize(this);
    };
    UnitModel.prototype.parseSelection = function () {
        this.component.selection = selection_1.parseUnitSelection(this, this.selection);
    };
    UnitModel.prototype.parseMarkGroup = function () {
        this.component.mark = mark_2.parseMarkGroup(this);
    };
    UnitModel.prototype.parseAxisAndHeader = function () {
        this.component.axes = parse_1.parseUnitAxis(this);
    };
    UnitModel.prototype.assembleSelectionTopLevelSignals = function (signals) {
        return selection_1.assembleTopLevelSignals(this, signals);
    };
    UnitModel.prototype.assembleSelectionSignals = function () {
        return selection_1.assembleUnitSelectionSignals(this, []);
    };
    UnitModel.prototype.assembleSelectionData = function (data) {
        return selection_1.assembleUnitSelectionData(this, data);
    };
    UnitModel.prototype.assembleLayout = function () {
        return null;
    };
    UnitModel.prototype.assembleLayoutSignals = function () {
        return assemble_1.assembleLayoutSignals(this);
    };
    UnitModel.prototype.assembleMarks = function () {
        var marks = this.component.mark || [];
        // If this unit is part of a layer, selections should augment
        // all in concert rather than each unit individually. This
        // ensures correct interleaving of clipping and brushed marks.
        if (!this.parent || !model_1.isLayerModel(this.parent)) {
            marks = selection_1.assembleUnitSelectionMarks(this, marks);
        }
        return marks.map(this.correctDataNames);
    };
    UnitModel.prototype.assembleLayoutSize = function () {
        return {
            width: this.getSizeSignalRef('width'),
            height: this.getSizeSignalRef('height')
        };
    };
    UnitModel.prototype.getMapping = function () {
        return this.encoding;
    };
    UnitModel.prototype.toSpec = function (excludeConfig, excludeData) {
        var encoding = util_1.duplicate(this.encoding);
        var spec;
        spec = {
            mark: this.markDef,
            encoding: encoding
        };
        if (!excludeConfig) {
            spec.config = util_1.duplicate(this.config);
        }
        if (!excludeData) {
            spec.data = util_1.duplicate(this.data);
        }
        // remove defaults
        return spec;
    };
    UnitModel.prototype.mark = function () {
        return this.markDef.type;
    };
    UnitModel.prototype.channelHasField = function (channel) {
        return vlEncoding.channelHasField(this.encoding, channel);
    };
    UnitModel.prototype.fieldDef = function (channel) {
        var channelDef = this.encoding[channel];
        return fielddef_1.getFieldDef(channelDef);
    };
    return UnitModel;
}(model_1.ModelWithField);
exports.UnitModel = UnitModel;

},{"../channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","../stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/stack.js","../util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./axis/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/axis/parse.js","./data/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/data/parse.js","./layoutsize/assemble":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/assemble.js","./layoutsize/parse":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/layoutsize/parse.js","./mark/init":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/init.js","./mark/mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/mark/mark.js","./model":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/model.js","./repeater":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/repeater.js","./selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/boxplot.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var vega_util_1 = require("vega-util");
var encoding_1 = require("../encoding");
var encoding_2 = require("./../encoding");
var fielddef_1 = require("./../fielddef");
var log = require("./../log");
exports.BOXPLOT = 'box-plot';
function isBoxPlotDef(mark) {
    return !!mark['type'];
}
exports.isBoxPlotDef = isBoxPlotDef;
exports.BOXPLOT_STYLES = ['boxWhisker', 'box', 'boxMid'];
exports.VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX = {
    box: ['size']
};
var supportedChannels = ['x', 'y', 'color', 'detail', 'opacity', 'size'];
function filterUnsupportedChannels(spec) {
    return tslib_1.__assign({}, spec, { encoding: encoding_1.reduce(spec.encoding, function (newEncoding, fieldDef, channel) {
            if (supportedChannels.indexOf(channel) > -1) {
                newEncoding[channel] = fieldDef;
            } else {
                log.warn(log.message.incompatibleChannel(channel, exports.BOXPLOT));
            }
            return newEncoding;
        }, {}) });
}
exports.filterUnsupportedChannels = filterUnsupportedChannels;
function normalizeBoxPlot(spec, config) {
    spec = filterUnsupportedChannels(spec);
    // TODO: use selection
    var mark = spec.mark,
        encoding = spec.encoding,
        selection = spec.selection,
        outerSpec = tslib_1.__rest(spec, ["mark", "encoding", "selection"]);
    var kIQRScalar = undefined;
    if (isBoxPlotDef(mark)) {
        if (mark.extent) {
            if (vega_util_1.isNumber(mark.extent)) {
                kIQRScalar = mark.extent;
            }
        }
    }
    var orient = boxOrient(spec);
    var _a = boxParams(spec, orient, kIQRScalar),
        transform = _a.transform,
        continuousAxisChannelDef = _a.continuousAxisChannelDef,
        continuousAxis = _a.continuousAxis,
        encodingWithoutContinuousAxis = _a.encodingWithoutContinuousAxis;
    var size = encodingWithoutContinuousAxis.size,
        color = encodingWithoutContinuousAxis.color,
        nonPositionEncodingWithoutColorSize = tslib_1.__rest(encodingWithoutContinuousAxis, ["size", "color"]);
    var sizeMixins = size ? { size: size } : { size: { value: config.box.size } };
    var continuousAxisScaleAndAxis = {};
    if (continuousAxisChannelDef.scale) {
        continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;
    }
    if (continuousAxisChannelDef.axis) {
        continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;
    }
    return tslib_1.__assign({}, outerSpec, { transform: transform, layer: [{
            mark: {
                type: 'rule',
                style: 'boxWhisker'
            },
            encoding: tslib_1.__assign((_b = {}, _b[continuousAxis] = tslib_1.__assign({ field: 'lowerWhisker', type: continuousAxisChannelDef.type }, continuousAxisScaleAndAxis), _b[continuousAxis + '2'] = {
                field: 'lowerBox',
                type: continuousAxisChannelDef.type
            }, _b), nonPositionEncodingWithoutColorSize)
        }, {
            mark: {
                type: 'rule',
                style: 'boxWhisker'
            },
            encoding: tslib_1.__assign((_c = {}, _c[continuousAxis] = {
                field: 'upperBox',
                type: continuousAxisChannelDef.type
            }, _c[continuousAxis + '2'] = {
                field: 'upperWhisker',
                type: continuousAxisChannelDef.type
            }, _c), nonPositionEncodingWithoutColorSize)
        }, tslib_1.__assign({}, selection ? { selection: selection } : {}, { mark: {
                type: 'bar',
                style: 'box'
            }, encoding: tslib_1.__assign((_d = {}, _d[continuousAxis] = {
                field: 'lowerBox',
                type: continuousAxisChannelDef.type
            }, _d[continuousAxis + '2'] = {
                field: 'upperBox',
                type: continuousAxisChannelDef.type
            }, _d), encodingWithoutContinuousAxis, sizeMixins) }), {
            mark: {
                type: 'tick',
                style: 'boxMid'
            },
            encoding: tslib_1.__assign((_e = {}, _e[continuousAxis] = {
                field: 'midBox',
                type: continuousAxisChannelDef.type
            }, _e), nonPositionEncodingWithoutColorSize, sizeMixins)
        }] });
    var _b, _c, _d, _e;
}
exports.normalizeBoxPlot = normalizeBoxPlot;
function boxOrient(spec) {
    var mark = spec.mark,
        encoding = spec.encoding,
        _outerSpec = tslib_1.__rest(spec, ["mark", "encoding"]);
    if (fielddef_1.isFieldDef(encoding.x) && fielddef_1.isContinuous(encoding.x)) {
        // x is continuous
        if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {
            // both x and y are continuous
            if (encoding.x.aggregate === undefined && encoding.y.aggregate === exports.BOXPLOT) {
                return 'vertical';
            } else if (encoding.y.aggregate === undefined && encoding.x.aggregate === exports.BOXPLOT) {
                return 'horizontal';
            } else if (encoding.x.aggregate === exports.BOXPLOT && encoding.y.aggregate === exports.BOXPLOT) {
                throw new Error('Both x and y cannot have aggregate');
            } else {
                if (isBoxPlotDef(mark) && mark.orient) {
                    return mark.orient;
                }
                // default orientation = vertical
                return 'vertical';
            }
        }
        // x is continuous but y is not
        return 'horizontal';
    } else if (fielddef_1.isFieldDef(encoding.y) && fielddef_1.isContinuous(encoding.y)) {
        // y is continuous but x is not
        return 'vertical';
    } else {
        // Neither x nor y is continuous.
        throw new Error('Need a valid continuous axis for boxplots');
    }
}
function boxContinousAxis(spec, orient) {
    var mark = spec.mark,
        encoding = spec.encoding,
        _outerSpec = tslib_1.__rest(spec, ["mark", "encoding"]);
    var continuousAxisChannelDef;
    var continuousAxis;
    if (orient === 'vertical') {
        continuousAxis = 'y';
        continuousAxisChannelDef = encoding.y; // Safe to cast because if y is not continous fielddef, the orient would not be vertical.
    } else {
        continuousAxis = 'x';
        continuousAxisChannelDef = encoding.x; // Safe to cast because if x is not continous fielddef, the orient would not be horizontal.
    }
    if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {
        var aggregate = continuousAxisChannelDef.aggregate,
            continuousAxisWithoutAggregate = tslib_1.__rest(continuousAxisChannelDef, ["aggregate"]);
        if (aggregate !== exports.BOXPLOT) {
            log.warn("Continuous axis should not have customized aggregation function " + aggregate);
        }
        continuousAxisChannelDef = continuousAxisWithoutAggregate;
    }
    return {
        continuousAxisChannelDef: continuousAxisChannelDef,
        continuousAxis: continuousAxis
    };
}
function boxParams(spec, orient, kIQRScalar) {
    var _a = boxContinousAxis(spec, orient),
        continuousAxisChannelDef = _a.continuousAxisChannelDef,
        continuousAxis = _a.continuousAxis;
    var encoding = spec.encoding;
    var isMinMax = kIQRScalar === undefined;
    var summarize = [{
        aggregate: 'q1',
        field: continuousAxisChannelDef.field,
        as: 'lowerBox'
    }, {
        aggregate: 'q3',
        field: continuousAxisChannelDef.field,
        as: 'upperBox'
    }, {
        aggregate: 'median',
        field: continuousAxisChannelDef.field,
        as: 'midBox'
    }];
    var postAggregateCalculates = [];
    if (isMinMax) {
        summarize.push({
            aggregate: 'min',
            field: continuousAxisChannelDef.field,
            as: 'lowerWhisker'
        });
        summarize.push({
            aggregate: 'max',
            field: continuousAxisChannelDef.field,
            as: 'upperWhisker'
        });
    } else {
        postAggregateCalculates = [{
            calculate: 'datum.upperBox - datum.lowerBox',
            as: 'IQR'
        }, {
            calculate: 'datum.lowerBox - datum.IQR * ' + kIQRScalar,
            as: 'lowerWhisker'
        }, {
            calculate: 'datum.upperBox + datum.IQR * ' + kIQRScalar,
            as: 'lowerWhisker'
        }];
    }
    var groupby = [];
    var bins = [];
    var timeUnits = [];
    var encodingWithoutContinuousAxis = {};
    encoding_2.forEach(encoding, function (channelDef, channel) {
        if (channel === continuousAxis) {
            // Skip continuous axis as we already handle it separately
            return;
        }
        if (fielddef_1.isFieldDef(channelDef)) {
            if (channelDef.aggregate && channelDef.aggregate !== exports.BOXPLOT) {
                summarize.push({
                    aggregate: channelDef.aggregate,
                    field: channelDef.field,
                    as: fielddef_1.field(channelDef)
                });
            } else if (channelDef.aggregate === undefined) {
                var transformedField = fielddef_1.field(channelDef);
                // Add bin or timeUnit transform if applicable
                var bin = channelDef.bin;
                if (bin) {
                    var field_1 = channelDef.field;
                    bins.push({ bin: bin, field: field_1, as: transformedField });
                } else if (channelDef.timeUnit) {
                    var timeUnit = channelDef.timeUnit,
                        field_2 = channelDef.field;
                    timeUnits.push({ timeUnit: timeUnit, field: field_2, as: transformedField });
                }
                groupby.push(transformedField);
            }
            // now the field should refer to post-transformed field instead
            encodingWithoutContinuousAxis[channel] = {
                field: fielddef_1.field(channelDef),
                type: channelDef.type
            };
        } else {
            // For value def, just copy
            encodingWithoutContinuousAxis[channel] = encoding[channel];
        }
    });
    return {
        transform: [].concat(bins, timeUnits, [{ summarize: summarize, groupby: groupby }], postAggregateCalculates),
        continuousAxisChannelDef: continuousAxisChannelDef,
        continuousAxis: continuousAxis,
        encodingWithoutContinuousAxis: encodingWithoutContinuousAxis
    };
}

},{"../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","./../encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","./../fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","./../log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/errorbar.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
exports.ERRORBAR = 'error-bar';
function normalizeErrorBar(spec) {
    // TODO: use selection
    var _m = spec.mark,
        _sel = spec.selection,
        encoding = spec.encoding,
        outerSpec = tslib_1.__rest(spec, ["mark", "selection", "encoding"]);
    var _s = encoding.size,
        encodingWithoutSize = tslib_1.__rest(encoding, ["size"]);
    var _x2 = encoding.x2,
        _y2 = encoding.y2,
        encodingWithoutX2Y2 = tslib_1.__rest(encoding, ["x2", "y2"]);
    var _x = encodingWithoutX2Y2.x,
        _y = encodingWithoutX2Y2.y,
        encodingWithoutX_X2_Y_Y2 = tslib_1.__rest(encodingWithoutX2Y2, ["x", "y"]);
    if (!encoding.x2 && !encoding.y2) {
        throw new Error('Neither x2 or y2 provided');
    }
    return tslib_1.__assign({}, outerSpec, { layer: [{
            mark: 'rule',
            encoding: encodingWithoutSize
        }, {
            mark: 'tick',
            encoding: encodingWithoutX2Y2
        }, {
            mark: 'tick',
            encoding: encoding.x2 ? tslib_1.__assign({ x: encoding.x2, y: encoding.y }, encodingWithoutX_X2_Y_Y2) : tslib_1.__assign({ x: encoding.x, y: encoding.y2 }, encodingWithoutX_X2_Y_Y2)
        }] });
}
exports.normalizeErrorBar = normalizeErrorBar;

},{"tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/index.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var mark_1 = require("./../mark");
var boxplot_1 = require("./boxplot");
var errorbar_1 = require("./errorbar");
/**
 * Registry index for all composite mark's normalizer
 */
var normalizerRegistry = {};
function add(mark, normalizer) {
    normalizerRegistry[mark] = normalizer;
}
exports.add = add;
function remove(mark) {
    delete normalizerRegistry[mark];
}
exports.remove = remove;
exports.COMPOSITE_MARK_STYLES = boxplot_1.BOXPLOT_STYLES;
exports.VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = tslib_1.__assign({}, boxplot_1.VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX);
add(boxplot_1.BOXPLOT, boxplot_1.normalizeBoxPlot);
add(errorbar_1.ERRORBAR, errorbar_1.normalizeErrorBar);
/**
 * Transform a unit spec with composite mark into a normal layer spec.
 */
function normalize(
// This GenericUnitSpec has any as Encoding because unit specs with composite mark can have additional encoding channels.
spec, config) {
    var mark = mark_1.isMarkDef(spec.mark) ? spec.mark.type : spec.mark;
    var normalizer = normalizerRegistry[mark];
    if (normalizer) {
        return normalizer(spec, config);
    }
    throw new Error("Unregistered composite mark " + mark);
}
exports.normalize = normalize;

},{"./../mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./boxplot":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/boxplot.js","./errorbar":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/errorbar.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/config.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var compositemark_1 = require("./compositemark");
var index_1 = require("./compositemark/index");
var guide_1 = require("./guide");
var legend_1 = require("./legend");
var mark_1 = require("./mark");
var mark = require("./mark");
var scale_1 = require("./scale");
var selection_1 = require("./selection");
var title_1 = require("./title");
var util_1 = require("./util");
exports.defaultViewConfig = {
    width: 200,
    height: 200
};
exports.defaultConfig = {
    padding: 5,
    timeFormat: '%b %d, %Y',
    countTitle: 'Number of Records',
    invalidValues: 'filter',
    view: exports.defaultViewConfig,
    mark: mark.defaultMarkConfig,
    area: {},
    bar: mark.defaultBarConfig,
    circle: {},
    line: {},
    point: {},
    rect: {},
    rule: { color: 'black' },
    square: {},
    text: { color: 'black' },
    tick: mark.defaultTickConfig,
    box: { size: 14 },
    boxWhisker: {},
    boxMid: { color: 'white' },
    scale: scale_1.defaultScaleConfig,
    axis: {},
    axisX: {},
    axisY: { minExtent: 30 },
    axisLeft: {},
    axisRight: {},
    axisTop: {},
    axisBottom: {},
    axisBand: {},
    legend: legend_1.defaultLegendConfig,
    selection: selection_1.defaultConfig,
    style: {},
    title: {}
};
function initConfig(config) {
    return util_1.mergeDeep(util_1.duplicate(exports.defaultConfig), config);
}
exports.initConfig = initConfig;
var MARK_STYLES = ['view'].concat(mark_1.PRIMITIVE_MARKS, compositemark_1.COMPOSITE_MARK_STYLES);
var VL_ONLY_CONFIG_PROPERTIES = ['padding', 'numberFormat', 'timeFormat', 'countTitle', 'stack', 'scale', 'selection', 'invalidValues', 'overlay' // FIXME: Redesign and unhide this
];
var VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = tslib_1.__assign({ view: ['width', 'height'] }, mark_1.VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX, index_1.VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX);
function stripAndRedirectConfig(config) {
    config = util_1.duplicate(config);
    for (var _i = 0, VL_ONLY_CONFIG_PROPERTIES_1 = VL_ONLY_CONFIG_PROPERTIES; _i < VL_ONLY_CONFIG_PROPERTIES_1.length; _i++) {
        var prop = VL_ONLY_CONFIG_PROPERTIES_1[_i];
        delete config[prop];
    }
    // Remove Vega-Lite only axis/legend config
    if (config.axis) {
        for (var _a = 0, VL_ONLY_GUIDE_CONFIG_1 = guide_1.VL_ONLY_GUIDE_CONFIG; _a < VL_ONLY_GUIDE_CONFIG_1.length; _a++) {
            var prop = VL_ONLY_GUIDE_CONFIG_1[_a];
            delete config.axis[prop];
        }
    }
    if (config.legend) {
        for (var _b = 0, VL_ONLY_GUIDE_CONFIG_2 = guide_1.VL_ONLY_GUIDE_CONFIG; _b < VL_ONLY_GUIDE_CONFIG_2.length; _b++) {
            var prop = VL_ONLY_GUIDE_CONFIG_2[_b];
            delete config.legend[prop];
        }
    }
    // Remove Vega-Lite only generic mark config
    if (config.mark) {
        for (var _c = 0, VL_ONLY_MARK_CONFIG_PROPERTIES_1 = mark_1.VL_ONLY_MARK_CONFIG_PROPERTIES; _c < VL_ONLY_MARK_CONFIG_PROPERTIES_1.length; _c++) {
            var prop = VL_ONLY_MARK_CONFIG_PROPERTIES_1[_c];
            delete config.mark[prop];
        }
    }
    for (var _d = 0, MARK_STYLES_1 = MARK_STYLES; _d < MARK_STYLES_1.length; _d++) {
        var mark_2 = MARK_STYLES_1[_d];
        // Remove Vega-Lite-only mark config
        for (var _e = 0, VL_ONLY_MARK_CONFIG_PROPERTIES_2 = mark_1.VL_ONLY_MARK_CONFIG_PROPERTIES; _e < VL_ONLY_MARK_CONFIG_PROPERTIES_2.length; _e++) {
            var prop = VL_ONLY_MARK_CONFIG_PROPERTIES_2[_e];
            delete config[mark_2][prop];
        }
        // Remove Vega-Lite only mark-specific config
        var vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[mark_2];
        if (vlOnlyMarkSpecificConfigs) {
            for (var _f = 0, vlOnlyMarkSpecificConfigs_1 = vlOnlyMarkSpecificConfigs; _f < vlOnlyMarkSpecificConfigs_1.length; _f++) {
                var prop = vlOnlyMarkSpecificConfigs_1[_f];
                delete config[mark_2][prop];
            }
        }
        // Redirect mark config to config.style so that mark config only affect its own mark type
        // without affecting other marks that share the same underlying Vega marks.
        // For example, config.rect should not affect bar marks.
        redirectConfig(config, mark_2);
    }
    // Redirect config.title -- so that title config do not
    // affect header labels, which also uses `title` directive to implement.
    redirectConfig(config, 'title', 'group-title');
    // Remove empty config objects
    for (var prop in config) {
        if (util_1.isObject(config[prop]) && util_1.keys(config[prop]).length === 0) {
            delete config[prop];
        }
    }
    return util_1.keys(config).length > 0 ? config : undefined;
}
exports.stripAndRedirectConfig = stripAndRedirectConfig;
function redirectConfig(config, prop, toProp) {
    var propConfig = prop === 'title' ? title_1.extractTitleConfig(config.title).mark : config[prop];
    if (prop === 'view') {
        toProp = 'cell'; // View's default style is "cell"
    }
    var style = tslib_1.__assign({}, propConfig, config.style[prop]);
    // set config.style if it is not an empty object
    if (util_1.keys(style).length > 0) {
        config.style[toProp || prop] = style;
    }
    delete config[prop];
}

},{"./compositemark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/index.js","./compositemark/index":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/index.js","./guide":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/guide.js","./legend":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/legend.js","./mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","./selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/selection.js","./title":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/title.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js":[function(require,module,exports){
"use strict";
/*
 * Constants and utilities for data.
 */

Object.defineProperty(exports, "__esModule", { value: true });
function isUrlData(data) {
    return !!data['url'];
}
exports.isUrlData = isUrlData;
function isInlineData(data) {
    return !!data['values'];
}
exports.isInlineData = isInlineData;
function isNamedData(data) {
    return !!data['name'];
}
exports.isNamedData = isNamedData;
exports.MAIN = 'main';
exports.RAW = 'raw';

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js":[function(require,module,exports){
"use strict";
// DateTime definition object

Object.defineProperty(exports, "__esModule", { value: true });
var log = require("./log");
var util_1 = require("./util");
/*
 * A designated year that starts on Sunday.
 */
var SUNDAY_YEAR = 2006;
function isDateTime(o) {
    return !!o && (!!o.year || !!o.quarter || !!o.month || !!o.date || !!o.day || !!o.hours || !!o.minutes || !!o.seconds || !!o.milliseconds);
}
exports.isDateTime = isDateTime;
exports.MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];
exports.SHORT_MONTHS = exports.MONTHS.map(function (m) {
    return m.substr(0, 3);
});
exports.DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
exports.SHORT_DAYS = exports.DAYS.map(function (d) {
    return d.substr(0, 3);
});
function normalizeQuarter(q) {
    if (util_1.isNumber(q)) {
        if (q > 4) {
            log.warn(log.message.invalidTimeUnit('quarter', q));
        }
        // We accept 1-based quarter, so need to readjust to 0-based quarter
        return q - 1 + '';
    } else {
        // Invalid quarter
        throw new Error(log.message.invalidTimeUnit('quarter', q));
    }
}
function normalizeMonth(m) {
    if (util_1.isNumber(m)) {
        // We accept 1-based month, so need to readjust to 0-based month
        return m - 1 + '';
    } else {
        var lowerM = m.toLowerCase();
        var monthIndex = exports.MONTHS.indexOf(lowerM);
        if (monthIndex !== -1) {
            return monthIndex + ''; // 0 for january, ...
        }
        var shortM = lowerM.substr(0, 3);
        var shortMonthIndex = exports.SHORT_MONTHS.indexOf(shortM);
        if (shortMonthIndex !== -1) {
            return shortMonthIndex + '';
        }
        // Invalid month
        throw new Error(log.message.invalidTimeUnit('month', m));
    }
}
function normalizeDay(d) {
    if (util_1.isNumber(d)) {
        // mod so that this can be both 0-based where 0 = sunday
        // and 1-based where 7=sunday
        return d % 7 + '';
    } else {
        var lowerD = d.toLowerCase();
        var dayIndex = exports.DAYS.indexOf(lowerD);
        if (dayIndex !== -1) {
            return dayIndex + ''; // 0 for january, ...
        }
        var shortD = lowerD.substr(0, 3);
        var shortDayIndex = exports.SHORT_DAYS.indexOf(shortD);
        if (shortDayIndex !== -1) {
            return shortDayIndex + '';
        }
        // Invalid day
        throw new Error(log.message.invalidTimeUnit('day', d));
    }
}
/**
 * Return Vega Expression for a particular date time.
 * @param d
 * @param normalize whether to normalize quarter, month, day.
 */
function dateTimeExpr(d, normalize) {
    if (normalize === void 0) {
        normalize = false;
    }
    var units = [];
    if (normalize && d.day !== undefined) {
        if (util_1.keys(d).length > 1) {
            log.warn(log.message.droppedDay(d));
            d = util_1.duplicate(d);
            delete d.day;
        }
    }
    if (d.year !== undefined) {
        units.push(d.year);
    } else if (d.day !== undefined) {
        // Set year to 2006 for working with day since January 1 2006 is a Sunday
        units.push(SUNDAY_YEAR);
    } else {
        units.push(0);
    }
    if (d.month !== undefined) {
        var month = normalize ? normalizeMonth(d.month) : d.month;
        units.push(month);
    } else if (d.quarter !== undefined) {
        var quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;
        units.push(quarter + '*3');
    } else {
        units.push(0); // months start at zero in JS
    }
    if (d.date !== undefined) {
        units.push(d.date);
    } else if (d.day !== undefined) {
        // HACK: Day only works as a standalone unit
        // This is only correct because we always set year to 2006 for day
        var day = normalize ? normalizeDay(d.day) : d.day;
        units.push(day + '+1');
    } else {
        units.push(1); // Date starts at 1 in JS
    }
    // Note: can't use TimeUnit enum here as importing it will create
    // circular dependency problem!
    for (var _i = 0, _a = ['hours', 'minutes', 'seconds', 'milliseconds']; _i < _a.length; _i++) {
        var timeUnit = _a[_i];
        if (d[timeUnit] !== undefined) {
            units.push(d[timeUnit]);
        } else {
            units.push(0);
        }
    }
    if (d.utc) {
        return "utc(" + units.join(', ') + ")";
    } else {
        return "datetime(" + units.join(', ') + ")";
    }
}
exports.dateTimeExpr = dateTimeExpr;

},{"./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var channel_1 = require("./channel");
var fielddef_1 = require("./fielddef");
var log = require("./log");
var util_1 = require("./util");
function channelHasField(encoding, channel) {
    var channelDef = encoding && encoding[channel];
    if (channelDef) {
        if (util_1.isArray(channelDef)) {
            return util_1.some(channelDef, function (fieldDef) {
                return !!fieldDef.field;
            });
        } else {
            return fielddef_1.isFieldDef(channelDef) || fielddef_1.hasConditionFieldDef(channelDef);
        }
    }
    return false;
}
exports.channelHasField = channelHasField;
function isAggregate(encoding) {
    return util_1.some(channel_1.CHANNELS, function (channel) {
        if (channelHasField(encoding, channel)) {
            var channelDef = encoding[channel];
            if (util_1.isArray(channelDef)) {
                return util_1.some(channelDef, function (fieldDef) {
                    return !!fieldDef.aggregate;
                });
            } else {
                var fieldDef = fielddef_1.getFieldDef(channelDef);
                return fieldDef && !!fieldDef.aggregate;
            }
        }
        return false;
    });
}
exports.isAggregate = isAggregate;
function normalizeEncoding(encoding, mark) {
    return util_1.keys(encoding).reduce(function (normalizedEncoding, channel) {
        if (!channel_1.supportMark(channel, mark)) {
            // Drop unsupported channel
            log.warn(log.message.incompatibleChannel(channel, mark));
            return normalizedEncoding;
        }
        // Drop line's size if the field is aggregated.
        if (channel === 'size' && mark === 'line') {
            var fieldDef = fielddef_1.getFieldDef(encoding[channel]);
            if (fieldDef && fieldDef.aggregate) {
                log.warn(log.message.incompatibleChannel(channel, mark, 'when the field is aggregated.'));
                return normalizedEncoding;
            }
        }
        if (channel === 'detail' || channel === 'order') {
            var channelDef = encoding[channel];
            if (channelDef) {
                // Array of fieldDefs for detail channel (or production rule)
                normalizedEncoding[channel] = (util_1.isArray(channelDef) ? channelDef : [channelDef]).reduce(function (fieldDefs, fieldDef) {
                    if (!fielddef_1.isFieldDef(fieldDef)) {
                        log.warn(log.message.emptyFieldDef(fieldDef, channel));
                    } else {
                        fieldDefs.push(fielddef_1.normalizeFieldDef(fieldDef, channel));
                    }
                    return fieldDefs;
                }, []);
            }
        } else {
            // FIXME: remove this casting.  (I don't know why Typescript doesn't infer this correctly here.)
            var channelDef = encoding[channel];
            if (!fielddef_1.isFieldDef(channelDef) && !fielddef_1.isValueDef(channelDef) && !fielddef_1.isConditionalDef(channelDef)) {
                log.warn(log.message.emptyFieldDef(channelDef, channel));
                return normalizedEncoding;
            }
            normalizedEncoding[channel] = fielddef_1.normalize(channelDef, channel);
        }
        return normalizedEncoding;
    }, {});
}
exports.normalizeEncoding = normalizeEncoding;
function isRanged(encoding) {
    return encoding && (!!encoding.x && !!encoding.x2 || !!encoding.y && !!encoding.y2);
}
exports.isRanged = isRanged;
function fieldDefs(encoding) {
    var arr = [];
    channel_1.CHANNELS.forEach(function (channel) {
        if (channelHasField(encoding, channel)) {
            var channelDef = encoding[channel];
            (util_1.isArray(channelDef) ? channelDef : [channelDef]).forEach(function (def) {
                if (fielddef_1.isFieldDef(def)) {
                    arr.push(def);
                } else if (fielddef_1.hasConditionFieldDef(def)) {
                    arr.push(def.condition);
                }
            });
        }
    });
    return arr;
}
exports.fieldDefs = fieldDefs;
function forEach(mapping, f, thisArg) {
    if (!mapping) {
        return;
    }
    util_1.keys(mapping).forEach(function (c) {
        var channel = c;
        if (util_1.isArray(mapping[channel])) {
            mapping[channel].forEach(function (channelDef) {
                f.call(thisArg, channelDef, channel);
            });
        } else {
            f.call(thisArg, mapping[channel], channel);
        }
    });
}
exports.forEach = forEach;
function reduce(mapping, f, init, thisArg) {
    if (!mapping) {
        return init;
    }
    return util_1.keys(mapping).reduce(function (r, c) {
        var channel = c;
        if (util_1.isArray(mapping[channel])) {
            return mapping[channel].reduce(function (r1, channelDef) {
                return f.call(thisArg, r1, channelDef, channel);
            }, r);
        } else {
            return f.call(thisArg, r, mapping[channel], channel);
        }
    }, init);
}
exports.reduce = reduce;

},{"./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/facet.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js":[function(require,module,exports){
"use strict";
// utility for a field definition object

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var aggregate_1 = require("./aggregate");
var bin_1 = require("./bin");
var channel_1 = require("./channel");
var log = require("./log");
var timeunit_1 = require("./timeunit");
var type_1 = require("./type");
var util_1 = require("./util");
function isRepeatRef(field) {
    return field && !util_1.isString(field) && 'repeat' in field;
}
exports.isRepeatRef = isRepeatRef;
function isConditionalDef(channelDef) {
    return !!channelDef && !!channelDef.condition;
}
exports.isConditionalDef = isConditionalDef;
/**
 * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef
 */
function hasConditionFieldDef(channelDef) {
    return !!channelDef && !!channelDef.condition && isFieldDef(channelDef.condition);
}
exports.hasConditionFieldDef = hasConditionFieldDef;
function isFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');
}
exports.isFieldDef = isFieldDef;
function isValueDef(channelDef) {
    return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;
}
exports.isValueDef = isValueDef;
function isScaleFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['scale'] || !!channelDef['sort']);
}
exports.isScaleFieldDef = isScaleFieldDef;
function field(fieldDef, opt) {
    if (opt === void 0) {
        opt = {};
    }
    var field = fieldDef.field;
    var prefix = opt.prefix;
    var suffix = opt.suffix;
    if (isCount(fieldDef)) {
        field = 'count_*';
    } else {
        var fn = undefined;
        if (!opt.nofn) {
            if (fieldDef.bin) {
                fn = bin_1.binToString(fieldDef.bin);
                suffix = opt.binSuffix || '';
            } else if (fieldDef.aggregate) {
                fn = String(opt.aggregate || fieldDef.aggregate);
            } else if (fieldDef.timeUnit) {
                fn = String(fieldDef.timeUnit);
            }
        }
        if (fn) {
            field = fn + "_" + field;
        }
    }
    if (suffix) {
        field = field + "_" + suffix;
    }
    if (prefix) {
        field = prefix + "_" + field;
    }
    if (opt.expr) {
        field = opt.expr + "[" + util_1.stringValue(field) + "]";
    }
    return field;
}
exports.field = field;
function isDiscrete(fieldDef) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
            return true;
        case 'quantitative':
            return !!fieldDef.bin;
        case 'temporal':
            return false;
    }
    throw new Error(log.message.invalidFieldType(fieldDef.type));
}
exports.isDiscrete = isDiscrete;
function isContinuous(fieldDef) {
    return !isDiscrete(fieldDef);
}
exports.isContinuous = isContinuous;
function isCount(fieldDef) {
    return fieldDef.aggregate === 'count';
}
exports.isCount = isCount;
function title(fieldDef, config) {
    if (isCount(fieldDef)) {
        return config.countTitle;
    }
    var fn = fieldDef.aggregate || fieldDef.timeUnit || fieldDef.bin && 'bin';
    if (fn) {
        return fn.toUpperCase() + '(' + fieldDef.field + ')';
    } else {
        return fieldDef.field;
    }
}
exports.title = title;
function defaultType(fieldDef, channel) {
    if (fieldDef.timeUnit) {
        return 'temporal';
    }
    if (fieldDef.bin) {
        return 'quantitative';
    }
    switch (channel_1.rangeType(channel)) {
        case 'continuous':
            return 'quantitative';
        case 'discrete':
            return 'nominal';
        case 'flexible':
            // color
            return 'nominal';
        default:
            return 'quantitative';
    }
}
exports.defaultType = defaultType;
/**
 * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.
 * @param channelDef
 */
function getFieldDef(channelDef) {
    if (isFieldDef(channelDef)) {
        return channelDef;
    } else if (hasConditionFieldDef(channelDef)) {
        return channelDef.condition;
    }
    return undefined;
}
exports.getFieldDef = getFieldDef;
/**
 * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
 */
function normalize(channelDef, channel) {
    // If a fieldDef contains a field, we need type.
    if (isFieldDef(channelDef)) {
        return normalizeFieldDef(channelDef, channel);
    } else if (hasConditionFieldDef(channelDef)) {
        return tslib_1.__assign({}, channelDef, {
            // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>
            condition: normalizeFieldDef(channelDef.condition, channel) });
    }
    return channelDef;
}
exports.normalize = normalize;
function normalizeFieldDef(fieldDef, channel) {
    // Drop invalid aggregate
    if (fieldDef.aggregate && !aggregate_1.isAggregateOp(fieldDef.aggregate)) {
        var aggregate = fieldDef.aggregate,
            fieldDefWithoutAggregate = tslib_1.__rest(fieldDef, ["aggregate"]);
        log.warn(log.message.invalidAggregate(fieldDef.aggregate));
        fieldDef = fieldDefWithoutAggregate;
    }
    // Normalize Time Unit
    if (fieldDef.timeUnit) {
        fieldDef = tslib_1.__assign({}, fieldDef, { timeUnit: timeunit_1.normalizeTimeUnit(fieldDef.timeUnit) });
    }
    // Normalize bin
    if (fieldDef.bin) {
        fieldDef = tslib_1.__assign({}, fieldDef, { bin: normalizeBin(fieldDef.bin, channel) });
    }
    // Normalize Type
    if (fieldDef.type) {
        var fullType = type_1.getFullName(fieldDef.type);
        if (fieldDef.type !== fullType) {
            // convert short type to full type
            fieldDef = tslib_1.__assign({}, fieldDef, { type: fullType });
        }
        if (fieldDef.type !== 'quantitative') {
            if (aggregate_1.isCountingAggregateOp(fieldDef.aggregate)) {
                log.warn(log.message.invalidFieldTypeForCountAggregate(fieldDef.type, fieldDef.aggregate));
                fieldDef = tslib_1.__assign({}, fieldDef, { type: 'quantitative' });
            }
        }
    } else {
        // If type is empty / invalid, then augment with default type
        var newType = defaultType(fieldDef, channel);
        log.warn(log.message.emptyOrInvalidFieldType(fieldDef.type, channel, newType));
        fieldDef = tslib_1.__assign({}, fieldDef, { type: newType });
    }
    var _a = channelCompatibility(fieldDef, channel),
        compatible = _a.compatible,
        warning = _a.warning;
    if (!compatible) {
        log.warn(warning);
    }
    return fieldDef;
}
exports.normalizeFieldDef = normalizeFieldDef;
function normalizeBin(bin, channel) {
    if (util_1.isBoolean(bin)) {
        return { maxbins: bin_1.autoMaxBins(channel) };
    } else if (!bin.maxbins && !bin.step) {
        return tslib_1.__assign({}, bin, { maxbins: bin_1.autoMaxBins(channel) });
    } else {
        return bin;
    }
}
exports.normalizeBin = normalizeBin;
var COMPATIBLE = { compatible: true };
function channelCompatibility(fieldDef, channel) {
    switch (channel) {
        case 'row':
        case 'column':
            if (isContinuous(fieldDef) && !fieldDef.timeUnit) {
                // TODO:(https://github.com/vega/vega-lite/issues/2011):
                // with timeUnit it's not always strictly continuous
                return {
                    compatible: false,
                    warning: log.message.facetChannelShouldBeDiscrete(channel)
                };
            }
            return COMPATIBLE;
        case 'x':
        case 'y':
        case 'color':
        case 'text':
        case 'detail':
        case 'tooltip':
            return COMPATIBLE;
        case 'opacity':
        case 'size':
        case 'x2':
        case 'y2':
            if (isDiscrete(fieldDef) && !fieldDef.bin) {
                return {
                    compatible: false,
                    warning: "Channel " + channel + " should not be used with discrete field."
                };
            }
            return COMPATIBLE;
        case 'shape':
            if (fieldDef.type !== 'nominal') {
                return {
                    compatible: false,
                    warning: 'Shape channel should be used with nominal data only'
                };
            }
            return COMPATIBLE;
        case 'order':
            if (fieldDef.type === 'nominal') {
                return {
                    compatible: false,
                    warning: "Channel order is inappropriate for nominal field, which has no inherent order."
                };
            }
            return COMPATIBLE;
    }
    throw new Error('channelCompatability not implemented for channel ' + channel);
}
exports.channelCompatibility = channelCompatibility;
function isNumberFieldDef(fieldDef) {
    return fieldDef.type === 'quantitative' || !!fieldDef.bin;
}
exports.isNumberFieldDef = isNumberFieldDef;
function isTimeFieldDef(fieldDef) {
    return fieldDef.type === 'temporal' || !!fieldDef.timeUnit;
}
exports.isTimeFieldDef = isTimeFieldDef;

},{"./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js","./bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/bin.js","./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","./type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/filter.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var selection_1 = require("./compile/selection/selection");
var datetime_1 = require("./datetime");
var fielddef_1 = require("./fielddef");
var timeunit_1 = require("./timeunit");
var util_1 = require("./util");
function isSelectionFilter(filter) {
    return filter && filter['selection'];
}
exports.isSelectionFilter = isSelectionFilter;
function isEqualFilter(filter) {
    return filter && !!filter.field && filter.equal !== undefined;
}
exports.isEqualFilter = isEqualFilter;
function isRangeFilter(filter) {
    if (filter && filter.field) {
        if (util_1.isArray(filter.range) && filter.range.length === 2) {
            return true;
        }
    }
    return false;
}
exports.isRangeFilter = isRangeFilter;
function isOneOfFilter(filter) {
    return filter && !!filter.field && (util_1.isArray(filter.oneOf) || util_1.isArray(filter.in) // backward compatibility
    );
}
exports.isOneOfFilter = isOneOfFilter;
function isFieldFilter(filter) {
    return isOneOfFilter(filter) || isEqualFilter(filter) || isRangeFilter(filter);
}
exports.isFieldFilter = isFieldFilter;
/**
 * Converts a filter into an expression.
 */
// model is only used for selection filters.
function expression(model, filterOp, node) {
    return util_1.logicalExpr(filterOp, function (filter) {
        if (util_1.isString(filter)) {
            return filter;
        } else if (isSelectionFilter(filter)) {
            return selection_1.predicate(model, filter.selection, node);
        } else {
            return fieldFilterExpression(filter);
        }
    });
}
exports.expression = expression;
// This method is used by Voyager.  Do not change its behavior without changing Voyager.
function fieldFilterExpression(filter, useInRange) {
    if (useInRange === void 0) {
        useInRange = true;
    }
    var fieldExpr = filter.timeUnit ?
    // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.
    // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline
    // TODO: support utc
    'time(' + timeunit_1.fieldExpr(filter.timeUnit, filter.field) + ')' : fielddef_1.field(filter, { expr: 'datum' });
    if (isEqualFilter(filter)) {
        return fieldExpr + '===' + valueExpr(filter.equal, filter.timeUnit);
    } else if (isOneOfFilter(filter)) {
        // "oneOf" was formerly "in" -- so we need to add backward compatibility
        var oneOf = filter.oneOf || filter['in'];
        return 'indexof([' + oneOf.map(function (v) {
            return valueExpr(v, filter.timeUnit);
        }).join(',') + '], ' + fieldExpr + ') !== -1';
    } else if (isRangeFilter(filter)) {
        var lower = filter.range[0];
        var upper = filter.range[1];
        if (lower !== null && upper !== null && useInRange) {
            return 'inrange(' + fieldExpr + ', [' + valueExpr(lower, filter.timeUnit) + ', ' + valueExpr(upper, filter.timeUnit) + '])';
        }
        var exprs = [];
        if (lower !== null) {
            exprs.push(fieldExpr + " >= " + valueExpr(lower, filter.timeUnit));
        }
        if (upper !== null) {
            exprs.push(fieldExpr + " <= " + valueExpr(upper, filter.timeUnit));
        }
        return exprs.length > 0 ? exprs.join(' && ') : 'true';
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error("Invalid field filter: " + JSON.stringify(filter));
}
exports.fieldFilterExpression = fieldFilterExpression;
function valueExpr(v, timeUnit) {
    if (datetime_1.isDateTime(v)) {
        var expr = datetime_1.dateTimeExpr(v, true);
        return 'time(' + expr + ')';
    }
    if (timeunit_1.isLocalSingleTimeUnit(timeUnit)) {
        var datetime = {};
        datetime[timeUnit] = v;
        var expr = datetime_1.dateTimeExpr(datetime, true);
        return 'time(' + expr + ')';
    } else if (timeunit_1.isUtcSingleTimeUnit(timeUnit)) {
        return valueExpr(v, timeunit_1.getLocalTimeUnit(timeUnit));
    }
    return JSON.stringify(v);
}
function normalizeFilter(f) {
    if (isFieldFilter(f) && f.timeUnit) {
        return tslib_1.__assign({}, f, { timeUnit: timeunit_1.normalizeTimeUnit(f.timeUnit) });
    }
    return f;
}
exports.normalizeFilter = normalizeFilter;

},{"./compile/selection/selection":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/selection/selection.js","./datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","./fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/guide.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VL_ONLY_GUIDE_CONFIG = ['shortTimeLabels'];

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/index.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.axis = require("./axis");
exports.aggregate = require("./aggregate");
exports.bin = require("./bin");
exports.channel = require("./channel");
exports.compositeMark = require("./compositemark");
var compile_1 = require("./compile/compile");
exports.compile = compile_1.compile;
exports.config = require("./config");
exports.data = require("./data");
exports.datetime = require("./datetime");
exports.encoding = require("./encoding");
exports.facet = require("./facet");
exports.fieldDef = require("./fielddef");
exports.legend = require("./legend");
exports.mark = require("./mark");
exports.scale = require("./scale");
exports.sort = require("./sort");
exports.spec = require("./spec");
exports.stack = require("./stack");
exports.timeUnit = require("./timeunit");
exports.transform = require("./transform");
exports.type = require("./type");
exports.util = require("./util");
exports.validate = require("./validate");
exports.version = require('../package.json').version;

},{"../package.json":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/package.json","./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js","./axis":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/axis.js","./bin":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/bin.js","./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./compile/compile":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compile/compile.js","./compositemark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/index.js","./config":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/config.js","./data":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/data.js","./datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","./encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","./facet":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/facet.js","./fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","./legend":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/legend.js","./mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","./sort":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/sort.js","./spec":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js","./stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/stack.js","./timeunit":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js","./transform":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/transform.js","./type":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","./validate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/validate.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/legend.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultLegendConfig = {};
exports.LEGEND_PROPERTIES = ['entryPadding', 'format', 'offset', 'orient', 'tickCount', 'title', 'type', 'values', 'zindex'];
exports.VG_LEGEND_PROPERTIES = [].concat(['fill', 'stroke', 'shape', 'size', 'opacity', 'encode'], exports.LEGEND_PROPERTIES);

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js":[function(require,module,exports){
"use strict";
/**
 * Vega-Lite's singleton logger utility.
 */

Object.defineProperty(exports, "__esModule", { value: true });
var vega_util_1 = require("vega-util");
/**
 * Main (default) Vega Logger instance for Vega-Lite
 */
var main = vega_util_1.logger(vega_util_1.Warn);
var current = main;
/**
 * Logger tool for checking if the code throws correct warning
 */
var LocalLogger = /** @class */function () {
    function LocalLogger() {
        this.warns = [];
        this.infos = [];
        this.debugs = [];
    }
    LocalLogger.prototype.level = function () {
        return this;
    };
    LocalLogger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.warns).push.apply(_a, args);
        return this;
        var _a;
    };
    LocalLogger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.infos).push.apply(_a, args);
        return this;
        var _a;
    };
    LocalLogger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.debugs).push.apply(_a, args);
        return this;
        var _a;
    };
    return LocalLogger;
}();
exports.LocalLogger = LocalLogger;
function runLocalLogger(f) {
    var localLogger = current = new LocalLogger();
    f(localLogger);
    reset();
}
exports.runLocalLogger = runLocalLogger;
function wrap(f) {
    return function () {
        var logger = current = new LocalLogger();
        f(logger);
        reset();
    };
}
exports.wrap = wrap;
/**
 * Set the singleton logger to be a custom logger
 */
function set(logger) {
    current = logger;
    return current;
}
exports.set = set;
/**
 * Reset the main logger to use the default Vega Logger
 */
function reset() {
    current = main;
    return current;
}
exports.reset = reset;
function warn() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.warn.apply(current, arguments);
}
exports.warn = warn;
function info() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.info.apply(current, arguments);
}
exports.info = info;
function debug() {
    var _ = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        _[_i] = arguments[_i];
    }
    current.debug.apply(current, arguments);
}
exports.debug = debug;
/**
 * Collection of all Vega-Lite Error Messages
 */
var message;
(function (message) {
    message.INVALID_SPEC = 'Invalid spec';
    // SELECTION
    function cannotProjectOnChannelWithoutField(channel) {
        return "Cannot project a selection on encoding channel \"" + channel + "\", which has no field.";
    }
    message.cannotProjectOnChannelWithoutField = cannotProjectOnChannelWithoutField;
    function selectionNotFound(name) {
        return "Cannot find a selection named \"" + name + "\"";
    }
    message.selectionNotFound = selectionNotFound;
    // REPEAT
    function noSuchRepeatedValue(field) {
        return "Unknown repeated value \"" + field + "\".";
    }
    message.noSuchRepeatedValue = noSuchRepeatedValue;
    // TITLE
    function cannotSetTitleAnchor(type) {
        return "Cannot set title \"anchor\" for a " + type + " spec";
    }
    message.cannotSetTitleAnchor = cannotSetTitleAnchor;
    // DATA
    function unrecognizedParse(p) {
        return "Unrecognized parse \"" + p + "\".";
    }
    message.unrecognizedParse = unrecognizedParse;
    function differentParse(field, local, ancestor) {
        return "An ancestor parsed field \"" + field + "\" as " + ancestor + " but a child wants to parse the field as " + local + ".";
    }
    message.differentParse = differentParse;
    // TRANSFORMS
    function invalidTransformIgnored(transform) {
        return "Ignoring an invalid transform: " + JSON.stringify(transform) + ".";
    }
    message.invalidTransformIgnored = invalidTransformIgnored;
    message.NO_FIELDS_NEEDS_AS = 'If "from.fields" is not specified, "as" has to be a string that specifies the key to be used for the the data from the secondary source.';
    // ENCODING & FACET
    function invalidFieldType(type) {
        return "Invalid field type \"" + type + "\"";
    }
    message.invalidFieldType = invalidFieldType;
    function invalidFieldTypeForCountAggregate(type, aggregate) {
        return "Invalid field type \"" + type + "\" for aggregate: \"" + aggregate + "\", using \"quantitative\" instead.";
    }
    message.invalidFieldTypeForCountAggregate = invalidFieldTypeForCountAggregate;
    function invalidAggregate(aggregate) {
        return "Invalid aggregation operator \"" + aggregate + "\"";
    }
    message.invalidAggregate = invalidAggregate;
    function emptyOrInvalidFieldType(type, channel, newType) {
        return "Invalid field type \"" + type + "\" for channel \"" + channel + "\", using \"" + newType + "\" instead.";
    }
    message.emptyOrInvalidFieldType = emptyOrInvalidFieldType;
    function emptyFieldDef(fieldDef, channel) {
        return "Dropping " + JSON.stringify(fieldDef) + " from channel \"" + channel + "\" since it does not contain data field or value.";
    }
    message.emptyFieldDef = emptyFieldDef;
    function incompatibleChannel(channel, markOrFacet, when) {
        return channel + " dropped as it is incompatible with \"" + markOrFacet + "\"" + (when ? " when " + when : '') + ".";
    }
    message.incompatibleChannel = incompatibleChannel;
    function facetChannelShouldBeDiscrete(channel) {
        return channel + " encoding should be discrete (ordinal / nominal / binned).";
    }
    message.facetChannelShouldBeDiscrete = facetChannelShouldBeDiscrete;
    function discreteChannelCannotEncode(channel, type) {
        return "Using discrete channel \"" + channel + "\" to encode \"" + type + "\" field can be misleading as it does not encode " + (type === 'ordinal' ? 'order' : 'magnitude') + ".";
    }
    message.discreteChannelCannotEncode = discreteChannelCannotEncode;
    // Mark
    message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';
    function unclearOrientContinuous(mark) {
        return "Cannot clearly determine orientation for \"" + mark + "\" since both x and y channel encode continous fields. In this case, we use vertical by default";
    }
    message.unclearOrientContinuous = unclearOrientContinuous;
    function unclearOrientDiscreteOrEmpty(mark) {
        return "Cannot clearly determine orientation for \"" + mark + "\" since both x and y channel encode discrete or empty fields.";
    }
    message.unclearOrientDiscreteOrEmpty = unclearOrientDiscreteOrEmpty;
    function orientOverridden(original, actual) {
        return "Specified orient \"" + original + "\" overridden with \"" + actual + "\"";
    }
    message.orientOverridden = orientOverridden;
    // SCALE
    message.CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';
    function cannotUseScalePropertyWithNonColor(prop) {
        return "Cannot use the scale property \"" + prop + "\" with non-color channel.";
    }
    message.cannotUseScalePropertyWithNonColor = cannotUseScalePropertyWithNonColor;
    function unaggregateDomainHasNoEffectForRawField(fieldDef) {
        return "Using unaggregated domain with raw field has no effect (" + JSON.stringify(fieldDef) + ").";
    }
    message.unaggregateDomainHasNoEffectForRawField = unaggregateDomainHasNoEffectForRawField;
    function unaggregateDomainWithNonSharedDomainOp(aggregate) {
        return "Unaggregated domain not applicable for \"" + aggregate + "\" since it produces values outside the origin domain of the source data.";
    }
    message.unaggregateDomainWithNonSharedDomainOp = unaggregateDomainWithNonSharedDomainOp;
    function unaggregatedDomainWithLogScale(fieldDef) {
        return "Unaggregated domain is currently unsupported for log scale (" + JSON.stringify(fieldDef) + ").";
    }
    message.unaggregatedDomainWithLogScale = unaggregatedDomainWithLogScale;
    message.CANNOT_USE_RANGE_WITH_POSITION = 'Cannot use a custom "range" with x or y channel.  Please customize width, height, padding, or rangeStep instead.';
    function cannotUseSizeFieldWithBandSize(positionChannel) {
        return "Using size field when " + positionChannel + "-channel has a band scale is not supported.";
    }
    message.cannotUseSizeFieldWithBandSize = cannotUseSizeFieldWithBandSize;
    function cannotApplySizeToNonOrientedMark(mark) {
        return "Cannot apply size to non-oriented mark \"" + mark + "\".";
    }
    message.cannotApplySizeToNonOrientedMark = cannotApplySizeToNonOrientedMark;
    function rangeStepDropped(channel) {
        return "rangeStep for \"" + channel + "\" is dropped as top-level " + (channel === 'x' ? 'width' : 'height') + " is provided.";
    }
    message.rangeStepDropped = rangeStepDropped;
    function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {
        return "Channel \"" + channel + "\" does not work with \"" + scaleType + "\" scale. We are using \"" + defaultScaleType + "\" scale instead.";
    }
    message.scaleTypeNotWorkWithChannel = scaleTypeNotWorkWithChannel;
    function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {
        return "FieldDef does not work with \"" + scaleType + "\" scale. We are using \"" + defaultScaleType + "\" scale instead.";
    }
    message.scaleTypeNotWorkWithFieldDef = scaleTypeNotWorkWithFieldDef;
    function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {
        return channel + "-scale's \"" + propName + "\" is dropped as it does not work with " + scaleType + " scale.";
    }
    message.scalePropertyNotWorkWithScaleType = scalePropertyNotWorkWithScaleType;
    function scaleTypeNotWorkWithMark(mark, scaleType) {
        return "Scale type \"" + scaleType + "\" does not work with mark \"" + mark + "\".";
    }
    message.scaleTypeNotWorkWithMark = scaleTypeNotWorkWithMark;
    function mergeConflictingProperty(property, propertyOf, v1, v2) {
        return "Conflicting " + propertyOf + " property \"" + property + "\" (\"" + v1 + "\" and \"" + v2 + "\").  Using \"" + v1 + "\".";
    }
    message.mergeConflictingProperty = mergeConflictingProperty;
    function independentScaleMeansIndependentGuide(channel) {
        return "Setting the scale to be independent for \"" + channel + "\" means we also have to set the guide (axis or legend) to be independent.";
    }
    message.independentScaleMeansIndependentGuide = independentScaleMeansIndependentGuide;
    function conflictedDomain(channel) {
        return "Cannot set " + channel + "-scale's \"domain\" as it is binned. Please use \"bin\"'s \"extent\" instead.";
    }
    message.conflictedDomain = conflictedDomain;
    function domainSortDropped(sort) {
        return "Dropping sort property \"" + JSON.stringify(sort) + "\" as unioned domains only support boolean or op 'count'.";
    }
    message.domainSortDropped = domainSortDropped;
    message.UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';
    message.MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';
    // AXIS
    message.INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';
    // STACK
    function cannotStackRangedMark(channel) {
        return "Cannot stack \"" + channel + "\" if there is already \"" + channel + "2\"";
    }
    message.cannotStackRangedMark = cannotStackRangedMark;
    function cannotStackNonLinearScale(scaleType) {
        return "Cannot stack non-linear scale (" + scaleType + ")";
    }
    message.cannotStackNonLinearScale = cannotStackNonLinearScale;
    function cannotStackNonSummativeAggregate(aggregate) {
        return "Cannot stack when the aggregate function is non-summative (\"" + aggregate + "\")";
    }
    message.cannotStackNonSummativeAggregate = cannotStackNonSummativeAggregate;
    // TIMEUNIT
    function invalidTimeUnit(unitName, value) {
        return "Invalid " + unitName + ": \"" + value + "\"";
    }
    message.invalidTimeUnit = invalidTimeUnit;
    function dayReplacedWithDate(fullTimeUnit) {
        return "Time unit \"" + fullTimeUnit + "\" is not supported. We are replacing it with " + fullTimeUnit.replace('day', 'date') + ".";
    }
    message.dayReplacedWithDate = dayReplacedWithDate;
    function droppedDay(d) {
        return "Dropping day from datetime " + JSON.stringify(d) + " as day cannot be combined with other units.";
    }
    message.droppedDay = droppedDay;
})(message = exports.message || (exports.message = {}));

},{"vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/logical.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isLogicalOr(op) {
    return !!op.or;
}
exports.isLogicalOr = isLogicalOr;
function isLogicalAnd(op) {
    return !!op.and;
}
exports.isLogicalAnd = isLogicalAnd;
function isLogicalNot(op) {
    return !!op.not;
}
exports.isLogicalNot = isLogicalNot;
function forEachLeave(op, fn) {
    if (isLogicalNot(op)) {
        forEachLeave(op.not, fn);
    } else if (isLogicalAnd(op)) {
        for (var _i = 0, _a = op.and; _i < _a.length; _i++) {
            var subop = _a[_i];
            forEachLeave(subop, fn);
        }
    } else if (isLogicalOr(op)) {
        for (var _b = 0, _c = op.or; _b < _c.length; _b++) {
            var subop = _c[_b];
            forEachLeave(subop, fn);
        }
    } else {
        fn(op);
    }
}
exports.forEachLeave = forEachLeave;
function normalizeLogicalOperand(op, normalizer) {
    if (isLogicalNot(op)) {
        return { not: normalizeLogicalOperand(op.not, normalizer) };
    } else if (isLogicalAnd(op)) {
        return { and: op.and.map(function (o) {
                return normalizeLogicalOperand(o, normalizer);
            }) };
    } else if (isLogicalOr(op)) {
        return { or: op.or.map(function (o) {
                return normalizeLogicalOperand(o, normalizer);
            }) };
    } else {
        return normalizer(op);
    }
}
exports.normalizeLogicalOperand = normalizeLogicalOperand;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
var Mark;
(function (Mark) {
    Mark.AREA = 'area';
    Mark.BAR = 'bar';
    Mark.LINE = 'line';
    Mark.POINT = 'point';
    Mark.RECT = 'rect';
    Mark.RULE = 'rule';
    Mark.TEXT = 'text';
    Mark.TICK = 'tick';
    Mark.CIRCLE = 'circle';
    Mark.SQUARE = 'square';
})(Mark = exports.Mark || (exports.Mark = {}));
exports.AREA = Mark.AREA;
exports.BAR = Mark.BAR;
exports.LINE = Mark.LINE;
exports.POINT = Mark.POINT;
exports.TEXT = Mark.TEXT;
exports.TICK = Mark.TICK;
exports.RECT = Mark.RECT;
exports.RULE = Mark.RULE;
exports.CIRCLE = Mark.CIRCLE;
exports.SQUARE = Mark.SQUARE;
// Using mapped type to declare index, ensuring we always have all marks when we add more.
var MARK_INDEX = {
    area: 1,
    bar: 1,
    line: 1,
    point: 1,
    text: 1,
    tick: 1,
    rect: 1,
    rule: 1,
    circle: 1,
    square: 1
};
function isMark(m) {
    return !!MARK_INDEX[m];
}
exports.isMark = isMark;
exports.PRIMITIVE_MARKS = util_1.flagKeys(MARK_INDEX);
function isMarkDef(mark) {
    return mark['type'];
}
exports.isMarkDef = isMarkDef;
var PRIMITIVE_MARK_INDEX = util_1.toSet(exports.PRIMITIVE_MARKS);
function isPrimitiveMark(mark) {
    var markType = isMarkDef(mark) ? mark.type : mark;
    return markType in PRIMITIVE_MARK_INDEX;
}
exports.isPrimitiveMark = isPrimitiveMark;
exports.STROKE_CONFIG = ['stroke', 'strokeWidth', 'strokeDash', 'strokeDashOffset', 'strokeOpacity'];
exports.FILL_CONFIG = ['fill', 'fillOpacity'];
exports.FILL_STROKE_CONFIG = [].concat(exports.STROKE_CONFIG, exports.FILL_CONFIG);
exports.VL_ONLY_MARK_CONFIG_PROPERTIES = ['filled', 'color'];
exports.VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {
    bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],
    text: ['shortTimeLabels'],
    tick: ['bandSize', 'thickness']
};
exports.defaultMarkConfig = {
    color: '#4c78a8'
};
exports.defaultBarConfig = {
    binSpacing: 1,
    continuousBandSize: 2
};
exports.defaultTickConfig = {
    thickness: 1
};

},{"./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("./channel");
var log = require("./log");
var util_1 = require("./util");
var ScaleType;
(function (ScaleType) {
    // Continuous - Quantitative
    ScaleType.LINEAR = 'linear';
    ScaleType.BIN_LINEAR = 'bin-linear';
    ScaleType.LOG = 'log';
    ScaleType.POW = 'pow';
    ScaleType.SQRT = 'sqrt';
    // Continuous - Time
    ScaleType.TIME = 'time';
    ScaleType.UTC = 'utc';
    // sequential
    ScaleType.SEQUENTIAL = 'sequential';
    // Quantile, Quantize, threshold
    ScaleType.QUANTILE = 'quantile';
    ScaleType.QUANTIZE = 'quantize';
    ScaleType.THRESHOLD = 'threshold';
    ScaleType.ORDINAL = 'ordinal';
    ScaleType.BIN_ORDINAL = 'bin-ordinal';
    ScaleType.POINT = 'point';
    ScaleType.BAND = 'band';
})(ScaleType = exports.ScaleType || (exports.ScaleType = {}));
/**
 * Index for scale categories -- only scale of the same categories can be merged together.
 * Current implementation is trying to be conservative and avoid merging scale type that might not work together
 */
var SCALE_CATEGORY_INDEX = {
    linear: 'numeric',
    log: 'numeric',
    pow: 'numeric',
    sqrt: 'numeric',
    'bin-linear': 'bin-linear',
    time: 'time',
    utc: 'time',
    sequential: 'sequential',
    ordinal: 'ordinal',
    'bin-ordinal': 'bin-ordinal',
    point: 'ordinal-position',
    band: 'ordinal-position'
};
exports.SCALE_TYPES = util_1.keys(SCALE_CATEGORY_INDEX);
/**
 * Whether the two given scale types can be merged together.
 */
function scaleCompatible(scaleType1, scaleType2) {
    var scaleCategory1 = SCALE_CATEGORY_INDEX[scaleType1];
    var scaleCategory2 = SCALE_CATEGORY_INDEX[scaleType2];
    return scaleCategory1 === scaleCategory2 || scaleCategory1 === 'ordinal-position' && scaleCategory2 === 'time' || scaleCategory2 === 'ordinal-position' && scaleCategory1 === 'time';
}
exports.scaleCompatible = scaleCompatible;
/**
 * Index for scale predecence -- high score = higher priority for merging.
 */
var SCALE_PRECEDENCE_INDEX = {
    // numeric
    linear: 0,
    log: 1,
    pow: 1,
    sqrt: 1,
    // time
    time: 0,
    utc: 0,
    // ordinal-position -- these have higher precedence than continuous scales as they support more types of data
    point: 10,
    band: 11,
    // non grouped types
    'bin-linear': 0,
    sequential: 0,
    ordinal: 0,
    'bin-ordinal': 0
};
/**
 * Return scale categories -- only scale of the same categories can be merged together.
 */
function scaleTypePrecedence(scaleType) {
    return SCALE_PRECEDENCE_INDEX[scaleType];
}
exports.scaleTypePrecedence = scaleTypePrecedence;
exports.CONTINUOUS_TO_CONTINUOUS_SCALES = ['linear', 'bin-linear', 'log', 'pow', 'sqrt', 'time', 'utc'];
var CONTINUOUS_TO_CONTINUOUS_INDEX = util_1.toSet(exports.CONTINUOUS_TO_CONTINUOUS_SCALES);
exports.CONTINUOUS_DOMAIN_SCALES = exports.CONTINUOUS_TO_CONTINUOUS_SCALES.concat(['sequential' /* TODO add 'quantile', 'quantize', 'threshold'*/]);
var CONTINUOUS_DOMAIN_INDEX = util_1.toSet(exports.CONTINUOUS_DOMAIN_SCALES);
exports.DISCRETE_DOMAIN_SCALES = ['ordinal', 'bin-ordinal', 'point', 'band'];
var DISCRETE_DOMAIN_INDEX = util_1.toSet(exports.DISCRETE_DOMAIN_SCALES);
var BIN_SCALES_INDEX = util_1.toSet(['bin-linear', 'bin-ordinal']);
exports.TIME_SCALE_TYPES = ['time', 'utc'];
function hasDiscreteDomain(type) {
    return type in DISCRETE_DOMAIN_INDEX;
}
exports.hasDiscreteDomain = hasDiscreteDomain;
function isBinScale(type) {
    return type in BIN_SCALES_INDEX;
}
exports.isBinScale = isBinScale;
function hasContinuousDomain(type) {
    return type in CONTINUOUS_DOMAIN_INDEX;
}
exports.hasContinuousDomain = hasContinuousDomain;
function isContinuousToContinuous(type) {
    return type in CONTINUOUS_TO_CONTINUOUS_INDEX;
}
exports.isContinuousToContinuous = isContinuousToContinuous;
exports.defaultScaleConfig = {
    textXRangeStep: 90,
    rangeStep: 21,
    pointPadding: 0.5,
    bandPaddingInner: 0.1,
    facetSpacing: 16,
    minBandSize: 2,
    minFontSize: 8,
    maxFontSize: 40,
    minOpacity: 0.3,
    maxOpacity: 0.8,
    // FIXME: revise if these *can* become ratios of rangeStep
    minSize: 9,
    minStrokeWidth: 1,
    maxStrokeWidth: 4
};
function isExtendedScheme(scheme) {
    return scheme && !!scheme['name'];
}
exports.isExtendedScheme = isExtendedScheme;
function isSelectionDomain(domain) {
    return domain && domain['selection'];
}
exports.isSelectionDomain = isSelectionDomain;
var SCALE_PROPERTY_INDEX = {
    type: 1,
    domain: 1,
    range: 1,
    rangeStep: 1,
    scheme: 1,
    // Other properties
    reverse: 1,
    round: 1,
    // quantitative / time
    clamp: 1,
    nice: 1,
    // quantitative
    base: 1,
    exponent: 1,
    interpolate: 1,
    zero: 1,
    // band/point
    padding: 1,
    paddingInner: 1,
    paddingOuter: 1
};
exports.SCALE_PROPERTIES = util_1.flagKeys(SCALE_PROPERTY_INDEX);
var type = SCALE_PROPERTY_INDEX.type,
    domain = SCALE_PROPERTY_INDEX.domain,
    range = SCALE_PROPERTY_INDEX.range,
    rangeStep = SCALE_PROPERTY_INDEX.rangeStep,
    scheme = SCALE_PROPERTY_INDEX.scheme,
    NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX = tslib_1.__rest(SCALE_PROPERTY_INDEX, ["type", "domain", "range", "rangeStep", "scheme"]);
exports.NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES = util_1.flagKeys(NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX);
function scaleTypeSupportProperty(scaleType, propName) {
    switch (propName) {
        case 'type':
        case 'domain':
        case 'reverse':
        case 'range':
            return true;
        case 'scheme':
            return util_1.contains(['sequential', 'ordinal', 'bin-ordinal', 'quantile', 'quantize'], scaleType);
        case 'interpolate':
            // FIXME(https://github.com/vega/vega-lite/issues/2902) how about ordinal?
            return util_1.contains(['linear', 'bin-linear', 'pow', 'log', 'sqrt', 'utc', 'time'], scaleType);
        case 'round':
            return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';
        case 'rangeStep':
        case 'padding':
        case 'paddingOuter':
            return util_1.contains(['point', 'band'], scaleType);
        case 'paddingInner':
            return scaleType === 'band';
        case 'clamp':
            return isContinuousToContinuous(scaleType) || scaleType === 'sequential';
        case 'nice':
            return isContinuousToContinuous(scaleType) || scaleType === 'sequential' || scaleType === 'quantize';
        case 'exponent':
            return scaleType === 'pow';
        case 'base':
            return scaleType === 'log';
        case 'zero':
            return hasContinuousDomain(scaleType) && !util_1.contains(['log', 'time', 'utc', 'bin-linear', 'threshold', 'quantile' // quantile depends on distribution so zero does not matter
            ], scaleType);
    }
    /* istanbul ignore next: should never reach here*/
    throw new Error("Invalid scale property " + propName + ".");
}
exports.scaleTypeSupportProperty = scaleTypeSupportProperty;
/**
 * Returns undefined if the input channel supports the input scale property name
 */
function channelScalePropertyIncompatability(channel, propName) {
    switch (propName) {
        case 'range':
            // User should not customize range for position and facet channel directly.
            if (channel === 'x' || channel === 'y') {
                return log.message.CANNOT_USE_RANGE_WITH_POSITION;
            }
            return undefined; // GOOD!
        case 'interpolate':
        case 'scheme':
            if (channel !== 'color') {
                return log.message.cannotUseScalePropertyWithNonColor(channel);
            }
            return undefined;
        case 'type':
        case 'domain':
        case 'base':
        case 'exponent':
        case 'nice':
        case 'padding':
        case 'paddingInner':
        case 'paddingOuter':
        case 'rangeStep':
        case 'reverse':
        case 'round':
        case 'clamp':
        case 'zero':
            return undefined; // GOOD!
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error("Invalid scale property \"" + propName + "\".");
}
exports.channelScalePropertyIncompatability = channelScalePropertyIncompatability;
function channelSupportScaleType(channel, scaleType) {
    switch (channel) {
        case channel_1.Channel.X:
        case channel_1.Channel.Y:
        case channel_1.Channel.SIZE: // TODO: size and opacity can support ordinal with more modification
        case channel_1.Channel.OPACITY:
            // Although it generally doesn't make sense to use band with size and opacity,
            // it can also work since we use band: 0.5 to get midpoint.
            return isContinuousToContinuous(scaleType) || util_1.contains(['band', 'point'], scaleType);
        case channel_1.Channel.COLOR:
            return scaleType !== 'band'; // band does not make sense with color
        case channel_1.Channel.SHAPE:
            return scaleType === 'ordinal'; // shape = lookup only
    }
    /* istanbul ignore next: it should never reach here */
    return false;
}
exports.channelSupportScaleType = channelSupportScaleType;

},{"./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/selection.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SELECTION_ID = '_vgsid_';
exports.defaultConfig = {
    single: { on: 'click', fields: [exports.SELECTION_ID], resolve: 'global' },
    multi: { on: 'click', fields: [exports.SELECTION_ID], toggle: 'event.shiftKey', resolve: 'global' },
    interval: {
        on: '[mousedown, window:mouseup] > window:mousemove!',
        encodings: ['x', 'y'],
        translate: '[mousedown, window:mouseup] > window:mousemove!',
        zoom: 'wheel!',
        mark: { fill: '#333', fillOpacity: 0.125, stroke: 'white' },
        resolve: 'global'
    }
};

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/sort.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isSortField(sort) {
    return !!sort && (sort['op'] === 'count' || !!sort['field']) && !!sort['op'];
}
exports.isSortField = isSortField;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/spec.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var channel_1 = require("./channel");
var compositeMark = require("./compositemark");
var encoding_1 = require("./encoding");
var vlEncoding = require("./encoding");
var log = require("./log");
var mark_1 = require("./mark");
var stack_1 = require("./stack");
var util_1 = require("./util");
/* Custom type guards */
function isFacetSpec(spec) {
    return spec['facet'] !== undefined;
}
exports.isFacetSpec = isFacetSpec;
function isUnitSpec(spec) {
    return !!spec['mark'];
}
exports.isUnitSpec = isUnitSpec;
function isLayerSpec(spec) {
    return spec['layer'] !== undefined;
}
exports.isLayerSpec = isLayerSpec;
function isRepeatSpec(spec) {
    return spec['repeat'] !== undefined;
}
exports.isRepeatSpec = isRepeatSpec;
function isConcatSpec(spec) {
    return isVConcatSpec(spec) || isHConcatSpec(spec);
}
exports.isConcatSpec = isConcatSpec;
function isVConcatSpec(spec) {
    return spec['vconcat'] !== undefined;
}
exports.isVConcatSpec = isVConcatSpec;
function isHConcatSpec(spec) {
    return spec['hconcat'] !== undefined;
}
exports.isHConcatSpec = isHConcatSpec;
/**
 * Decompose extended unit specs into composition of pure unit specs.
 */
// TODO: consider moving this to another file.  Maybe vl.spec.normalize or vl.normalize
function normalize(spec, config) {
    if (isFacetSpec(spec)) {
        return normalizeFacet(spec, config);
    }
    if (isLayerSpec(spec)) {
        return normalizeLayer(spec, config);
    }
    if (isRepeatSpec(spec)) {
        return normalizeRepeat(spec, config);
    }
    if (isVConcatSpec(spec)) {
        return normalizeVConcat(spec, config);
    }
    if (isHConcatSpec(spec)) {
        return normalizeHConcat(spec, config);
    }
    if (isUnitSpec(spec)) {
        var hasRow = encoding_1.channelHasField(spec.encoding, channel_1.ROW);
        var hasColumn = encoding_1.channelHasField(spec.encoding, channel_1.COLUMN);
        if (hasRow || hasColumn) {
            return normalizeFacetedUnit(spec, config);
        }
        return normalizeNonFacetUnit(spec, config);
    }
    throw new Error(log.message.INVALID_SPEC);
}
exports.normalize = normalize;
function normalizeFacet(spec, config) {
    var subspec = spec.spec,
        rest = tslib_1.__rest(spec, ["spec"]);
    return tslib_1.__assign({}, rest, {
        // TODO: remove "any" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760
        spec: normalize(subspec, config) });
}
function normalizeLayer(spec, config) {
    var layer = spec.layer,
        rest = tslib_1.__rest(spec, ["layer"]);
    return tslib_1.__assign({}, rest, { layer: layer.map(function (subspec) {
            return isLayerSpec(subspec) ? normalizeLayer(subspec, config) : normalizeNonFacetUnit(subspec, config);
        }) });
}
function normalizeRepeat(spec, config) {
    var subspec = spec.spec,
        rest = tslib_1.__rest(spec, ["spec"]);
    return tslib_1.__assign({}, rest, { spec: normalize(subspec, config) });
}
function normalizeVConcat(spec, config) {
    var vconcat = spec.vconcat,
        rest = tslib_1.__rest(spec, ["vconcat"]);
    return tslib_1.__assign({}, rest, { vconcat: vconcat.map(function (subspec) {
            return normalize(subspec, config);
        }) });
}
function normalizeHConcat(spec, config) {
    var hconcat = spec.hconcat,
        rest = tslib_1.__rest(spec, ["hconcat"]);
    return tslib_1.__assign({}, rest, { hconcat: hconcat.map(function (subspec) {
            return normalize(subspec, config);
        }) });
}
function normalizeFacetedUnit(spec, config) {
    // New encoding in the inside spec should not contain row / column
    // as row/column should be moved to facet
    var _a = spec.encoding,
        row = _a.row,
        column = _a.column,
        encoding = tslib_1.__rest(_a, ["row", "column"]);
    // Mark and encoding should be moved into the inner spec
    var mark = spec.mark,
        width = spec.width,
        height = spec.height,
        selection = spec.selection,
        _ = spec.encoding,
        outerSpec = tslib_1.__rest(spec, ["mark", "width", "height", "selection", "encoding"]);
    return tslib_1.__assign({}, outerSpec, { facet: tslib_1.__assign({}, row ? { row: row } : {}, column ? { column: column } : {}), spec: normalizeNonFacetUnit(tslib_1.__assign({ mark: mark }, width ? { width: width } : {}, height ? { height: height } : {}, { encoding: encoding }, selection ? { selection: selection } : {}), config) });
}
function isNonFacetUnitSpecWithPrimitiveMark(spec) {
    return mark_1.isPrimitiveMark(spec.mark);
}
function normalizeNonFacetUnit(spec, config) {
    if (isNonFacetUnitSpecWithPrimitiveMark(spec)) {
        // TODO: thoroughly test
        if (encoding_1.isRanged(spec.encoding)) {
            return normalizeRangedUnit(spec);
        }
        var overlayConfig = config && config.overlay;
        var overlayWithLine = overlayConfig && spec.mark === mark_1.AREA && util_1.contains(['linepoint', 'line'], overlayConfig.area);
        var overlayWithPoint = overlayConfig && (overlayConfig.line && spec.mark === mark_1.LINE || overlayConfig.area === 'linepoint' && spec.mark === mark_1.AREA);
        // TODO: consider moving this to become another case of compositeMark
        if (overlayWithPoint || overlayWithLine) {
            return normalizeOverlay(spec, overlayWithPoint, overlayWithLine, config);
        }
        return spec; // Nothing to normalize
    } else {
        return compositeMark.normalize(spec, config);
    }
}
function normalizeRangedUnit(spec) {
    var hasX = encoding_1.channelHasField(spec.encoding, channel_1.X);
    var hasY = encoding_1.channelHasField(spec.encoding, channel_1.Y);
    var hasX2 = encoding_1.channelHasField(spec.encoding, channel_1.X2);
    var hasY2 = encoding_1.channelHasField(spec.encoding, channel_1.Y2);
    if (hasX2 && !hasX || hasY2 && !hasY) {
        var normalizedSpec = util_1.duplicate(spec);
        if (hasX2 && !hasX) {
            normalizedSpec.encoding.x = normalizedSpec.encoding.x2;
            delete normalizedSpec.encoding.x2;
        }
        if (hasY2 && !hasY) {
            normalizedSpec.encoding.y = normalizedSpec.encoding.y2;
            delete normalizedSpec.encoding.y2;
        }
        return normalizedSpec;
    }
    return spec;
}
// FIXME(#1804): re-design this
function normalizeOverlay(spec, overlayWithPoint, overlayWithLine, config) {
    var mark = spec.mark,
        selection = spec.selection,
        encoding = spec.encoding,
        outerSpec = tslib_1.__rest(spec, ["mark", "selection", "encoding"]);
    var layer = [{ mark: mark, encoding: encoding }];
    // Need to copy stack config to overlayed layer
    var stackProps = stack_1.stack(mark, encoding, config ? config.stack : undefined);
    var overlayEncoding = encoding;
    if (stackProps) {
        var stackFieldChannel = stackProps.fieldChannel,
            offset = stackProps.offset;
        overlayEncoding = tslib_1.__assign({}, encoding, (_a = {}, _a[stackFieldChannel] = tslib_1.__assign({}, encoding[stackFieldChannel], offset ? { stack: offset } : {}), _a));
    }
    if (overlayWithLine) {
        layer.push(tslib_1.__assign({ mark: {
                type: 'line',
                style: 'lineOverlay'
            } }, selection ? { selection: selection } : {}, { encoding: overlayEncoding }));
    }
    if (overlayWithPoint) {
        layer.push(tslib_1.__assign({ mark: {
                type: 'point',
                filled: true,
                style: 'pointOverlay'
            } }, selection ? { selection: selection } : {}, { encoding: overlayEncoding }));
    }
    return tslib_1.__assign({}, outerSpec, { layer: layer });
    var _a;
}
// TODO: add vl.spec.validate & move stuff from vl.validate to here
/* Accumulate non-duplicate fieldDefs in a dictionary */
function accumulate(dict, fieldDefs) {
    fieldDefs.forEach(function (fieldDef) {
        // Consider only pure fieldDef properties (ignoring scale, axis, legend)
        var pureFieldDef = ['field', 'type', 'value', 'timeUnit', 'bin', 'aggregate'].reduce(function (f, key) {
            if (fieldDef[key] !== undefined) {
                f[key] = fieldDef[key];
            }
            return f;
        }, {});
        var key = util_1.hash(pureFieldDef);
        dict[key] = dict[key] || fieldDef;
    });
    return dict;
}
/* Recursively get fieldDefs from a spec, returns a dictionary of fieldDefs */
function fieldDefIndex(spec, dict) {
    if (dict === void 0) {
        dict = {};
    }
    // FIXME(https://github.com/vega/vega-lite/issues/2207): Support fieldDefIndex for repeat
    if (isLayerSpec(spec)) {
        spec.layer.forEach(function (layer) {
            if (isUnitSpec(layer)) {
                accumulate(dict, vlEncoding.fieldDefs(layer.encoding));
            } else {
                fieldDefIndex(layer, dict);
            }
        });
    } else if (isFacetSpec(spec)) {
        accumulate(dict, vlEncoding.fieldDefs(spec.facet));
        fieldDefIndex(spec.spec, dict);
    } else if (isRepeatSpec(spec)) {
        fieldDefIndex(spec.spec, dict);
    } else if (isConcatSpec(spec)) {
        var childSpec = isVConcatSpec(spec) ? spec.vconcat : spec.hconcat;
        childSpec.forEach(function (child) {
            return fieldDefIndex(child, dict);
        });
    } else {
        accumulate(dict, vlEncoding.fieldDefs(spec.encoding));
    }
    return dict;
}
/* Returns all non-duplicate fieldDefs in a spec in a flat array */
function fieldDefs(spec) {
    return util_1.vals(fieldDefIndex(spec));
}
exports.fieldDefs = fieldDefs;
function isStacked(spec, config) {
    config = config || spec.config;
    if (mark_1.isPrimitiveMark(spec.mark)) {
        return stack_1.stack(spec.mark, spec.encoding, config ? config.stack : undefined) !== null;
    }
    return false;
}
exports.isStacked = isStacked;

},{"./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./compositemark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/compositemark/index.js","./encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./stack":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/stack.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/stack.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var aggregate_1 = require("./aggregate");
var channel_1 = require("./channel");
var encoding_1 = require("./encoding");
var fielddef_1 = require("./fielddef");
var log = require("./log");
var mark_1 = require("./mark");
var scale_1 = require("./scale");
var util_1 = require("./util");
exports.STACKABLE_MARKS = [mark_1.BAR, mark_1.AREA, mark_1.RULE, mark_1.POINT, mark_1.CIRCLE, mark_1.SQUARE, mark_1.LINE, mark_1.TEXT, mark_1.TICK];
exports.STACK_BY_DEFAULT_MARKS = [mark_1.BAR, mark_1.AREA];
// Note: CompassQL uses this method and only pass in required properties of each argument object.
// If required properties change, make sure to update CompassQL.
function stack(m, encoding, stackConfig) {
    var mark = mark_1.isMarkDef(m) ? m.type : m;
    // Should have stackable mark
    if (!util_1.contains(exports.STACKABLE_MARKS, mark)) {
        return null;
    }
    // Should be aggregate plot
    if (!encoding_1.isAggregate(encoding)) {
        return null;
    }
    // Should have grouping level of detail
    var stackBy = channel_1.NONSPATIAL_CHANNELS.reduce(function (sc, channel) {
        if (encoding_1.channelHasField(encoding, channel)) {
            var channelDef = encoding[channel];
            (util_1.isArray(channelDef) ? channelDef : [channelDef]).forEach(function (cDef) {
                var fieldDef = fielddef_1.getFieldDef(cDef);
                if (!fieldDef.aggregate) {
                    sc.push({
                        channel: channel,
                        fieldDef: fieldDef
                    });
                }
            });
        }
        return sc;
    }, []);
    if (stackBy.length === 0) {
        return null;
    }
    // Has only one aggregate axis
    var hasXField = fielddef_1.isFieldDef(encoding.x);
    var hasYField = fielddef_1.isFieldDef(encoding.y);
    var xIsAggregate = fielddef_1.isFieldDef(encoding.x) && !!encoding.x.aggregate;
    var yIsAggregate = fielddef_1.isFieldDef(encoding.y) && !!encoding.y.aggregate;
    if (xIsAggregate !== yIsAggregate) {
        var fieldChannel = xIsAggregate ? channel_1.X : channel_1.Y;
        var fieldDef = encoding[fieldChannel];
        var fieldChannelAggregate = fieldDef.aggregate;
        var fieldChannelScale = fieldDef.scale;
        var stackOffset = null;
        if (fieldDef.stack !== undefined) {
            stackOffset = fieldDef.stack;
        } else if (util_1.contains(exports.STACK_BY_DEFAULT_MARKS, mark)) {
            // Bar and Area with sum ops are automatically stacked by default
            stackOffset = stackConfig === undefined ? 'zero' : stackConfig;
        } else {
            stackOffset = stackConfig;
        }
        if (!stackOffset || stackOffset === 'none') {
            return null;
        }
        // If stacked, check if it qualifies for stacking (and log warning if not qualified.)
        if (fieldChannelScale && fieldChannelScale.type && fieldChannelScale.type !== scale_1.ScaleType.LINEAR) {
            log.warn(log.message.cannotStackNonLinearScale(fieldChannelScale.type));
            return null;
        }
        if (encoding_1.channelHasField(encoding, fieldChannel === channel_1.X ? channel_1.X2 : channel_1.Y2)) {
            log.warn(log.message.cannotStackRangedMark(fieldChannel));
            return null;
        }
        if (!util_1.contains(aggregate_1.SUM_OPS, fieldChannelAggregate)) {
            log.warn(log.message.cannotStackNonSummativeAggregate(fieldChannelAggregate));
            return null;
        }
        return {
            groupbyChannel: xIsAggregate ? hasYField ? channel_1.Y : null : hasXField ? channel_1.X : null,
            fieldChannel: fieldChannel,
            impute: util_1.contains(['area', 'line'], mark),
            stackBy: stackBy,
            offset: stackOffset
        };
    }
    return null;
}
exports.stack = stack;

},{"./aggregate":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/aggregate.js","./channel":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/channel.js","./encoding":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/encoding.js","./fielddef":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/fielddef.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./scale":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/scale.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/timeunit.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var datetime_1 = require("./datetime");
var log = require("./log");
var util_1 = require("./util");
var TimeUnit;
(function (TimeUnit) {
    TimeUnit.YEAR = 'year';
    TimeUnit.MONTH = 'month';
    TimeUnit.DAY = 'day';
    TimeUnit.DATE = 'date';
    TimeUnit.HOURS = 'hours';
    TimeUnit.MINUTES = 'minutes';
    TimeUnit.SECONDS = 'seconds';
    TimeUnit.MILLISECONDS = 'milliseconds';
    TimeUnit.YEARMONTH = 'yearmonth';
    TimeUnit.YEARMONTHDATE = 'yearmonthdate';
    TimeUnit.YEARMONTHDATEHOURS = 'yearmonthdatehours';
    TimeUnit.YEARMONTHDATEHOURSMINUTES = 'yearmonthdatehoursminutes';
    TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS = 'yearmonthdatehoursminutesseconds';
    // MONTHDATE always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.MONTHDATE = 'monthdate';
    TimeUnit.HOURSMINUTES = 'hoursminutes';
    TimeUnit.HOURSMINUTESSECONDS = 'hoursminutesseconds';
    TimeUnit.MINUTESSECONDS = 'minutesseconds';
    TimeUnit.SECONDSMILLISECONDS = 'secondsmilliseconds';
    TimeUnit.QUARTER = 'quarter';
    TimeUnit.YEARQUARTER = 'yearquarter';
    TimeUnit.QUARTERMONTH = 'quartermonth';
    TimeUnit.YEARQUARTERMONTH = 'yearquartermonth';
    TimeUnit.UTCYEAR = 'utcyear';
    TimeUnit.UTCMONTH = 'utcmonth';
    TimeUnit.UTCDAY = 'utcday';
    TimeUnit.UTCDATE = 'utcdate';
    TimeUnit.UTCHOURS = 'utchours';
    TimeUnit.UTCMINUTES = 'utcminutes';
    TimeUnit.UTCSECONDS = 'utcseconds';
    TimeUnit.UTCMILLISECONDS = 'utcmilliseconds';
    TimeUnit.UTCYEARMONTH = 'utcyearmonth';
    TimeUnit.UTCYEARMONTHDATE = 'utcyearmonthdate';
    TimeUnit.UTCYEARMONTHDATEHOURS = 'utcyearmonthdatehours';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTES = 'utcyearmonthdatehoursminutes';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTESSECONDS = 'utcyearmonthdatehoursminutesseconds';
    // MONTHDATE always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.UTCMONTHDATE = 'utcmonthdate';
    TimeUnit.UTCHOURSMINUTES = 'utchoursminutes';
    TimeUnit.UTCHOURSMINUTESSECONDS = 'utchoursminutesseconds';
    TimeUnit.UTCMINUTESSECONDS = 'utcminutesseconds';
    TimeUnit.UTCSECONDSMILLISECONDS = 'utcsecondsmilliseconds';
    TimeUnit.UTCQUARTER = 'utcquarter';
    TimeUnit.UTCYEARQUARTER = 'utcyearquarter';
    TimeUnit.UTCQUARTERMONTH = 'utcquartermonth';
    TimeUnit.UTCYEARQUARTERMONTH = 'utcyearquartermonth';
})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));
/** Time Unit that only corresponds to only one part of Date objects. */
var LOCAL_SINGLE_TIMEUNIT_INDEX = {
    year: 1,
    quarter: 1,
    month: 1,
    day: 1,
    date: 1,
    hours: 1,
    minutes: 1,
    seconds: 1,
    milliseconds: 1
};
exports.TIMEUNIT_PARTS = util_1.flagKeys(LOCAL_SINGLE_TIMEUNIT_INDEX);
function isLocalSingleTimeUnit(timeUnit) {
    return !!LOCAL_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
exports.isLocalSingleTimeUnit = isLocalSingleTimeUnit;
var UTC_SINGLE_TIMEUNIT_INDEX = {
    utcyear: 1,
    utcquarter: 1,
    utcmonth: 1,
    utcday: 1,
    utcdate: 1,
    utchours: 1,
    utcminutes: 1,
    utcseconds: 1,
    utcmilliseconds: 1
};
function isUtcSingleTimeUnit(timeUnit) {
    return !!UTC_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
exports.isUtcSingleTimeUnit = isUtcSingleTimeUnit;
var LOCAL_MULTI_TIMEUNIT_INDEX = {
    yearquarter: 1,
    yearquartermonth: 1,
    yearmonth: 1,
    yearmonthdate: 1,
    yearmonthdatehours: 1,
    yearmonthdatehoursminutes: 1,
    yearmonthdatehoursminutesseconds: 1,
    quartermonth: 1,
    monthdate: 1,
    hoursminutes: 1,
    hoursminutesseconds: 1,
    minutesseconds: 1,
    secondsmilliseconds: 1
};
var UTC_MULTI_TIMEUNIT_INDEX = {
    utcyearquarter: 1,
    utcyearquartermonth: 1,
    utcyearmonth: 1,
    utcyearmonthdate: 1,
    utcyearmonthdatehours: 1,
    utcyearmonthdatehoursminutes: 1,
    utcyearmonthdatehoursminutesseconds: 1,
    utcquartermonth: 1,
    utcmonthdate: 1,
    utchoursminutes: 1,
    utchoursminutesseconds: 1,
    utcminutesseconds: 1,
    utcsecondsmilliseconds: 1
};
var UTC_TIMEUNIT_INDEX = tslib_1.__assign({}, UTC_SINGLE_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
function isUTCTimeUnit(t) {
    return !!UTC_TIMEUNIT_INDEX[t];
}
exports.isUTCTimeUnit = isUTCTimeUnit;
function getLocalTimeUnit(t) {
    return t.substr(3);
}
exports.getLocalTimeUnit = getLocalTimeUnit;
var TIMEUNIT_INDEX = tslib_1.__assign({}, LOCAL_SINGLE_TIMEUNIT_INDEX, UTC_SINGLE_TIMEUNIT_INDEX, LOCAL_MULTI_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
exports.TIMEUNITS = util_1.flagKeys(TIMEUNIT_INDEX);
function isTimeUnit(t) {
    return !!TIMEUNIT_INDEX[t];
}
exports.isTimeUnit = isTimeUnit;
var SET_DATE_METHOD = {
    year: 'setFullYear',
    month: 'setMonth',
    date: 'setDate',
    hours: 'setHours',
    minutes: 'setMinutes',
    seconds: 'setSeconds',
    milliseconds: 'setMilliseconds',
    // Day and quarter have their own special cases
    quarter: null,
    day: null
};
/**
 * Converts a date to only have the measurements relevant to the specified unit
 * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'
 * Note: the base date is Jan 01 1900 00:00:00
 */
function convert(unit, date) {
    var isUTC = isUTCTimeUnit(unit);
    var result = isUTC ?
    // start with uniform date
    new Date(Date.UTC(0, 0, 1, 0, 0, 0, 0)) : new Date(0, 0, 1, 0, 0, 0, 0);
    exports.TIMEUNIT_PARTS.forEach(function (timeUnitPart) {
        if (containsTimeUnit(unit, timeUnitPart)) {
            switch (timeUnitPart) {
                case TimeUnit.DAY:
                    throw new Error('Cannot convert to TimeUnits containing \'day\'');
                case TimeUnit.QUARTER:
                    {
                        var _a = dateMethods('month', isUTC),
                            getDateMethod_1 = _a.getDateMethod,
                            setDateMethod_1 = _a.setDateMethod;
                        // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)
                        result[setDateMethod_1](Math.floor(date[getDateMethod_1]() / 3) * 3);
                        break;
                    }
                default:
                    var _b = dateMethods(timeUnitPart, isUTC),
                        getDateMethod = _b.getDateMethod,
                        setDateMethod = _b.setDateMethod;
                    result[setDateMethod](date[getDateMethod]());
            }
        }
    });
    return result;
}
exports.convert = convert;
function dateMethods(singleUnit, isUtc) {
    var rawSetDateMethod = SET_DATE_METHOD[singleUnit];
    var setDateMethod = isUtc ? 'setUTC' + rawSetDateMethod.substr(3) : rawSetDateMethod;
    var getDateMethod = 'get' + (isUtc ? 'UTC' : '') + rawSetDateMethod.substr(3);
    return { setDateMethod: setDateMethod, getDateMethod: getDateMethod };
}
/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */
function containsTimeUnit(fullTimeUnit, timeUnit) {
    var index = fullTimeUnit.indexOf(timeUnit);
    return index > -1 && (timeUnit !== TimeUnit.SECONDS || index === 0 || fullTimeUnit.charAt(index - 1) !== 'i' // exclude milliseconds
    );
}
exports.containsTimeUnit = containsTimeUnit;
/**
 * Returns Vega expresssion for a given timeUnit and fieldRef
 */
function fieldExpr(fullTimeUnit, field) {
    var fieldRef = "datum[" + util_1.stringValue(field) + "]";
    var utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';
    function func(timeUnit) {
        if (timeUnit === TimeUnit.QUARTER) {
            // quarter starting at 0 (0,3,6,9).
            return "(" + utc + "quarter(" + fieldRef + ")-1)";
        } else {
            return "" + utc + timeUnit + "(" + fieldRef + ")";
        }
    }
    var d = exports.TIMEUNIT_PARTS.reduce(function (dateExpr, tu) {
        if (containsTimeUnit(fullTimeUnit, tu)) {
            dateExpr[tu] = func(tu);
        }
        return dateExpr;
    }, {});
    return datetime_1.dateTimeExpr(d);
}
exports.fieldExpr = fieldExpr;
/** returns the smallest nice unit for scale.nice */
function smallestUnit(timeUnit) {
    if (!timeUnit) {
        return undefined;
    }
    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {
        return 'second';
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {
        return 'minute';
    }
    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {
        return 'hour';
    }
    if (containsTimeUnit(timeUnit, TimeUnit.DAY) || containsTimeUnit(timeUnit, TimeUnit.DATE)) {
        return 'day';
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {
        return 'month';
    }
    if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {
        return 'year';
    }
    return undefined;
}
exports.smallestUnit = smallestUnit;
/**
 * returns the signal expression used for axis labels for a time unit
 */
function formatExpression(timeUnit, field, shortTimeLabels, isUTCScale) {
    if (!timeUnit) {
        return undefined;
    }
    var dateComponents = [];
    var expression = '';
    var hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);
    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {
        // special expression for quarter as prefix
        expression = "'Q' + quarter(" + field + ")";
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {
        // By default use short month name
        dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {
        dateComponents.push(shortTimeLabels ? '%a' : '%A');
    } else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {
        dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year
    }
    if (hasYear) {
        dateComponents.push(shortTimeLabels ? '%y' : '%Y');
    }
    var timeComponents = [];
    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {
        timeComponents.push('%H');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {
        timeComponents.push('%M');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {
        timeComponents.push('%S');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {
        timeComponents.push('%L');
    }
    var dateTimeComponents = [];
    if (dateComponents.length > 0) {
        dateTimeComponents.push(dateComponents.join(' '));
    }
    if (timeComponents.length > 0) {
        dateTimeComponents.push(timeComponents.join(':'));
    }
    if (dateTimeComponents.length > 0) {
        if (expression) {
            // Add space between quarter and main time format
            expression += " + ' ' + ";
        }
        // We only use utcFormat for utc scale
        // For utc time units, the data is already converted as a part of timeUnit transform.
        // Thus, utc time units should use timeFormat to avoid shifting the time twice.
        if (isUTCScale) {
            expression += "utcFormat(" + field + ", '" + dateTimeComponents.join(' ') + "')";
        } else {
            expression += "timeFormat(" + field + ", '" + dateTimeComponents.join(' ') + "')";
        }
    }
    // If expression is still an empty string, return undefined instead.
    return expression || undefined;
}
exports.formatExpression = formatExpression;
function normalizeTimeUnit(timeUnit) {
    if (timeUnit !== 'day' && timeUnit.indexOf('day') >= 0) {
        log.warn(log.message.dayReplacedWithDate(timeUnit));
        return timeUnit.replace('day', 'date');
    }
    return timeUnit;
}
exports.normalizeTimeUnit = normalizeTimeUnit;

},{"./datetime":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/datetime.js","./log":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/log.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js","tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/title.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
function extractTitleConfig(titleConfig) {
    var
    // These are non-mark title config that need to be hardcoded
    anchor = titleConfig.anchor,
        offset = titleConfig.offset,
        orient = titleConfig.orient,

    // color needs to be redirect to fill
    color = titleConfig.color,

    // The rest are mark config.
    titleMarkConfig = tslib_1.__rest(titleConfig, ["anchor", "offset", "orient", "color"]);
    var mark = tslib_1.__assign({}, titleMarkConfig, color ? { fill: color } : {});
    var nonMark = tslib_1.__assign({}, anchor ? { anchor: anchor } : {}, offset ? { offset: offset } : {}, orient ? { orient: orient } : {});
    return { mark: mark, nonMark: nonMark };
}
exports.extractTitleConfig = extractTitleConfig;

},{"tslib":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/tslib/tslib.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/toplevelprops.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TOP_LEVEL_PROPERTIES = ['background', 'padding', 'autoResize'];
function extractTopLevelProperties(t) {
    return TOP_LEVEL_PROPERTIES.reduce(function (o, p) {
        if (t && t[p] !== undefined) {
            o[p] = t[p];
        }
        return o;
    }, {});
}
exports.extractTopLevelProperties = extractTopLevelProperties;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/transform.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var filter_1 = require("./filter");
var logical_1 = require("./logical");
function isFilter(t) {
    return t['filter'] !== undefined;
}
exports.isFilter = isFilter;
function isLookup(t) {
    return t['lookup'] !== undefined;
}
exports.isLookup = isLookup;
function isCalculate(t) {
    return t['calculate'] !== undefined;
}
exports.isCalculate = isCalculate;
function isBin(t) {
    return !!t['bin'];
}
exports.isBin = isBin;
function isTimeUnit(t) {
    return t['timeUnit'] !== undefined;
}
exports.isTimeUnit = isTimeUnit;
function isSummarize(t) {
    return t['summarize'] !== undefined;
}
exports.isSummarize = isSummarize;
function normalizeTransform(transform) {
    return transform.map(function (t) {
        if (isFilter(t)) {
            return {
                filter: logical_1.normalizeLogicalOperand(t.filter, filter_1.normalizeFilter)
            };
        }
        return t;
    });
}
exports.normalizeTransform = normalizeTransform;

},{"./filter":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/filter.js","./logical":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/logical.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/type.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/** Constants and utilities for data type */
/** Data type based on level of measurement */
var Type;
(function (Type) {
    Type.QUANTITATIVE = 'quantitative';
    Type.ORDINAL = 'ordinal';
    Type.TEMPORAL = 'temporal';
    Type.NOMINAL = 'nominal';
})(Type = exports.Type || (exports.Type = {}));
var TYPE_INDEX = {
    quantitative: 1,
    ordinal: 1,
    temporal: 1,
    nominal: 1
};
function isType(t) {
    return !!TYPE_INDEX[t];
}
exports.isType = isType;
exports.QUANTITATIVE = Type.QUANTITATIVE;
exports.ORDINAL = Type.ORDINAL;
exports.TEMPORAL = Type.TEMPORAL;
exports.NOMINAL = Type.NOMINAL;
/**
 * Get full, lowercase type name for a given type.
 * @param  type
 * @return Full type name.
 */
function getFullName(type) {
    if (type) {
        type = type.toLowerCase();
        switch (type) {
            case 'q':
            case exports.QUANTITATIVE:
                return 'quantitative';
            case 't':
            case exports.TEMPORAL:
                return 'temporal';
            case 'o':
            case exports.ORDINAL:
                return 'ordinal';
            case 'n':
            case exports.NOMINAL:
                return 'nominal';
        }
    }
    // If we get invalid input, return undefined type.
    return undefined;
}
exports.getFullName = getFullName;

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js":[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", { value: true });
var stringify = require("json-stable-stringify");
var vega_util_1 = require("vega-util");
var logical_1 = require("./logical");
var vega_util_2 = require("vega-util");
exports.isArray = vega_util_2.isArray;
exports.isObject = vega_util_2.isObject;
exports.isNumber = vega_util_2.isNumber;
exports.isString = vega_util_2.isString;
exports.truncate = vega_util_2.truncate;
exports.toSet = vega_util_2.toSet;
exports.stringValue = vega_util_2.stringValue;
/**
 * Creates an object composed of the picked object properties.
 *
 * Example:  (from lodash)
 *
 * var object = {'a': 1, 'b': '2', 'c': 3};
 * pick(object, ['a', 'c']);
 * // → {'a': 1, 'c': 3}
 *
 */
function pick(obj, props) {
    var copy = {};
    props.forEach(function (prop) {
        if (obj.hasOwnProperty(prop)) {
            copy[prop] = obj[prop];
        }
    });
    return copy;
}
exports.pick = pick;
/**
 * The opposite of _.pick; this method creates an object composed of the own
 * and inherited enumerable string keyed properties of object that are not omitted.
 */
function omit(obj, props) {
    var copy = duplicate(obj);
    props.forEach(function (prop) {
        delete copy[prop];
    });
    return copy;
}
exports.omit = omit;
function hash(a) {
    if (vega_util_1.isString(a) || vega_util_1.isNumber(a) || isBoolean(a)) {
        return String(a);
    }
    return stringify(a);
}
exports.hash = hash;
function contains(array, item) {
    return array.indexOf(item) > -1;
}
exports.contains = contains;
/** Returns the array without the elements in item */
function without(array, excludedItems) {
    return array.filter(function (item) {
        return !contains(excludedItems, item);
    });
}
exports.without = without;
function union(array, other) {
    return array.concat(without(other, array));
}
exports.union = union;
/**
 * Returns true if any item returns true.
 */
function some(arr, f) {
    var i = 0;
    for (var k = 0; k < arr.length; k++) {
        if (f(arr[k], k, i++)) {
            return true;
        }
    }
    return false;
}
exports.some = some;
/**
 * Returns true if all items return true.
 */
function every(arr, f) {
    var i = 0;
    for (var k = 0; k < arr.length; k++) {
        if (!f(arr[k], k, i++)) {
            return false;
        }
    }
    return true;
}
exports.every = every;
function flatten(arrays) {
    return [].concat.apply([], arrays);
}
exports.flatten = flatten;
/**
 * recursively merges src into dest
 */
function mergeDeep(dest) {
    var src = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        src[_i - 1] = arguments[_i];
    }
    for (var _a = 0, src_1 = src; _a < src_1.length; _a++) {
        var s = src_1[_a];
        dest = deepMerge_(dest, s);
    }
    return dest;
}
exports.mergeDeep = mergeDeep;
// recursively merges src into dest
function deepMerge_(dest, src) {
    if ((typeof src === "undefined" ? "undefined" : _typeof(src)) !== 'object' || src === null) {
        return dest;
    }
    for (var p in src) {
        if (!src.hasOwnProperty(p)) {
            continue;
        }
        if (src[p] === undefined) {
            continue;
        }
        if (_typeof(src[p]) !== 'object' || vega_util_1.isArray(src[p]) || src[p] === null) {
            dest[p] = src[p];
        } else if (_typeof(dest[p]) !== 'object' || dest[p] === null) {
            dest[p] = mergeDeep(vega_util_1.isArray(src[p].constructor) ? [] : {}, src[p]);
        } else {
            mergeDeep(dest[p], src[p]);
        }
    }
    return dest;
}
function unique(values, f) {
    var results = [];
    var u = {};
    var v;
    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
        var val = values_1[_i];
        v = f(val);
        if (v in u) {
            continue;
        }
        u[v] = 1;
        results.push(val);
    }
    return results;
}
exports.unique = unique;
/**
 * Returns true if the two dictionaries disagree. Applies only to defined values.
 */
function differ(dict, other) {
    for (var key in dict) {
        if (dict.hasOwnProperty(key)) {
            if (other[key] && dict[key] && other[key] !== dict[key]) {
                return true;
            }
        }
    }
    return false;
}
exports.differ = differ;
function hasIntersection(a, b) {
    for (var key in a) {
        if (key in b) {
            return true;
        }
    }
    return false;
}
exports.hasIntersection = hasIntersection;
function differArray(array, other) {
    if (array.length !== other.length) {
        return true;
    }
    array.sort();
    other.sort();
    for (var i = 0; i < array.length; i++) {
        if (other[i] !== array[i]) {
            return true;
        }
    }
    return false;
}
exports.differArray = differArray;
exports.keys = Object.keys;
function vals(x) {
    var _vals = [];
    for (var k in x) {
        if (x.hasOwnProperty(k)) {
            _vals.push(x[k]);
        }
    }
    return _vals;
}
exports.vals = vals;
function flagKeys(f) {
    return exports.keys(f);
}
exports.flagKeys = flagKeys;
function duplicate(obj) {
    return JSON.parse(JSON.stringify(obj));
}
exports.duplicate = duplicate;
function isBoolean(b) {
    return b === true || b === false;
}
exports.isBoolean = isBoolean;
/**
 * Convert a string into a valid variable name
 */
function varName(s) {
    // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _
    var alphanumericS = s.replace(/\W/g, '_');
    // Add _ if the string has leading numbers.
    return (s.match(/^\d+/) ? '_' : '') + alphanumericS;
}
exports.varName = varName;
function logicalExpr(op, cb) {
    if (logical_1.isLogicalNot(op)) {
        return '!(' + logicalExpr(op.not, cb) + ')';
    } else if (logical_1.isLogicalAnd(op)) {
        return '(' + op.and.map(function (and) {
            return logicalExpr(and, cb);
        }).join(') && (') + ')';
    } else if (logical_1.isLogicalOr(op)) {
        return '(' + op.or.map(function (or) {
            return logicalExpr(or, cb);
        }).join(') || (') + ')';
    } else {
        return cb(op);
    }
}
exports.logicalExpr = logicalExpr;
/**
 * Delete nested property of an object, and delete the ancestors of the property if they become empty.
 */
function deleteNestedProperty(obj, orderedProps) {
    var isEmpty = true;
    while (orderedProps.length > 0 && isEmpty) {
        var o = obj;
        for (var i = 0; i < orderedProps.length - 1; i++) {
            o = o[orderedProps[i]];
        }
        delete o[orderedProps.pop()];
        if (exports.keys(o).length !== 0) {
            isEmpty = false;
        }
    }
}
exports.deleteNestedProperty = deleteNestedProperty;

},{"./logical":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/logical.js","json-stable-stringify":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/node_modules/json-stable-stringify/index.js","vega-util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/validate.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mark_1 = require("./mark");
var mark_2 = require("./mark");
var util_1 = require("./util");
/**
 * Required Encoding Channels for each mark type
 */
exports.DEFAULT_REQUIRED_CHANNEL_MAP = {
    text: ['text'],
    line: ['x', 'y'],
    area: ['x', 'y']
};
/**
 * Supported Encoding Channel for each mark type
 */
exports.DEFAULT_SUPPORTED_CHANNEL_TYPE = {
    bar: util_1.toSet(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),
    line: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'detail']),
    area: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'detail']),
    tick: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'detail']),
    circle: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),
    square: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),
    point: util_1.toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),
    text: util_1.toSet(['row', 'column', 'size', 'color', 'text']) // TODO(#724) revise
};
// TODO: consider if we should add validate method and
// requires ZSchema in the main vega-lite repo
/**
 * Further check if encoding mapping of a spec is invalid and
 * return error if it is invalid.
 *
 * This checks if
 * (1) all the required encoding channels for the mark type are specified
 * (2) all the specified encoding channels are supported by the mark type
 * @param  {[type]} spec [description]
 * @param  {RequiredChannelMap  = DefaultRequiredChannelMap}  requiredChannelMap
 * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap
 * @return {String} Return one reason why the encoding is invalid,
 *                  or null if the encoding is valid.
 */
function getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {
    if (requiredChannelMap === void 0) {
        requiredChannelMap = exports.DEFAULT_REQUIRED_CHANNEL_MAP;
    }
    if (supportedChannelMap === void 0) {
        supportedChannelMap = exports.DEFAULT_SUPPORTED_CHANNEL_TYPE;
    }
    var mark = mark_1.isMarkDef(spec.mark) ? spec.mark.type : spec.mark;
    var encoding = spec.encoding;
    var requiredChannels = requiredChannelMap[mark];
    var supportedChannels = supportedChannelMap[mark];
    for (var i in requiredChannels) {
        if (!(requiredChannels[i] in encoding)) {
            return 'Missing encoding channel \"' + requiredChannels[i] + '\" for mark \"' + mark + '\"';
        }
    }
    for (var channel in encoding) {
        if (!supportedChannels[channel]) {
            return 'Encoding channel \"' + channel + '\" is not supported by mark type \"' + mark + '\"';
        }
    }
    if (mark === mark_2.BAR && !encoding.x && !encoding.y) {
        return 'Missing both x and y for bar';
    }
    return null;
}
exports.getEncodingMappingError = getEncodingMappingError;

},{"./mark":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/mark.js","./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/vega.schema.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
function isVgSignalRef(o) {
    return !!o['signal'];
}
exports.isVgSignalRef = isVgSignalRef;
function isVgRangeStep(range) {
    return !!range['step'];
}
exports.isVgRangeStep = isVgRangeStep;
function isDataRefUnionedDomain(domain) {
    if (!util_1.isArray(domain)) {
        return 'fields' in domain && !('data' in domain);
    }
    return false;
}
exports.isDataRefUnionedDomain = isDataRefUnionedDomain;
function isFieldRefUnionDomain(domain) {
    if (!util_1.isArray(domain)) {
        return 'fields' in domain && 'data' in domain;
    }
    return false;
}
exports.isFieldRefUnionDomain = isFieldRefUnionDomain;
function isDataRefDomain(domain) {
    if (!util_1.isArray(domain)) {
        return 'field' in domain && 'data' in domain;
    }
    return false;
}
exports.isDataRefDomain = isDataRefDomain;
function isSignalRefDomain(domain) {
    if (!util_1.isArray(domain)) {
        return 'signal' in domain;
    }
    return false;
}
exports.isSignalRefDomain = isSignalRefDomain;

},{"./util":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/build/src/util.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-lite/node_modules/json-stable-stringify/index.js":[function(require,module,exports){
var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');

module.exports = function (obj, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var space = opts.space || '';
    if (typeof space === 'number') space = Array(space+1).join(' ');
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
    var replacer = opts.replacer || function(key, value) { return value; };

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (parent, key, node, level) {
        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
        var colonSeparator = space ? ': ' : ':';

        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        node = replacer.call(parent, key, node);

        if (node === undefined) {
            return;
        }
        if (typeof node !== 'object' || node === null) {
            return json.stringify(node);
        }
        if (isArray(node)) {
            var out = [];
            for (var i = 0; i < node.length; i++) {
                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
                out.push(indent + space + item);
            }
            return '[' + out.join(',') + indent + ']';
        }
        else {
            if (seen.indexOf(node) !== -1) {
                if (cycles) return json.stringify('__cycle__');
                throw new TypeError('Converting circular structure to JSON');
            }
            else seen.push(node);

            var keys = objectKeys(node).sort(cmp && cmp(node));
            var out = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var value = stringify(node, key, node[key], level+1);

                if(!value) continue;

                var keyValue = json.stringify(key)
                    + colonSeparator
                    + value;
                ;
                out.push(indent + space + keyValue);
            }
            seen.splice(seen.indexOf(node), 1);
            return '{' + out.join(',') + indent + '}';
        }
    })({ '': obj }, '', obj, 0);
};

var isArray = Array.isArray || function (x) {
    return {}.toString.call(x) === '[object Array]';
};

var objectKeys = Object.keys || function (obj) {
    var has = Object.prototype.hasOwnProperty || function () { return true };
    var keys = [];
    for (var key in obj) {
        if (has.call(obj, key)) keys.push(key);
    }
    return keys;
};

},{"jsonify":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/jsonify/index.js"}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega-util/build/vega-util.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (global, factory) {
  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.vega = global.vega || {});
})(undefined, function (exports) {
  'use strict';

  var accessor = function accessor(fn, fields, name) {
    fn.fields = fields || [];
    fn.fname = name;
    return fn;
  };

  function accessorName(fn) {
    return fn == null ? null : fn.fname;
  }

  function accessorFields(fn) {
    return fn == null ? null : fn.fields;
  }

  var error = function error(message) {
    throw Error(message);
  };

  var splitAccessPath = function splitAccessPath(p) {
    var path = [],
        q = null,
        b = 0,
        n = p.length,
        s = '',
        i,
        j,
        c;

    p = p + '';

    function push() {
      path.push(s + p.substring(i, j));
      s = '';
      i = j + 1;
    }

    for (i = j = 0; j < n; ++j) {
      c = p[j];
      if (c === '\\') {
        s += p.substring(i, j);
        i = ++j;
      } else if (c === q) {
        push();
        q = null;
        b = -1;
      } else if (q) {
        continue;
      } else if (i === b && c === '"') {
        i = j + 1;
        q = c;
      } else if (i === b && c === "'") {
        i = j + 1;
        q = c;
      } else if (c === '.' && !b) {
        if (j > i) {
          push();
        } else {
          i = j + 1;
        }
      } else if (c === '[') {
        if (j > i) push();
        b = i = j + 1;
      } else if (c === ']') {
        if (!b) error('Access path missing open bracket: ' + p);
        if (b > 0) push();
        b = 0;
        i = j + 1;
      }
    }

    if (b) error('Access path missing closing bracket: ' + p);
    if (q) error('Access path missing closing quote: ' + p);

    if (j > i) {
      j++;
      push();
    }

    return path;
  };

  var isArray = Array.isArray;

  var isObject = function isObject(_) {
    return _ === Object(_);
  };

  var isString = function isString(_) {
    return typeof _ === 'string';
  };

  function $(x) {
    return isArray(x) ? '[' + x.map($) + ']' : isObject(x) || isString(x) ?
    // Output valid JSON and JS source strings.
    // See http://timelessrepo.com/json-isnt-a-javascript-subset
    JSON.stringify(x).replace('\u2028', '\\u2028').replace('\u2029', '\\u2029') : x;
  }

  var field = function field(_field, name) {
    var path = splitAccessPath(_field),
        code = 'return _[' + path.map($).join('][') + '];';

    return accessor(Function('_', code), [_field = path.length === 1 ? path[0] : _field], name || _field);
  };

  var empty = [];

  var id = field('id');

  var identity = accessor(function (_) {
    return _;
  }, empty, 'identity');

  var zero = accessor(function () {
    return 0;
  }, empty, 'zero');

  var one = accessor(function () {
    return 1;
  }, empty, 'one');

  var truthy = accessor(function () {
    return true;
  }, empty, 'true');

  var falsy = accessor(function () {
    return false;
  }, empty, 'false');

  function log(method, level, input) {
    var args = [level].concat([].slice.call(input));
    console[method].apply(console, args); // eslint-disable-line no-console
  }

  var None = 0;
  var Error$1 = 1;
  var Warn = 2;
  var Info = 3;
  var Debug = 4;

  var logger = function logger(_) {
    var _level = _ || None;
    return {
      level: function level(_) {
        if (arguments.length) {
          _level = +_;
          return this;
        } else {
          return _level;
        }
      },
      error: function error() {
        if (_level >= Error$1) log('error', 'ERROR', arguments);
        return this;
      },
      warn: function warn() {
        if (_level >= Warn) log('warn', 'WARN', arguments);
        return this;
      },
      info: function info() {
        if (_level >= Info) log('log', 'INFO', arguments);
        return this;
      },
      debug: function debug() {
        if (_level >= Debug) log('log', 'DEBUG', arguments);
        return this;
      }
    };
  };

  var array = function array(_) {
    return _ != null ? isArray(_) ? _ : [_] : [];
  };

  var isFunction = function isFunction(_) {
    return typeof _ === 'function';
  };

  var compare = function compare(fields, orders) {
    var idx = [],
        cmp = (fields = array(fields)).map(function (f, i) {
      if (f == null) {
        return null;
      } else {
        idx.push(i);
        return isFunction(f) ? f : splitAccessPath(f).map($).join('][');
      }
    }),
        n = idx.length - 1,
        ord = array(orders),
        code = 'var u,v;return ',
        i,
        j,
        f,
        u,
        v,
        d,
        t,
        lt,
        gt;

    if (n < 0) return null;

    for (j = 0; j <= n; ++j) {
      i = idx[j];
      f = cmp[i];

      if (isFunction(f)) {
        d = 'f' + i;
        u = '(u=this.' + d + '(a))';
        v = '(v=this.' + d + '(b))';
        (t = t || {})[d] = f;
      } else {
        u = '(u=a[' + f + '])';
        v = '(v=b[' + f + '])';
      }

      d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';

      if (ord[i] !== 'descending') {
        gt = 1;
        lt = -1;
      } else {
        gt = -1;
        lt = 1;
      }

      code += '(' + u + '<' + v + '||u==null)&&v!=null?' + lt + ':(u>v||v==null)&&u!=null?' + gt + ':' + d + '!==u&&v===v?' + lt + ':v!==v&&u===u?' + gt + (i < n ? ':' : ':0');
    }

    f = Function('a', 'b', code + ';');
    if (t) f = f.bind(t);

    fields = fields.reduce(function (map, field) {
      if (isFunction(field)) {
        (accessorFields(field) || []).forEach(function (_) {
          map[_] = 1;
        });
      } else if (field != null) {
        map[field + ''] = 1;
      }
      return map;
    }, {});

    return accessor(f, Object.keys(fields));
  };

  var constant = function constant(_) {
    return isFunction(_) ? _ : function () {
      return _;
    };
  };

  var debounce = function debounce(delay, handler) {
    var tid, evt;

    function callback() {
      handler(evt);
      tid = evt = null;
    }

    return function (e) {
      evt = e;
      if (tid) clearTimeout(tid);
      tid = setTimeout(callback, delay);
    };
  };

  var extend = function extend(_) {
    for (var x, k, i = 1, len = arguments.length; i < len; ++i) {
      x = arguments[i];
      for (k in x) {
        _[k] = x[k];
      }
    }
    return _;
  };

  var extentIndex = function extentIndex(array, f) {
    var i = -1,
        n = array.length,
        a,
        b,
        c,
        u,
        v;

    if (f == null) {
      while (++i < n) {
        b = array[i];
        if (b != null && b >= b) {
          a = c = b;
          break;
        }
      }
      u = v = i;
      while (++i < n) {
        b = array[i];
        if (b != null) {
          if (a > b) {
            a = b;
            u = i;
          }
          if (c < b) {
            c = b;
            v = i;
          }
        }
      }
    } else {
      while (++i < n) {
        b = f(array[i], i, array);
        if (b != null && b >= b) {
          a = c = b;
          break;
        }
      }
      u = v = i;
      while (++i < n) {
        b = f(array[i], i, array);
        if (b != null) {
          if (a > b) {
            a = b;
            u = i;
          }
          if (c < b) {
            c = b;
            v = i;
          }
        }
      }
    }

    return [u, v];
  };

  var NULL = {};

  var fastmap = function fastmap(input) {
    var obj = {},
        map,
        _test;

    function has(key) {
      return obj.hasOwnProperty(key) && obj[key] !== NULL;
    }

    map = {
      size: 0,
      empty: 0,
      object: obj,
      has: has,
      get: function get(key) {
        return has(key) ? obj[key] : undefined;
      },
      set: function set(key, value) {
        if (!has(key)) {
          ++map.size;
          if (obj[key] === NULL) --map.empty;
        }
        obj[key] = value;
        return this;
      },
      delete: function _delete(key) {
        if (has(key)) {
          --map.size;
          ++map.empty;
          obj[key] = NULL;
        }
        return this;
      },
      clear: function clear() {
        map.size = map.empty = 0;
        map.object = obj = {};
      },
      test: function test(_) {
        if (arguments.length) {
          _test = _;
          return map;
        } else {
          return _test;
        }
      },
      clean: function clean() {
        var next = {},
            size = 0,
            key,
            value;
        for (key in obj) {
          value = obj[key];
          if (value !== NULL && (!_test || !_test(value))) {
            next[key] = value;
            ++size;
          }
        }
        map.size = size;
        map.empty = 0;
        map.object = obj = next;
      }
    };

    if (input) Object.keys(input).forEach(function (key) {
      map.set(key, input[key]);
    });

    return map;
  };

  var inherits = function inherits(child, parent) {
    var proto = child.prototype = Object.create(parent.prototype);
    proto.constructor = child;
    return proto;
  };

  var isBoolean = function isBoolean(_) {
    return typeof _ === 'boolean';
  };

  var isDate = function isDate(_) {
    return Object.prototype.toString.call(_) === '[object Date]';
  };

  var isNumber = function isNumber(_) {
    return typeof _ === 'number';
  };

  var isRegExp = function isRegExp(_) {
    return Object.prototype.toString.call(_) === '[object RegExp]';
  };

  var key = function key(fields) {
    fields = fields ? array(fields) : fields;
    var fn = !(fields && fields.length) ? function () {
      return '';
    } : Function('_', 'return \'\'+' + fields.map(function (f) {
      return '_[' + splitAccessPath(f).map($).join('][') + ']';
    }).join('+\'|\'+') + ';');
    return accessor(fn, fields, 'key');
  };

  var merge = function merge(compare, array0, array1, output) {
    var n0 = array0.length,
        n1 = array1.length;

    if (!n1) return array0;
    if (!n0) return array1;

    var merged = output || new array0.constructor(n0 + n1),
        i0 = 0,
        i1 = 0,
        i = 0;

    for (; i0 < n0 && i1 < n1; ++i) {
      merged[i] = compare(array0[i0], array1[i1]) > 0 ? array1[i1++] : array0[i0++];
    }

    for (; i0 < n0; ++i0, ++i) {
      merged[i] = array0[i0];
    }

    for (; i1 < n1; ++i1, ++i) {
      merged[i] = array1[i1];
    }

    return merged;
  };

  var repeat = function repeat(str, reps) {
    var s = '';
    while (--reps >= 0) {
      s += str;
    }return s;
  };

  var pad = function pad(str, length, padchar, align) {
    var c = padchar || ' ',
        s = str + '',
        n = length - s.length;

    return n <= 0 ? s : align === 'left' ? repeat(c, n) + s : align === 'center' ? repeat(c, ~~(n / 2)) + s + repeat(c, Math.ceil(n / 2)) : s + repeat(c, n);
  };

  var peek = function peek(array) {
    return array[array.length - 1];
  };

  var toBoolean = function toBoolean(_) {
    return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;
  };

  function defaultParser(_) {
    return isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);
  }

  var toDate = function toDate(_, parser) {
    parser = parser || defaultParser;
    return _ == null || _ === '' ? null : parser(_);
  };

  var toNumber = function toNumber(_) {
    return _ == null || _ === '' ? null : +_;
  };

  var toString = function toString(_) {
    return _ == null || _ === '' ? null : _ + '';
  };

  var toSet = function toSet(_) {
    for (var s = {}, i = 0, n = _.length; i < n; ++i) {
      s[_[i]] = 1;
    }return s;
  };

  var truncate = function truncate(str, length, align, ellipsis) {
    var e = ellipsis != null ? ellipsis : '\u2026',
        s = str + '',
        n = s.length,
        l = Math.max(0, length - e.length);

    return n <= length ? s : align === 'left' ? e + s.slice(n - l) : align === 'center' ? s.slice(0, Math.ceil(l / 2)) + e + s.slice(n - ~~(l / 2)) : s.slice(0, l) + e;
  };

  var visitArray = function visitArray(array, filter, visitor) {
    if (array) {
      var i = 0,
          n = array.length,
          t;
      if (filter) {
        for (; i < n; ++i) {
          if (t = filter(array[i])) visitor(t, i, array);
        }
      } else {
        array.forEach(visitor);
      }
    }
  };

  exports.accessor = accessor;
  exports.accessorName = accessorName;
  exports.accessorFields = accessorFields;
  exports.id = id;
  exports.identity = identity;
  exports.zero = zero;
  exports.one = one;
  exports.truthy = truthy;
  exports.falsy = falsy;
  exports.logger = logger;
  exports.None = None;
  exports.Error = Error$1;
  exports.Warn = Warn;
  exports.Info = Info;
  exports.Debug = Debug;
  exports.array = array;
  exports.compare = compare;
  exports.constant = constant;
  exports.debounce = debounce;
  exports.error = error;
  exports.extend = extend;
  exports.extentIndex = extentIndex;
  exports.fastmap = fastmap;
  exports.field = field;
  exports.inherits = inherits;
  exports.isArray = isArray;
  exports.isBoolean = isBoolean;
  exports.isDate = isDate;
  exports.isFunction = isFunction;
  exports.isNumber = isNumber;
  exports.isObject = isObject;
  exports.isRegExp = isRegExp;
  exports.isString = isString;
  exports.key = key;
  exports.merge = merge;
  exports.pad = pad;
  exports.peek = peek;
  exports.repeat = repeat;
  exports.splitAccessPath = splitAccessPath;
  exports.stringValue = $;
  exports.toBoolean = toBoolean;
  exports.toDate = toDate;
  exports.toNumber = toNumber;
  exports.toString = toString;
  exports.toSet = toSet;
  exports.truncate = truncate;
  exports.visitArray = visitArray;

  Object.defineProperty(exports, '__esModule', { value: true });
});

},{}],"/Users/mathisonian/projects/idyll/examples/csv/node_modules/vega/build/vega.js":[function(require,module,exports){
(function (Buffer){
'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};(function(global,factory){(typeof exports==='undefined'?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):factory(global.vega=global.vega||{});})(undefined,function(exports){'use strict';var accessor=function accessor(fn,fields,name){fn.fields=fields||[];fn.fname=name;return fn;};function accessorName(fn){return fn==null?null:fn.fname;}function accessorFields(fn){return fn==null?null:fn.fields;}var error$1=function error$1(message){throw Error(message);};var splitAccessPath=function splitAccessPath(p){var path=[],q=null,b=0,n=p.length,s='',i,j,c;p=p+'';function push(){path.push(s+p.substring(i,j));s='';i=j+1;}for(i=j=0;j<n;++j){c=p[j];if(c==='\\'){s+=p.substring(i,j);i=++j;}else if(c===q){push();q=null;b=-1;}else if(q){continue;}else if(i===b&&c==='"'){i=j+1;q=c;}else if(i===b&&c==="'"){i=j+1;q=c;}else if(c==='.'&&!b){if(j>i){push();}else{i=j+1;}}else if(c==='['){if(j>i)push();b=i=j+1;}else if(c===']'){if(!b)error$1('Access path missing open bracket: '+p);if(b>0)push();b=0;i=j+1;}}if(b)error$1('Access path missing closing bracket: '+p);if(q)error$1('Access path missing closing quote: '+p);if(j>i){j++;push();}return path;};var isArray=Array.isArray;var isObject=function isObject(_){return _===Object(_);};var isString=function isString(_){return typeof _==='string';};function $(x){return isArray(x)?'['+x.map($)+']':isObject(x)||isString(x)?// Output valid JSON and JS source strings.
// See http://timelessrepo.com/json-isnt-a-javascript-subset
JSON.stringify(x).replace('\u2028','\\u2028').replace('\u2029','\\u2029'):x;}var field=function field(_field,name){var path=splitAccessPath(_field),code='return _['+path.map($).join('][')+'];';return accessor(Function('_',code),[_field=path.length===1?path[0]:_field],name||_field);};var empty=[];var id=field('id');var identity=accessor(function(_){return _;},empty,'identity');var zero=accessor(function(){return 0;},empty,'zero');var one=accessor(function(){return 1;},empty,'one');var truthy=accessor(function(){return true;},empty,'true');var falsy=accessor(function(){return false;},empty,'false');function log(method,level,input){var args=[level].concat([].slice.call(input));console[method].apply(console,args);// eslint-disable-line no-console
}var None=0;var Error$1=1;var Warn=2;var Info=3;var Debug=4;var logger=function logger(_){var _level=_||None;return{level:function level(_){if(arguments.length){_level=+_;return this;}else{return _level;}},error:function error(){if(_level>=Error$1)log('error','ERROR',arguments);return this;},warn:function warn(){if(_level>=Warn)log('warn','WARN',arguments);return this;},info:function info(){if(_level>=Info)log('log','INFO',arguments);return this;},debug:function debug(){if(_level>=Debug)log('log','DEBUG',arguments);return this;}};};var array=function array(_){return _!=null?isArray(_)?_:[_]:[];};var isFunction=function isFunction(_){return typeof _==='function';};var compare=function compare(fields,orders){var idx=[],cmp=(fields=array(fields)).map(function(f,i){if(f==null){return null;}else{idx.push(i);return isFunction(f)?f:splitAccessPath(f).map($).join('][');}}),n=idx.length-1,ord=array(orders),code='var u,v;return ',i,j,f,u,v,d,t,lt,gt;if(n<0)return null;for(j=0;j<=n;++j){i=idx[j];f=cmp[i];if(isFunction(f)){d='f'+i;u='(u=this.'+d+'(a))';v='(v=this.'+d+'(b))';(t=t||{})[d]=f;}else{u='(u=a['+f+'])';v='(v=b['+f+'])';}d='((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';if(ord[i]!=='descending'){gt=1;lt=-1;}else{gt=-1;lt=1;}code+='('+u+'<'+v+'||u==null)&&v!=null?'+lt+':(u>v||v==null)&&u!=null?'+gt+':'+d+'!==u&&v===v?'+lt+':v!==v&&u===u?'+gt+(i<n?':':':0');}f=Function('a','b',code+';');if(t)f=f.bind(t);fields=fields.reduce(function(map,field){if(isFunction(field)){(accessorFields(field)||[]).forEach(function(_){map[_]=1;});}else if(field!=null){map[field+'']=1;}return map;},{});return accessor(f,Object.keys(fields));};var constant=function constant(_){return isFunction(_)?_:function(){return _;};};var debounce=function debounce(delay,handler){var tid,evt;function callback(){handler(evt);tid=evt=null;}return function(e){evt=e;if(tid)clearTimeout(tid);tid=setTimeout(callback,delay);};};var extend=function extend(_){for(var x,k,i=1,len=arguments.length;i<len;++i){x=arguments[i];for(k in x){_[k]=x[k];}}return _;};var extentIndex=function extentIndex(array,f){var i=-1,n=array.length,a,b,c,u,v;if(f==null){while(++i<n){b=array[i];if(b!=null&&b>=b){a=c=b;break;}}u=v=i;while(++i<n){b=array[i];if(b!=null){if(a>b){a=b;u=i;}if(c<b){c=b;v=i;}}}}else{while(++i<n){b=f(array[i],i,array);if(b!=null&&b>=b){a=c=b;break;}}u=v=i;while(++i<n){b=f(array[i],i,array);if(b!=null){if(a>b){a=b;u=i;}if(c<b){c=b;v=i;}}}}return[u,v];};var NULL={};var fastmap=function fastmap(input){var obj={},map,_test;function has(key){return obj.hasOwnProperty(key)&&obj[key]!==NULL;}map={size:0,empty:0,object:obj,has:has,get:function get(key){return has(key)?obj[key]:undefined;},set:function set(key,value){if(!has(key)){++map.size;if(obj[key]===NULL)--map.empty;}obj[key]=value;return this;},delete:function _delete(key){if(has(key)){--map.size;++map.empty;obj[key]=NULL;}return this;},clear:function clear(){map.size=map.empty=0;map.object=obj={};},test:function test(_){if(arguments.length){_test=_;return map;}else{return _test;}},clean:function clean(){var next={},size=0,key,value;for(key in obj){value=obj[key];if(value!==NULL&&(!_test||!_test(value))){next[key]=value;++size;}}map.size=size;map.empty=0;map.object=obj=next;}};if(input)Object.keys(input).forEach(function(key){map.set(key,input[key]);});return map;};var inherits=function inherits(child,parent){var proto=child.prototype=Object.create(parent.prototype);proto.constructor=child;return proto;};var isBoolean=function isBoolean(_){return typeof _==='boolean';};var isDate=function isDate(_){return Object.prototype.toString.call(_)==='[object Date]';};var isNumber=function isNumber(_){return typeof _==='number';};var isRegExp=function isRegExp(_){return Object.prototype.toString.call(_)==='[object RegExp]';};var key=function key(fields){fields=fields?array(fields):fields;var fn=!(fields&&fields.length)?function(){return'';}:Function('_','return \'\'+'+fields.map(function(f){return'_['+splitAccessPath(f).map($).join('][')+']';}).join('+\'|\'+')+';');return accessor(fn,fields,'key');};var merge=function merge(compare,array0,array1,output){var n0=array0.length,n1=array1.length;if(!n1)return array0;if(!n0)return array1;var merged=output||new array0.constructor(n0+n1),i0=0,i1=0,i=0;for(;i0<n0&&i1<n1;++i){merged[i]=compare(array0[i0],array1[i1])>0?array1[i1++]:array0[i0++];}for(;i0<n0;++i0,++i){merged[i]=array0[i0];}for(;i1<n1;++i1,++i){merged[i]=array1[i1];}return merged;};var repeat=function repeat(str,reps){var s='';while(--reps>=0){s+=str;}return s;};var pad=function pad(str,length,padchar,align){var c=padchar||' ',s=str+'',n=length-s.length;return n<=0?s:align==='left'?repeat(c,n)+s:align==='center'?repeat(c,~~(n/2))+s+repeat(c,Math.ceil(n/2)):s+repeat(c,n);};var peek=function peek(array){return array[array.length-1];};var toBoolean=function toBoolean(_){return _==null||_===''?null:!_||_==='false'||_==='0'?false:!!_;};function defaultParser(_){return isNumber(_)?_:isDate(_)?_:Date.parse(_);}var toDate=function toDate(_,parser){parser=parser||defaultParser;return _==null||_===''?null:parser(_);};var toNumber=function toNumber(_){return _==null||_===''?null:+_;};var toString=function toString(_){return _==null||_===''?null:_+'';};var toSet=function toSet(_){for(var s={},i=0,n=_.length;i<n;++i){s[_[i]]=1;}return s;};var truncate=function truncate(str,length,align,ellipsis){var e=ellipsis!=null?ellipsis:'\u2026',s=str+'',n=s.length,l=Math.max(0,length-e.length);return n<=length?s:align==='left'?e+s.slice(n-l):align==='center'?s.slice(0,Math.ceil(l/2))+e+s.slice(n-~~(l/2)):s.slice(0,l)+e;};var visitArray=function visitArray(array,filter,visitor){if(array){var i=0,n=array.length,t;if(filter){for(;i<n;++i){if(t=filter(array[i]))visitor(t,i,array);}}else{array.forEach(visitor);}}};function UniqueList(idFunc){var $$$1=idFunc||identity,list=[],ids={};list.add=function(_){var id$$1=$$$1(_);if(!ids[id$$1]){ids[id$$1]=1;list.push(_);}return list;};list.remove=function(_){var id$$1=$$$1(_),idx;if(ids[id$$1]){ids[id$$1]=0;if((idx=list.indexOf(_))>=0){list.splice(idx,1);}}return list;};return list;}var TUPLE_ID_KEY=Symbol('vega_id');var TUPLE_ID=1;/**
 * Resets the internal tuple id counter to one.
 *//**
 * Checks if an input value is a registered tuple.
 * @param {*} t - The value to check.
 * @return {boolean} True if the input is a tuple, false otherwise.
 */function isTuple(t){return!!(t&&tupleid(t));}/**
 * Returns the id of a tuple.
 * @param {object} t - The input tuple.
 * @return {*} the tuple id.
 */function tupleid(t){return t[TUPLE_ID_KEY];}/**
 * Sets the id of a tuple.
 * @param {object} t - The input tuple.
 * @param {*} id - The id value to set.
 * @return {object} the input tuple.
 */function setid(t,id){t[TUPLE_ID_KEY]=id;return t;}/**
 * Ingest an object or value as a data tuple.
 * If the input value is an object, an id field will be added to it. For
 * efficiency, the input object is modified directly. A copy is not made.
 * If the input value is a literal, it will be wrapped in a new object
 * instance, with the value accessible as the 'data' property.
 * @param datum - The value to ingest.
 * @return {object} The ingested data tuple.
 */function ingest(datum){var t=datum===Object(datum)?datum:{data:datum};return tupleid(t)?t:setid(t,TUPLE_ID++);}/**
 * Given a source tuple, return a derived copy.
 * @param {object} t - The source tuple.
 * @return {object} The derived tuple.
 */function derive(t){return rederive(t,ingest({}));}/**
 * Rederive a derived tuple by copying values from the source tuple.
 * @param {object} t - The source tuple.
 * @param {object} d - The derived tuple.
 * @return {object} The derived tuple.
 */function rederive(t,d){for(var k in t){d[k]=t[k];}return d;}/**
 * Replace an existing tuple with a new tuple.
 * @param {object} t - The existing data tuple.
 * @param {object} d - The new tuple that replaces the old.
 * @return {object} The new tuple.
 */function replace(t,d){return setid(d,tupleid(t));}function isChangeSet(v){return v&&v.constructor===changeset;}function changeset(){var add=[],// insert tuples
rem=[],// remove tuples
mod=[],// modify tuples
remp=[],// remove by predicate
modp=[],// modify by predicate
_reflow=false;return{constructor:changeset,insert:function insert(t){var d=array(t),i=0,n=d.length;for(;i<n;++i){add.push(d[i]);}return this;},remove:function remove(t){var a=isFunction(t)?remp:rem,d=array(t),i=0,n=d.length;for(;i<n;++i){a.push(d[i]);}return this;},modify:function modify(t,field$$1,value){var m={field:field$$1,value:constant(value)};if(isFunction(t)){m.filter=t;modp.push(m);}else{m.tuple=t;mod.push(m);}return this;},encode:function encode(t,set){if(isFunction(t))modp.push({filter:t,field:set});else mod.push({tuple:t,field:set});return this;},reflow:function reflow(){_reflow=true;return this;},pulse:function pulse(_pulse,tuples){var out,i,n,m,f,t,id$$1;// add
for(i=0,n=add.length;i<n;++i){_pulse.add.push(ingest(add[i]));}// remove
for(out={},i=0,n=rem.length;i<n;++i){t=rem[i];out[tupleid(t)]=t;}for(i=0,n=remp.length;i<n;++i){f=remp[i];tuples.forEach(function(t){if(f(t))out[tupleid(t)]=t;});}for(id$$1 in out){_pulse.rem.push(out[id$$1]);}// modify
function modify(t,f,v){if(v)t[f]=v(t);else _pulse.encode=f;if(!_reflow)out[tupleid(t)]=t;}for(out={},i=0,n=mod.length;i<n;++i){m=mod[i];modify(m.tuple,m.field,m.value);_pulse.modifies(m.field);}for(i=0,n=modp.length;i<n;++i){m=modp[i];f=m.filter;tuples.forEach(function(t){if(f(t))modify(t,m.field,m.value);});_pulse.modifies(m.field);}// reflow?
if(_reflow){_pulse.mod=rem.length||remp.length?tuples.filter(function(t){return out.hasOwnProperty(tupleid(t));}):tuples.slice();}else{for(id$$1 in out){_pulse.mod.push(out[id$$1]);}}return _pulse;}};}var CACHE='_:mod:_';/**
 * Hash that tracks modifications to assigned values.
 * Callers *must* use the set method to update values.
 */function Parameters(){Object.defineProperty(this,CACHE,{writable:true,value:{}});}var prototype$2=Parameters.prototype;/**
 * Set a parameter value. If the parameter value changes, the parameter
 * will be recorded as modified.
 * @param {string} name - The parameter name.
 * @param {number} index - The index into an array-value parameter. Ignored if
 *   the argument is undefined, null or less than zero.
 * @param {*} value - The parameter value to set.
 * @param {boolean} [force=false] - If true, records the parameter as modified
 *   even if the value is unchanged.
 * @return {Parameters} - This parameter object.
 */prototype$2.set=function(name,index,value,force){var o=this,v=o[name],mod=o[CACHE];if(index!=null&&index>=0){if(v[index]!==value||force){v[index]=value;mod[index+':'+name]=-1;mod[name]=-1;}}else if(v!==value||force){o[name]=value;mod[name]=isArray(value)?1+value.length:-1;}return o;};/**
 * Tests if one or more parameters has been modified. If invoked with no
 * arguments, returns true if any parameter value has changed. If the first
 * argument is array, returns trues if any parameter name in the array has
 * changed. Otherwise, tests if the given name and optional array index has
 * changed.
 * @param {string} name - The parameter name to test.
 * @param {number} [index=undefined] - The parameter array index to test.
 * @return {boolean} - Returns true if a queried parameter was modified.
 */prototype$2.modified=function(name,index){var mod=this[CACHE],k;if(!arguments.length){for(k in mod){if(mod[k])return true;}return false;}else if(isArray(name)){for(k=0;k<name.length;++k){if(mod[name[k]])return true;}return false;}return index!=null&&index>=0?index+1<mod[name]||!!mod[index+':'+name]:!!mod[name];};/**
 * Clears the modification records. After calling this method,
 * all parameters are considered unmodified.
 */prototype$2.clear=function(){this[CACHE]={};return this;};var OP_ID=0;var PULSE='pulse';var NO_PARAMS=new Parameters();// Boolean Flags
var SKIP=1;var MODIFIED=2;/**
 * An Operator is a processing node in a dataflow graph.
 * Each operator stores a value and an optional value update function.
 * Operators can accept a hash of named parameters. Parameter values can
 * either be direct (JavaScript literals, arrays, objects) or indirect
 * (other operators whose values will be pulled dynamically). Operators
 * included as parameters will have this operator added as a dependency.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {function(object, Pulse)} [update] - An update function. Upon
 *   evaluation of this operator, the update function will be invoked and the
 *   return value will be used as the new value of this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @see parameters
 */function Operator(init,update,params,react){this.id=++OP_ID;this.value=init;this.stamp=-1;this.rank=-1;this.qrank=-1;this.flags=0;if(update){this._update=update;}if(params)this.parameters(params,react);}var prototype$1=Operator.prototype;/**
 * Returns a list of target operators dependent on this operator.
 * If this list does not exist, it is created and then returned.
 * @return {UniqueList}
 */prototype$1.targets=function(){return this._targets||(this._targets=UniqueList(id));};/**
 * Sets the value of this operator.
 * @param {*} value - the value to set.
 * @return {Number} Returns 1 if the operator value has changed
 *   according to strict equality, returns 0 otherwise.
 */prototype$1.set=function(value){if(this.value!==value){this.value=value;return 1;}else{return 0;}};function flag(bit){return function(state){var f=this.flags;if(arguments.length===0)return!!(f&bit);this.flags=state?f|bit:f&~bit;return this;};}/**
 * Indicates that operator evaluation should be skipped on the next pulse.
 * This operator will still propagate incoming pulses, but its update function
 * will not be invoked. The skip flag is reset after every pulse, so calling
 * this method will affect processing of the next pulse only.
 */prototype$1.skip=flag(SKIP);/**
 * Indicates that this operator's value has been modified on its most recent
 * pulse. Normally modification is checked via strict equality; however, in
 * some cases it is more efficient to update the internal state of an object.
 * In those cases, the modified flag can be used to trigger propagation. Once
 * set, the modification flag persists across pulses until unset. The flag can
 * be used with the last timestamp to test if a modification is recent.
 */prototype$1.modified=flag(MODIFIED);/**
 * Sets the parameters for this operator. The parameter values are analyzed for
 * operator instances. If found, this operator will be added as a dependency
 * of the parameterizing operator. Operator values are dynamically marshalled
 * from each operator parameter prior to evaluation. If a parameter value is
 * an array, the array will also be searched for Operator instances. However,
 * the search does not recurse into sub-arrays or object properties.
 * @param {object} params - A hash of operator parameters.
 * @param {boolean} [react=true] - A flag indicating if this operator should
 *   automatically update (react) when parameter values change. In other words,
 *   this flag determines if the operator registers itself as a listener on
 *   any upstream operators included in the parameters.
 * @return {Operator[]} - An array of upstream dependencies.
 */prototype$1.parameters=function(params,react){react=react!==false;var self=this,argval=self._argval=self._argval||new Parameters(),argops=self._argops=self._argops||[],deps=[],name,value,n,i;function add(name,index,value){if(value instanceof Operator){if(value!==self){if(react)value.targets().add(self);deps.push(value);}argops.push({op:value,name:name,index:index});}else{argval.set(name,index,value);}}for(name in params){value=params[name];if(name===PULSE){array(value).forEach(function(op){if(!(op instanceof Operator)){error$1('Pulse parameters must be operator instances.');}else if(op!==self){op.targets().add(self);deps.push(op);}});self.source=value;}else if(isArray(value)){argval.set(name,-1,Array(n=value.length));for(i=0;i<n;++i){add(name,i,value[i]);}}else{add(name,-1,value);}}this.marshall().clear();// initialize values
return deps;};/**
 * Internal method for marshalling parameter values.
 * Visits each operator dependency to pull the latest value.
 * @return {Parameters} A Parameters object to pass to the update function.
 */prototype$1.marshall=function(stamp){var argval=this._argval||NO_PARAMS,argops=this._argops,item,i,n,op,mod;if(argops&&(n=argops.length)){for(i=0;i<n;++i){item=argops[i];op=item.op;mod=op.modified()&&op.stamp===stamp;argval.set(item.name,item.index,op.value,mod);}}return argval;};/**
 * Delegate method to perform operator processing.
 * Subclasses can override this method to perform custom processing.
 * By default, it marshalls parameters and calls the update function
 * if that function is defined. If the update function does not
 * change the operator value then StopPropagation is returned.
 * If no update function is defined, this method does nothing.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return The output pulse or StopPropagation. A falsy return value
 *   (including undefined) will let the input pulse pass through.
 */prototype$1.evaluate=function(pulse){if(this._update){var params=this.marshall(pulse.stamp),v=this._update(params,pulse);params.clear();if(v!==this.value){this.value=v;}else if(!this.modified()){return pulse.StopPropagation;}}};/**
 * Run this operator for the current pulse. If this operator has already
 * been run at (or after) the pulse timestamp, returns StopPropagation.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */prototype$1.run=function(pulse){if(pulse.stamp<=this.stamp)return pulse.StopPropagation;var rv;if(this.skip()){this.skip(false);rv=0;}else{rv=this.evaluate(pulse);}this.stamp=pulse.stamp;this.pulse=rv;return rv||pulse;};/**
 * Add an operator to the dataflow graph. This function accepts a
 * variety of input argument types. The basic signature supports an
 * initial value, update function and parameters. If the first parameter
 * is an Operator instance, it will be added directly. If it is a
 * constructor for an Operator subclass, a new instance will be instantiated.
 * Otherwise, if the first parameter is a function instance, it will be used
 * as the update function and a null initial value is assumed.
 * @param {*} init - One of: the operator to add, the initial value of
 *   the operator, an operator class to instantiate, or an update function.
 * @param {function} [update] - The operator update function.
 * @param {object} [params] - The operator parameters.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @return {Operator} - The added operator.
 */var add=function add(init,update,params,react){var shift=1,op;if(init instanceof Operator){op=init;}else if(init&&init.prototype instanceof Operator){op=new init();}else if(isFunction(init)){op=new Operator(null,init);}else{shift=0;op=new Operator(init,update);}this.rank(op);if(shift){react=params;params=update;}if(params)this.connect(op,op.parameters(params,react));this.touch(op);return op;};/**
 * Connect a target operator as a dependent of source operators.
 * If necessary, this method will rerank the target operator and its
 * dependents to ensure propagation proceeds in a topologically sorted order.
 * @param {Operator} target - The target operator.
 * @param {Array<Operator>} - The source operators that should propagate
 *   to the target operator.
 */var connect=function connect(target,sources){var targetRank=target.rank,i,n;for(i=0,n=sources.length;i<n;++i){if(targetRank<sources[i].rank){this.rerank(target);return;}}};var STREAM_ID=0;/**
 * Models an event stream.
 * @constructor
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @param {function(Object)} [receive] - Event callback function to invoke
 *   upon receipt of a new event. Use to override standard event processing.
 */function EventStream(filter,apply,receive){this.id=++STREAM_ID;this.value=null;if(receive)this.receive=receive;if(filter)this._filter=filter;if(apply)this._apply=apply;}/**
 * Creates a new event stream instance with the provided
 * (optional) filter, apply and receive functions.
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @see EventStream
 */function stream(filter,apply,receive){return new EventStream(filter,apply,receive);}var prototype$3=EventStream.prototype;prototype$3._filter=truthy;prototype$3._apply=identity;prototype$3.targets=function(){return this._targets||(this._targets=UniqueList(id));};prototype$3.consume=function(_){if(!arguments.length)return!!this._consume;this._consume=!!_;return this;};prototype$3.receive=function(evt){if(this._filter(evt)){var val=this.value=this._apply(evt),trg=this._targets,n=trg?trg.length:0,i=0;for(;i<n;++i){trg[i].receive(val);}if(this._consume){evt.preventDefault();evt.stopPropagation();}}};prototype$3.filter=function(filter){var s=stream(filter);this.targets().add(s);return s;};prototype$3.apply=function(apply){var s=stream(null,apply);this.targets().add(s);return s;};prototype$3.merge=function(){var s=stream();this.targets().add(s);for(var i=0,n=arguments.length;i<n;++i){arguments[i].targets().add(s);}return s;};prototype$3.throttle=function(pause){var t=-1;return this.filter(function(){var now=Date.now();if(now-t>pause){t=now;return 1;}else{return 0;}});};prototype$3.debounce=function(delay){var s=stream();this.targets().add(stream(null,null,debounce(delay,function(e){var df=e.dataflow;s.receive(e);if(df&&df.run)df.run();})));return s;};prototype$3.between=function(a,b){var active=false;a.targets().add(stream(null,null,function(){active=true;}));b.targets().add(stream(null,null,function(){active=false;}));return this.filter(function(){return active;});};/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor. The input must
 *  support the addEventListener method.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @param {function(object): *} [apply] - Event application function.
 *   If provided, this function will be invoked and the result will be
 *   used as the downstream event value.
 * @return {EventStream}
 */var events=function events(source,type,filter,apply){var df=this,s=stream(filter,apply),send=function send(e){e.dataflow=df;try{s.receive(e);}catch(error){df.error(error);}finally{df.run();}},sources;if(typeof source==='string'&&typeof document!=='undefined'){sources=document.querySelectorAll(source);}else{sources=array(source);}for(var i=0,n=sources.length;i<n;++i){sources[i].addEventListener(type,send);}return s;};var prefix="$";function Map(){}Map.prototype=map.prototype={constructor:Map,has:function has(key){return prefix+key in this;},get:function get(key){return this[prefix+key];},set:function set(key,value){this[prefix+key]=value;return this;},remove:function remove(key){var property=prefix+key;return property in this&&delete this[property];},clear:function clear(){for(var property in this){if(property[0]===prefix)delete this[property];}},keys:function keys(){var keys=[];for(var property in this){if(property[0]===prefix)keys.push(property.slice(1));}return keys;},values:function values(){var values=[];for(var property in this){if(property[0]===prefix)values.push(this[property]);}return values;},entries:function entries(){var entries=[];for(var property in this){if(property[0]===prefix)entries.push({key:property.slice(1),value:this[property]});}return entries;},size:function size(){var size=0;for(var property in this){if(property[0]===prefix)++size;}return size;},empty:function empty(){for(var property in this){if(property[0]===prefix)return false;}return true;},each:function each(f){for(var property in this){if(property[0]===prefix)f(this[property],property.slice(1),this);}}};function map(object,f){var map=new Map();// Copy constructor.
if(object instanceof Map)object.each(function(value,key){map.set(key,value);});// Index array by numeric index or specified key function.
else if(Array.isArray(object)){var i=-1,n=object.length,o;if(f==null)while(++i<n){map.set(i,object[i]);}else while(++i<n){map.set(f(o=object[i],i,object),o);}}// Convert object to map.
else if(object)for(var key in object){map.set(key,object[key]);}return map;}var nest=function nest(){var keys=[],_sortKeys=[],_sortValues,_rollup,nest;function apply(array,depth,createResult,setResult){if(depth>=keys.length){if(_sortValues!=null)array.sort(_sortValues);return _rollup!=null?_rollup(array):array;}var i=-1,n=array.length,key=keys[depth++],keyValue,value,valuesByKey=map(),values,result=createResult();while(++i<n){if(values=valuesByKey.get(keyValue=key(value=array[i])+"")){values.push(value);}else{valuesByKey.set(keyValue,[value]);}}valuesByKey.each(function(values,key){setResult(result,key,apply(values,depth,createResult,setResult));});return result;}function _entries(map$$1,depth){if(++depth>keys.length)return map$$1;var array,sortKey=_sortKeys[depth-1];if(_rollup!=null&&depth>=keys.length)array=map$$1.entries();else array=[],map$$1.each(function(v,k){array.push({key:k,values:_entries(v,depth)});});return sortKey!=null?array.sort(function(a,b){return sortKey(a.key,b.key);}):array;}return nest={object:function object(array){return apply(array,0,createObject,setObject);},map:function map(array){return apply(array,0,createMap,setMap);},entries:function entries(array){return _entries(apply(array,0,createMap,setMap),0);},key:function key(d){keys.push(d);return nest;},sortKeys:function sortKeys(order){_sortKeys[keys.length-1]=order;return nest;},sortValues:function sortValues(order){_sortValues=order;return nest;},rollup:function rollup(f){_rollup=f;return nest;}};};function createObject(){return{};}function setObject(object,key,value){object[key]=value;}function createMap(){return map();}function setMap(map$$1,key,value){map$$1.set(key,value);}function Set(){}var proto=map.prototype;Set.prototype=set.prototype={constructor:Set,has:proto.has,add:function add(value){value+="";this[prefix+value]=value;return this;},remove:proto.remove,clear:proto.clear,values:proto.keys,size:proto.size,empty:proto.empty,each:proto.each};function set(object,f){var set=new Set();// Copy constructor.
if(object instanceof Set)object.each(function(value){set.add(value);});// Otherwise, assume it’s an array.
else if(object){var i=-1,n=object.length;if(f==null)while(++i<n){set.add(object[i]);}else while(++i<n){set.add(f(object[i],i,object));}}return set;}var noop={value:function value(){}};function dispatch(){for(var i=0,n=arguments.length,_={},t;i<n;++i){if(!(t=arguments[i]+"")||t in _)throw new Error("illegal type: "+t);_[t]=[];}return new Dispatch(_);}function Dispatch(_){this._=_;}function parseTypenames(typenames,types){return typenames.trim().split(/^|\s+/).map(function(t){var name="",i=t.indexOf(".");if(i>=0)name=t.slice(i+1),t=t.slice(0,i);if(t&&!types.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:name};});}Dispatch.prototype=dispatch.prototype={constructor:Dispatch,on:function on(typename,callback){var _=this._,T=parseTypenames(typename+"",_),t,i=-1,n=T.length;// If no callback was specified, return the callback of the given type and name.
if(arguments.length<2){while(++i<n){if((t=(typename=T[i]).type)&&(t=get(_[t],typename.name)))return t;}return;}// If a type was specified, set the callback for the given type and name.
// Otherwise, if a null callback was specified, remove callbacks of the given name.
if(callback!=null&&typeof callback!=="function")throw new Error("invalid callback: "+callback);while(++i<n){if(t=(typename=T[i]).type)_[t]=set$2(_[t],typename.name,callback);else if(callback==null)for(t in _){_[t]=set$2(_[t],typename.name,null);}}return this;},copy:function copy(){var copy={},_=this._;for(var t in _){copy[t]=_[t].slice();}return new Dispatch(copy);},call:function call(type,that){if((n=arguments.length-2)>0)for(var args=new Array(n),i=0,n,t;i<n;++i){args[i]=arguments[i+2];}if(!this._.hasOwnProperty(type))throw new Error("unknown type: "+type);for(t=this._[type],i=0,n=t.length;i<n;++i){t[i].value.apply(that,args);}},apply:function apply(type,that,args){if(!this._.hasOwnProperty(type))throw new Error("unknown type: "+type);for(var t=this._[type],i=0,n=t.length;i<n;++i){t[i].value.apply(that,args);}}};function get(type,name){for(var i=0,n=type.length,c;i<n;++i){if((c=type[i]).name===name){return c.value;}}}function set$2(type,name,callback){for(var i=0,n=type.length;i<n;++i){if(type[i].name===name){type[i]=noop,type=type.slice(0,i).concat(type.slice(i+1));break;}}if(callback!=null)type.push({name:name,value:callback});return type;}var request$1=function request$1(url,callback){var request,event=dispatch("beforesend","progress","load","error"),_mimeType,headers=map(),xhr=new XMLHttpRequest(),_user=null,_password=null,_response,_responseType,_timeout=0;// If IE does not support CORS, use XDomainRequest.
if(typeof XDomainRequest!=="undefined"&&!("withCredentials"in xhr)&&/^(http(s)?:)?\/\//.test(url))xhr=new XDomainRequest();"onload"in xhr?xhr.onload=xhr.onerror=xhr.ontimeout=respond:xhr.onreadystatechange=function(o){xhr.readyState>3&&respond(o);};function respond(o){var status=xhr.status,result;if(!status&&hasResponse(xhr)||status>=200&&status<300||status===304){if(_response){try{result=_response.call(request,xhr);}catch(e){event.call("error",request,e);return;}}else{result=xhr;}event.call("load",request,result);}else{event.call("error",request,o);}}xhr.onprogress=function(e){event.call("progress",request,e);};request={header:function header(name,value){name=(name+"").toLowerCase();if(arguments.length<2)return headers.get(name);if(value==null)headers.remove(name);else headers.set(name,value+"");return request;},// If mimeType is non-null and no Accept header is set, a default is used.
mimeType:function mimeType(value){if(!arguments.length)return _mimeType;_mimeType=value==null?null:value+"";return request;},// Specifies what type the response value should take;
// for instance, arraybuffer, blob, document, or text.
responseType:function responseType(value){if(!arguments.length)return _responseType;_responseType=value;return request;},timeout:function timeout(value){if(!arguments.length)return _timeout;_timeout=+value;return request;},user:function user(value){return arguments.length<1?_user:(_user=value==null?null:value+"",request);},password:function password(value){return arguments.length<1?_password:(_password=value==null?null:value+"",request);},// Specify how to convert the response content to a specific type;
// changes the callback value on "load" events.
response:function response(value){_response=value;return request;},// Alias for send("GET", …).
get:function get(data,callback){return request.send("GET",data,callback);},// Alias for send("POST", …).
post:function post(data,callback){return request.send("POST",data,callback);},// If callback is non-null, it will be used for error and load events.
send:function send(method,data,callback){xhr.open(method,url,true,_user,_password);if(_mimeType!=null&&!headers.has("accept"))headers.set("accept",_mimeType+",*/*");if(xhr.setRequestHeader)headers.each(function(value,name){xhr.setRequestHeader(name,value);});if(_mimeType!=null&&xhr.overrideMimeType)xhr.overrideMimeType(_mimeType);if(_responseType!=null)xhr.responseType=_responseType;if(_timeout>0)xhr.timeout=_timeout;if(callback==null&&typeof data==="function")callback=data,data=null;if(callback!=null&&callback.length===1)callback=fixCallback(callback);if(callback!=null)request.on("error",callback).on("load",function(xhr){callback(null,xhr);});event.call("beforesend",request,xhr);xhr.send(data==null?null:data);return request;},abort:function abort(){xhr.abort();return request;},on:function on(){var value=event.on.apply(event,arguments);return value===event?request:value;}};if(callback!=null){if(typeof callback!=="function")throw new Error("invalid callback: "+callback);return request.get(callback);}return request;};function fixCallback(callback){return function(error,xhr){callback(error==null?xhr:null);};}function hasResponse(xhr){var type=xhr.responseType;return type&&type!=="text"?xhr.response// null on error
:xhr.responseText;// "" on error
}function objectConverter(columns){return new Function("d","return {"+columns.map(function(name,i){return JSON.stringify(name)+": d["+i+"]";}).join(",")+"}");}function customConverter(columns,f){var object=objectConverter(columns);return function(row,i){return f(object(row),i,columns);};}// Compute unique columns in order of discovery.
function inferColumns(rows){var columnSet=Object.create(null),columns=[];rows.forEach(function(row){for(var column in row){if(!(column in columnSet)){columns.push(columnSet[column]=column);}}});return columns;}var dsvFormat=function dsvFormat(delimiter){var reFormat=new RegExp("[\""+delimiter+"\n\r]"),delimiterCode=delimiter.charCodeAt(0);function parse(text,f){var convert,columns,rows=parseRows(text,function(row,i){if(convert)return convert(row,i-1);columns=row,convert=f?customConverter(row,f):objectConverter(row);});rows.columns=columns;return rows;}function parseRows(text,f){var EOL={},// sentinel value for end-of-line
EOF={},// sentinel value for end-of-file
rows=[],// output rows
N=text.length,I=0,// current character index
n=0,// the current line number
t,// the current token
eol;// is the current token followed by EOL?
function token(){if(I>=N)return EOF;// special case: end of file
if(eol)return eol=false,EOL;// special case: end of line
// special case: quotes
var j=I,c;if(text.charCodeAt(j)===34){var i=j;while(i++<N){if(text.charCodeAt(i)===34){if(text.charCodeAt(i+1)!==34)break;++i;}}I=i+2;c=text.charCodeAt(i+1);if(c===13){eol=true;if(text.charCodeAt(i+2)===10)++I;}else if(c===10){eol=true;}return text.slice(j+1,i).replace(/""/g,"\"");}// common case: find next delimiter or newline
while(I<N){var k=1;c=text.charCodeAt(I++);if(c===10)eol=true;// \n
else if(c===13){eol=true;if(text.charCodeAt(I)===10)++I,++k;}// \r|\r\n
else if(c!==delimiterCode)continue;return text.slice(j,I-k);}// special case: last token before EOF
return text.slice(j);}while((t=token())!==EOF){var a=[];while(t!==EOL&&t!==EOF){a.push(t);t=token();}if(f&&(a=f(a,n++))==null)continue;rows.push(a);}return rows;}function format(rows,columns){if(columns==null)columns=inferColumns(rows);return[columns.map(formatValue).join(delimiter)].concat(rows.map(function(row){return columns.map(function(column){return formatValue(row[column]);}).join(delimiter);})).join("\n");}function formatRows(rows){return rows.map(formatRow).join("\n");}function formatRow(row){return row.map(formatValue).join(delimiter);}function formatValue(text){return text==null?"":reFormat.test(text+="")?"\""+text.replace(/\"/g,"\"\"")+"\"":text;}return{parse:parse,parseRows:parseRows,format:format,formatRows:formatRows};};var csv$1=dsvFormat(",");var tsv=dsvFormat("\t");// Matches absolute URLs with optional protocol
//   https://...    file://...    //...
var protocol_re=/^([A-Za-z]+:)?\/\//;// Special treatment in node.js for the file: protocol
var fileProtocol='file://';// Request options to check for d3-request
var requestOptions=['mimeType','responseType','user','password'];/**
 * Creates a new loader instance that provides methods for requesting files
 * from either the network or disk, and for sanitizing request URIs.
 * @param {object} [options] - Optional default loading options to use.
 * @return {object} - A new loader instance.
 */var loader=function loader(options){return{options:options||{},sanitize:sanitize,load:load,file:file,http:http};};function marshall(loader,options){return extend({},loader.options,options);}/**
 * Load an external resource, typically either from the web or from the local
 * filesystem. This function uses {@link sanitize} to first sanitize the uri,
 * then calls either {@link http} (for web requests) or {@link file} (for
 * filesystem loading).
 * @param {string} uri - The resource indicator (e.g., URL or filename).
 * @param {object} [options] - Optional loading options. These options will
 *   override any existing default options.
 * @return {Promise} - A promise that resolves to the loaded content.
 */function load(uri,options){var loader=this;return loader.sanitize(uri,options).then(function(opt){var url=opt.href;return opt.localFile?loader.file(url):loader.http(url,options);});}/**
 * URI sanitizer function.
 * @param {string} uri - The uri (url or filename) to sanity check.
 * @param {object} options - An options hash.
 * @return {Promise} - A promise that resolves to an object containing
 *  sanitized uri data, or rejects it the input uri is deemed invalid.
 *  The properties of the resolved object are assumed to be
 *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be
 *  provided by the 'href' property of the returned object.
 */function sanitize(uri,options){options=marshall(this,options);return new Promise(function(accept,reject){var result={href:null},isFile,hasProtocol,loadFile,base;if(uri==null||typeof uri!=='string'){reject('Sanitize failure, invalid URI: '+$(uri));return;}hasProtocol=protocol_re.test(uri);// if relative url (no protocol/host), prepend baseURL
if((base=options.baseURL)&&!hasProtocol){// Ensure that there is a slash between the baseURL (e.g. hostname) and url
if(!startsWith(uri,'/')&&base[base.length-1]!=='/'){uri='/'+uri;}uri=base+uri;}// should we load from file system?
loadFile=(isFile=startsWith(uri,fileProtocol))||options.mode==='file'||options.mode!=='http'&&!hasProtocol&&fs();if(isFile){// strip file protocol
uri=uri.slice(fileProtocol.length);}else if(startsWith(uri,'//')){if(options.defaultProtocol==='file'){// if is file, strip protocol and set loadFile flag
uri=uri.slice(2);loadFile=true;}else{// if relative protocol (starts with '//'), prepend default protocol
uri=(options.defaultProtocol||'http')+':'+uri;}}// set non-enumerable mode flag to indicate local file load
Object.defineProperty(result,'localFile',{value:!!loadFile});// set uri and return
result.href=uri;accept(result);});}/**
 * HTTP request loader.
 * @param {string} url - The url to request.
 * @param {object} options - An options hash.
 * @return {Promise} - A promise that resolves to the file contents.
 */function http(url,options){options=marshall(this,options);return new Promise(function(accept,reject){var req=request$1(url),name;for(name in options.headers){req.header(name,options.headers[name]);}requestOptions.forEach(function(name){if(options[name])req[name](options[name]);});req.on('error',function(error){reject(error||'Error loading URL: '+url);}).on('load',function(result){var text$$1=result&&result.responseText;!result||result.status===0?reject(text$$1||'Error'):accept(text$$1);}).get();});}/**
 * File system loader.
 * @param {string} filename - The file system path to load.
 * @return {Promise} - A promise that resolves to the file contents.
 */function file(filename){return new Promise(function(accept,reject){var f=fs();f?f.readFile(filename,function(error,data){if(error)reject(error);else accept(data);}):reject('No file system access for '+filename);});}function fs(){var fs=typeof require==='function'&&require('fs');return fs&&isFunction(fs.readFile)?fs:null;}function startsWith(string,query){return string==null?false:string.lastIndexOf(query,0)===0;}var typeParsers={boolean:toBoolean,integer:toNumber,number:toNumber,date:toDate,string:toString};var typeTests=[isBoolean$1,isInteger,isNumber$1,isDate$1];var typeList=['boolean','integer','number','date'];function inferType(values,field$$1){var tests=typeTests.slice(),value,i,n,j;for(i=0,n=values.length;i<n;++i){value=field$$1?values[i][field$$1]:values[i];for(j=0;j<tests.length;++j){if(isValid(value)&&!tests[j](value)){tests.splice(j,1);--j;}}if(tests.length===0)return'string';}return typeList[typeTests.indexOf(tests[0])];}function inferTypes(data,fields){return fields.reduce(function(types,field$$1){types[field$$1]=inferType(data,field$$1);return types;},{});}// -- Type Checks ----
function isValid(_){return _!=null&&_===_;}function isBoolean$1(_){return _==='true'||_==='false'||_===true||_===false;}function isDate$1(_){return!isNaN(Date.parse(_));}function isNumber$1(_){return!isNaN(+_)&&!(_ instanceof Date);}function isInteger(_){return isNumber$1(_)&&(_=+_)===~~_;}function delimitedFormat(delimiter){return function(data,format){var delim={delimiter:delimiter};return dsv$1(data,format?extend(format,delim):delim);};}function dsv$1(data,format){if(format.header){data=format.header.map($).join(format.delimiter)+'\n'+data;}return dsvFormat(format.delimiter).parse(data+'');}function isBuffer(_){return typeof Buffer==='function'&&isFunction(Buffer.isBuffer)?Buffer.isBuffer(_):false;}var json$1=function json$1(data,format){var prop=format&&format.property?field(format.property):identity;return isObject(data)&&!isBuffer(data)?parseJSON(prop(data)):prop(JSON.parse(data));};function parseJSON(data,format){return format&&format.copy?JSON.parse(JSON.stringify(data)):data;}var noop$1=function noop$1(){};function absolute(transform){if(!transform)return noop$1;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(point,i){if(!i)x0=y0=0;point[0]=(x0+=point[0])*kx+dx;point[1]=(y0+=point[1])*ky+dy;};}function reverse(array,n){var t,j=array.length,i=j-n;while(i<--j){t=array[i],array[i++]=array[j],array[j]=t;}}function bisect(a,x){var lo=0,hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(a[mid]<x)lo=mid+1;else hi=mid;}return lo;}var feature=function feature(topology,o){return o.type==="GeometryCollection"?{type:"FeatureCollection",features:o.geometries.map(function(o){return feature$1(topology,o);})}:feature$1(topology,o);};function feature$1(topology,o){var f={type:"Feature",id:o.id,properties:o.properties||{},geometry:object(topology,o)};if(o.id==null)delete f.id;return f;}function object(topology,o){var absolute$$1=absolute(topology.transform),arcs=topology.arcs;function arc(i,points){if(points.length)points.pop();for(var a=arcs[i<0?~i:i],k=0,n=a.length,p;k<n;++k){points.push(p=a[k].slice());absolute$$1(p,k);}if(i<0)reverse(points,n);}function point(p){p=p.slice();absolute$$1(p,0);return p;}function line(arcs){var points=[];for(var i=0,n=arcs.length;i<n;++i){arc(arcs[i],points);}if(points.length<2)points.push(points[0].slice());return points;}function ring(arcs){var points=line(arcs);while(points.length<4){points.push(points[0].slice());}return points;}function polygon(arcs){return arcs.map(ring);}function geometry(o){var t=o.type;return t==="GeometryCollection"?{type:t,geometries:o.geometries.map(geometry)}:t in geometryType?{type:t,coordinates:geometryType[t](o)}:null;}var geometryType={Point:function Point(o){return point(o.coordinates);},MultiPoint:function MultiPoint(o){return o.coordinates.map(point);},LineString:function LineString(o){return line(o.arcs);},MultiLineString:function MultiLineString(o){return o.arcs.map(line);},Polygon:function Polygon(o){return polygon(o.arcs);},MultiPolygon:function MultiPolygon(o){return o.arcs.map(polygon);}};return geometry(o);}var stitchArcs=function stitchArcs(topology,arcs){var stitchedArcs={},fragmentByStart={},fragmentByEnd={},fragments=[],emptyIndex=-1;// Stitch empty arcs first, since they may be subsumed by other arcs.
arcs.forEach(function(i,j){var arc=topology.arcs[i<0?~i:i],t;if(arc.length<3&&!arc[1][0]&&!arc[1][1]){t=arcs[++emptyIndex],arcs[emptyIndex]=i,arcs[j]=t;}});arcs.forEach(function(i){var e=ends(i),start=e[0],end=e[1],f,g;if(f=fragmentByEnd[start]){delete fragmentByEnd[f.end];f.push(i);f.end=end;if(g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg;}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f;}}else if(f=fragmentByStart[end]){delete fragmentByStart[f.start];f.unshift(i);f.start=start;if(g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf;}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f;}}else{f=[i];fragmentByStart[f.start=start]=fragmentByEnd[f.end=end]=f;}});function ends(i){var arc=topology.arcs[i<0?~i:i],p0=arc[0],p1;if(topology.transform)p1=[0,0],arc.forEach(function(dp){p1[0]+=dp[0],p1[1]+=dp[1];});else p1=arc[arc.length-1];return i<0?[p1,p0]:[p0,p1];}function flush(fragmentByEnd,fragmentByStart){for(var k in fragmentByEnd){var f=fragmentByEnd[k];delete fragmentByStart[f.start];delete f.start;delete f.end;f.forEach(function(i){stitchedArcs[i<0?~i:i]=1;});fragments.push(f);}}flush(fragmentByEnd,fragmentByStart);flush(fragmentByStart,fragmentByEnd);arcs.forEach(function(i){if(!stitchedArcs[i<0?~i:i])fragments.push([i]);});return fragments;};var mesh=function mesh(topology){return object(topology,meshArcs.apply(this,arguments));};function meshArcs(topology,o,filter){var arcs=[];function arc(i){var j=i<0?~i:i;(geomsByArc[j]||(geomsByArc[j]=[])).push({i:i,g:geom});}function line(arcs){arcs.forEach(arc);}function polygon(arcs){arcs.forEach(line);}function geometry(o){if(o.type==="GeometryCollection")o.geometries.forEach(geometry);else if(o.type in geometryType)geom=o,geometryType[o.type](o.arcs);}if(arguments.length>1){var geomsByArc=[],geom;var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function MultiPolygon(arcs){arcs.forEach(polygon);}};geometry(o);geomsByArc.forEach(arguments.length<3?function(geoms){arcs.push(geoms[0].i);}:function(geoms){if(filter(geoms[0].g,geoms[geoms.length-1].g))arcs.push(geoms[0].i);});}else{for(var i=0,n=topology.arcs.length;i<n;++i){arcs.push(i);}}return{type:"MultiLineString",arcs:stitchArcs(topology,arcs)};}var topojson=function topojson(data,format){var object,property;data=json$1(data,format);if(format&&(property=format.feature)){return(object=data.objects[property])?feature(data,object).features:error$1('Invalid TopoJSON object: '+property);}else if(format&&(property=format.mesh)){return(object=data.objects[property])?[mesh(data,object)]:error$1('Invalid TopoJSON object: '+property);}error$1('Missing TopoJSON feature or mesh parameter.');};var formats={dsv:dsv$1,csv:delimitedFormat(','),tsv:delimitedFormat('\t'),json:json$1,topojson:topojson};var formats$1=function formats$1(name,format){if(arguments.length>1){formats[name]=format;return this;}else{return formats.hasOwnProperty(name)?formats[name]:null;}};var t0=new Date();var t1=new Date();function newInterval(floori,offseti,count,field){function interval(date){return floori(date=new Date(+date)),date;}interval.floor=interval;interval.ceil=function(date){return floori(date=new Date(date-1)),offseti(date,1),floori(date),date;};interval.round=function(date){var d0=interval(date),d1=interval.ceil(date);return date-d0<d1-date?d0:d1;};interval.offset=function(date,step){return offseti(date=new Date(+date),step==null?1:Math.floor(step)),date;};interval.range=function(start,stop,step){var range=[];start=interval.ceil(start);step=step==null?1:Math.floor(step);if(!(start<stop)||!(step>0))return range;// also handles Invalid Date
do{range.push(new Date(+start));}while((offseti(start,step),floori(start),start<stop));return range;};interval.filter=function(test){return newInterval(function(date){if(date>=date)while(floori(date),!test(date)){date.setTime(date-1);}},function(date,step){if(date>=date){if(step<0)while(++step<=0){while(offseti(date,-1),!test(date)){}// eslint-disable-line no-empty
}else while(--step>=0){while(offseti(date,+1),!test(date)){}// eslint-disable-line no-empty
}}});};if(count){interval.count=function(start,end){t0.setTime(+start),t1.setTime(+end);floori(t0),floori(t1);return Math.floor(count(t0,t1));};interval.every=function(step){step=Math.floor(step);return!isFinite(step)||!(step>0)?null:!(step>1)?interval:interval.filter(field?function(d){return field(d)%step===0;}:function(d){return interval.count(0,d)%step===0;});};}return interval;}var millisecond=newInterval(function(){// noop
},function(date,step){date.setTime(+date+step);},function(start,end){return end-start;});// An optimized implementation for this simple case.
millisecond.every=function(k){k=Math.floor(k);if(!isFinite(k)||!(k>0))return null;if(!(k>1))return millisecond;return newInterval(function(date){date.setTime(Math.floor(date/k)*k);},function(date,step){date.setTime(+date+step*k);},function(start,end){return(end-start)/k;});};var durationSecond=1e3;var durationMinute=6e4;var durationHour=36e5;var durationDay=864e5;var durationWeek=6048e5;var second=newInterval(function(date){date.setTime(Math.floor(date/durationSecond)*durationSecond);},function(date,step){date.setTime(+date+step*durationSecond);},function(start,end){return(end-start)/durationSecond;},function(date){return date.getUTCSeconds();});var minute=newInterval(function(date){date.setTime(Math.floor(date/durationMinute)*durationMinute);},function(date,step){date.setTime(+date+step*durationMinute);},function(start,end){return(end-start)/durationMinute;},function(date){return date.getMinutes();});var hour=newInterval(function(date){var offset=date.getTimezoneOffset()*durationMinute%durationHour;if(offset<0)offset+=durationHour;date.setTime(Math.floor((+date-offset)/durationHour)*durationHour+offset);},function(date,step){date.setTime(+date+step*durationHour);},function(start,end){return(end-start)/durationHour;},function(date){return date.getHours();});var day=newInterval(function(date){date.setHours(0,0,0,0);},function(date,step){date.setDate(date.getDate()+step);},function(start,end){return(end-start-(end.getTimezoneOffset()-start.getTimezoneOffset())*durationMinute)/durationDay;},function(date){return date.getDate()-1;});function weekday(i){return newInterval(function(date){date.setDate(date.getDate()-(date.getDay()+7-i)%7);date.setHours(0,0,0,0);},function(date,step){date.setDate(date.getDate()+step*7);},function(start,end){return(end-start-(end.getTimezoneOffset()-start.getTimezoneOffset())*durationMinute)/durationWeek;});}var sunday=weekday(0);var monday=weekday(1);var tuesday=weekday(2);var wednesday=weekday(3);var thursday=weekday(4);var friday=weekday(5);var saturday=weekday(6);var month=newInterval(function(date){date.setDate(1);date.setHours(0,0,0,0);},function(date,step){date.setMonth(date.getMonth()+step);},function(start,end){return end.getMonth()-start.getMonth()+(end.getFullYear()-start.getFullYear())*12;},function(date){return date.getMonth();});var year=newInterval(function(date){date.setMonth(0,1);date.setHours(0,0,0,0);},function(date,step){date.setFullYear(date.getFullYear()+step);},function(start,end){return end.getFullYear()-start.getFullYear();},function(date){return date.getFullYear();});// An optimized implementation for this simple case.
year.every=function(k){return!isFinite(k=Math.floor(k))||!(k>0)?null:newInterval(function(date){date.setFullYear(Math.floor(date.getFullYear()/k)*k);date.setMonth(0,1);date.setHours(0,0,0,0);},function(date,step){date.setFullYear(date.getFullYear()+step*k);});};var utcMinute=newInterval(function(date){date.setUTCSeconds(0,0);},function(date,step){date.setTime(+date+step*durationMinute);},function(start,end){return(end-start)/durationMinute;},function(date){return date.getUTCMinutes();});var utcHour=newInterval(function(date){date.setUTCMinutes(0,0,0);},function(date,step){date.setTime(+date+step*durationHour);},function(start,end){return(end-start)/durationHour;},function(date){return date.getUTCHours();});var utcDay=newInterval(function(date){date.setUTCHours(0,0,0,0);},function(date,step){date.setUTCDate(date.getUTCDate()+step);},function(start,end){return(end-start)/durationDay;},function(date){return date.getUTCDate()-1;});function utcWeekday(i){return newInterval(function(date){date.setUTCDate(date.getUTCDate()-(date.getUTCDay()+7-i)%7);date.setUTCHours(0,0,0,0);},function(date,step){date.setUTCDate(date.getUTCDate()+step*7);},function(start,end){return(end-start)/durationWeek;});}var utcSunday=utcWeekday(0);var utcMonday=utcWeekday(1);var utcTuesday=utcWeekday(2);var utcWednesday=utcWeekday(3);var utcThursday=utcWeekday(4);var utcFriday=utcWeekday(5);var utcSaturday=utcWeekday(6);var utcMonth=newInterval(function(date){date.setUTCDate(1);date.setUTCHours(0,0,0,0);},function(date,step){date.setUTCMonth(date.getUTCMonth()+step);},function(start,end){return end.getUTCMonth()-start.getUTCMonth()+(end.getUTCFullYear()-start.getUTCFullYear())*12;},function(date){return date.getUTCMonth();});var utcYear=newInterval(function(date){date.setUTCMonth(0,1);date.setUTCHours(0,0,0,0);},function(date,step){date.setUTCFullYear(date.getUTCFullYear()+step);},function(start,end){return end.getUTCFullYear()-start.getUTCFullYear();},function(date){return date.getUTCFullYear();});// An optimized implementation for this simple case.
utcYear.every=function(k){return!isFinite(k=Math.floor(k))||!(k>0)?null:newInterval(function(date){date.setUTCFullYear(Math.floor(date.getUTCFullYear()/k)*k);date.setUTCMonth(0,1);date.setUTCHours(0,0,0,0);},function(date,step){date.setUTCFullYear(date.getUTCFullYear()+step*k);});};function localDate(d){if(0<=d.y&&d.y<100){var date=new Date(-1,d.m,d.d,d.H,d.M,d.S,d.L);date.setFullYear(d.y);return date;}return new Date(d.y,d.m,d.d,d.H,d.M,d.S,d.L);}function utcDate(d){if(0<=d.y&&d.y<100){var date=new Date(Date.UTC(-1,d.m,d.d,d.H,d.M,d.S,d.L));date.setUTCFullYear(d.y);return date;}return new Date(Date.UTC(d.y,d.m,d.d,d.H,d.M,d.S,d.L));}function newYear(y){return{y:y,m:0,d:1,H:0,M:0,S:0,L:0};}function formatLocale(locale){var locale_dateTime=locale.dateTime,locale_date=locale.date,locale_time=locale.time,locale_periods=locale.periods,locale_weekdays=locale.days,locale_shortWeekdays=locale.shortDays,locale_months=locale.months,locale_shortMonths=locale.shortMonths;var periodRe=formatRe(locale_periods),periodLookup=formatLookup(locale_periods),weekdayRe=formatRe(locale_weekdays),weekdayLookup=formatLookup(locale_weekdays),shortWeekdayRe=formatRe(locale_shortWeekdays),shortWeekdayLookup=formatLookup(locale_shortWeekdays),monthRe=formatRe(locale_months),monthLookup=formatLookup(locale_months),shortMonthRe=formatRe(locale_shortMonths),shortMonthLookup=formatLookup(locale_shortMonths);var formats={"a":formatShortWeekday,"A":formatWeekday,"b":formatShortMonth,"B":formatMonth,"c":null,"d":formatDayOfMonth,"e":formatDayOfMonth,"H":formatHour24,"I":formatHour12,"j":formatDayOfYear,"L":formatMilliseconds,"m":formatMonthNumber,"M":formatMinutes,"p":formatPeriod,"S":formatSeconds,"U":formatWeekNumberSunday,"w":formatWeekdayNumber,"W":formatWeekNumberMonday,"x":null,"X":null,"y":formatYear,"Y":formatFullYear,"Z":formatZone,"%":formatLiteralPercent};var utcFormats={"a":formatUTCShortWeekday,"A":formatUTCWeekday,"b":formatUTCShortMonth,"B":formatUTCMonth,"c":null,"d":formatUTCDayOfMonth,"e":formatUTCDayOfMonth,"H":formatUTCHour24,"I":formatUTCHour12,"j":formatUTCDayOfYear,"L":formatUTCMilliseconds,"m":formatUTCMonthNumber,"M":formatUTCMinutes,"p":formatUTCPeriod,"S":formatUTCSeconds,"U":formatUTCWeekNumberSunday,"w":formatUTCWeekdayNumber,"W":formatUTCWeekNumberMonday,"x":null,"X":null,"y":formatUTCYear,"Y":formatUTCFullYear,"Z":formatUTCZone,"%":formatLiteralPercent};var parses={"a":parseShortWeekday,"A":parseWeekday,"b":parseShortMonth,"B":parseMonth,"c":parseLocaleDateTime,"d":parseDayOfMonth,"e":parseDayOfMonth,"H":parseHour24,"I":parseHour24,"j":parseDayOfYear,"L":parseMilliseconds,"m":parseMonthNumber,"M":parseMinutes,"p":parsePeriod,"S":parseSeconds,"U":parseWeekNumberSunday,"w":parseWeekdayNumber,"W":parseWeekNumberMonday,"x":parseLocaleDate,"X":parseLocaleTime,"y":parseYear,"Y":parseFullYear,"Z":parseZone,"%":parseLiteralPercent};// These recursive directive definitions must be deferred.
formats.x=newFormat(locale_date,formats);formats.X=newFormat(locale_time,formats);formats.c=newFormat(locale_dateTime,formats);utcFormats.x=newFormat(locale_date,utcFormats);utcFormats.X=newFormat(locale_time,utcFormats);utcFormats.c=newFormat(locale_dateTime,utcFormats);function newFormat(specifier,formats){return function(date){var string=[],i=-1,j=0,n=specifier.length,c,pad,format;if(!(date instanceof Date))date=new Date(+date);while(++i<n){if(specifier.charCodeAt(i)===37){string.push(specifier.slice(j,i));if((pad=pads[c=specifier.charAt(++i)])!=null)c=specifier.charAt(++i);else pad=c==="e"?" ":"0";if(format=formats[c])c=format(date,pad);string.push(c);j=i+1;}}string.push(specifier.slice(j,i));return string.join("");};}function newParse(specifier,newDate){return function(string){var d=newYear(1900),i=parseSpecifier(d,specifier,string+="",0);if(i!=string.length)return null;// The am-pm flag is 0 for AM, and 1 for PM.
if("p"in d)d.H=d.H%12+d.p*12;// Convert day-of-week and week-of-year to day-of-year.
if("W"in d||"U"in d){if(!("w"in d))d.w="W"in d?1:0;var day$$1="Z"in d?utcDate(newYear(d.y)).getUTCDay():newDate(newYear(d.y)).getDay();d.m=0;d.d="W"in d?(d.w+6)%7+d.W*7-(day$$1+5)%7:d.w+d.U*7-(day$$1+6)%7;}// If a time zone is specified, all fields are interpreted as UTC and then
// offset according to the specified time zone.
if("Z"in d){d.H+=d.Z/100|0;d.M+=d.Z%100;return utcDate(d);}// Otherwise, all fields are in local time.
return newDate(d);};}function parseSpecifier(d,specifier,string,j){var i=0,n=specifier.length,m=string.length,c,parse;while(i<n){if(j>=m)return-1;c=specifier.charCodeAt(i++);if(c===37){c=specifier.charAt(i++);parse=parses[c in pads?specifier.charAt(i++):c];if(!parse||(j=parse(d,string,j))<0)return-1;}else if(c!=string.charCodeAt(j++)){return-1;}}return j;}function parsePeriod(d,string,i){var n=periodRe.exec(string.slice(i));return n?(d.p=periodLookup[n[0].toLowerCase()],i+n[0].length):-1;}function parseShortWeekday(d,string,i){var n=shortWeekdayRe.exec(string.slice(i));return n?(d.w=shortWeekdayLookup[n[0].toLowerCase()],i+n[0].length):-1;}function parseWeekday(d,string,i){var n=weekdayRe.exec(string.slice(i));return n?(d.w=weekdayLookup[n[0].toLowerCase()],i+n[0].length):-1;}function parseShortMonth(d,string,i){var n=shortMonthRe.exec(string.slice(i));return n?(d.m=shortMonthLookup[n[0].toLowerCase()],i+n[0].length):-1;}function parseMonth(d,string,i){var n=monthRe.exec(string.slice(i));return n?(d.m=monthLookup[n[0].toLowerCase()],i+n[0].length):-1;}function parseLocaleDateTime(d,string,i){return parseSpecifier(d,locale_dateTime,string,i);}function parseLocaleDate(d,string,i){return parseSpecifier(d,locale_date,string,i);}function parseLocaleTime(d,string,i){return parseSpecifier(d,locale_time,string,i);}function formatShortWeekday(d){return locale_shortWeekdays[d.getDay()];}function formatWeekday(d){return locale_weekdays[d.getDay()];}function formatShortMonth(d){return locale_shortMonths[d.getMonth()];}function formatMonth(d){return locale_months[d.getMonth()];}function formatPeriod(d){return locale_periods[+(d.getHours()>=12)];}function formatUTCShortWeekday(d){return locale_shortWeekdays[d.getUTCDay()];}function formatUTCWeekday(d){return locale_weekdays[d.getUTCDay()];}function formatUTCShortMonth(d){return locale_shortMonths[d.getUTCMonth()];}function formatUTCMonth(d){return locale_months[d.getUTCMonth()];}function formatUTCPeriod(d){return locale_periods[+(d.getUTCHours()>=12)];}return{format:function format(specifier){var f=newFormat(specifier+="",formats);f.toString=function(){return specifier;};return f;},parse:function parse(specifier){var p=newParse(specifier+="",localDate);p.toString=function(){return specifier;};return p;},utcFormat:function utcFormat(specifier){var f=newFormat(specifier+="",utcFormats);f.toString=function(){return specifier;};return f;},utcParse:function utcParse(specifier){var p=newParse(specifier,utcDate);p.toString=function(){return specifier;};return p;}};}var pads={"-":"","_":" ","0":"0"};var numberRe=/^\s*\d+/;var percentRe=/^%/;var requoteRe=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;function pad$1(value,fill,width){var sign=value<0?"-":"",string=(sign?-value:value)+"",length=string.length;return sign+(length<width?new Array(width-length+1).join(fill)+string:string);}function requote(s){return s.replace(requoteRe,"\\$&");}function formatRe(names){return new RegExp("^(?:"+names.map(requote).join("|")+")","i");}function formatLookup(names){var map={},i=-1,n=names.length;while(++i<n){map[names[i].toLowerCase()]=i;}return map;}function parseWeekdayNumber(d,string,i){var n=numberRe.exec(string.slice(i,i+1));return n?(d.w=+n[0],i+n[0].length):-1;}function parseWeekNumberSunday(d,string,i){var n=numberRe.exec(string.slice(i));return n?(d.U=+n[0],i+n[0].length):-1;}function parseWeekNumberMonday(d,string,i){var n=numberRe.exec(string.slice(i));return n?(d.W=+n[0],i+n[0].length):-1;}function parseFullYear(d,string,i){var n=numberRe.exec(string.slice(i,i+4));return n?(d.y=+n[0],i+n[0].length):-1;}function parseYear(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.y=+n[0]+(+n[0]>68?1900:2000),i+n[0].length):-1;}function parseZone(d,string,i){var n=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i,i+6));return n?(d.Z=n[1]?0:-(n[2]+(n[3]||"00")),i+n[0].length):-1;}function parseMonthNumber(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.m=n[0]-1,i+n[0].length):-1;}function parseDayOfMonth(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.d=+n[0],i+n[0].length):-1;}function parseDayOfYear(d,string,i){var n=numberRe.exec(string.slice(i,i+3));return n?(d.m=0,d.d=+n[0],i+n[0].length):-1;}function parseHour24(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.H=+n[0],i+n[0].length):-1;}function parseMinutes(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.M=+n[0],i+n[0].length):-1;}function parseSeconds(d,string,i){var n=numberRe.exec(string.slice(i,i+2));return n?(d.S=+n[0],i+n[0].length):-1;}function parseMilliseconds(d,string,i){var n=numberRe.exec(string.slice(i,i+3));return n?(d.L=+n[0],i+n[0].length):-1;}function parseLiteralPercent(d,string,i){var n=percentRe.exec(string.slice(i,i+1));return n?i+n[0].length:-1;}function formatDayOfMonth(d,p){return pad$1(d.getDate(),p,2);}function formatHour24(d,p){return pad$1(d.getHours(),p,2);}function formatHour12(d,p){return pad$1(d.getHours()%12||12,p,2);}function formatDayOfYear(d,p){return pad$1(1+day.count(year(d),d),p,3);}function formatMilliseconds(d,p){return pad$1(d.getMilliseconds(),p,3);}function formatMonthNumber(d,p){return pad$1(d.getMonth()+1,p,2);}function formatMinutes(d,p){return pad$1(d.getMinutes(),p,2);}function formatSeconds(d,p){return pad$1(d.getSeconds(),p,2);}function formatWeekNumberSunday(d,p){return pad$1(sunday.count(year(d),d),p,2);}function formatWeekdayNumber(d){return d.getDay();}function formatWeekNumberMonday(d,p){return pad$1(monday.count(year(d),d),p,2);}function formatYear(d,p){return pad$1(d.getFullYear()%100,p,2);}function formatFullYear(d,p){return pad$1(d.getFullYear()%10000,p,4);}function formatZone(d){var z=d.getTimezoneOffset();return(z>0?"-":(z*=-1,"+"))+pad$1(z/60|0,"0",2)+pad$1(z%60,"0",2);}function formatUTCDayOfMonth(d,p){return pad$1(d.getUTCDate(),p,2);}function formatUTCHour24(d,p){return pad$1(d.getUTCHours(),p,2);}function formatUTCHour12(d,p){return pad$1(d.getUTCHours()%12||12,p,2);}function formatUTCDayOfYear(d,p){return pad$1(1+utcDay.count(utcYear(d),d),p,3);}function formatUTCMilliseconds(d,p){return pad$1(d.getUTCMilliseconds(),p,3);}function formatUTCMonthNumber(d,p){return pad$1(d.getUTCMonth()+1,p,2);}function formatUTCMinutes(d,p){return pad$1(d.getUTCMinutes(),p,2);}function formatUTCSeconds(d,p){return pad$1(d.getUTCSeconds(),p,2);}function formatUTCWeekNumberSunday(d,p){return pad$1(utcSunday.count(utcYear(d),d),p,2);}function formatUTCWeekdayNumber(d){return d.getUTCDay();}function formatUTCWeekNumberMonday(d,p){return pad$1(utcMonday.count(utcYear(d),d),p,2);}function formatUTCYear(d,p){return pad$1(d.getUTCFullYear()%100,p,2);}function formatUTCFullYear(d,p){return pad$1(d.getUTCFullYear()%10000,p,4);}function formatUTCZone(){return"+0000";}function formatLiteralPercent(){return"%";}var locale$1;var timeFormat;var timeParse;var utcFormat;var utcParse;defaultLocale({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function defaultLocale(definition){locale$1=formatLocale(definition);timeFormat=locale$1.format;timeParse=locale$1.parse;utcFormat=locale$1.utcFormat;utcParse=locale$1.utcParse;return locale$1;}var isoSpecifier="%Y-%m-%dT%H:%M:%S.%LZ";function formatIsoNative(date){return date.toISOString();}var formatIso=Date.prototype.toISOString?formatIsoNative:utcFormat(isoSpecifier);function parseIsoNative(string){var date=new Date(string);return isNaN(date)?null:date;}var parseIso=+new Date("2000-01-01T00:00:00.000Z")?parseIsoNative:utcParse(isoSpecifier);var read=function read(data,schema,dateParse){schema=schema||{};var reader=formats$1(schema.type||'json');if(!reader)error$1('Unknown data format type: '+schema.type);data=reader(data,schema);if(schema.parse)parse(data,schema.parse,dateParse);if(data.hasOwnProperty('columns'))delete data.columns;return data;};function parse(data,types,dateParse){dateParse=dateParse||timeParse;var fields=data.columns||Object.keys(data[0]),parsers,datum,field$$1,i,j,n,m;if(types==='auto')types=inferTypes(data,fields);fields=Object.keys(types);parsers=fields.map(function(field$$1){var type=types[field$$1],parts,pattern;if(type&&(type.indexOf('date:')===0||type.indexOf('utc:')===0)){parts=type.split(/:(.+)?/,2);// split on first :
pattern=parts[1];if(pattern[0]==='\''&&pattern[pattern.length-1]==='\''||pattern[0]==='"'&&pattern[pattern.length-1]==='"'){pattern=pattern.slice(1,-1);}return parts[0]==='utc'?utcParse(pattern):dateParse(pattern);}if(!typeParsers[type]){throw Error('Illegal format pattern: '+field$$1+':'+type);}return typeParsers[type];});for(i=0,n=data.length,m=fields.length;i<n;++i){datum=data[i];for(j=0;j<m;++j){field$$1=fields[j];datum[field$$1]=parsers[j](datum[field$$1]);}}}function ingest$1(target,data,format){return this.pulse(target,this.changeset().insert(read(data,format)));}function loadPending(df){var accept,reject,pending=new Promise(function(a,r){accept=a;reject=r;});pending.requests=0;pending.done=function(){if(--pending.requests===0){df.runAfter(function(){df._pending=null;try{df.run();accept(df);}catch(err){reject(err);}});}};return df._pending=pending;}function request(target,url,format){var df=this,pending=df._pending||loadPending(df);pending.requests+=1;df.loader().load(url,{context:'dataflow'}).then(function(data){df.ingest(target,data,format);},function(error){df.error('Loading failed',url,error);}).catch(function(error){df.error('Data ingestion failed',url,error);}).then(pending.done,pending.done);}var SKIP$1={skip:true};/**
 * Perform operator updates in response to events. Applies an
 * update function to compute a new operator value. If the update function
 * returns a {@link ChangeSet}, the operator will be pulsed with those tuple
 * changes. Otherwise, the operator value will be updated to the return value.
 * @param {EventStream|Operator} source - The event source to react to.
 *   This argument can be either an EventStream or an Operator.
 * @param {Operator|function(object):Operator} target - The operator to update.
 *   This argument can either be an Operator instance or (if the source
 *   argument is an EventStream), a function that accepts an event object as
 *   input and returns an Operator to target.
 * @param {function(Parameters,Event): *} [update] - Optional update function
 *   to compute the new operator value, or a literal value to set. Update
 *   functions expect to receive a parameter object and event as arguments.
 *   This function can either return a new operator value or (if the source
 *   argument is an EventStream) a {@link ChangeSet} instance to pulse
 *   the target operator with tuple changes.
 * @param {object} [params] - The update function parameters.
 * @param {object} [options] - Additional options hash. If not overridden,
 *   updated operators will be skipped by default.
 * @param {boolean} [options.skip] - If true, the operator will
 *  be skipped: it will not be evaluated, but its dependents will be.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @return {Dataflow}
 */var on=function on(source,target,update,params,options){var fn=source instanceof Operator?onOperator:onStream;fn(this,source,target,update,params,options);return this;};function onStream(df,stream,target,update,params,options){var opt=extend({},options,SKIP$1),func,op;if(!isFunction(target))target=constant(target);if(update===undefined){func=function func(e){df.touch(target(e));};}else if(isFunction(update)){op=new Operator(null,update,params,false);func=function func(e){var v,t=target(e);op.evaluate(e);isChangeSet(v=op.value)?df.pulse(t,v,options):df.update(t,v,opt);};}else{func=function func(e){df.update(target(e),update,opt);};}stream.apply(func);}function onOperator(df,source,target,update,params,options){var func,op;if(update===undefined){op=target;}else{func=isFunction(update)?update:constant(update);update=!target?func:function(_,pulse){var value=func(_,pulse);return target.skip()?value:target.skip(true).value=value;};op=new Operator(null,update,params,false);op.modified(options&&options.force);op.rank=0;if(target){op.skip(true);// skip first invocation
op.value=target.value;op.targets().add(target);}}source.targets().add(op);}/**
 * Assigns a rank to an operator. Ranks are assigned in increasing order
 * by incrementing an internal rank counter.
 * @param {Operator} op - The operator to assign a rank.
 */function rank(op){op.rank=++this._rank;}/**
 * Re-ranks an operator and all downstream target dependencies. This
 * is necessary when upstream depencies of higher rank are added to
 * a target operator.
 * @param {Operator} op - The operator to re-rank.
 */function rerank(op){var queue=[op],cur,list,i;while(queue.length){this.rank(cur=queue.pop());if(list=cur._targets){for(i=list.length;--i>=0;){queue.push(cur=list[i]);if(cur===op)error$1('Cycle detected in dataflow graph.');}}}}/**
 * Sentinel value indicating pulse propagation should stop.
 */var StopPropagation={};// Pulse visit type flags
var ADD=1<<0;var REM=1<<1;var MOD=1<<2;var ADD_REM=ADD|REM;var ADD_MOD=ADD|MOD;var ALL=ADD|REM|MOD;var REFLOW=1<<3;var SOURCE=1<<4;var NO_SOURCE=1<<5;var NO_FIELDS=1<<6;/**
 * A Pulse enables inter-operator communication during a run of the
 * dataflow graph. In addition to the current timestamp, a pulse may also
 * contain a change-set of added, removed or modified data tuples, as well as
 * a pointer to a full backing data source. Tuple change sets may not
 * be fully materialized; for example, to prevent needless array creation
 * a change set may include larger arrays and corresponding filter functions.
 * The pulse provides a {@link visit} method to enable proper and efficient
 * iteration over requested data tuples.
 *
 * In addition, each pulse can track modification flags for data tuple fields.
 * Responsible transform operators should call the {@link modifies} method to
 * indicate changes to data fields. The {@link modified} method enables
 * querying of this modification state.
 *
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The current propagation timestamp.
 * @param {string} [encode] - An optional encoding set name, which is then
 *   accessible as Pulse.encode. Operators can respond to (or ignore) this
 *   setting as appropriate. This parameter can be used in conjunction with
 *   the Encode transform in the vega-encode module.
 */function Pulse(dataflow,stamp,encode){this.dataflow=dataflow;this.stamp=stamp==null?-1:stamp;this.add=[];this.rem=[];this.mod=[];this.fields=null;this.encode=encode||null;}var prototype$4=Pulse.prototype;/**
 * Sentinel value indicating pulse propagation should stop.
 */prototype$4.StopPropagation=StopPropagation;/**
 * Boolean flag indicating ADD (added) tuples.
 */prototype$4.ADD=ADD;/**
 * Boolean flag indicating REM (removed) tuples.
 */prototype$4.REM=REM;/**
 * Boolean flag indicating MOD (modified) tuples.
 */prototype$4.MOD=MOD;/**
 * Boolean flag indicating ADD (added) and REM (removed) tuples.
 */prototype$4.ADD_REM=ADD_REM;/**
 * Boolean flag indicating ADD (added) and MOD (modified) tuples.
 */prototype$4.ADD_MOD=ADD_MOD;/**
 * Boolean flag indicating ADD, REM and MOD tuples.
 */prototype$4.ALL=ALL;/**
 * Boolean flag indicating all tuples in a data source
 * except for the ADD, REM and MOD tuples.
 */prototype$4.REFLOW=REFLOW;/**
 * Boolean flag indicating a 'pass-through' to a
 * backing data source, ignoring ADD, REM and MOD tuples.
 */prototype$4.SOURCE=SOURCE;/**
 * Boolean flag indicating that source data should be
 * suppressed when creating a forked pulse.
 */prototype$4.NO_SOURCE=NO_SOURCE;/**
 * Boolean flag indicating that field modifications should be
 * suppressed when creating a forked pulse.
 */prototype$4.NO_FIELDS=NO_FIELDS;/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created.
 * @return {Pulse} - The forked pulse instance.
 * @see init
 */prototype$4.fork=function(flags){return new Pulse(this.dataflow).init(this,flags);};/**
 * Returns a pulse that adds all tuples from a backing source. This is
 * useful for cases where operators are added to a dataflow after an
 * upstream data pipeline has already been processed, ensuring that
 * new operators can observe all tuples within a stream.
 * @return {Pulse} - A pulse instance with all source tuples included
 *   in the add array. If the current pulse already has all source
 *   tuples in its add array, it is returned directly. If the current
 *   pulse does not have a backing source, it is returned directly.
 */prototype$4.addAll=function(){var p=this;if(!this.source||this.source.length===this.add.length){return p;}else{p=new Pulse(this.dataflow).init(this);p.add=p.source;return p;}};/**
 * Initialize this pulse based on the values of another pulse. This method
 * is used internally by {@link fork} to initialize a new forked tuple.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {Pulse} src - The source pulse to copy from.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created. By default, source data arrays are copied
 *   to the new pulse. Use the NO_SOURCE flag to enforce a null source.
 * @return {Pulse} - Returns this Pulse instance.
 */prototype$4.init=function(src,flags){var p=this;p.stamp=src.stamp;p.encode=src.encode;if(src.fields&&!(flags&NO_FIELDS)){p.fields=src.fields;}if(flags&ADD){p.addF=src.addF;p.add=src.add;}else{p.addF=null;p.add=[];}if(flags&REM){p.remF=src.remF;p.rem=src.rem;}else{p.remF=null;p.rem=[];}if(flags&MOD){p.modF=src.modF;p.mod=src.mod;}else{p.modF=null;p.mod=[];}if(flags&NO_SOURCE){p.srcF=null;p.source=null;}else{p.srcF=src.srcF;p.source=src.source;}return p;};/**
 * Schedules a function to run after pulse propagation completes.
 * @param {function} func - The function to run.
 */prototype$4.runAfter=function(func){this.dataflow.runAfter(func);};/**
 * Indicates if tuples have been added, removed or modified.
 * @param {number} [flags] - The tuple types (ADD, REM or MOD) to query.
 *   Defaults to ALL, returning true if any tuple type has changed.
 * @return {boolean} - Returns true if one or more queried tuple types have
 *   changed, false otherwise.
 */prototype$4.changed=function(flags){var f=flags||ALL;return f&ADD&&this.add.length||f&REM&&this.rem.length||f&MOD&&this.mod.length;};/**
 * Forces a "reflow" of tuple values, such that all tuples in the backing
 * source are added to the MOD set, unless already present in the ADD set.
 * @param {boolean} [fork=false] - If true, returns a forked copy of this
 *   pulse, and invokes reflow on that derived pulse.
 * @return {Pulse} - The reflowed pulse instance.
 */prototype$4.reflow=function(fork){if(fork)return this.fork(ALL).reflow();var len=this.add.length,src=this.source&&this.source.length;if(src&&src!==len){this.mod=this.source;if(len)this.filter(MOD,filter(this,ADD));}return this;};/**
 * Marks one or more data field names as modified to assist dependency
 * tracking and incremental processing by transform operators.
 * @param {string|Array<string>} _ - The field(s) to mark as modified.
 * @return {Pulse} - This pulse instance.
 */prototype$4.modifies=function(_){var fields=array(_),hash=this.fields||(this.fields={});fields.forEach(function(f){hash[f]=true;});return this;};/**
 * Checks if one or more data fields have been modified during this pulse
 * propagation timestamp.
 * @param {string|Array<string>} _ - The field(s) to check for modified.
 * @return {boolean} - Returns true if any of the provided fields has been
 *   marked as modified, false otherwise.
 */prototype$4.modified=function(_){var fields=this.fields;return!(this.mod.length&&fields)?false:!arguments.length?!!fields:isArray(_)?_.some(function(f){return fields[f];}):fields[_];};/**
 * Adds a filter function to one more tuple sets. Filters are applied to
 * backing tuple arrays, to determine the actual set of tuples considered
 * added, removed or modified. They can be used to delay materialization of
 * a tuple set in order to avoid expensive array copies. In addition, the
 * filter functions can serve as value transformers: unlike standard predicate
 * function (which return boolean values), Pulse filters should return the
 * actual tuple value to process. If a tuple set is already filtered, the
 * new filter function will be appended into a conjuntive ('and') query.
 * @param {number} flags - Flags indicating the tuple set(s) to filter.
 * @param {function(*):object} filter - Filter function that will be applied
 *   to the tuple set array, and should return a data tuple if the value
 *   should be included in the tuple set, and falsy (or null) otherwise.
 * @return {Pulse} - Returns this pulse instance.
 */prototype$4.filter=function(flags,filter){var p=this;if(flags&ADD)p.addF=addFilter(p.addF,filter);if(flags&REM)p.remF=addFilter(p.remF,filter);if(flags&MOD)p.modF=addFilter(p.modF,filter);if(flags&SOURCE)p.srcF=addFilter(p.srcF,filter);return p;};function addFilter(a,b){return a?function(t,i){return a(t,i)&&b(t,i);}:b;}/**
 * Materialize one or more tuple sets in this pulse. If the tuple set(s) have
 * a registered filter function, it will be applied and the tuple set(s) will
 * be replaced with materialized tuple arrays.
 * @param {number} flags - Flags indicating the tuple set(s) to materialize.
 * @return {Pulse} - Returns this pulse instance.
 */prototype$4.materialize=function(flags){flags=flags||ALL;var p=this;if(flags&ADD&&p.addF){p.add=materialize(p.add,p.addF);p.addF=null;}if(flags&REM&&p.remF){p.rem=materialize(p.rem,p.remF);p.remF=null;}if(flags&MOD&&p.modF){p.mod=materialize(p.mod,p.modF);p.modF=null;}if(flags&SOURCE&&p.srcF){p.source=p.source.filter(p.srcF);p.srcF=null;}return p;};function materialize(data,filter){var out=[];visitArray(data,filter,function(_){out.push(_);});return out;}function filter(pulse,flags){var map={};pulse.visit(flags,function(t){map[tupleid(t)]=1;});return function(t){return map[tupleid(t)]?null:t;};}/**
 * Visit one or more tuple sets in this pulse.
 * @param {number} flags - Flags indicating the tuple set(s) to visit.
 *   Legal values are ADD, REM, MOD and SOURCE (if a backing data source
 *   has been set).
 * @param {function(object):*} - Visitor function invoked per-tuple.
 * @return {Pulse} - Returns this pulse instance.
 */prototype$4.visit=function(flags,visitor){var p=this,v=visitor,src,sum;if(flags&SOURCE){visitArray(p.source,p.srcF,v);return p;}if(flags&ADD)visitArray(p.add,p.addF,v);if(flags&REM)visitArray(p.rem,p.remF,v);if(flags&MOD)visitArray(p.mod,p.modF,v);if(flags&REFLOW&&(src=p.source)){sum=p.add.length+p.mod.length;if(sum===src.length){// do nothing
}else if(sum){visitArray(src,filter(p,ADD_MOD),v);}else{// if no add/rem/mod tuples, visit source
visitArray(src,p.srcF,v);}}return p;};/**
 * Represents a set of multiple pulses. Used as input for operators
 * that accept multiple pulses at a time. Contained pulses are
 * accessible via the public "pulses" array property. This pulse doe
 * not carry added, removed or modified tuples directly. However,
 * the visit method can be used to traverse all such tuples contained
 * in sub-pulses with a timestamp matching this parent multi-pulse.
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The timestamp.
 * @param {Array<Pulse>} pulses - The sub-pulses for this multi-pulse.
 */function MultiPulse(dataflow,stamp,pulses,encode){var p=this,c=0,pulse,hash,i,n,f;this.dataflow=dataflow;this.stamp=stamp;this.fields=null;this.encode=encode||null;this.pulses=pulses;for(i=0,n=pulses.length;i<n;++i){pulse=pulses[i];if(pulse.stamp!==stamp)continue;if(pulse.fields){hash=p.fields||(p.fields={});for(f in pulse.fields){hash[f]=1;}}if(pulse.changed(p.ADD))c|=p.ADD;if(pulse.changed(p.REM))c|=p.REM;if(pulse.changed(p.MOD))c|=p.MOD;}this.changes=c;}var prototype$5=inherits(MultiPulse,Pulse);/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * @return {Pulse}
 */prototype$5.fork=function(flags){var p=new Pulse(this.dataflow).init(this,flags&this.NO_FIELDS);if(flags!==undefined){if(flags&p.ADD){this.visit(p.ADD,function(t){return p.add.push(t);});}if(flags&p.REM){this.visit(p.REM,function(t){return p.rem.push(t);});}if(flags&p.MOD){this.visit(p.MOD,function(t){return p.mod.push(t);});}}return p;};prototype$5.changed=function(flags){return this.changes&flags;};prototype$5.modified=function(_){var p=this,fields=p.fields;return!(fields&&p.changes&p.MOD)?0:isArray(_)?_.some(function(f){return fields[f];}):fields[_];};prototype$5.filter=function(){error$1('MultiPulse does not support filtering.');};prototype$5.materialize=function(){error$1('MultiPulse does not support materialization.');};prototype$5.visit=function(flags,visitor){var p=this,pulses=p.pulses,n=pulses.length,i=0;if(flags&p.SOURCE){for(;i<n;++i){pulses[i].visit(flags,visitor);}}else{for(;i<n;++i){if(pulses[i].stamp===p.stamp){pulses[i].visit(flags,visitor);}}}return p;};/**
 * Runs the dataflow. This method will increment the current timestamp
 * and process all updated, pulsed and touched operators. When run for
 * the first time, all registered operators will be processed. If there
 * are pending data loading operations, this method will return immediately
 * without evaluating the dataflow. Instead, the dataflow will be
 * asynchronously invoked when data loading completes. To track when dataflow
 * evaluation completes, use the {@link runAsync} method instead.
 * @param {string} [encode] - The name of an encoding set to invoke during
 *   propagation. This value is added to generated Pulse instances;
 *   operators can then respond to (or ignore) this setting as appropriate.
 *   This parameter can be used in conjunction with the Encode transform in
 *   the vega-encode module.
 */function run(encode){var df=this,count=0,level=df.logLevel(),op,next,dt,error;if(df._pending){df.info('Awaiting requests, delaying dataflow run.');return 0;}if(df._pulse){df.error('Dataflow invoked recursively. Use the runAfter method to queue invocation.');return 0;}if(!df._touched.length){df.info('Dataflow invoked, but nothing to do.');return 0;}df._pulse=new Pulse(df,++df._clock,encode);if(level>=Info){dt=Date.now();df.debug('-- START PROPAGATION ('+df._clock+') -----');}// initialize queue, reset touched operators
df._touched.forEach(function(op){df._enqueue(op,true);});df._touched=UniqueList(id);try{while(df._heap.size()>0){op=df._heap.pop();// re-queue if rank changes
if(op.rank!==op.qrank){df._enqueue(op,true);continue;}// otherwise, evaluate the operator
next=op.run(df._getPulse(op,encode));if(level>=Debug){df.debug(op.id,next===StopPropagation?'STOP':next,op);}// propagate the pulse
if(next!==StopPropagation){df._pulse=next;if(op._targets)op._targets.forEach(function(op){df._enqueue(op);});}// increment visit counter
++count;}}catch(err){error=err;}// reset pulse map
df._pulses={};df._pulse=null;if(level>=Info){dt=Date.now()-dt;df.info('> Pulse '+df._clock+': '+count+' operators; '+dt+'ms');}if(error){df._postrun=[];df.error(error);}if(df._onrun){try{df._onrun(df,count,error);}catch(err){df.error(err);}}// invoke callbacks queued via runAfter
if(df._postrun.length){var postrun=df._postrun;df._postrun=[];postrun.forEach(function(f){try{f(df);}catch(err){df.error(err);}});}return count;}/**
 * Runs the dataflow and returns a Promise that resolves when the
 * propagation cycle completes. The standard run method may exit early
 * if there are pending data loading operations. In contrast, this
 * method returns a Promise to allow callers to receive notification
 * when dataflow evaluation completes.
 * @return {Promise} - A promise that resolves to this dataflow.
 */function runAsync(){return this._pending||Promise.resolve(this.run());}/**
 * Schedules a callback function to be invoked after the current pulse
 * propagation completes. If no propagation is currently occurring,
 * the function is invoked immediately.
 * @param {function(Dataflow)} callback - The callback function to run.
 *   The callback will be invoked with this Dataflow instance as its
 *   sole argument.
 * @param {boolean} enqueue - A boolean flag indicating that the
 *   callback should be queued up to run after the next propagation
 *   cycle, suppressing immediate invovation when propagation is not
 *   currently occurring.
 */function runAfter(callback,enqueue){if(this._pulse||enqueue){// pulse propagation is currently running, queue to run after
this._postrun.push(callback);}else{// pulse propagation already complete, invoke immediately
try{callback(this);}catch(err){this.error(err);}}}/**
 * Enqueue an operator into the priority queue for evaluation. The operator
 * will be enqueued if it has no registered pulse for the current cycle, or if
 * the force argument is true. Upon enqueue, this method also sets the
 * operator's qrank to the current rank value.
 * @param {Operator} op - The operator to enqueue.
 * @param {boolean} [force] - A flag indicating if the operator should be
 *   forceably added to the queue, even if it has already been previously
 *   enqueued during the current pulse propagation. This is useful when the
 *   dataflow graph is dynamically modified and the operator rank changes.
 */function enqueue(op,force){var p=!this._pulses[op.id];if(p)this._pulses[op.id]=this._pulse;if(p||force){op.qrank=op.rank;this._heap.push(op);}}/**
 * Provide a correct pulse for evaluating an operator. If the operator has an
 * explicit source operator, we will try to pull the pulse(s) from it.
 * If there is an array of source operators, we build a multi-pulse.
 * Otherwise, we return a current pulse with correct source data.
 * If the pulse is the pulse map has an explicit target set, we use that.
 * Else if the pulse on the upstream source operator is current, we use that.
 * Else we use the pulse from the pulse map, but copy the source tuple array.
 * @param {Operator} op - The operator for which to get an input pulse.
 * @param {string} [encode] - An (optional) encoding set name with which to
 *   annotate the returned pulse. See {@link run} for more information.
 */function getPulse(op,encode){var s=op.source,stamp=this._clock,p;if(s&&isArray(s)){p=s.map(function(_){return _.pulse;});return new MultiPulse(this,stamp,p,encode);}else{s=s&&s.pulse;p=this._pulses[op.id];if(s&&s!==StopPropagation){if(s.stamp===stamp&&p.target!==op)p=s;else p.source=s.source;}return p;}}var NO_OPT={skip:false,force:false};/**
 * Touches an operator, scheduling it to be evaluated. If invoked outside of
 * a pulse propagation, the operator will be evaluated the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the operator
 * will be queued for evaluation if and only if the operator has not yet been
 * evaluated on the current propagation timestamp.
 * @param {Operator} op - The operator to touch.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */function touch(op,options){var opt=options||NO_OPT;if(this._pulse){// if in midst of propagation, add to priority queue
this._enqueue(op);}else{// otherwise, queue for next propagation
this._touched.add(op);}if(opt.skip)op.skip(true);return this;}/**
 * Updates the value of the given operator.
 * @param {Operator} op - The operator to update.
 * @param {*} value - The value to set.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */function update(op,value,options){var opt=options||NO_OPT;if(op.set(value)||opt.force){this.touch(op,opt);}return this;}/**
 * Pulses an operator with a changeset of tuples. If invoked outside of
 * a pulse propagation, the pulse will be applied the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the pulse
 * will be added to the set of active pulses and will be applied if and
 * only if the target operator has not yet been evaluated on the current
 * propagation timestamp.
 * @param {Operator} op - The operator to pulse.
 * @param {ChangeSet} value - The tuple changeset to apply.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */function pulse(op,changeset,options){this.touch(op,options||NO_OPT);var p=new Pulse(this,this._clock+(this._pulse?0:1)),t=op.pulse&&op.pulse.source||[];p.target=op;this._pulses[op.id]=changeset.pulse(p,t);return this;}function Heap(comparator){this.cmp=comparator;this.nodes=[];}var prototype$6=Heap.prototype;prototype$6.size=function(){return this.nodes.length;};prototype$6.clear=function(){this.nodes=[];return this;};prototype$6.peek=function(){return this.nodes[0];};prototype$6.push=function(x){var array=this.nodes;array.push(x);return siftdown(array,0,array.length-1,this.cmp);};prototype$6.pop=function(){var array=this.nodes,last=array.pop(),item;if(array.length){item=array[0];array[0]=last;siftup(array,0,this.cmp);}else{item=last;}return item;};prototype$6.replace=function(item){var array=this.nodes,retval=array[0];array[0]=item;siftup(array,0,this.cmp);return retval;};prototype$6.pushpop=function(item){var array=this.nodes,ref=array[0];if(array.length&&this.cmp(ref,item)<0){array[0]=item;item=ref;siftup(array,0,this.cmp);}return item;};function siftdown(array,start,idx,cmp){var item,parent,pidx;item=array[idx];while(idx>start){pidx=idx-1>>1;parent=array[pidx];if(cmp(item,parent)<0){array[idx]=parent;idx=pidx;continue;}break;}return array[idx]=item;}function siftup(array,idx,cmp){var start=idx,end=array.length,item=array[idx],cidx=2*idx+1,ridx;while(cidx<end){ridx=cidx+1;if(ridx<end&&cmp(array[cidx],array[ridx])>=0){cidx=ridx;}array[idx]=array[cidx];idx=cidx;cidx=2*idx+1;}array[idx]=item;return siftdown(array,start,idx,cmp);}/**
 * A dataflow graph for reactive processing of data streams.
 * @constructor
 */function Dataflow(){this._log=logger();this.logLevel(Error$1);this._clock=0;this._rank=0;this._loader=loader();this._touched=UniqueList(id);this._pulses={};this._pulse=null;this._heap=new Heap(function(a,b){return a.qrank-b.qrank;});this._postrun=[];}var prototype=Dataflow.prototype;/**
 * The current timestamp of this dataflow. This value reflects the
 * timestamp of the previous dataflow run. The dataflow is initialized
 * with a stamp value of 0. The initial run of the dataflow will have
 * a timestap of 1, and so on. This value will match the
 * {@link Pulse.stamp} property.
 * @return {number} - The current timestamp value.
 */prototype.stamp=function(){return this._clock;};/**
 * Gets or sets the loader instance to use for data file loading. A
 * loader object must provide a "load" method for loading files and a
 * "sanitize" method for checking URL/filename validity. Both methods
 * should accept a URI and options hash as arguments, and return a Promise
 * that resolves to the loaded file contents (load) or a hash containing
 * sanitized URI data with the sanitized url assigned to the "href" property
 * (sanitize).
 * @param {object} _ - The loader instance to use.
 * @return {object|Dataflow} - If no arguments are provided, returns
 *   the current loader instance. Otherwise returns this Dataflow instance.
 */prototype.loader=function(_){if(arguments.length){this._loader=_;return this;}else{return this._loader;}};/**
 * Empty entry threshold for garbage cleaning. Map data structures will
 * perform cleaning once the number of empty entries exceeds this value.
 */prototype.cleanThreshold=1e4;// OPERATOR REGISTRATION
prototype.add=add;prototype.connect=connect;prototype.rank=rank;prototype.rerank=rerank;// OPERATOR UPDATES
prototype.pulse=pulse;prototype.touch=touch;prototype.update=update;prototype.changeset=changeset;// DATA LOADING
prototype.ingest=ingest$1;prototype.request=request;// EVENT HANDLING
prototype.events=events;prototype.on=on;// PULSE PROPAGATION
prototype.run=run;prototype.runAsync=runAsync;prototype.runAfter=runAfter;prototype._enqueue=enqueue;prototype._getPulse=getPulse;// LOGGING AND ERROR HANDLING
function logMethod(method){return function(){return this._log[method].apply(this,arguments);};}/**
 * Logs an error message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit error messages.
 */prototype.error=logMethod('error');/**
 * Logs a warning message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit warning messages.
 */prototype.warn=logMethod('warn');/**
 * Logs a information message. By default, logged messages are written to
 * console output. The message will only be logged if the current log level is
 * high enough to permit information messages.
 */prototype.info=logMethod('info');/**
 * Logs a debug message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit debug messages.
 */prototype.debug=logMethod('debug');/**
 * Get or set the current log level. If an argument is provided, it
 * will be used as the new log level.
 * @param {number} [level] - Should be one of None, Warn, Info
 * @return {number} - The current log level.
 */prototype.logLevel=logMethod('level');/**
 * Abstract class for operators that process data tuples.
 * Subclasses must provide a {@link transform} method for operator processing.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {Operator} [source] - The operator from which to receive pulses.
 */function Transform(init,params){Operator.call(this,init,null,params);}var prototype$7=inherits(Transform,Operator);/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */prototype$7.run=function(pulse){if(pulse.stamp<=this.stamp)return pulse.StopPropagation;var rv;if(this.skip()){this.skip(false);}else{rv=this.evaluate(pulse);}rv=rv||pulse;if(rv!==pulse.StopPropagation)this.pulse=rv;this.stamp=pulse.stamp;return rv;};/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Marshalls parameter values and then invokes {@link transform}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
     value (including undefined) will let the input pulse pass through.
 */prototype$7.evaluate=function(pulse){var params=this.marshall(pulse.stamp),out=this.transform(params,pulse);params.clear();return out;};/**
 * Process incoming pulses.
 * Subclasses should override this method to implement transforms.
 * @param {Parameters} _ - The operator parameter values.
 * @param {Pulse} pulse - The current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
 *   value (including undefined) will let the input pulse pass through.
 */prototype$7.transform=function(){};var transforms={};function definition(type){var t=transform(type);return t&&t.Definition||null;}function transform(type){type=type&&type.toLowerCase();return transforms.hasOwnProperty(type)?transforms[type]:null;}// Utilities
function multikey(f){return function(x){var n=f.length,i=1,k=String(f[0](x));for(;i<n;++i){k+='|'+f[i](x);}return k;};}function groupkey(fields){return!fields||!fields.length?function(){return'';}:fields.length===1?fields[0]:multikey(fields);}function measureName(op,field$$1,as){return as||op+(!field$$1?'':'_'+field$$1);}var AggregateOps={'values':measure({name:'values',init:'cell.store = true;',set:'cell.data.values()',idx:-1}),'count':measure({name:'count',set:'cell.num'}),'missing':measure({name:'missing',set:'this.missing'}),'valid':measure({name:'valid',set:'this.valid'}),'sum':measure({name:'sum',init:'this.sum = 0;',add:'this.sum += v;',rem:'this.sum -= v;',set:'this.sum'}),'mean':measure({name:'mean',init:'this.mean = 0;',add:'var d = v - this.mean; this.mean += d / this.valid;',rem:'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',set:'this.mean'}),'average':measure({name:'average',set:'this.mean',req:['mean'],idx:1}),'variance':measure({name:'variance',init:'this.dev = 0;',add:'this.dev += d * (v - this.mean);',rem:'this.dev -= d * (v - this.mean);',set:'this.valid > 1 ? this.dev / (this.valid-1) : 0',req:['mean'],idx:1}),'variancep':measure({name:'variancep',set:'this.valid > 1 ? this.dev / this.valid : 0',req:['variance'],idx:2}),'stdev':measure({name:'stdev',set:'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',req:['variance'],idx:2}),'stdevp':measure({name:'stdevp',set:'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',req:['variance'],idx:2}),'stderr':measure({name:'stderr',set:'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : 0',req:['variance'],idx:2}),'distinct':measure({name:'distinct',set:'cell.data.distinct(this.get)',req:['values'],idx:3}),'ci0':measure({name:'ci0',set:'cell.data.ci0(this.get)',req:['values'],idx:3}),'ci1':measure({name:'ci1',set:'cell.data.ci1(this.get)',req:['values'],idx:3}),'median':measure({name:'median',set:'cell.data.q2(this.get)',req:['values'],idx:3}),'q1':measure({name:'q1',set:'cell.data.q1(this.get)',req:['values'],idx:3}),'q3':measure({name:'q3',set:'cell.data.q3(this.get)',req:['values'],idx:3}),'argmin':measure({name:'argmin',init:'this.argmin = null;',add:'if (v < this.min) this.argmin = t;',rem:'if (v <= this.min) this.argmin = null;',set:'this.argmin || cell.data.argmin(this.get)',req:['min'],str:['values'],idx:3}),'argmax':measure({name:'argmax',init:'this.argmax = null;',add:'if (v > this.max) this.argmax = t;',rem:'if (v >= this.max) this.argmax = null;',set:'this.argmax || cell.data.argmax(this.get)',req:['max'],str:['values'],idx:3}),'min':measure({name:'min',init:'this.min = null;',add:'if (v < this.min || this.min === null) this.min = v;',rem:'if (v <= this.min) this.min = NaN;',set:'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',str:['values'],idx:4}),'max':measure({name:'max',init:'this.max = null;',add:'if (v > this.max || this.max === null) this.max = v;',rem:'if (v >= this.max) this.max = NaN;',set:'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',str:['values'],idx:4})};var ValidAggregateOps=Object.keys(AggregateOps);function createMeasure(op,name){return AggregateOps[op](name);}function measure(base){return function(out){var m=extend({init:'',add:'',rem:'',idx:0},base);m.out=out||base.name;return m;};}function compareIndex(a,b){return a.idx-b.idx;}function resolve(agg,stream){function collect(m,a){function helper(r){if(!m[r])collect(m,m[r]=AggregateOps[r]());}if(a.req)a.req.forEach(helper);if(stream&&a.str)a.str.forEach(helper);return m;}var map=agg.reduce(collect,agg.reduce(function(m,a){m[a.name]=a;return m;},{}));var values=[],key$$1;for(key$$1 in map){values.push(map[key$$1]);}return values.sort(compareIndex);}function compileMeasures(agg,field$$1){var get=field$$1||identity,all=resolve(agg,true),// assume streaming removes may occur
init='var cell = this.cell; this.valid = 0; this.missing = 0;',ctr='this.cell = cell; this.init();',add='if(v==null){++this.missing; return;} if(v!==v) return; ++this.valid;',rem='if(v==null){--this.missing; return;} if(v!==v) return; --this.valid;',set='var cell = this.cell;';all.forEach(function(a){init+=a.init;add+=a.add;rem+=a.rem;});agg.slice().sort(compareIndex).forEach(function(a){set+='t[\''+a.out+'\']='+a.set+';';});set+='return t;';ctr=Function('cell',ctr);ctr.prototype.init=Function(init);ctr.prototype.add=Function('v','t',add);ctr.prototype.rem=Function('v','t',rem);ctr.prototype.set=Function('t',set);ctr.prototype.get=get;ctr.fields=agg.map(function(_){return _.out;});return ctr;}var bin=function bin(_){// determine range
var maxb=_.maxbins||20,base=_.base||10,logb=Math.log(base),div=_.divide||[5,2],min=_.extent[0],max=_.extent[1],span=max-min,step,level,minstep,precision,v,i,n,eps;if(_.step){// if step size is explicitly given, use that
step=_.step;}else if(_.steps){// if provided, limit choice to acceptable step sizes
v=span/maxb;for(i=0,n=_.steps.length;i<n&&_.steps[i]<v;++i){}step=_.steps[Math.max(0,i-1)];}else{// else use span to determine step size
level=Math.ceil(Math.log(maxb)/logb);minstep=_.minstep||0;step=Math.max(minstep,Math.pow(base,Math.round(Math.log(span)/logb)-level));// increase step size if too many bins
while(Math.ceil(span/step)>maxb){step*=base;}// decrease step size if allowed
for(i=0,n=div.length;i<n;++i){v=step/div[i];if(v>=minstep&&span/v<=maxb)step=v;}}// update precision, min and max
v=Math.log(step);precision=v>=0?0:~~(-v/logb)+1;eps=Math.pow(base,-precision-1);if(_.nice||_.nice===undefined){v=Math.floor(min/step+eps)*step;min=min<v?v-step:v;max=Math.ceil(max/step)*step;}return{start:min,stop:max,step:step};};var numbers=function numbers(array,f){var numbers=[],n=array.length,i=-1,a;if(f==null){while(++i<n){if(!isNaN(a=number(array[i])))numbers.push(a);}}else{while(++i<n){if(!isNaN(a=number(f(array[i],i,array))))numbers.push(a);}}return numbers;};function number(x){return x===null?NaN:+x;}var ascending=function ascending(a,b){return a<b?-1:a>b?1:a>=b?0:NaN;};var bisector=function bisector(compare){if(compare.length===1)compare=ascendingComparator(compare);return{left:function left(a,x,lo,hi){if(lo==null)lo=0;if(hi==null)hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(compare(a[mid],x)<0)lo=mid+1;else hi=mid;}return lo;},right:function right(a,x,lo,hi){if(lo==null)lo=0;if(hi==null)hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(compare(a[mid],x)>0)hi=mid;else lo=mid+1;}return lo;}};};function ascendingComparator(f){return function(d,x){return ascending(f(d),x);};}var ascendingBisect=bisector(ascending);var bisectRight=ascendingBisect.right;var bisectLeft=ascendingBisect.left;function pair(a,b){return[a,b];}var number$1=function number$1(x){return x===null?NaN:+x;};var variance=function variance(values,valueof){var n=values.length,m=0,i=-1,mean=0,value,delta,sum=0;if(valueof==null){while(++i<n){if(!isNaN(value=number$1(values[i]))){delta=value-mean;mean+=delta/++m;sum+=delta*(value-mean);}}}else{while(++i<n){if(!isNaN(value=number$1(valueof(values[i],i,values)))){delta=value-mean;mean+=delta/++m;sum+=delta*(value-mean);}}}if(m>1)return sum/(m-1);};var extent=function extent(values,valueof){var n=values.length,i=-1,value,min,max;if(valueof==null){while(++i<n){// Find the first comparable value.
if((value=values[i])!=null&&value>=value){min=max=value;while(++i<n){// Compare the remaining values.
if((value=values[i])!=null){if(min>value)min=value;if(max<value)max=value;}}}}}else{while(++i<n){// Find the first comparable value.
if((value=valueof(values[i],i,values))!=null&&value>=value){min=max=value;while(++i<n){// Compare the remaining values.
if((value=valueof(values[i],i,values))!=null){if(min>value)min=value;if(max<value)max=value;}}}}}return[min,max];};var identity$1=function identity$1(x){return x;};var sequence=function sequence(start,stop,step){start=+start,stop=+stop,step=(n=arguments.length)<2?(stop=start,start=0,1):n<3?1:+step;var i=-1,n=Math.max(0,Math.ceil((stop-start)/step))|0,range=new Array(n);while(++i<n){range[i]=start+i*step;}return range;};var e10=Math.sqrt(50);var e5=Math.sqrt(10);var e2=Math.sqrt(2);var ticks=function ticks(start,stop,count){var reverse=stop<start,i=-1,n,ticks,step;if(reverse)n=start,start=stop,stop=n;if((step=tickIncrement(start,stop,count))===0||!isFinite(step))return[];if(step>0){start=Math.ceil(start/step);stop=Math.floor(stop/step);ticks=new Array(n=Math.ceil(stop-start+1));while(++i<n){ticks[i]=(start+i)*step;}}else{start=Math.floor(start*step);stop=Math.ceil(stop*step);ticks=new Array(n=Math.ceil(start-stop+1));while(++i<n){ticks[i]=(start-i)/step;}}if(reverse)ticks.reverse();return ticks;};function tickIncrement(start,stop,count){var step=(stop-start)/Math.max(0,count),power=Math.floor(Math.log(step)/Math.LN10),error=step/Math.pow(10,power);return power>=0?(error>=e10?10:error>=e5?5:error>=e2?2:1)*Math.pow(10,power):-Math.pow(10,-power)/(error>=e10?10:error>=e5?5:error>=e2?2:1);}function tickStep(start,stop,count){var step0=Math.abs(stop-start)/Math.max(0,count),step1=Math.pow(10,Math.floor(Math.log(step0)/Math.LN10)),error=step0/step1;if(error>=e10)step1*=10;else if(error>=e5)step1*=5;else if(error>=e2)step1*=2;return stop<start?-step1:step1;}var thresholdSturges=function thresholdSturges(values){return Math.ceil(Math.log(values.length)/Math.LN2)+1;};var threshold=function threshold(values,p,valueof){if(valueof==null)valueof=number$1;if(!(n=values.length))return;if((p=+p)<=0||n<2)return+valueof(values[0],0,values);if(p>=1)return+valueof(values[n-1],n-1,values);var n,i=(n-1)*p,i0=Math.floor(i),value0=+valueof(values[i0],i0,values),value1=+valueof(values[i0+1],i0+1,values);return value0+(value1-value0)*(i-i0);};var max=function max(values,valueof){var n=values.length,i=-1,value,max;if(valueof==null){while(++i<n){// Find the first comparable value.
if((value=values[i])!=null&&value>=value){max=value;while(++i<n){// Compare the remaining values.
if((value=values[i])!=null&&value>max){max=value;}}}}}else{while(++i<n){// Find the first comparable value.
if((value=valueof(values[i],i,values))!=null&&value>=value){max=value;while(++i<n){// Compare the remaining values.
if((value=valueof(values[i],i,values))!=null&&value>max){max=value;}}}}}return max;};var mean=function mean(values,valueof){var n=values.length,m=n,i=-1,value,sum=0;if(valueof==null){while(++i<n){if(!isNaN(value=number$1(values[i])))sum+=value;else--m;}}else{while(++i<n){if(!isNaN(value=number$1(valueof(values[i],i,values))))sum+=value;else--m;}}if(m)return sum/m;};var median=function median(values,valueof){var n=values.length,i=-1,value,numbers=[];if(valueof==null){while(++i<n){if(!isNaN(value=number$1(values[i]))){numbers.push(value);}}}else{while(++i<n){if(!isNaN(value=number$1(valueof(values[i],i,values)))){numbers.push(value);}}}return threshold(numbers.sort(ascending),0.5);};var merge$2=function merge$2(arrays){var n=arrays.length,m,i=-1,j=0,merged,array;while(++i<n){j+=arrays[i].length;}merged=new Array(j);while(--n>=0){array=arrays[n];m=array.length;while(--m>=0){merged[--j]=array[m];}}return merged;};var min=function min(values,valueof){var n=values.length,i=-1,value,min;if(valueof==null){while(++i<n){// Find the first comparable value.
if((value=values[i])!=null&&value>=value){min=value;while(++i<n){// Compare the remaining values.
if((value=values[i])!=null&&min>value){min=value;}}}}}else{while(++i<n){// Find the first comparable value.
if((value=valueof(values[i],i,values))!=null&&value>=value){min=value;while(++i<n){// Compare the remaining values.
if((value=valueof(values[i],i,values))!=null&&min>value){min=value;}}}}}return min;};var permute=function permute(array,indexes){var i=indexes.length,permutes=new Array(i);while(i--){permutes[i]=array[indexes[i]];}return permutes;};var sum=function sum(values,valueof){var n=values.length,i=-1,value,sum=0;if(valueof==null){while(++i<n){if(value=+values[i])sum+=value;// Note: zero and null are equivalent.
}}else{while(++i<n){if(value=+valueof(values[i],i,values))sum+=value;}}return sum;};function length(d){return d.length;}var bootstrapCI=function bootstrapCI(array,samples,alpha,f){var values=numbers(array,f),n=values.length,m=samples,a,i,j,mu;for(j=0,mu=Array(m);j<m;++j){for(a=0,i=0;i<n;++i){a+=values[~~(Math.random()*n)];}mu[j]=a/n;}return[threshold(mu.sort(ascending),alpha/2),threshold(mu,1-alpha/2)];};var integer=function integer(min,max){if(max==null){max=min;min=0;}var dist={},a,b,d;dist.min=function(_){if(arguments.length){a=_||0;d=b-a;return dist;}else{return a;}};dist.max=function(_){if(arguments.length){b=_||0;d=b-a;return dist;}else{return b;}};dist.sample=function(){return a+Math.floor(d*Math.random());};dist.pdf=function(x){return x===Math.floor(x)&&x>=a&&x<b?1/d:0;};dist.cdf=function(x){var v=Math.floor(x);return v<a?0:v>=b?1:(v-a+1)/d;};dist.icdf=function(p){return p>=0&&p<=1?a-1+Math.floor(p*d):NaN;};return dist.min(min).max(max);};var randomNormal=function randomNormal(mean,stdev){var mu,sigma,next=NaN,dist={};dist.mean=function(_){if(arguments.length){mu=_||0;next=NaN;return dist;}else{return mu;}};dist.stdev=function(_){if(arguments.length){sigma=_==null?1:_;next=NaN;return dist;}else{return sigma;}};dist.sample=function(){var x=0,y=0,rds,c;if(next===next){x=next;next=NaN;return x;}do{x=Math.random()*2-1;y=Math.random()*2-1;rds=x*x+y*y;}while(rds===0||rds>1);c=Math.sqrt(-2*Math.log(rds)/rds);// Box-Muller transform
next=mu+y*c*sigma;return mu+x*c*sigma;};dist.pdf=function(x){var exp=Math.exp(Math.pow(x-mu,2)/(-2*Math.pow(sigma,2)));return 1/(sigma*Math.sqrt(2*Math.PI))*exp;};// Approximation from West (2009)
// Better Approximations to Cumulative Normal Functions
dist.cdf=function(x){var cd,z=(x-mu)/sigma,Z=Math.abs(z);if(Z>37){cd=0;}else{var sum,exp=Math.exp(-Z*Z/2);if(Z<7.07106781186547){sum=3.52624965998911e-02*Z+0.700383064443688;sum=sum*Z+6.37396220353165;sum=sum*Z+33.912866078383;sum=sum*Z+112.079291497871;sum=sum*Z+221.213596169931;sum=sum*Z+220.206867912376;cd=exp*sum;sum=8.83883476483184e-02*Z+1.75566716318264;sum=sum*Z+16.064177579207;sum=sum*Z+86.7807322029461;sum=sum*Z+296.564248779674;sum=sum*Z+637.333633378831;sum=sum*Z+793.826512519948;sum=sum*Z+440.413735824752;cd=cd/sum;}else{sum=Z+0.65;sum=Z+4/sum;sum=Z+3/sum;sum=Z+2/sum;sum=Z+1/sum;cd=exp/sum/2.506628274631;}}return z>0?1-cd:cd;};// Approximation of Probit function using inverse error function.
dist.icdf=function(p){if(p<=0||p>=1)return NaN;var x=2*p-1,v=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),a=2/(Math.PI*v)+Math.log(1-Math.pow(x,2))/2,b=Math.log(1-x*x)/v,s=(x>0?1:-1)*Math.sqrt(Math.sqrt(a*a-b)-a);return mu+sigma*Math.SQRT2*s;};return dist.mean(mean).stdev(stdev);};var quartiles=function quartiles(array,f){var values=numbers(array,f);return[threshold(values.sort(ascending),0.25),threshold(values,0.50),threshold(values,0.75)];};// TODO: support for additional kernels?
var randomKDE=function randomKDE(support,bandwidth){var kernel=randomNormal(),dist={},n=0;dist.data=function(_){if(arguments.length){support=_;n=_?_.length:0;return dist.bandwidth(bandwidth);}else{return support;}};dist.bandwidth=function(_){if(!arguments.length)return bandwidth;bandwidth=_;if(!bandwidth&&support)bandwidth=estimateBandwidth(support);return dist;};dist.sample=function(){return support[~~(Math.random()*n)]+bandwidth*kernel.sample();};dist.pdf=function(x){for(var y=0,i=0;i<n;++i){y+=kernel.pdf((x-support[i])/bandwidth);}return y/bandwidth/n;};dist.cdf=function(x){for(var y=0,i=0;i<n;++i){y+=kernel.cdf((x-support[i])/bandwidth);}return y/n;};dist.icdf=function(){throw Error('KDE icdf not supported.');};return dist.data(support);};// Scott, D. W. (1992) Multivariate Density Estimation:
// Theory, Practice, and Visualization. Wiley.
function estimateBandwidth(array){var n=array.length,q=quartiles(array),h=(q[2]-q[0])/1.34;return 1.06*Math.min(Math.sqrt(variance(array)),h)*Math.pow(n,-0.2);}var randomMixture=function randomMixture(dists,weights){var dist={},m=0,w;function normalize(x){var w=[],sum=0,i;for(i=0;i<m;++i){sum+=w[i]=x[i]==null?1:+x[i];}for(i=0;i<m;++i){w[i]/=sum;}return w;}dist.weights=function(_){if(arguments.length){w=normalize(weights=_||[]);return dist;}return weights;};dist.distributions=function(_){if(arguments.length){if(_){m=_.length;dists=_;}else{m=0;dists=[];}return dist.weights(weights);}return dists;};dist.sample=function(){var r=Math.random(),d=dists[m-1],v=w[0],i=0;// first select distribution
for(;i<m-1;v+=w[++i]){if(r<v){d=dists[i];break;}}// then sample from it
return d.sample();};dist.pdf=function(x){for(var p=0,i=0;i<m;++i){p+=w[i]*dists[i].pdf(x);}return p;};dist.cdf=function(x){for(var p=0,i=0;i<m;++i){p+=w[i]*dists[i].cdf(x);}return p;};dist.icdf=function(){throw Error('Mixture icdf not supported.');};return dist.distributions(dists).weights(weights);};var randomUniform=function randomUniform(min,max){if(max==null){max=min==null?1:min;min=0;}var dist={},a,b,d;dist.min=function(_){if(arguments.length){a=_||0;d=b-a;return dist;}else{return a;}};dist.max=function(_){if(arguments.length){b=_||0;d=b-a;return dist;}else{return b;}};dist.sample=function(){return a+d*Math.random();};dist.pdf=function(x){return x>=a&&x<=b?1/d:0;};dist.cdf=function(x){return x<a?0:x>b?1:(x-a)/d;};dist.icdf=function(p){return p>=0&&p<=1?a+p*d:NaN;};return dist.min(min).max(max);};function TupleStore(key$$1){this._key=key$$1?field(key$$1):tupleid;this.reset();}var prototype$9=TupleStore.prototype;prototype$9.reset=function(){this._add=[];this._rem=[];this._ext=null;this._get=null;this._q=null;};prototype$9.add=function(v){this._add.push(v);};prototype$9.rem=function(v){this._rem.push(v);};prototype$9.values=function(){this._get=null;if(this._rem.length===0)return this._add;var a=this._add,r=this._rem,k=this._key,n=a.length,m=r.length,x=Array(n-m),map={},i,j,v;// use unique key field to clear removed values
for(i=0;i<m;++i){map[k(r[i])]=1;}for(i=0,j=0;i<n;++i){if(map[k(v=a[i])]){map[k(v)]=0;}else{x[j++]=v;}}this._rem=[];return this._add=x;};// memoizing statistics methods
prototype$9.distinct=function(get){var v=this.values(),n=v.length,map={},count=0,s;while(--n>=0){s=get(v[n])+'';if(!map.hasOwnProperty(s)){map[s]=1;++count;}}return count;};prototype$9.extent=function(get){if(this._get!==get||!this._ext){var v=this.values(),i=extentIndex(v,get);this._ext=[v[i[0]],v[i[1]]];this._get=get;}return this._ext;};prototype$9.argmin=function(get){return this.extent(get)[0]||{};};prototype$9.argmax=function(get){return this.extent(get)[1]||{};};prototype$9.min=function(get){var m=this.extent(get)[0];return m!=null?get(m):+Infinity;};prototype$9.max=function(get){var m=this.extent(get)[1];return m!=null?get(m):-Infinity;};prototype$9.quartile=function(get){if(this._get!==get||!this._q){this._q=quartiles(this.values(),get);this._get=get;}return this._q;};prototype$9.q1=function(get){return this.quartile(get)[0];};prototype$9.q2=function(get){return this.quartile(get)[1];};prototype$9.q3=function(get){return this.quartile(get)[2];};prototype$9.ci=function(get){if(this._get!==get||!this._ci){this._ci=bootstrapCI(this.values(),1000,0.05,get);this._get=get;}return this._ci;};prototype$9.ci0=function(get){return this.ci(get)[0];};prototype$9.ci1=function(get){return this.ci(get)[1];};/**
 * Group-by aggregation operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors to aggregate.
 * @param {Array<string>} [params.ops] - An array of strings indicating aggregation operations.
 * @param {Array<string>} [params.as] - An array of output field names for aggregated values.
 * @param {boolean} [params.cross=false] - A flag indicating that the full
 *   cross-product of groupby values should be generated, including empty cells.
 *   If true, the drop parameter is ignored and empty cells are retained.
 * @param {boolean} [params.drop=true] - A flag indicating if empty cells should be removed.
 */function Aggregate(params){Transform.call(this,null,params);this._adds=[];// array of added output tuples
this._mods=[];// array of modified output tuples
this._alen=0;// number of active added tuples
this._mlen=0;// number of active modified tuples
this._drop=true;// should empty aggregation cells be removed
this._cross=false;// produce full cross-product of group-by values
this._dims=[];// group-by dimension accessors
this._dnames=[];// group-by dimension names
this._measures=[];// collection of aggregation monoids
this._countOnly=false;// flag indicating only count aggregation
this._counts=null;// collection of count fields
this._prev=null;// previous aggregation cells
this._inputs=null;// array of dependent input tuple field names
this._outputs=null;// array of output tuple field names
}Aggregate.Definition={"type":"Aggregate","metadata":{"generates":true,"changes":true},"params":[{"name":"groupby","type":"field","array":true},{"name":"ops","type":"enum","array":true,"values":ValidAggregateOps},{"name":"fields","type":"field","null":true,"array":true},{"name":"as","type":"string","null":true,"array":true},{"name":"drop","type":"boolean","default":true},{"name":"cross","type":"boolean","default":false},{"name":"key","type":"field"}]};var prototype$8=inherits(Aggregate,Transform);prototype$8.transform=function(_,pulse){var aggr=this,out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),mod;this.stamp=out.stamp;if(this.value&&((mod=_.modified())||pulse.modified(this._inputs))){this._prev=this.value;this.value=mod?this.init(_):{};pulse.visit(pulse.SOURCE,function(t){aggr.add(t);});}else{this.value=this.value||this.init(_);pulse.visit(pulse.REM,function(t){aggr.rem(t);});pulse.visit(pulse.ADD,function(t){aggr.add(t);});}// Indicate output fields and return aggregate tuples.
out.modifies(this._outputs);// Should empty cells be dropped?
aggr._drop=_.drop!==false;// If domain cross-product requested, generate empty cells as needed
// and ensure that empty cells are not dropped
if(_.cross&&aggr._dims.length>1){aggr._drop=false;this.cross();}return aggr.changes(out);};prototype$8.cross=function(){var aggr=this,curr=aggr.value,dims=aggr._dnames,vals=dims.map(function(){return{};}),n=dims.length;// collect all group-by domain values
function collect(cells){var key$$1,i,t,v;for(key$$1 in cells){t=cells[key$$1].tuple;for(i=0;i<n;++i){vals[i][v=t[dims[i]]]=v;}}}collect(aggr._prev);collect(curr);// iterate over key cross-product, create cells as needed
function generate(base,tuple,index){var name=dims[index],v=vals[index++],k,key$$1;for(k in v){tuple[name]=v[k];key$$1=base?base+'|'+k:k;if(index<n)generate(key$$1,tuple,index);else if(!curr[key$$1])aggr.cell(key$$1,tuple);}}generate('',{},0);};prototype$8.init=function(_){// initialize input and output fields
var inputs=this._inputs=[],outputs=this._outputs=[],inputMap={};function inputVisit(get){var fields=array(accessorFields(get)),i=0,n=fields.length,f;for(;i<n;++i){if(!inputMap[f=fields[i]]){inputMap[f]=1;inputs.push(f);}}}// initialize group-by dimensions
this._dims=array(_.groupby);this._dnames=this._dims.map(function(d){var dname=accessorName(d);inputVisit(d);outputs.push(dname);return dname;});this.cellkey=_.key?_.key:groupkey(this._dims);// initialize aggregate measures
this._countOnly=true;this._counts=[];this._measures=[];var fields=_.fields||[null],ops=_.ops||['count'],as=_.as||[],n=fields.length,map={},field$$1,op,m,mname,outname,i;if(n!==ops.length){error$1('Unmatched number of fields and aggregate ops.');}for(i=0;i<n;++i){field$$1=fields[i];op=ops[i];if(field$$1==null&&op!=='count'){error$1('Null aggregate field specified.');}mname=accessorName(field$$1);outname=measureName(op,mname,as[i]);outputs.push(outname);if(op==='count'){this._counts.push(outname);continue;}m=map[mname];if(!m){inputVisit(field$$1);m=map[mname]=[];m.field=field$$1;this._measures.push(m);}if(op!=='count')this._countOnly=false;m.push(createMeasure(op,outname));}this._measures=this._measures.map(function(m){return compileMeasures(m,m.field);});return{};// aggregation cells (this.value)
};// -- Cell Management -----
prototype$8.cellkey=groupkey();prototype$8.cell=function(key$$1,t){var cell=this.value[key$$1];if(!cell){cell=this.value[key$$1]=this.newcell(key$$1,t);this._adds[this._alen++]=cell;}else if(cell.num===0&&this._drop&&cell.stamp<this.stamp){cell.stamp=this.stamp;this._adds[this._alen++]=cell;}else if(cell.stamp<this.stamp){cell.stamp=this.stamp;this._mods[this._mlen++]=cell;}return cell;};prototype$8.newcell=function(key$$1,t){var cell={key:key$$1,num:0,agg:null,tuple:this.newtuple(t,this._prev&&this._prev[key$$1]),stamp:this.stamp,store:false};if(!this._countOnly){var measures=this._measures,n=measures.length,i;cell.agg=Array(n);for(i=0;i<n;++i){cell.agg[i]=new measures[i](cell);}}if(cell.store){cell.data=new TupleStore();}return cell;};prototype$8.newtuple=function(t,p){var names=this._dnames,dims=this._dims,x={},i,n;for(i=0,n=dims.length;i<n;++i){x[names[i]]=dims[i](t);}return p?replace(p.tuple,x):ingest(x);};// -- Process Tuples -----
prototype$8.add=function(t){var key$$1=this.cellkey(t),cell=this.cell(key$$1,t),agg,i,n;cell.num+=1;if(this._countOnly)return;if(cell.store)cell.data.add(t);agg=cell.agg;for(i=0,n=agg.length;i<n;++i){agg[i].add(agg[i].get(t),t);}};prototype$8.rem=function(t){var key$$1=this.cellkey(t),cell=this.cell(key$$1,t),agg,i,n;cell.num-=1;if(this._countOnly)return;if(cell.store)cell.data.rem(t);agg=cell.agg;for(i=0,n=agg.length;i<n;++i){agg[i].rem(agg[i].get(t),t);}};prototype$8.celltuple=function(cell){var tuple=cell.tuple,counts=this._counts,agg,i,n;// consolidate stored values
if(cell.store){cell.data.values();}// update tuple properties
for(i=0,n=counts.length;i<n;++i){tuple[counts[i]]=cell.num;}if(!this._countOnly){agg=cell.agg;for(i=0,n=agg.length;i<n;++i){agg[i].set(tuple);}}return tuple;};prototype$8.changes=function(out){var adds=this._adds,mods=this._mods,prev=this._prev,drop=this._drop,add=out.add,rem=out.rem,mod=out.mod,cell,key$$1,i,n;if(prev)for(key$$1 in prev){cell=prev[key$$1];if(!drop||cell.num)rem.push(cell.tuple);}for(i=0,n=this._alen;i<n;++i){add.push(this.celltuple(adds[i]));adds[i]=null;// for garbage collection
}for(i=0,n=this._mlen;i<n;++i){cell=mods[i];(cell.num===0&&drop?rem:mod).push(this.celltuple(cell));mods[i]=null;// for garbage collection
}this._alen=this._mlen=0;// reset list of active cells
this._prev=null;return out;};/**
 * Generates a binning function for discretizing data.
 * @constructor
 * @param {object} params - The parameters for this operator. The
 *   provided values should be valid options for the {@link bin} function.
 * @param {function(object): *} params.field - The data field to bin.
 */function Bin(params){Transform.call(this,null,params);}Bin.Definition={"type":"Bin","metadata":{"modifies":true},"params":[{"name":"field","type":"field","required":true},{"name":"anchor","type":"number"},{"name":"maxbins","type":"number","default":20},{"name":"base","type":"number","default":10},{"name":"divide","type":"number","array":true,"default":[5,2]},{"name":"extent","type":"number","array":true,"length":2,"required":true},{"name":"step","type":"number"},{"name":"steps","type":"number","array":true},{"name":"minstep","type":"number","default":0},{"name":"nice","type":"boolean","default":true},{"name":"name","type":"string"},{"name":"as","type":"string","array":true,"length":2,"default":["bin0","bin1"]}]};var prototype$10=inherits(Bin,Transform);prototype$10.transform=function(_,pulse){var bins=this._bins(_),start=bins.start,step=bins.step,as=_.as||['bin0','bin1'],b0=as[0],b1=as[1],flag;if(_.modified()){pulse=pulse.reflow(true);flag=pulse.SOURCE;}else{flag=pulse.modified(accessorFields(_.field))?pulse.ADD_MOD:pulse.ADD;}pulse.visit(flag,function(t){var v=bins(t);// minimum bin value (inclusive)
t[b0]=v;// maximum bin value (exclusive)
// use convoluted math for better floating point agreement
// see https://github.com/vega/vega/issues/830
t[b1]=v==null?null:start+step*(1+(v-start)/step);});return pulse.modifies(as);};prototype$10._bins=function(_){if(this.value&&!_.modified()){return this.value;}var field$$1=_.field,bins=bin(_),start=bins.start,stop=bins.stop,step=bins.step,a,d;if((a=_.anchor)!=null){d=a-(start+step*Math.floor((a-start)/step));start+=d;stop+=d;}var f=function f(t){var v=field$$1(t);if(v==null){return null;}else{v=Math.max(start,Math.min(+v,stop-step));return start+step*Math.floor((v-start)/step);}};f.start=start;f.stop=stop;f.step=step;return this.value=accessor(f,accessorFields(field$$1),_.name||'bin_'+accessorName(field$$1));};var SortedList=function SortedList(idFunc,source,input){var $$$1=idFunc,_data=source||[],_add=input||[],rem={},cnt=0;return{add:function add(t){_add.push(t);},remove:function remove(t){rem[$$$1(t)]=++cnt;},size:function size(){return _data.length;},data:function data(compare$$1,resort){if(cnt){_data=_data.filter(function(t){return!rem[$$$1(t)];});rem={};cnt=0;}if(resort&&compare$$1){_data.sort(compare$$1);}if(_add.length){_data=compare$$1?merge(compare$$1,_data,_add.sort(compare$$1)):_data.concat(_add);_add=[];}return _data;}};};/**
 * Collects all data tuples that pass through this operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for additionally sorting the collected tuples.
 */function Collect(params){Transform.call(this,[],params);}Collect.Definition={"type":"Collect","metadata":{"source":true},"params":[{"name":"sort","type":"compare"}]};var prototype$11=inherits(Collect,Transform);prototype$11.transform=function(_,pulse){var out=pulse.fork(pulse.ALL),list=SortedList(tupleid,this.value,out.materialize(out.ADD).add),sort=_.sort,mod=pulse.changed()||sort&&(_.modified('sort')||pulse.modified(sort.fields));out.visit(out.REM,list.remove);this.modified(mod);this.value=out.source=list.data(sort,mod);return out;};/**
 * Generates a comparator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string>} params.fields - The fields to compare.
 * @param {Array<string>} [params.orders] - The sort orders.
 *   Each entry should be one of "ascending" (default) or "descending".
 */function Compare(params){Operator.call(this,null,update$1,params);}inherits(Compare,Operator);function update$1(_){return this.value&&!_.modified()?this.value:compare(_.fields,_.orders);}/**
 * Count regexp-defined pattern occurrences in a text field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - An accessor for the text field.
 * @param {string} [params.pattern] - RegExp string defining the text pattern.
 * @param {string} [params.case] - One of 'lower', 'upper' or null (mixed) case.
 * @param {string} [params.stopwords] - RegExp string of words to ignore.
 */function CountPattern(params){Transform.call(this,null,params);}CountPattern.Definition={"type":"CountPattern","metadata":{"generates":true,"changes":true},"params":[{"name":"field","type":"field","required":true},{"name":"case","type":"enum","values":["upper","lower","mixed"],"default":"mixed"},{"name":"pattern","type":"string","default":"[\\w\"]+"},{"name":"stopwords","type":"string","default":""},{"name":"as","type":"string","array":true,"length":2,"default":["text","count"]}]};function tokenize(text,tcase,match){switch(tcase){case'upper':text=text.toUpperCase();break;case'lower':text=text.toLowerCase();break;}return text.match(match);}var prototype$12=inherits(CountPattern,Transform);prototype$12.transform=function(_,pulse){function process(update){return function(tuple){var tokens=tokenize(get(tuple),_.case,match)||[],t;for(var i=0,n=tokens.length;i<n;++i){if(!stop.test(t=tokens[i]))update(t);}};}var init=this._parameterCheck(_,pulse),counts=this._counts,match=this._match,stop=this._stop,get=_.field,as=_.as||['text','count'],add=process(function(t){counts[t]=1+(counts[t]||0);}),rem=process(function(t){counts[t]-=1;});if(init){pulse.visit(pulse.SOURCE,add);}else{pulse.visit(pulse.ADD,add);pulse.visit(pulse.REM,rem);}return this._finish(pulse,as);// generate output tuples
};prototype$12._parameterCheck=function(_,pulse){var init=false;if(_.modified('stopwords')||!this._stop){this._stop=new RegExp('^'+(_.stopwords||'')+'$','i');init=true;}if(_.modified('pattern')||!this._match){this._match=new RegExp(_.pattern||'[\\w\']+','g');init=true;}if(_.modified('field')||pulse.modified(_.field.fields)){init=true;}if(init)this._counts={};return init;};prototype$12._finish=function(pulse,as){var counts=this._counts,tuples=this._tuples||(this._tuples={}),text=as[0],count=as[1],out=pulse.fork(),w,t,c;for(w in counts){t=tuples[w];c=counts[w]||0;if(!t&&c){tuples[w]=t=ingest({});t[text]=w;t[count]=c;out.add.push(t);}else if(c===0){if(t)out.rem.push(t);counts[w]=null;tuples[w]=null;}else if(t[count]!==c){t[count]=c;out.mod.push(t);}}return out.modifies(as);};/**
 * Perform a cross-product of a tuple stream with itself.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object):boolean} [params.filter] - An optional filter
 *   function for selectively including tuples in the cross product.
 * @param {Array<string>} [params.as] - The names of the output fields.
 */function Cross(params){Transform.call(this,null,params);}Cross.Definition={"type":"Cross","metadata":{"source":true,"generates":true,"changes":true},"params":[{"name":"filter","type":"expr"},{"name":"as","type":"string","array":true,"length":2,"default":["a","b"]}]};var prototype$13=inherits(Cross,Transform);prototype$13.transform=function(_,pulse){var out=pulse.fork(pulse.NO_SOURCE),data=this.value,as=_.as||['a','b'],a=as[0],b=as[1],reset=!data||pulse.changed(pulse.ADD_REM)||_.modified('as')||_.modified('filter');if(reset){if(data)out.rem=data;out.add=this.value=cross$1(pulse.source,a,b,_.filter||truthy);}else{out.mod=data;}out.source=this.value;return out.modifies(as);};function cross$1(input,a,b,filter){var data=[],t={},n=input.length,i=0,j,left;for(;i<n;++i){t[a]=left=input[i];for(j=0;j<n;++j){t[b]=input[j];if(filter(t)){data.push(ingest(t));t={};t[a]=left;}}}return data;}var Distributions={kde:randomKDE,mixture:randomMixture,normal:randomNormal,uniform:randomUniform};var DISTRIBUTIONS='distributions';var FUNCTION='function';var FIELD='field';/**
 * Parse a parameter object for a probability distribution.
 * @param {object} def - The distribution parameter object.
 * @param {function():Array<object>} - A method for requesting
 *   source data. Used for distributions (such as KDE) that
 *   require sample data points. This method will only be
 *   invoked if the 'from' parameter for a target data source
 *   is not provided. Typically this method returns backing
 *   source data for a Pulse object.
 * @return {object} - The output distribution object.
 */function parse$1(def,data){var func=def[FUNCTION];if(!Distributions.hasOwnProperty(func)){error$1('Unknown distribution function: '+func);}var d=Distributions[func]();for(var name in def){// if data field, extract values
if(name===FIELD){d.data((def.from||data()).map(def[name]));}// if distribution mixture, recurse to parse each definition
else if(name===DISTRIBUTIONS){d[name](def[name].map(function(_){return parse$1(_,data);}));}// otherwise, simply set the parameter
else if(_typeof(d[name])===FUNCTION){d[name](def[name]);}}return d;}/**
 * Grid sample points for a probability density. Given a distribution and
 * a sampling extent, will generate points suitable for plotting either
 * PDF (probability density function) or CDF (cumulative distribution
 * function) curves.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.distribution - The probability distribution. This
 *   is an object parameter dependent on the distribution type.
 * @param {string} [params.method='pdf'] - The distribution method to sample.
 *   One of 'pdf' or 'cdf'.
 * @param {Array<number>} [params.extent] - The [min, max] extent over which
 *   to sample the distribution. This argument is required in most cases, but
 *   can be omitted if the distribution (e.g., 'kde') supports a 'data' method
 *   that returns numerical sample points from which the extent can be deduced.
 * @param {number} [params.steps=100] - The number of sampling steps.
 */function Density(params){Transform.call(this,null,params);}var distributions=[{"key":{"function":"normal"},"params":[{"name":"mean","type":"number","default":0},{"name":"stdev","type":"number","default":1}]},{"key":{"function":"uniform"},"params":[{"name":"min","type":"number","default":0},{"name":"max","type":"number","default":1}]},{"key":{"function":"kde"},"params":[{"name":"field","type":"field","required":true},{"name":"from","type":"data"},{"name":"bandwidth","type":"number","default":0}]}];var mixture={"key":{"function":"mixture"},"params":[{"name":"distributions","type":"param","array":true,"params":distributions},{"name":"weights","type":"number","array":true}]};Density.Definition={"type":"Density","metadata":{"generates":true,"source":true},"params":[{"name":"extent","type":"number","array":true,"length":2},{"name":"steps","type":"number","default":100},{"name":"method","type":"string","default":"pdf","values":["pdf","cdf"]},{"name":"distribution","type":"param","params":distributions.concat(mixture)},{"name":"as","type":"string","array":true,"default":["value","density"]}]};var prototype$14=inherits(Density,Transform);prototype$14.transform=function(_,pulse){var out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS);if(!this.value||pulse.changed()||_.modified()){var dist=parse$1(_.distribution,source(pulse)),method=_.method||'pdf';if(method!=='pdf'&&method!=='cdf'){error$1('Invalid density method: '+method);}if(!_.extent&&!dist.data){error$1('Missing density extent parameter.');}method=dist[method];var as=_.as||['value','density'],domain=_.extent||extent(dist.data()),step=(domain[1]-domain[0])/(_.steps||100),values=sequence(domain[0],domain[1]+step/2,step).map(function(v){var tuple={};tuple[as[0]]=v;tuple[as[1]]=method(v);return ingest(tuple);});if(this.value)out.rem=this.value;this.value=out.add=out.source=values;}return out;};function source(pulse){return function(){return pulse.materialize(pulse.SOURCE).source;};}/**
 * Computes extents (min/max) for a data field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field over which to compute extends.
 */function Extent(params){Transform.call(this,[+Infinity,-Infinity],params);}Extent.Definition={"type":"Extent","metadata":{},"params":[{"name":"field","type":"field","required":true}]};var prototype$15=inherits(Extent,Transform);prototype$15.transform=function(_,pulse){var extent=this.value,field$$1=_.field,min=extent[0],max=extent[1],flag=pulse.ADD,mod;mod=pulse.changed()||pulse.modified(field$$1.fields)||_.modified('field');if(mod){flag=pulse.SOURCE;min=+Infinity;max=-Infinity;}pulse.visit(flag,function(t){var v=field$$1(t);if(v<min)min=v;if(v>max)max=v;});this.value=[min,max];};/**
 * Provides a bridge between a parent transform and a target subflow that
 * consumes only a subset of the tuples that pass through the parent.
 * @constructor
 * @param {Pulse} pulse - A pulse to use as the value of this operator.
 * @param {Transform} parent - The parent transform (typically a Facet instance).
 * @param {Transform} target - A transform that receives the subflow of tuples.
 */function Subflow(pulse,parent){Operator.call(this,pulse);this.parent=parent;}var prototype$17=inherits(Subflow,Operator);prototype$17.connect=function(target){this.targets().add(target);return target.source=this;};/**
 * Add an 'add' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being added.
 */prototype$17.add=function(t){this.value.add.push(t);};/**
 * Add a 'rem' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being removed.
 */prototype$17.rem=function(t){this.value.rem.push(t);};/**
 * Add a 'mod' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being modified.
 */prototype$17.mod=function(t){this.value.mod.push(t);};/**
 * Re-initialize this operator's pulse value.
 * @param {Pulse} pulse - The pulse to copy from.
 * @see Pulse.init
 */prototype$17.init=function(pulse){this.value.init(pulse,pulse.NO_SOURCE);};/**
 * Evaluate this operator. This method overrides the
 * default behavior to simply return the contained pulse value.
 * @return {Pulse}
 */prototype$17.evaluate=function(){// assert: this.value.stamp === pulse.stamp
return this.value;};/**
 * Facets a dataflow into a set of subflows based on a key.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): *} params.key - The key field to facet by.
 */function Facet(params){Transform.call(this,{},params);this._keys=fastmap();// cache previously calculated key values
// keep track of active subflows, use as targets array for listeners
// this allows us to limit propagation to only updated subflows
var a=this._targets=[];a.active=0;a.forEach=function(f){for(var i=0,n=a.active;i<n;++i){f(a[i],i,a);}};}var prototype$16=inherits(Facet,Transform);prototype$16.activate=function(flow){this._targets[this._targets.active++]=flow;};prototype$16.subflow=function(key$$1,flow,pulse,parent){var flows=this.value,sf=flows.hasOwnProperty(key$$1)&&flows[key$$1],df,p;if(!sf){p=parent||(p=this._group[key$$1])&&p.tuple;df=pulse.dataflow;sf=df.add(new Subflow(pulse.fork(pulse.NO_SOURCE),this)).connect(flow(df,key$$1,p));flows[key$$1]=sf;this.activate(sf);}else if(sf.value.stamp<pulse.stamp){sf.init(pulse);this.activate(sf);}return sf;};prototype$16.transform=function(_,pulse){var df=pulse.dataflow,self=this,key$$1=_.key,flow=_.subflow,cache=this._keys,rekey=_.modified('key');function subflow(key$$1){return self.subflow(key$$1,flow,pulse);}this._group=_.group||{};this._targets.active=0;// reset list of active subflows
pulse.visit(pulse.REM,function(t){var id$$1=tupleid(t),k=cache.get(id$$1);if(k!==undefined){cache.delete(id$$1);subflow(k).rem(t);}});pulse.visit(pulse.ADD,function(t){var k=key$$1(t);cache.set(tupleid(t),k);subflow(k).add(t);});if(rekey||pulse.modified(key$$1.fields)){pulse.visit(pulse.MOD,function(t){var id$$1=tupleid(t),k0=cache.get(id$$1),k1=key$$1(t);if(k0===k1){subflow(k1).mod(t);}else{cache.set(id$$1,k1);subflow(k0).rem(t);subflow(k1).add(t);}});}else if(pulse.changed(pulse.MOD)){pulse.visit(pulse.MOD,function(t){subflow(cache.get(tupleid(t))).mod(t);});}if(rekey){pulse.visit(pulse.REFLOW,function(t){var id$$1=tupleid(t),k0=cache.get(id$$1),k1=key$$1(t);if(k0!==k1){cache.set(id$$1,k1);subflow(k0).rem(t);subflow(k1).add(t);}});}if(cache.empty>df.cleanThreshold)df.runAfter(cache.clean);return pulse;};/**
 * Generates one or more field accessor functions.
 * If the 'name' parameter is an array, an array of field accessors
 * will be created and the 'as' parameter will be ignored.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.name - The field name(s) to access.
 * @param {string} params.as - The accessor function name.
 */function Field(params){Operator.call(this,null,update$2,params);}inherits(Field,Operator);function update$2(_){return this.value&&!_.modified()?this.value:isArray(_.name)?array(_.name).map(function(f){return field(f);}):field(_.name,_.as);}/**
 * Filters data tuples according to a predicate function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The predicate expression function
 *   that determines a tuple's filter status. Truthy values pass the filter.
 */function Filter(params){Transform.call(this,fastmap(),params);}Filter.Definition={"type":"Filter","metadata":{"changes":true},"params":[{"name":"expr","type":"expr","required":true}]};var prototype$18=inherits(Filter,Transform);prototype$18.transform=function(_,pulse){var df=pulse.dataflow,cache=this.value,// cache ids of filtered tuples
output=pulse.fork(),add=output.add,rem=output.rem,mod=output.mod,test=_.expr,isMod=true;pulse.visit(pulse.REM,function(t){var id$$1=tupleid(t);if(!cache.has(id$$1))rem.push(t);else cache.delete(id$$1);});pulse.visit(pulse.ADD,function(t){if(test(t,_))add.push(t);else cache.set(tupleid(t),1);});function revisit(t){var id$$1=tupleid(t),b=test(t,_),s=cache.get(id$$1);if(b&&s){cache.delete(id$$1);add.push(t);}else if(!b&&!s){cache.set(id$$1,1);rem.push(t);}else if(isMod&&b&&!s){mod.push(t);}}pulse.visit(pulse.MOD,revisit);if(_.modified()){isMod=false;pulse.visit(pulse.REFLOW,revisit);}if(cache.empty>df.cleanThreshold)df.runAfter(cache.clean);return output;};/**
 * Folds one more tuple fields into multiple tuples in which the field
 * name and values are available under new 'key' and 'value' fields.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.fields - An array of field accessors
 *   for the tuple fields that should be folded.
 */function Fold(params){Transform.call(this,{},params);}Fold.Definition={"type":"Fold","metadata":{"generates":true,"changes":true},"params":[{"name":"fields","type":"field","array":true,"required":true},{"name":"as","type":"string","array":true,"length":2,"default":["key","value"]}]};var prototype$19=inherits(Fold,Transform);function keyFunction(f){return f.fields.join('|');}prototype$19.transform=function(_,pulse){var cache=this.value,reset=_.modified('fields'),fields=_.fields,as=_.as||['key','value'],key$$1=as[0],value=as[1],keys=fields.map(keyFunction),n=fields.length,stamp=pulse.stamp,out=pulse.fork(pulse.NO_SOURCE),i=0,mask=0,id$$1;function add(t){var f=cache[tupleid(t)]=Array(n);// create cache of folded tuples
for(var i=0,ft;i<n;++i){// for each key, derive folds
ft=f[i]=derive(t);ft[key$$1]=keys[i];ft[value]=fields[i](t);out.add.push(ft);}}function mod(t){var f=cache[tupleid(t)];// get cache of folded tuples
for(var i=0,ft;i<n;++i){// for each key, rederive folds
if(!(mask&1<<i))continue;// field is unchanged
ft=rederive(t,f[i],stamp);ft[key$$1]=keys[i];ft[value]=fields[i](t);out.mod.push(ft);}}if(reset){// on reset, remove all folded tuples and clear cache
for(id$$1 in cache){out.rem.push.apply(out.rem,cache[id$$1]);}cache=this.value={};pulse.visit(pulse.SOURCE,add);}else{pulse.visit(pulse.ADD,add);for(;i<n;++i){if(pulse.modified(fields[i].fields))mask|=1<<i;}if(mask)pulse.visit(pulse.MOD,mod);pulse.visit(pulse.REM,function(t){var id$$1=tupleid(t);out.rem.push.apply(out.rem,cache[id$$1]);cache[id$$1]=null;});}return out.modifies(as);};/**
 * Invokes a function for each data tuple and saves the results as a new field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The formula function to invoke for each tuple.
 * @param {string} params.as - The field name under which to save the result.
 * @param {boolean} [params.initonly=false] - If true, the formula is applied to
 *   added tuples only, and does not update in response to modifications.
 */function Formula(params){Transform.call(this,null,params);}Formula.Definition={"type":"Formula","metadata":{"modifies":true},"params":[{"name":"expr","type":"expr","required":true},{"name":"as","type":"string","required":true},{"name":"initonly","type":"boolean"}]};var prototype$20=inherits(Formula,Transform);prototype$20.transform=function(_,pulse){var func=_.expr,as=_.as,mod=_.modified(),flag=_.initonly?pulse.ADD:mod?pulse.SOURCE:pulse.modified(func.fields)?pulse.ADD_MOD:pulse.ADD;function set(t){t[as]=func(t,_);}if(mod){// parameters updated, need to reflow
pulse=pulse.materialize().reflow(true);}if(!_.initonly){pulse.modifies(as);}return pulse.visit(flag,set);};/**
 * Generates data tuples using a provided generator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Parameters): object} params.generator - A tuple generator
 *   function. This function is given the operator parameters as input.
 *   Changes to any additional parameters will not trigger re-calculation
 *   of previously generated tuples. Only future tuples are affected.
 * @param {number} params.size - The number of tuples to produce.
 */function Generate(params){Transform.call(this,[],params);}var prototype$21=inherits(Generate,Transform);prototype$21.transform=function(_,pulse){var data=this.value,out=pulse.fork(pulse.ALL),num=_.size-data.length,gen=_.generator,add,rem,t;if(num>0){// need more tuples, generate and add
for(add=[];--num>=0;){add.push(t=ingest(gen(_)));data.push(t);}out.add=out.add.length?out.materialize(out.ADD).add.concat(add):add;}else{// need fewer tuples, remove
rem=data.slice(0,-num);out.rem=out.rem.length?out.materialize(out.REM).rem.concat(rem):rem;data=data.slice(-num);}out.source=this.value=data;return out;};var Methods={value:'value',median:median,mean:mean,min:min,max:max};var Empty=[];/**
 * Impute missing values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to impute.
 * @param {Array<function(object): *>} [params.groupby] - An array of
 *   accessors to determine series within which to perform imputation.
 * @param {function(object): *} params.key - An accessor for a key value.
 *   Each key value should be unique within a group. New tuples will be
 *   imputed for any key values that are not found within a group.
 * @param {Array<*>} [params.keyvals] - Optional array of required key
 *   values. New tuples will be imputed for any key values that are not
 *   found within a group. In addition, these values will be automatically
 *   augmented with the key values observed in the input data.
 * @param {string} [method='value'] - The imputation method to use. One of
 *   'value', 'mean', 'median', 'max', 'min'.
 * @param {*} [value=0] - The constant value to use for imputation
 *   when using method 'value'.
 */function Impute(params){Transform.call(this,[],params);}Impute.Definition={"type":"Impute","metadata":{"changes":true},"params":[{"name":"field","type":"field","required":true},{"name":"key","type":"field","required":true},{"name":"keyvals","array":true},{"name":"groupby","type":"field","array":true},{"name":"method","type":"enum","default":"value","values":["value","mean","median","max","min"]},{"name":"value","default":0}]};var prototype$22=inherits(Impute,Transform);function getValue(_){var m=_.method||Methods.value,v;if(Methods[m]==null){error$1('Unrecognized imputation method: '+m);}else if(m===Methods.value){v=_.value!==undefined?_.value:0;return function(){return v;};}else{return Methods[m];}}function getField(_){var f=_.field;return function(t){return t?f(t):NaN;};}prototype$22.transform=function(_,pulse){var out=pulse.fork(pulse.ALL),impute=getValue(_),field$$1=getField(_),fName=accessorName(_.field),kName=accessorName(_.key),gNames=(_.groupby||[]).map(accessorName),groups=partition(pulse.source,_.groupby,_.key,_.keyvals),curr=[],prev=this.value,m=groups.domain.length,group,value,gVals,kVal,g,i,j,l,n,t;for(g=0,l=groups.length;g<l;++g){group=groups[g];gVals=group.values;value=NaN;// add tuples for missing values
for(j=0;j<m;++j){if(group[j]!=null)continue;kVal=groups.domain[j];t={_impute:true};for(i=0,n=gVals.length;i<n;++i){t[gNames[i]]=gVals[i];}t[kName]=kVal;t[fName]=isNaN(value)?value=impute(group,field$$1):value;curr.push(ingest(t));}}// update pulse with imputed tuples
if(curr.length)out.add=out.materialize(out.ADD).add.concat(curr);if(prev.length)out.rem=out.materialize(out.REM).rem.concat(prev);this.value=curr;return out;};function partition(data,groupby,key$$1,keyvals){var get=function get(f){return f(t);},groups=[],domain=keyvals?keyvals.slice():[],kMap={},gMap={},gVals,gKey,group,i,j,k,n,t;domain.forEach(function(k,i){kMap[k]=i+1;});for(i=0,n=data.length;i<n;++i){t=data[i];k=key$$1(t);j=kMap[k]||(kMap[k]=domain.push(k));gKey=(gVals=groupby?groupby.map(get):Empty)+'';if(!(group=gMap[gKey])){group=gMap[gKey]=[];groups.push(group);group.values=gVals;}group[j-1]=t;}groups.domain=domain;return groups;}/**
 * Extend input tuples with aggregate values.
 * Calcuates aggregate values and joins them with the input stream.
 * @constructor
 */function JoinAggregate(params){Aggregate.call(this,params);}JoinAggregate.Definition={"type":"JoinAggregate","metadata":{"modifies":true},"params":[{"name":"groupby","type":"field","array":true},{"name":"fields","type":"field","null":true,"array":true},{"name":"ops","type":"enum","array":true,"values":ValidAggregateOps},{"name":"as","type":"string","null":true,"array":true},{"name":"key","type":"field"}]};var prototype$23=inherits(JoinAggregate,Aggregate);prototype$23.transform=function(_,pulse){var aggr=this,mod=_.modified(),cells;// process all input tuples to calculate aggregates
if(aggr.value&&(mod||pulse.modified(aggr._inputs))){cells=aggr.value=mod?aggr.init(_):{};pulse.visit(pulse.SOURCE,function(t){aggr.add(t);});}else{cells=aggr.value=aggr.value||this.init(_);pulse.visit(pulse.REM,function(t){aggr.rem(t);});pulse.visit(pulse.ADD,function(t){aggr.add(t);});}// update aggregation cells
aggr.changes();// write aggregate values to input tuples
pulse.visit(pulse.SOURCE,function(t){extend(t,cells[aggr.cellkey(t)].tuple);});return pulse.reflow(mod).modifies(this._outputs);};prototype$23.changes=function(){var adds=this._adds,mods=this._mods,i,n;for(i=0,n=this._alen;i<n;++i){this.celltuple(adds[i]);adds[i]=null;// for garbage collection
}for(i=0,n=this._mlen;i<n;++i){this.celltuple(mods[i]);mods[i]=null;// for garbage collection
}this._alen=this._mlen=0;// reset list of active cells
};/**
 * Generates a key function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string>} params.fields - The field name(s) for the key function.
 */function Key(params){Operator.call(this,null,update$3,params);}inherits(Key,Operator);function update$3(_){return this.value&&!_.modified()?this.value:key(_.fields);}/**
 * Extend tuples by joining them with values from a lookup table.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Map} params.index - The lookup table map.
 * @param {Array<function(object): *} params.fields - The fields to lookup.
 * @param {Array<string>} params.as - Output field names for each lookup value.
 * @param {*} [params.default] - A default value to use if lookup fails.
 */function Lookup(params){Transform.call(this,{},params);}Lookup.Definition={"type":"Lookup","metadata":{"modifies":true},"params":[{"name":"index","type":"index","params":[{"name":"from","type":"data","required":true},{"name":"key","type":"field","required":true}]},{"name":"values","type":"field","array":true},{"name":"fields","type":"field","array":true,"required":true},{"name":"as","type":"string","array":true},{"name":"default","default":null}]};var prototype$24=inherits(Lookup,Transform);prototype$24.transform=function(_,pulse){var out=pulse,as=_.as,keys=_.fields,index=_.index,values=_.values,defaultValue=_.default==null?null:_.default,reset=_.modified(),flag=reset?pulse.SOURCE:pulse.ADD,n=keys.length,set,m,mods;if(values){m=values.length;if(n>1&&!as){error$1('Multi-field lookup requires explicit "as" parameter.');}if(as&&as.length!==n*m){error$1('The "as" parameter has too few output field names.');}as=as||values.map(accessorName);set=function set(t){for(var i=0,k=0,j,v;i<n;++i){v=index.get(keys[i](t));if(v==null)for(j=0;j<m;++j,++k){t[as[k]]=defaultValue;}else for(j=0;j<m;++j,++k){t[as[k]]=values[j](v);}}};}else{if(!as){error$1('Missing output field names.');}set=function set(t){for(var i=0,v;i<n;++i){v=index.get(keys[i](t));t[as[i]]=v==null?defaultValue:v;}};}if(reset){out=pulse.reflow(true);}else{mods=keys.some(function(k){return pulse.modified(k.fields);});flag|=mods?pulse.MOD:0;}pulse.visit(flag,set);return out.modifies(as);};/**
 * Computes global min/max extents over a collection of extents.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<number>>} params.extents - The input extents.
 */function MultiExtent(params){Operator.call(this,null,update$4,params);}inherits(MultiExtent,Operator);function update$4(_){if(this.value&&!_.modified()){return this.value;}var min=+Infinity,max=-Infinity,ext=_.extents,i,n,e;for(i=0,n=ext.length;i<n;++i){e=ext[i];if(e[0]<min)min=e[0];if(e[1]>max)max=e[1];}return[min,max];}/**
 * Merge a collection of value arrays.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<*>>} params.values - The input value arrrays.
 */function MultiValues(params){Operator.call(this,null,update$5,params);}inherits(MultiValues,Operator);function update$5(_){return this.value&&!_.modified()?this.value:_.values.reduce(function(data,_){return data.concat(_);},[]);}/**
 * Operator whose value is simply its parameter hash. This operator is
 * useful for enabling reactive updates to values of nested objects.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */function Params(params){Transform.call(this,null,params);}inherits(Params,Transform);Params.prototype.transform=function(_,pulse){this.modified(_.modified());this.value=_;return pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS);// do not pass tuples
};/**
 * Partitions pre-faceted data into tuple subflows.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): Array<object>} params.field - The field
 *   accessor for an array of subflow tuple objects.
 */function PreFacet(params){Facet.call(this,params);}var prototype$25=inherits(PreFacet,Facet);prototype$25.transform=function(_,pulse){var self=this,flow=_.subflow,field$$1=_.field;if(_.modified('field')||field$$1&&pulse.modified(accessorFields(field$$1))){error$1('PreFacet does not support field modification.');}this._targets.active=0;// reset list of active subflows
pulse.visit(pulse.MOD,function(t){var sf=self.subflow(tupleid(t),flow,pulse,t);field$$1?field$$1(t).forEach(function(_){sf.mod(_);}):sf.mod(t);});pulse.visit(pulse.ADD,function(t){var sf=self.subflow(tupleid(t),flow,pulse,t);field$$1?field$$1(t).forEach(function(_){sf.add(ingest(_));}):sf.add(t);});pulse.visit(pulse.REM,function(t){var sf=self.subflow(tupleid(t),flow,pulse,t);field$$1?field$$1(t).forEach(function(_){sf.rem(_);}):sf.rem(t);});return pulse;};/**
 * Proxy the value of another operator as a pure signal value.
 * Ensures no tuples are propagated.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {*} params.value - The value to proxy, becomes the value of this operator.
 */function Proxy(params){Transform.call(this,null,params);}var prototype$26=inherits(Proxy,Transform);prototype$26.transform=function(_,pulse){this.value=_.value;return _.modified('value')?pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS):pulse.StopPropagation;};/**
 * Relays a data stream between data processing pipelines.
 * If the derive parameter is set, this transform will create derived
 * copies of observed tuples. This provides derived data streams in which
 * modifications to the tuples do not pollute an upstream data source.
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.derive=false] - Boolean flag indicating if
 *   the transform should make derived copies of incoming tuples.
 * @constructor
 */function Relay(params){Transform.call(this,null,params);}var prototype$27=inherits(Relay,Transform);prototype$27.transform=function(_,pulse){var out,lut;if(this.value){lut=this.value;}else{out=pulse=pulse.addAll();lut=this.value={};}if(_.derive){out=pulse.fork();pulse.visit(pulse.REM,function(t){var id$$1=tupleid(t);out.rem.push(lut[id$$1]);lut[id$$1]=null;});pulse.visit(pulse.ADD,function(t){var dt=derive(t);lut[tupleid(t)]=dt;out.add.push(dt);});pulse.visit(pulse.MOD,function(t){out.mod.push(rederive(t,lut[tupleid(t)]));});}return out;};/**
 * Samples tuples passing through this operator.
 * Uses reservoir sampling to maintain a representative sample.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.size=1000] - The maximum number of samples.
 */function Sample(params){Transform.call(this,[],params);this.count=0;}Sample.Definition={"type":"Sample","metadata":{"source":true,"changes":true},"params":[{"name":"size","type":"number","default":1000}]};var prototype$28=inherits(Sample,Transform);prototype$28.transform=function(_,pulse){var out=pulse.fork(),mod=_.modified('size'),num=_.size,res=this.value,cnt=this.count,cap=0,map=res.reduce(function(m,t){m[tupleid(t)]=1;return m;},{});// sample reservoir update function
function update(t){var p,idx;if(res.length<num){res.push(t);}else{idx=~~((cnt+1)*Math.random());if(idx<res.length&&idx>=cap){p=res[idx];if(map[tupleid(p)])out.rem.push(p);// eviction
res[idx]=t;}}++cnt;}if(pulse.rem.length){// find all tuples that should be removed, add to output
pulse.visit(pulse.REM,function(t){var id$$1=tupleid(t);if(map[id$$1]){map[id$$1]=-1;out.rem.push(t);}--cnt;});// filter removed tuples out of the sample reservoir
res=res.filter(function(t){return map[tupleid(t)]!==-1;});}if((pulse.rem.length||mod)&&res.length<num&&pulse.source){// replenish sample if backing data source is available
cap=cnt=res.length;pulse.visit(pulse.SOURCE,function(t){// update, but skip previously sampled tuples
if(!map[tupleid(t)])update(t);});cap=-1;}if(mod&&res.length>num){for(var i=0,n=res.length-num;i<n;++i){map[tupleid(res[i])]=-1;out.rem.push(res[i]);}res=res.slice(n);}if(pulse.mod.length){// propagate modified tuples in the sample reservoir
pulse.visit(pulse.MOD,function(t){if(map[tupleid(t)])out.mod.push(t);});}if(pulse.add.length){// update sample reservoir
pulse.visit(pulse.ADD,update);}if(pulse.add.length||cap<0){// output newly added tuples
out.add=res.filter(function(t){return!map[tupleid(t)];});}this.count=cnt;this.value=out.source=res;return out;};/**
 * Generates data tuples for a specified sequence range of numbers.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} params.start - The first number in the sequence.
 * @param {number} params.stop - The last number (exclusive) in the sequence.
 * @param {number} [params.step=1] - The step size between numbers in the sequence.
 */function Sequence(params){Transform.call(this,null,params);}Sequence.Definition={"type":"Sequence","metadata":{"generates":true,"source":true},"params":[{"name":"start","type":"number","required":true},{"name":"stop","type":"number","required":true},{"name":"step","type":"number","default":1}],"output":["value"]};var prototype$29=inherits(Sequence,Transform);prototype$29.transform=function(_,pulse){if(this.value&&!_.modified())return;var out=pulse.materialize().fork(pulse.MOD);out.rem=this.value?pulse.rem.concat(this.value):pulse.rem;out.source=this.value=sequence(_.start,_.stop,_.step||1).map(ingest);out.add=pulse.add.concat(this.value);return out;};/**
 * Propagates a new pulse without any tuples so long as the input
 * pulse contains some added, removed or modified tuples.
 * @param {object} params - The parameters for this operator.
 * @constructor
 */function Sieve(params){Transform.call(this,null,params);this.modified(true);// always treat as modified
}var prototype$30=inherits(Sieve,Transform);prototype$30.transform=function(_,pulse){this.value=pulse.source;return pulse.changed()?pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS):pulse.StopPropagation;};/**
 * An index that maps from unique, string-coerced, field values to tuples.
 * Assumes that the field serves as a unique key with no duplicate values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field accessor to index.
 */function TupleIndex(params){Transform.call(this,fastmap(),params);}var prototype$31=inherits(TupleIndex,Transform);prototype$31.transform=function(_,pulse){var df=pulse.dataflow,field$$1=_.field,index=this.value,mod=true;function set(t){index.set(field$$1(t),t);}if(_.modified('field')||pulse.modified(field$$1.fields)){index.clear();pulse.visit(pulse.SOURCE,set);}else if(pulse.changed()){pulse.visit(pulse.REM,function(t){index.delete(field$$1(t));});pulse.visit(pulse.ADD,set);}else{mod=false;}this.modified(mod);if(index.empty>df.cleanThreshold)df.runAfter(index.clean);return pulse.fork();};/**
 * Extracts an array of values. Assumes the source data has already been
 * reduced as needed (e.g., by an upstream Aggregate transform).
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The domain field to extract.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for sorting the values. The comparator will be
 *   applied to backing tuples prior to value extraction.
 */function Values(params){Transform.call(this,null,params);}var prototype$32=inherits(Values,Transform);prototype$32.transform=function(_,pulse){var run=!this.value||_.modified('field')||_.modified('sort')||pulse.changed()||_.sort&&pulse.modified(_.sort.fields);if(run){this.value=(_.sort?pulse.source.slice().sort(_.sort):pulse.source).map(_.field);}};function WindowOp(op,field$$1,param,as){var fn=WindowOps[op](field$$1,param);return{init:fn.init||zero,update:function update(w,t){t[as]=fn.next(w);}};}var WindowOps={row_number:function row_number(){return{next:function next(w){return w.index+1;}};},rank:function rank(){var rank;return{init:function init(){rank=1;},next:function next(w){var i=w.index,data=w.data;return i&&w.compare(data[i-1],data[i])?rank=i+1:rank;}};},dense_rank:function dense_rank(){var drank;return{init:function init(){drank=1;},next:function next(w){var i=w.index,d=w.data;return i&&w.compare(d[i-1],d[i])?++drank:drank;}};},percent_rank:function percent_rank(){var rank=WindowOps.rank(),_next=rank.next;return{init:rank.init,next:function next(w){return(_next(w)-1)/(w.data.length-1);}};},cume_dist:function cume_dist(){var cume;return{init:function init(){cume=0;},next:function next(w){var i=w.index,d=w.data,c=w.compare;if(cume<i){while(i+1<d.length&&!c(d[i],d[i+1])){++i;}cume=i;}return(1+cume)/d.length;}};},ntile:function ntile(field$$1,num){num=+num;if(!(num>0))error$1('ntile num must be greater than zero.');var cume=WindowOps.cume_dist(),_next2=cume.next;return{init:cume.init,next:function next(w){return Math.ceil(num*_next2(w));}};},lag:function lag(field$$1,offset){offset=+offset||1;return{next:function next(w){var i=w.index-offset;return i>=0?field$$1(w.data[i]):null;}};},lead:function lead(field$$1,offset){offset=+offset||1;return{next:function next(w){var i=w.index+offset,d=w.data;return i<d.length?field$$1(d[i]):null;}};},first_value:function first_value(field$$1){return{next:function next(w){return field$$1(w.data[w.i0]);}};},last_value:function last_value(field$$1){return{next:function next(w){return field$$1(w.data[w.i1-1]);}};},nth_value:function nth_value(field$$1,nth){nth=+nth;if(!(nth>0))error$1('nth_value nth must be greater than zero.');return{next:function next(w){var i=w.i0+(nth-1);return i<w.i1?field$$1(w.data[i]):null;}};}};var ValidWindowOps=Object.keys(WindowOps);function WindowState(_){var self=this,ops=array(_.ops),fields=array(_.fields),params=array(_.params),as=array(_.as),outputs=self.outputs=[],windows=self.windows=[],inputs={},map={},countOnly=true,counts=[],measures=[];function visitInputs(f){array(accessorFields(f)).forEach(function(_){inputs[_]=1;});}visitInputs(_.sort);ops.forEach(function(op,i){var field$$1=fields[i],mname=accessorName(field$$1),name=measureName(op,mname,as[i]);visitInputs(field$$1);outputs.push(name);// Window operation
if(WindowOps.hasOwnProperty(op)){windows.push(WindowOp(op,fields[i],params[i],name));}// Aggregate operation
else{if(field$$1==null&&op!=='count'){error$1('Null aggregate field specified.');}if(op==='count'){counts.push(name);return;}countOnly=false;var m=map[mname];if(!m){m=map[mname]=[];m.field=field$$1;measures.push(m);}m.push(createMeasure(op,name));}});if(counts.length||measures.length){self.cell=cell(measures,counts,countOnly);}self.inputs=Object.keys(inputs);}var prototype$34=WindowState.prototype;prototype$34.init=function(){this.windows.forEach(function(_){_.init();});if(this.cell)this.cell.init();};prototype$34.update=function(w,t){var self=this,cell=self.cell,wind=self.windows,data=w.data,m=wind&&wind.length,j;if(cell){for(j=w.p0;j<w.i0;++j){cell.rem(data[j]);}for(j=w.p1;j<w.i1;++j){cell.add(data[j]);}cell.set(t);}for(j=0;j<m;++j){wind[j].update(w,t);}};function cell(measures,counts,countOnly){measures=measures.map(function(m){return compileMeasures(m,m.field);});var cell={num:0,agg:null,store:false,count:counts};if(!countOnly){var n=measures.length,a=cell.agg=Array(n),i=0;for(;i<n;++i){a[i]=new measures[i](cell);}}if(cell.store){var store=cell.data=new TupleStore();}cell.add=function(t){cell.num+=1;if(countOnly)return;if(store)store.add(t);for(var i=0;i<n;++i){a[i].add(a[i].get(t),t);}};cell.rem=function(t){cell.num-=1;if(countOnly)return;if(store)store.rem(t);for(var i=0;i<n;++i){a[i].rem(a[i].get(t),t);}};cell.set=function(t){var i,n;// consolidate stored values
if(store)store.values();// update tuple properties
for(i=0,n=counts.length;i<n;++i){t[counts[i]]=cell.num;}if(!countOnly)for(i=0,n=a.length;i<n;++i){a[i].set(t);}};cell.init=function(){cell.num=0;if(store)store.reset();for(var i=0;i<n;++i){a[i].init();}};return cell;}/**
 * Perform window calculations and write results to the input stream.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator function for sorting tuples within a window.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors by which to partition tuples into separate windows.
 * @param {Array<string>} params.ops - An array of strings indicating window operations to perform.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors
 *   for data fields to use as inputs to window operations.
 * @param {Array<*>} [params.params] - An array of parameter values for window operations.
 * @param {Array<string>} [params.as] - An array of output field names for window operations.
 * @param {Array<number>} [params.frame] - Window frame definition as two-element array.
 * @param {boolean} [params.ignorePeers=false] - If true, base window frame boundaries on row
 *   number alone, ignoring peers with identical sort values. If false (default),
 *   the window boundaries will be adjusted to include peer values.
 */function Window(params){Transform.call(this,{},params);this._mlen=0;this._mods=[];}Window.Definition={"type":"Window","metadata":{"modifies":true},"params":[{"name":"sort","type":"compare"},{"name":"groupby","type":"field","array":true},{"name":"ops","type":"enum","array":true,"values":ValidWindowOps.concat(ValidAggregateOps)},{"name":"params","type":"number","null":true,"array":true},{"name":"fields","type":"field","null":true,"array":true},{"name":"as","type":"string","null":true,"array":true},{"name":"frame","type":"number","null":true,"array":true,"length":2,"default":[null,0]},{"name":"ignorePeers","type":"boolean","default":false}]};var prototype$33=inherits(Window,Transform);prototype$33.transform=function(_,pulse){var self=this,state=self.state,mod=_.modified(),i,n;this.stamp=pulse.stamp;// initialize window state
if(!state||mod){state=self.state=new WindowState(_);}// retrieve group for a tuple
var key$$1=groupkey(_.groupby);function group(t){return self.group(key$$1(t));}// partition input tuples
if(mod||pulse.modified(state.inputs)){self.value={};pulse.visit(pulse.SOURCE,function(t){group(t).add(t);});}else{pulse.visit(pulse.REM,function(t){group(t).remove(t);});pulse.visit(pulse.ADD,function(t){group(t).add(t);});}// perform window calculations for each modified partition
for(i=0,n=self._mlen;i<n;++i){processPartition(self._mods[i],state,_);}self._mlen=0;self._mods=[];// TODO don't reflow everything?
return pulse.reflow(mod).modifies(state.outputs);};prototype$33.group=function(key$$1){var self=this,group=self.value[key$$1];if(!group){group=self.value[key$$1]=SortedList(tupleid);group.stamp=-1;}if(group.stamp<self.stamp){group.stamp=self.stamp;self._mods[self._mlen++]=group;}return group;};function processPartition(list,state,_){var sort=_.sort,range=sort&&!_.ignorePeers,frame=_.frame||[null,0],data=list.data(sort),n=data.length,i=0,b=range?bisector(sort):null,w={i0:0,i1:0,p0:0,p1:0,index:0,data:data,compare:sort||constant(-1)};for(state.init();i<n;++i){setWindow(w,frame,i,n);if(range)adjustRange(w,b);state.update(w,data[i]);}}function setWindow(w,f,i,n){w.p0=w.i0;w.p1=w.i1;w.i0=f[0]==null?0:Math.max(0,i-Math.abs(f[0]));w.i1=f[1]==null?n:Math.min(n,i+Math.abs(f[1])+1);w.index=i;}// if frame type is 'range', adjust window for peer values
function adjustRange(w,bisect){var r0=w.i0,r1=w.i1-1,c=w.compare,d=w.data,n=d.length-1;if(r0>0&&!c(d[r0],d[r0-1]))w.i0=bisect.left(d,d[r0]);if(r1<n&&!c(d[r1],d[r1+1]))w.i1=bisect.right(d,d[r1]);}var tx=Object.freeze({aggregate:Aggregate,bin:Bin,collect:Collect,compare:Compare,countpattern:CountPattern,cross:Cross,density:Density,extent:Extent,facet:Facet,field:Field,filter:Filter,fold:Fold,formula:Formula,generate:Generate,impute:Impute,joinaggregate:JoinAggregate,key:Key,lookup:Lookup,multiextent:MultiExtent,multivalues:MultiValues,params:Params,prefacet:PreFacet,proxy:Proxy,relay:Relay,sample:Sample,sequence:Sequence,sieve:Sieve,subflow:Subflow,tupleindex:TupleIndex,values:Values,window:Window});function Bounds(b){this.clear();if(b)this.union(b);}var prototype$36=Bounds.prototype;prototype$36.clone=function(){return new Bounds(this);};prototype$36.clear=function(){this.x1=+Number.MAX_VALUE;this.y1=+Number.MAX_VALUE;this.x2=-Number.MAX_VALUE;this.y2=-Number.MAX_VALUE;return this;};prototype$36.empty=function(){return this.x1===+Number.MAX_VALUE&&this.y1===+Number.MAX_VALUE&&this.x2===-Number.MAX_VALUE&&this.y2===-Number.MAX_VALUE;};prototype$36.set=function(x1,y1,x2,y2){if(x2<x1){this.x2=x1;this.x1=x2;}else{this.x1=x1;this.x2=x2;}if(y2<y1){this.y2=y1;this.y1=y2;}else{this.y1=y1;this.y2=y2;}return this;};prototype$36.add=function(x,y){if(x<this.x1)this.x1=x;if(y<this.y1)this.y1=y;if(x>this.x2)this.x2=x;if(y>this.y2)this.y2=y;return this;};prototype$36.expand=function(d){this.x1-=d;this.y1-=d;this.x2+=d;this.y2+=d;return this;};prototype$36.round=function(){this.x1=Math.floor(this.x1);this.y1=Math.floor(this.y1);this.x2=Math.ceil(this.x2);this.y2=Math.ceil(this.y2);return this;};prototype$36.translate=function(dx,dy){this.x1+=dx;this.x2+=dx;this.y1+=dy;this.y2+=dy;return this;};prototype$36.rotate=function(angle,x,y){var cos=Math.cos(angle),sin=Math.sin(angle),cx=x-x*cos+y*sin,cy=y-x*sin-y*cos,x1=this.x1,x2=this.x2,y1=this.y1,y2=this.y2;return this.clear().add(cos*x1-sin*y1+cx,sin*x1+cos*y1+cy).add(cos*x1-sin*y2+cx,sin*x1+cos*y2+cy).add(cos*x2-sin*y1+cx,sin*x2+cos*y1+cy).add(cos*x2-sin*y2+cx,sin*x2+cos*y2+cy);};prototype$36.union=function(b){if(b.x1<this.x1)this.x1=b.x1;if(b.y1<this.y1)this.y1=b.y1;if(b.x2>this.x2)this.x2=b.x2;if(b.y2>this.y2)this.y2=b.y2;return this;};prototype$36.intersect=function(b){if(b.x1>this.x1)this.x1=b.x1;if(b.y1>this.y1)this.y1=b.y1;if(b.x2<this.x2)this.x2=b.x2;if(b.y2<this.y2)this.y2=b.y2;return this;};prototype$36.encloses=function(b){return b&&this.x1<=b.x1&&this.x2>=b.x2&&this.y1<=b.y1&&this.y2>=b.y2;};prototype$36.alignsWith=function(b){return b&&(this.x1==b.x1||this.x2==b.x2||this.y1==b.y1||this.y2==b.y2);};prototype$36.intersects=function(b){return b&&!(this.x2<b.x1||this.x1>b.x2||this.y2<b.y1||this.y1>b.y2);};prototype$36.contains=function(x,y){return!(x<this.x1||x>this.x2||y<this.y1||y>this.y2);};prototype$36.width=function(){return this.x2-this.x1;};prototype$36.height=function(){return this.y2-this.y1;};var gradient_id=0;var Gradient=function Gradient(p0,p1){var stops=[],gradient;return gradient={id:'gradient_'+gradient_id++,x1:p0?p0[0]:0,y1:p0?p0[1]:0,x2:p1?p1[0]:1,y2:p1?p1[1]:0,stops:stops,stop:function stop(offset,color){stops.push({offset:offset,color:color});return gradient;}};};function Item(mark){this.mark=mark;this.bounds=this.bounds||new Bounds();}function GroupItem(mark){Item.call(this,mark);this.items=this.items||[];}inherits(GroupItem,Item);// create a new DOM element
function domCreate(doc,tag,ns){if(!doc&&typeof document!=='undefined'&&document.createElement){doc=document;}return doc?ns?doc.createElementNS(ns,tag):doc.createElement(tag):null;}// find first child element with matching tag
function domFind(el,tag){tag=tag.toLowerCase();var nodes=el.childNodes,i=0,n=nodes.length;for(;i<n;++i){if(nodes[i].tagName.toLowerCase()===tag){return nodes[i];}}}// retrieve child element at given index
// create & insert if doesn't exist or if tags do not match
function domChild(el,index,tag,ns){var a=el.childNodes[index],b;if(!a||a.tagName.toLowerCase()!==tag.toLowerCase()){b=a||null;a=domCreate(el.ownerDocument,tag,ns);el.insertBefore(a,b);}return a;}// remove all child elements at or above the given index
function domClear(el,index){var nodes=el.childNodes,curr=nodes.length;while(curr>index){el.removeChild(nodes[--curr]);}return el;}// generate css class name for mark
function cssClass(mark){return'mark-'+mark.marktype+(mark.role?' role-'+mark.role:'')+(mark.name?' '+mark.name:'');}var Canvas;try{Canvas=require('canvas');}catch(e){Canvas=null;}var Canvas$1=function Canvas$1(w,h){var canvas=domCreate(null,'canvas');if(canvas&&canvas.getContext){canvas.width=w;canvas.height=h;}else if(Canvas){try{canvas=new Canvas(w,h);}catch(e){canvas=null;}}return canvas;};var Image$1=typeof Image!=='undefined'?Image:Canvas&&Canvas.Image||null;function ResourceLoader(customLoader){this._pending=0;this._loader=customLoader||loader();}var prototype$37=ResourceLoader.prototype;prototype$37.pending=function(){return this._pending;};function increment(loader$$1){loader$$1._pending+=1;}function decrement(loader$$1){loader$$1._pending-=1;}prototype$37.sanitizeURL=function(uri){var loader$$1=this;increment(loader$$1);return loader$$1._loader.sanitize(uri,{context:'href'}).then(function(opt){decrement(loader$$1);return opt;}).catch(function(){decrement(loader$$1);return null;});};prototype$37.loadImage=function(uri){var loader$$1=this;increment(loader$$1);return loader$$1._loader.sanitize(uri,{context:'image'}).then(function(opt){var url=opt.href;if(!url||!Image$1)throw{url:url};var image=new Image$1();image.onload=function(){decrement(loader$$1);image.loaded=true;};image.onerror=function(){decrement(loader$$1);image.loaded=false;};image.src=url;return image;}).catch(function(e){decrement(loader$$1);return{loaded:false,width:0,height:0,src:e&&e.url||''};});};prototype$37.ready=function(){var loader$$1=this;return new Promise(function(accept){function poll(value){if(!loader$$1.pending())accept(value);else setTimeout(function(){poll(true);},10);}poll(false);});};var pi=Math.PI;var tau=2*pi;var epsilon=1e-6;var tauEpsilon=tau-epsilon;function Path(){this._x0=this._y0=// start of current subpath
this._x1=this._y1=null;// end of current subpath
this._="";}function path(){return new Path();}Path.prototype=path.prototype={constructor:Path,moveTo:function moveTo(x,y){this._+="M"+(this._x0=this._x1=+x)+","+(this._y0=this._y1=+y);},closePath:function closePath(){if(this._x1!==null){this._x1=this._x0,this._y1=this._y0;this._+="Z";}},lineTo:function lineTo(x,y){this._+="L"+(this._x1=+x)+","+(this._y1=+y);},quadraticCurveTo:function quadraticCurveTo(x1,y1,x,y){this._+="Q"+ +x1+","+ +y1+","+(this._x1=+x)+","+(this._y1=+y);},bezierCurveTo:function bezierCurveTo(x1,y1,x2,y2,x,y){this._+="C"+ +x1+","+ +y1+","+ +x2+","+ +y2+","+(this._x1=+x)+","+(this._y1=+y);},arcTo:function arcTo(x1,y1,x2,y2,r){x1=+x1,y1=+y1,x2=+x2,y2=+y2,r=+r;var x0=this._x1,y0=this._y1,x21=x2-x1,y21=y2-y1,x01=x0-x1,y01=y0-y1,l01_2=x01*x01+y01*y01;// Is the radius negative? Error.
if(r<0)throw new Error("negative radius: "+r);// Is this path empty? Move to (x1,y1).
if(this._x1===null){this._+="M"+(this._x1=x1)+","+(this._y1=y1);}// Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
else if(!(l01_2>epsilon)){}// Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
// Equivalently, is (x1,y1) coincident with (x2,y2)?
// Or, is the radius zero? Line to (x1,y1).
else if(!(Math.abs(y01*x21-y21*x01)>epsilon)||!r){this._+="L"+(this._x1=x1)+","+(this._y1=y1);}// Otherwise, draw an arc!
else{var x20=x2-x0,y20=y2-y0,l21_2=x21*x21+y21*y21,l20_2=x20*x20+y20*y20,l21=Math.sqrt(l21_2),l01=Math.sqrt(l01_2),l=r*Math.tan((pi-Math.acos((l21_2+l01_2-l20_2)/(2*l21*l01)))/2),t01=l/l01,t21=l/l21;// If the start tangent is not coincident with (x0,y0), line to.
if(Math.abs(t01-1)>epsilon){this._+="L"+(x1+t01*x01)+","+(y1+t01*y01);}this._+="A"+r+","+r+",0,0,"+ +(y01*x20>x01*y20)+","+(this._x1=x1+t21*x21)+","+(this._y1=y1+t21*y21);}},arc:function arc(x,y,r,a0,a1,ccw){x=+x,y=+y,r=+r;var dx=r*Math.cos(a0),dy=r*Math.sin(a0),x0=x+dx,y0=y+dy,cw=1^ccw,da=ccw?a0-a1:a1-a0;// Is the radius negative? Error.
if(r<0)throw new Error("negative radius: "+r);// Is this path empty? Move to (x0,y0).
if(this._x1===null){this._+="M"+x0+","+y0;}// Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
else if(Math.abs(this._x1-x0)>epsilon||Math.abs(this._y1-y0)>epsilon){this._+="L"+x0+","+y0;}// Is this arc empty? We’re done.
if(!r)return;// Does the angle go the wrong way? Flip the direction.
if(da<0)da=da%tau+tau;// Is this a complete circle? Draw two arcs to complete the circle.
if(da>tauEpsilon){this._+="A"+r+","+r+",0,1,"+cw+","+(x-dx)+","+(y-dy)+"A"+r+","+r+",0,1,"+cw+","+(this._x1=x0)+","+(this._y1=y0);}// Is this arc non-empty? Draw an arc!
else if(da>epsilon){this._+="A"+r+","+r+",0,"+ +(da>=pi)+","+cw+","+(this._x1=x+r*Math.cos(a1))+","+(this._y1=y+r*Math.sin(a1));}},rect:function rect(x,y,w,h){this._+="M"+(this._x0=this._x1=+x)+","+(this._y0=this._y1=+y)+"h"+ +w+"v"+ +h+"h"+-w+"Z";},toString:function toString(){return this._;}};var constant$2=function constant$2(x){return function constant(){return x;};};var abs=Math.abs;var atan2=Math.atan2;var cos=Math.cos;var max$1=Math.max;var min$1=Math.min;var sin=Math.sin;var sqrt=Math.sqrt;var epsilon$1=1e-12;var pi$1=Math.PI;var halfPi=pi$1/2;var tau$1=2*pi$1;function acos(x){return x>1?0:x<-1?pi$1:Math.acos(x);}function asin(x){return x>=1?halfPi:x<=-1?-halfPi:Math.asin(x);}function arcInnerRadius(d){return d.innerRadius;}function arcOuterRadius(d){return d.outerRadius;}function arcStartAngle(d){return d.startAngle;}function arcEndAngle(d){return d.endAngle;}function arcPadAngle(d){return d&&d.padAngle;// Note: optional!
}function intersect(x0,y0,x1,y1,x2,y2,x3,y3){var x10=x1-x0,y10=y1-y0,x32=x3-x2,y32=y3-y2,t=(x32*(y0-y2)-y32*(x0-x2))/(y32*x10-x32*y10);return[x0+t*x10,y0+t*y10];}// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0,y0,x1,y1,r1,rc,cw){var x01=x0-x1,y01=y0-y1,lo=(cw?rc:-rc)/sqrt(x01*x01+y01*y01),ox=lo*y01,oy=-lo*x01,x11=x0+ox,y11=y0+oy,x10=x1+ox,y10=y1+oy,x00=(x11+x10)/2,y00=(y11+y10)/2,dx=x10-x11,dy=y10-y11,d2=dx*dx+dy*dy,r=r1-rc,D=x11*y10-x10*y11,d=(dy<0?-1:1)*sqrt(max$1(0,r*r*d2-D*D)),cx0=(D*dy-dx*d)/d2,cy0=(-D*dx-dy*d)/d2,cx1=(D*dy+dx*d)/d2,cy1=(-D*dx+dy*d)/d2,dx0=cx0-x00,dy0=cy0-y00,dx1=cx1-x00,dy1=cy1-y00;// Pick the closer of the two intersection points.
// TODO Is there a faster way to determine which intersection to use?
if(dx0*dx0+dy0*dy0>dx1*dx1+dy1*dy1)cx0=cx1,cy0=cy1;return{cx:cx0,cy:cy0,x01:-ox,y01:-oy,x11:cx0*(r1/r-1),y11:cy0*(r1/r-1)};}var d3_arc=function d3_arc(){var innerRadius=arcInnerRadius,outerRadius=arcOuterRadius,cornerRadius=constant$2(0),padRadius=null,startAngle=arcStartAngle,endAngle=arcEndAngle,padAngle=arcPadAngle,context=null;function arc(){var buffer,r,r0=+innerRadius.apply(this,arguments),r1=+outerRadius.apply(this,arguments),a0=startAngle.apply(this,arguments)-halfPi,a1=endAngle.apply(this,arguments)-halfPi,da=abs(a1-a0),cw=a1>a0;if(!context)context=buffer=path();// Ensure that the outer radius is always larger than the inner radius.
if(r1<r0)r=r1,r1=r0,r0=r;// Is it a point?
if(!(r1>epsilon$1))context.moveTo(0,0);// Or is it a circle or annulus?
else if(da>tau$1-epsilon$1){context.moveTo(r1*cos(a0),r1*sin(a0));context.arc(0,0,r1,a0,a1,!cw);if(r0>epsilon$1){context.moveTo(r0*cos(a1),r0*sin(a1));context.arc(0,0,r0,a1,a0,cw);}}// Or is it a circular or annular sector?
else{var a01=a0,a11=a1,a00=a0,a10=a1,da0=da,da1=da,ap=padAngle.apply(this,arguments)/2,rp=ap>epsilon$1&&(padRadius?+padRadius.apply(this,arguments):sqrt(r0*r0+r1*r1)),rc=min$1(abs(r1-r0)/2,+cornerRadius.apply(this,arguments)),rc0=rc,rc1=rc,t0,t1;// Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
if(rp>epsilon$1){var p0=asin(rp/r0*sin(ap)),p1=asin(rp/r1*sin(ap));if((da0-=p0*2)>epsilon$1)p0*=cw?1:-1,a00+=p0,a10-=p0;else da0=0,a00=a10=(a0+a1)/2;if((da1-=p1*2)>epsilon$1)p1*=cw?1:-1,a01+=p1,a11-=p1;else da1=0,a01=a11=(a0+a1)/2;}var x01=r1*cos(a01),y01=r1*sin(a01),x10=r0*cos(a10),y10=r0*sin(a10);// Apply rounded corners?
if(rc>epsilon$1){var x11=r1*cos(a11),y11=r1*sin(a11),x00=r0*cos(a00),y00=r0*sin(a00);// Restrict the corner radius according to the sector angle.
if(da<pi$1){var oc=da0>epsilon$1?intersect(x01,y01,x00,y00,x11,y11,x10,y10):[x10,y10],ax=x01-oc[0],ay=y01-oc[1],bx=x11-oc[0],by=y11-oc[1],kc=1/sin(acos((ax*bx+ay*by)/(sqrt(ax*ax+ay*ay)*sqrt(bx*bx+by*by)))/2),lc=sqrt(oc[0]*oc[0]+oc[1]*oc[1]);rc0=min$1(rc,(r0-lc)/(kc-1));rc1=min$1(rc,(r1-lc)/(kc+1));}}// Is the sector collapsed to a line?
if(!(da1>epsilon$1))context.moveTo(x01,y01);// Does the sector’s outer ring have rounded corners?
else if(rc1>epsilon$1){t0=cornerTangents(x00,y00,x01,y01,r1,rc1,cw);t1=cornerTangents(x11,y11,x10,y10,r1,rc1,cw);context.moveTo(t0.cx+t0.x01,t0.cy+t0.y01);// Have the corners merged?
if(rc1<rc)context.arc(t0.cx,t0.cy,rc1,atan2(t0.y01,t0.x01),atan2(t1.y01,t1.x01),!cw);// Otherwise, draw the two corners and the ring.
else{context.arc(t0.cx,t0.cy,rc1,atan2(t0.y01,t0.x01),atan2(t0.y11,t0.x11),!cw);context.arc(0,0,r1,atan2(t0.cy+t0.y11,t0.cx+t0.x11),atan2(t1.cy+t1.y11,t1.cx+t1.x11),!cw);context.arc(t1.cx,t1.cy,rc1,atan2(t1.y11,t1.x11),atan2(t1.y01,t1.x01),!cw);}}// Or is the outer ring just a circular arc?
else context.moveTo(x01,y01),context.arc(0,0,r1,a01,a11,!cw);// Is there no inner ring, and it’s a circular sector?
// Or perhaps it’s an annular sector collapsed due to padding?
if(!(r0>epsilon$1)||!(da0>epsilon$1))context.lineTo(x10,y10);// Does the sector’s inner ring (or point) have rounded corners?
else if(rc0>epsilon$1){t0=cornerTangents(x10,y10,x11,y11,r0,-rc0,cw);t1=cornerTangents(x01,y01,x00,y00,r0,-rc0,cw);context.lineTo(t0.cx+t0.x01,t0.cy+t0.y01);// Have the corners merged?
if(rc0<rc)context.arc(t0.cx,t0.cy,rc0,atan2(t0.y01,t0.x01),atan2(t1.y01,t1.x01),!cw);// Otherwise, draw the two corners and the ring.
else{context.arc(t0.cx,t0.cy,rc0,atan2(t0.y01,t0.x01),atan2(t0.y11,t0.x11),!cw);context.arc(0,0,r0,atan2(t0.cy+t0.y11,t0.cx+t0.x11),atan2(t1.cy+t1.y11,t1.cx+t1.x11),cw);context.arc(t1.cx,t1.cy,rc0,atan2(t1.y11,t1.x11),atan2(t1.y01,t1.x01),!cw);}}// Or is the inner ring just a circular arc?
else context.arc(0,0,r0,a10,a00,cw);}context.closePath();if(buffer)return context=null,buffer+""||null;}arc.centroid=function(){var r=(+innerRadius.apply(this,arguments)+ +outerRadius.apply(this,arguments))/2,a=(+startAngle.apply(this,arguments)+ +endAngle.apply(this,arguments))/2-pi$1/2;return[cos(a)*r,sin(a)*r];};arc.innerRadius=function(_){return arguments.length?(innerRadius=typeof _==="function"?_:constant$2(+_),arc):innerRadius;};arc.outerRadius=function(_){return arguments.length?(outerRadius=typeof _==="function"?_:constant$2(+_),arc):outerRadius;};arc.cornerRadius=function(_){return arguments.length?(cornerRadius=typeof _==="function"?_:constant$2(+_),arc):cornerRadius;};arc.padRadius=function(_){return arguments.length?(padRadius=_==null?null:typeof _==="function"?_:constant$2(+_),arc):padRadius;};arc.startAngle=function(_){return arguments.length?(startAngle=typeof _==="function"?_:constant$2(+_),arc):startAngle;};arc.endAngle=function(_){return arguments.length?(endAngle=typeof _==="function"?_:constant$2(+_),arc):endAngle;};arc.padAngle=function(_){return arguments.length?(padAngle=typeof _==="function"?_:constant$2(+_),arc):padAngle;};arc.context=function(_){return arguments.length?(context=_==null?null:_,arc):context;};return arc;};function Linear(context){this._context=context;}Linear.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._point=0;},lineEnd:function lineEnd(){if(this._line||this._line!==0&&this._point===1)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;// proceed
default:this._context.lineTo(x,y);break;}}};var curveLinear=function curveLinear(context){return new Linear(context);};function x$1(p){return p[0];}function y$1(p){return p[1];}var line$1=function line$1(){var x=x$1,y=y$1,defined=constant$2(true),context=null,curve=curveLinear,output=null;function line(data){var i,n=data.length,d,defined0=false,buffer;if(context==null)output=curve(buffer=path());for(i=0;i<=n;++i){if(!(i<n&&defined(d=data[i],i,data))===defined0){if(defined0=!defined0)output.lineStart();else output.lineEnd();}if(defined0)output.point(+x(d,i,data),+y(d,i,data));}if(buffer)return output=null,buffer+""||null;}line.x=function(_){return arguments.length?(x=typeof _==="function"?_:constant$2(+_),line):x;};line.y=function(_){return arguments.length?(y=typeof _==="function"?_:constant$2(+_),line):y;};line.defined=function(_){return arguments.length?(defined=typeof _==="function"?_:constant$2(!!_),line):defined;};line.curve=function(_){return arguments.length?(curve=_,context!=null&&(output=curve(context)),line):curve;};line.context=function(_){return arguments.length?(_==null?context=output=null:output=curve(context=_),line):context;};return line;};var area$1=function area$1(){var x0=x$1,x1=null,y0=constant$2(0),y1=y$1,defined=constant$2(true),context=null,curve=curveLinear,output=null;function area(data){var i,j,k,n=data.length,d,defined0=false,buffer,x0z=new Array(n),y0z=new Array(n);if(context==null)output=curve(buffer=path());for(i=0;i<=n;++i){if(!(i<n&&defined(d=data[i],i,data))===defined0){if(defined0=!defined0){j=i;output.areaStart();output.lineStart();}else{output.lineEnd();output.lineStart();for(k=i-1;k>=j;--k){output.point(x0z[k],y0z[k]);}output.lineEnd();output.areaEnd();}}if(defined0){x0z[i]=+x0(d,i,data),y0z[i]=+y0(d,i,data);output.point(x1?+x1(d,i,data):x0z[i],y1?+y1(d,i,data):y0z[i]);}}if(buffer)return output=null,buffer+""||null;}function arealine(){return line$1().defined(defined).curve(curve).context(context);}area.x=function(_){return arguments.length?(x0=typeof _==="function"?_:constant$2(+_),x1=null,area):x0;};area.x0=function(_){return arguments.length?(x0=typeof _==="function"?_:constant$2(+_),area):x0;};area.x1=function(_){return arguments.length?(x1=_==null?null:typeof _==="function"?_:constant$2(+_),area):x1;};area.y=function(_){return arguments.length?(y0=typeof _==="function"?_:constant$2(+_),y1=null,area):y0;};area.y0=function(_){return arguments.length?(y0=typeof _==="function"?_:constant$2(+_),area):y0;};area.y1=function(_){return arguments.length?(y1=_==null?null:typeof _==="function"?_:constant$2(+_),area):y1;};area.lineX0=area.lineY0=function(){return arealine().x(x0).y(y0);};area.lineY1=function(){return arealine().x(x0).y(y1);};area.lineX1=function(){return arealine().x(x1).y(y0);};area.defined=function(_){return arguments.length?(defined=typeof _==="function"?_:constant$2(!!_),area):defined;};area.curve=function(_){return arguments.length?(curve=_,context!=null&&(output=curve(context)),area):curve;};area.context=function(_){return arguments.length?(_==null?context=output=null:output=curve(context=_),area):context;};return area;};var circle={draw:function draw(context,size){var r=Math.sqrt(size/pi$1);context.moveTo(r,0);context.arc(0,0,r,0,tau$1);}};var d3_symbol=function d3_symbol(){var type=constant$2(circle),size=constant$2(64),context=null;function symbol(){var buffer;if(!context)context=buffer=path();type.apply(this,arguments).draw(context,+size.apply(this,arguments));if(buffer)return context=null,buffer+""||null;}symbol.type=function(_){return arguments.length?(type=typeof _==="function"?_:constant$2(_),symbol):type;};symbol.size=function(_){return arguments.length?(size=typeof _==="function"?_:constant$2(+_),symbol):size;};symbol.context=function(_){return arguments.length?(context=_==null?null:_,symbol):context;};return symbol;};var noop$2=function noop$2(){};function _point(that,x,y){that._context.bezierCurveTo((2*that._x0+that._x1)/3,(2*that._y0+that._y1)/3,(that._x0+2*that._x1)/3,(that._y0+2*that._y1)/3,(that._x0+4*that._x1+x)/6,(that._y0+4*that._y1+y)/6);}function Basis(context){this._context=context;}Basis.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._y0=this._y1=NaN;this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 3:_point(this,this._x1,this._y1);// proceed
case 2:this._context.lineTo(this._x1,this._y1);break;}if(this._line||this._line!==0&&this._point===1)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;break;case 2:this._point=3;this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);// proceed
default:_point(this,x,y);break;}this._x0=this._x1,this._x1=x;this._y0=this._y1,this._y1=y;}};var curveBasis=function curveBasis(context){return new Basis(context);};function BasisClosed(context){this._context=context;}BasisClosed.prototype={areaStart:noop$2,areaEnd:noop$2,lineStart:function lineStart(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN;this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 1:{this._context.moveTo(this._x2,this._y2);this._context.closePath();break;}case 2:{this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3);this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3);this._context.closePath();break;}case 3:{this.point(this._x2,this._y2);this.point(this._x3,this._y3);this.point(this._x4,this._y4);break;}}},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._x2=x,this._y2=y;break;case 1:this._point=2;this._x3=x,this._y3=y;break;case 2:this._point=3;this._x4=x,this._y4=y;this._context.moveTo((this._x0+4*this._x1+x)/6,(this._y0+4*this._y1+y)/6);break;default:_point(this,x,y);break;}this._x0=this._x1,this._x1=x;this._y0=this._y1,this._y1=y;}};var curveBasisClosed=function curveBasisClosed(context){return new BasisClosed(context);};function BasisOpen(context){this._context=context;}BasisOpen.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._y0=this._y1=NaN;this._point=0;},lineEnd:function lineEnd(){if(this._line||this._line!==0&&this._point===3)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var x0=(this._x0+4*this._x1+x)/6,y0=(this._y0+4*this._y1+y)/6;this._line?this._context.lineTo(x0,y0):this._context.moveTo(x0,y0);break;case 3:this._point=4;// proceed
default:_point(this,x,y);break;}this._x0=this._x1,this._x1=x;this._y0=this._y1,this._y1=y;}};var curveBasisOpen=function curveBasisOpen(context){return new BasisOpen(context);};function Bundle(context,beta){this._basis=new Basis(context);this._beta=beta;}Bundle.prototype={lineStart:function lineStart(){this._x=[];this._y=[];this._basis.lineStart();},lineEnd:function lineEnd(){var x=this._x,y=this._y,j=x.length-1;if(j>0){var x0=x[0],y0=y[0],dx=x[j]-x0,dy=y[j]-y0,i=-1,t;while(++i<=j){t=i/j;this._basis.point(this._beta*x[i]+(1-this._beta)*(x0+t*dx),this._beta*y[i]+(1-this._beta)*(y0+t*dy));}}this._x=this._y=null;this._basis.lineEnd();},point:function point(x,y){this._x.push(+x);this._y.push(+y);}};var curveBundle=function custom(beta){function bundle(context){return beta===1?new Basis(context):new Bundle(context,beta);}bundle.beta=function(beta){return custom(+beta);};return bundle;}(0.85);function point$1(that,x,y){that._context.bezierCurveTo(that._x1+that._k*(that._x2-that._x0),that._y1+that._k*(that._y2-that._y0),that._x2+that._k*(that._x1-x),that._y2+that._k*(that._y1-y),that._x2,that._y2);}function Cardinal(context,tension){this._context=context;this._k=(1-tension)/6;}Cardinal.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN;this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:point$1(this,this._x1,this._y1);break;}if(this._line||this._line!==0&&this._point===1)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;this._x1=x,this._y1=y;break;case 2:this._point=3;// proceed
default:point$1(this,x,y);break;}this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCardinal=function custom(tension){function cardinal(context){return new Cardinal(context,tension);}cardinal.tension=function(tension){return custom(+tension);};return cardinal;}(0);function CardinalClosed(context,tension){this._context=context;this._k=(1-tension)/6;}CardinalClosed.prototype={areaStart:noop$2,areaEnd:noop$2,lineStart:function lineStart(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN;this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3);this._context.closePath();break;}case 2:{this._context.lineTo(this._x3,this._y3);this._context.closePath();break;}case 3:{this.point(this._x3,this._y3);this.point(this._x4,this._y4);this.point(this._x5,this._y5);break;}}},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._x3=x,this._y3=y;break;case 1:this._point=2;this._context.moveTo(this._x4=x,this._y4=y);break;case 2:this._point=3;this._x5=x,this._y5=y;break;default:point$1(this,x,y);break;}this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCardinalClosed=function custom(tension){function cardinal(context){return new CardinalClosed(context,tension);}cardinal.tension=function(tension){return custom(+tension);};return cardinal;}(0);function CardinalOpen(context,tension){this._context=context;this._k=(1-tension)/6;}CardinalOpen.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN;this._point=0;},lineEnd:function lineEnd(){if(this._line||this._line!==0&&this._point===3)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;// proceed
default:point$1(this,x,y);break;}this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCardinalOpen=function custom(tension){function cardinal(context){return new CardinalOpen(context,tension);}cardinal.tension=function(tension){return custom(+tension);};return cardinal;}(0);function point$2(that,x,y){var x1=that._x1,y1=that._y1,x2=that._x2,y2=that._y2;if(that._l01_a>epsilon$1){var a=2*that._l01_2a+3*that._l01_a*that._l12_a+that._l12_2a,n=3*that._l01_a*(that._l01_a+that._l12_a);x1=(x1*a-that._x0*that._l12_2a+that._x2*that._l01_2a)/n;y1=(y1*a-that._y0*that._l12_2a+that._y2*that._l01_2a)/n;}if(that._l23_a>epsilon$1){var b=2*that._l23_2a+3*that._l23_a*that._l12_a+that._l12_2a,m=3*that._l23_a*(that._l23_a+that._l12_a);x2=(x2*b+that._x1*that._l23_2a-x*that._l12_2a)/m;y2=(y2*b+that._y1*that._l23_2a-y*that._l12_2a)/m;}that._context.bezierCurveTo(x1,y1,x2,y2,that._x2,that._y2);}function CatmullRom(context,alpha){this._context=context;this._alpha=alpha;}CatmullRom.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN;this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2);break;}if(this._line||this._line!==0&&this._point===1)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;if(this._point){var x23=this._x2-x,y23=this._y2-y;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(x23*x23+y23*y23,this._alpha));}switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;break;case 2:this._point=3;// proceed
default:point$2(this,x,y);break;}this._l01_a=this._l12_a,this._l12_a=this._l23_a;this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a;this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCatmullRom=function custom(alpha){function catmullRom(context){return alpha?new CatmullRom(context,alpha):new Cardinal(context,0);}catmullRom.alpha=function(alpha){return custom(+alpha);};return catmullRom;}(0.5);function CatmullRomClosed(context,alpha){this._context=context;this._alpha=alpha;}CatmullRomClosed.prototype={areaStart:noop$2,areaEnd:noop$2,lineStart:function lineStart(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN;this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3);this._context.closePath();break;}case 2:{this._context.lineTo(this._x3,this._y3);this._context.closePath();break;}case 3:{this.point(this._x3,this._y3);this.point(this._x4,this._y4);this.point(this._x5,this._y5);break;}}},point:function point(x,y){x=+x,y=+y;if(this._point){var x23=this._x2-x,y23=this._y2-y;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(x23*x23+y23*y23,this._alpha));}switch(this._point){case 0:this._point=1;this._x3=x,this._y3=y;break;case 1:this._point=2;this._context.moveTo(this._x4=x,this._y4=y);break;case 2:this._point=3;this._x5=x,this._y5=y;break;default:point$2(this,x,y);break;}this._l01_a=this._l12_a,this._l12_a=this._l23_a;this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a;this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCatmullRomClosed=function custom(alpha){function catmullRom(context){return alpha?new CatmullRomClosed(context,alpha):new CardinalClosed(context,0);}catmullRom.alpha=function(alpha){return custom(+alpha);};return catmullRom;}(0.5);function CatmullRomOpen(context,alpha){this._context=context;this._alpha=alpha;}CatmullRomOpen.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN;this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0;},lineEnd:function lineEnd(){if(this._line||this._line!==0&&this._point===3)this._context.closePath();this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;if(this._point){var x23=this._x2-x,y23=this._y2-y;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(x23*x23+y23*y23,this._alpha));}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;// proceed
default:point$2(this,x,y);break;}this._l01_a=this._l12_a,this._l12_a=this._l23_a;this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a;this._x0=this._x1,this._x1=this._x2,this._x2=x;this._y0=this._y1,this._y1=this._y2,this._y2=y;}};var curveCatmullRomOpen=function custom(alpha){function catmullRom(context){return alpha?new CatmullRomOpen(context,alpha):new CardinalOpen(context,0);}catmullRom.alpha=function(alpha){return custom(+alpha);};return catmullRom;}(0.5);function LinearClosed(context){this._context=context;}LinearClosed.prototype={areaStart:noop$2,areaEnd:noop$2,lineStart:function lineStart(){this._point=0;},lineEnd:function lineEnd(){if(this._point)this._context.closePath();},point:function point(x,y){x=+x,y=+y;if(this._point)this._context.lineTo(x,y);else this._point=1,this._context.moveTo(x,y);}};var curveLinearClosed=function curveLinearClosed(context){return new LinearClosed(context);};function sign(x){return x<0?-1:1;}// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that,x2,y2){var h0=that._x1-that._x0,h1=x2-that._x1,s0=(that._y1-that._y0)/(h0||h1<0&&-0),s1=(y2-that._y1)/(h1||h0<0&&-0),p=(s0*h1+s1*h0)/(h0+h1);return(sign(s0)+sign(s1))*Math.min(Math.abs(s0),Math.abs(s1),0.5*Math.abs(p))||0;}// Calculate a one-sided slope.
function slope2(that,t){var h=that._x1-that._x0;return h?(3*(that._y1-that._y0)/h-t)/2:t;}// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point$3(that,t0,t1){var x0=that._x0,y0=that._y0,x1=that._x1,y1=that._y1,dx=(x1-x0)/3;that._context.bezierCurveTo(x0+dx,y0+dx*t0,x1-dx,y1-dx*t1,x1,y1);}function MonotoneX(context){this._context=context;}MonotoneX.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN;this._point=0;},lineEnd:function lineEnd(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:point$3(this,this._t0,slope2(this,this._t0));break;}if(this._line||this._line!==0&&this._point===1)this._context.closePath();this._line=1-this._line;},point:function point(x,y){var t1=NaN;x=+x,y=+y;if(x===this._x1&&y===this._y1)return;// Ignore coincident points.
switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;break;case 2:this._point=3;point$3(this,slope2(this,t1=slope3(this,x,y)),t1);break;default:point$3(this,this._t0,t1=slope3(this,x,y));break;}this._x0=this._x1,this._x1=x;this._y0=this._y1,this._y1=y;this._t0=t1;}};function MonotoneY(context){this._context=new ReflectContext(context);}(MonotoneY.prototype=Object.create(MonotoneX.prototype)).point=function(x,y){MonotoneX.prototype.point.call(this,y,x);};function ReflectContext(context){this._context=context;}ReflectContext.prototype={moveTo:function moveTo(x,y){this._context.moveTo(y,x);},closePath:function closePath(){this._context.closePath();},lineTo:function lineTo(x,y){this._context.lineTo(y,x);},bezierCurveTo:function bezierCurveTo(x1,y1,x2,y2,x,y){this._context.bezierCurveTo(y1,x1,y2,x2,y,x);}};function monotoneX(context){return new MonotoneX(context);}function monotoneY(context){return new MonotoneY(context);}function Natural(context){this._context=context;}Natural.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x=[];this._y=[];},lineEnd:function lineEnd(){var x=this._x,y=this._y,n=x.length;if(n){this._line?this._context.lineTo(x[0],y[0]):this._context.moveTo(x[0],y[0]);if(n===2){this._context.lineTo(x[1],y[1]);}else{var px=controlPoints(x),py=controlPoints(y);for(var i0=0,i1=1;i1<n;++i0,++i1){this._context.bezierCurveTo(px[0][i0],py[0][i0],px[1][i0],py[1][i0],x[i1],y[i1]);}}}if(this._line||this._line!==0&&n===1)this._context.closePath();this._line=1-this._line;this._x=this._y=null;},point:function point(x,y){this._x.push(+x);this._y.push(+y);}};// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x){var i,n=x.length-1,m,a=new Array(n),b=new Array(n),r=new Array(n);a[0]=0,b[0]=2,r[0]=x[0]+2*x[1];for(i=1;i<n-1;++i){a[i]=1,b[i]=4,r[i]=4*x[i]+2*x[i+1];}a[n-1]=2,b[n-1]=7,r[n-1]=8*x[n-1]+x[n];for(i=1;i<n;++i){m=a[i]/b[i-1],b[i]-=m,r[i]-=m*r[i-1];}a[n-1]=r[n-1]/b[n-1];for(i=n-2;i>=0;--i){a[i]=(r[i]-a[i+1])/b[i];}b[n-1]=(x[n]+a[n-1])/2;for(i=0;i<n-1;++i){b[i]=2*x[i+1]-a[i+1];}return[a,b];}var curveNatural=function curveNatural(context){return new Natural(context);};function Step(context,t){this._context=context;this._t=t;}Step.prototype={areaStart:function areaStart(){this._line=0;},areaEnd:function areaEnd(){this._line=NaN;},lineStart:function lineStart(){this._x=this._y=NaN;this._point=0;},lineEnd:function lineEnd(){if(0<this._t&&this._t<1&&this._point===2)this._context.lineTo(this._x,this._y);if(this._line||this._line!==0&&this._point===1)this._context.closePath();if(this._line>=0)this._t=1-this._t,this._line=1-this._line;},point:function point(x,y){x=+x,y=+y;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;// proceed
default:{if(this._t<=0){this._context.lineTo(this._x,y);this._context.lineTo(x,y);}else{var x1=this._x*(1-this._t)+x*this._t;this._context.lineTo(x1,this._y);this._context.lineTo(x1,y);}break;}}this._x=x,this._y=y;}};var curveStep=function curveStep(context){return new Step(context,0.5);};function stepBefore(context){return new Step(context,0);}function stepAfter(context){return new Step(context,1);}var lookup={'basis':{curve:curveBasis},'basis-closed':{curve:curveBasisClosed},'basis-open':{curve:curveBasisOpen},'bundle':{curve:curveBundle,tension:'beta',value:0.85},'cardinal':{curve:curveCardinal,tension:'tension',value:0},'cardinal-open':{curve:curveCardinalOpen,tension:'tension',value:0},'cardinal-closed':{curve:curveCardinalClosed,tension:'tension',value:0},'catmull-rom':{curve:curveCatmullRom,tension:'alpha',value:0.5},'catmull-rom-closed':{curve:curveCatmullRomClosed,tension:'alpha',value:0.5},'catmull-rom-open':{curve:curveCatmullRomOpen,tension:'alpha',value:0.5},'linear':{curve:curveLinear},'linear-closed':{curve:curveLinearClosed},'monotone':{horizontal:monotoneY,vertical:monotoneX},'natural':{curve:curveNatural},'step':{curve:curveStep},'step-after':{curve:stepAfter},'step-before':{curve:stepBefore}};function curves(type,orientation,tension){var entry=lookup.hasOwnProperty(type)&&lookup[type],curve=null;if(entry){curve=entry.curve||entry[orientation||'vertical'];if(entry.tension&&tension!=null){curve=curve[entry.tension](tension);}}return curve;}// Path parsing and rendering code adapted from fabric.js -- Thanks!
var cmdlen={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7};var regexp=[/([MLHVCSQTAZmlhvcsqtaz])/g,/###/,/(\d)([-+])/g,/\s|,|###/];var pathParse=function pathParse(pathstr){var result=[],path,curr,chunks,parsed,param,cmd,len,i,j,n,m;// First, break path into command sequence
path=pathstr.slice().replace(regexp[0],'###$1').split(regexp[1]).slice(1);// Next, parse each command in turn
for(i=0,n=path.length;i<n;++i){curr=path[i];chunks=curr.slice(1).trim().replace(regexp[2],'$1###$2').split(regexp[3]);cmd=curr.charAt(0);parsed=[cmd];for(j=0,m=chunks.length;j<m;++j){if((param=+chunks[j])===param){// not NaN
parsed.push(param);}}len=cmdlen[cmd.toLowerCase()];if(parsed.length-1>len){for(j=1,m=parsed.length;j<m;j+=len){result.push([cmd].concat(parsed.slice(j,j+len)));}}else{result.push(parsed);}}return result;};var segmentCache={};var bezierCache={};var join=[].join;// Copied from Inkscape svgtopdf, thanks!
function segments(x,y,rx,ry,large,sweep,rotateX,ox,oy){var key=join.call(arguments);if(segmentCache[key]){return segmentCache[key];}var th=rotateX*(Math.PI/180);var sin_th=Math.sin(th);var cos_th=Math.cos(th);rx=Math.abs(rx);ry=Math.abs(ry);var px=cos_th*(ox-x)*0.5+sin_th*(oy-y)*0.5;var py=cos_th*(oy-y)*0.5-sin_th*(ox-x)*0.5;var pl=px*px/(rx*rx)+py*py/(ry*ry);if(pl>1){pl=Math.sqrt(pl);rx*=pl;ry*=pl;}var a00=cos_th/rx;var a01=sin_th/rx;var a10=-sin_th/ry;var a11=cos_th/ry;var x0=a00*ox+a01*oy;var y0=a10*ox+a11*oy;var x1=a00*x+a01*y;var y1=a10*x+a11*y;var d=(x1-x0)*(x1-x0)+(y1-y0)*(y1-y0);var sfactor_sq=1/d-0.25;if(sfactor_sq<0)sfactor_sq=0;var sfactor=Math.sqrt(sfactor_sq);if(sweep==large)sfactor=-sfactor;var xc=0.5*(x0+x1)-sfactor*(y1-y0);var yc=0.5*(y0+y1)+sfactor*(x1-x0);var th0=Math.atan2(y0-yc,x0-xc);var th1=Math.atan2(y1-yc,x1-xc);var th_arc=th1-th0;if(th_arc<0&&sweep===1){th_arc+=2*Math.PI;}else if(th_arc>0&&sweep===0){th_arc-=2*Math.PI;}var segs=Math.ceil(Math.abs(th_arc/(Math.PI*0.5+0.001)));var result=[];for(var i=0;i<segs;++i){var th2=th0+i*th_arc/segs;var th3=th0+(i+1)*th_arc/segs;result[i]=[xc,yc,th2,th3,rx,ry,sin_th,cos_th];}return segmentCache[key]=result;}function bezier(params){var key=join.call(params);if(bezierCache[key]){return bezierCache[key];}var cx=params[0],cy=params[1],th0=params[2],th1=params[3],rx=params[4],ry=params[5],sin_th=params[6],cos_th=params[7];var a00=cos_th*rx;var a01=-sin_th*ry;var a10=sin_th*rx;var a11=cos_th*ry;var cos_th0=Math.cos(th0);var sin_th0=Math.sin(th0);var cos_th1=Math.cos(th1);var sin_th1=Math.sin(th1);var th_half=0.5*(th1-th0);var sin_th_h2=Math.sin(th_half*0.5);var t=8/3*sin_th_h2*sin_th_h2/Math.sin(th_half);var x1=cx+cos_th0-t*sin_th0;var y1=cy+sin_th0+t*cos_th0;var x3=cx+cos_th1;var y3=cy+sin_th1;var x2=x3+t*sin_th1;var y2=y3-t*cos_th1;return bezierCache[key]=[a00*x1+a01*y1,a10*x1+a11*y1,a00*x2+a01*y2,a10*x2+a11*y2,a00*x3+a01*y3,a10*x3+a11*y3];}var temp$1=['l',0,0,0,0,0,0,0];function scale(current,s){var c=temp$1[0]=current[0];if(c==='a'||c==='A'){temp$1[1]=s*current[1];temp$1[2]=s*current[2];temp$1[6]=s*current[6];temp$1[7]=s*current[7];}else{for(var i=1,n=current.length;i<n;++i){temp$1[i]=s*current[i];}}return temp$1;}var pathRender=function pathRender(context,path,l,t,s){var current,// current instruction
previous=null,x=0,// current x
y=0,// current y
controlX=0,// current control point x
controlY=0,// current control point y
tempX,tempY,tempControlX,tempControlY;if(l==null)l=0;if(t==null)t=0;if(s==null)s=1;if(context.beginPath)context.beginPath();for(var i=0,len=path.length;i<len;++i){current=path[i];if(s!==1)current=scale(current,s);switch(current[0]){// first letter
case'l':// lineto, relative
x+=current[1];y+=current[2];context.lineTo(x+l,y+t);break;case'L':// lineto, absolute
x=current[1];y=current[2];context.lineTo(x+l,y+t);break;case'h':// horizontal lineto, relative
x+=current[1];context.lineTo(x+l,y+t);break;case'H':// horizontal lineto, absolute
x=current[1];context.lineTo(x+l,y+t);break;case'v':// vertical lineto, relative
y+=current[1];context.lineTo(x+l,y+t);break;case'V':// verical lineto, absolute
y=current[1];context.lineTo(x+l,y+t);break;case'm':// moveTo, relative
x+=current[1];y+=current[2];context.moveTo(x+l,y+t);break;case'M':// moveTo, absolute
x=current[1];y=current[2];context.moveTo(x+l,y+t);break;case'c':// bezierCurveTo, relative
tempX=x+current[5];tempY=y+current[6];controlX=x+current[3];controlY=y+current[4];context.bezierCurveTo(x+current[1]+l,// x1
y+current[2]+t,// y1
controlX+l,// x2
controlY+t,// y2
tempX+l,tempY+t);x=tempX;y=tempY;break;case'C':// bezierCurveTo, absolute
x=current[5];y=current[6];controlX=current[3];controlY=current[4];context.bezierCurveTo(current[1]+l,current[2]+t,controlX+l,controlY+t,x+l,y+t);break;case's':// shorthand cubic bezierCurveTo, relative
// transform to absolute x,y
tempX=x+current[3];tempY=y+current[4];// calculate reflection of previous control points
controlX=2*x-controlX;controlY=2*y-controlY;context.bezierCurveTo(controlX+l,controlY+t,x+current[1]+l,y+current[2]+t,tempX+l,tempY+t);// set control point to 2nd one of this command
// the first control point is assumed to be the reflection of
// the second control point on the previous command relative
// to the current point.
controlX=x+current[1];controlY=y+current[2];x=tempX;y=tempY;break;case'S':// shorthand cubic bezierCurveTo, absolute
tempX=current[3];tempY=current[4];// calculate reflection of previous control points
controlX=2*x-controlX;controlY=2*y-controlY;context.bezierCurveTo(controlX+l,controlY+t,current[1]+l,current[2]+t,tempX+l,tempY+t);x=tempX;y=tempY;// set control point to 2nd one of this command
// the first control point is assumed to be the reflection of
// the second control point on the previous command relative
// to the current point.
controlX=current[1];controlY=current[2];break;case'q':// quadraticCurveTo, relative
// transform to absolute x,y
tempX=x+current[3];tempY=y+current[4];controlX=x+current[1];controlY=y+current[2];context.quadraticCurveTo(controlX+l,controlY+t,tempX+l,tempY+t);x=tempX;y=tempY;break;case'Q':// quadraticCurveTo, absolute
tempX=current[3];tempY=current[4];context.quadraticCurveTo(current[1]+l,current[2]+t,tempX+l,tempY+t);x=tempX;y=tempY;controlX=current[1];controlY=current[2];break;case't':// shorthand quadraticCurveTo, relative
// transform to absolute x,y
tempX=x+current[1];tempY=y+current[2];if(previous[0].match(/[QqTt]/)===null){// If there is no previous command or if the previous command was not a Q, q, T or t,
// assume the control point is coincident with the current point
controlX=x;controlY=y;}else if(previous[0]==='t'){// calculate reflection of previous control points for t
controlX=2*x-tempControlX;controlY=2*y-tempControlY;}else if(previous[0]==='q'){// calculate reflection of previous control points for q
controlX=2*x-controlX;controlY=2*y-controlY;}tempControlX=controlX;tempControlY=controlY;context.quadraticCurveTo(controlX+l,controlY+t,tempX+l,tempY+t);x=tempX;y=tempY;controlX=x+current[1];controlY=y+current[2];break;case'T':tempX=current[1];tempY=current[2];// calculate reflection of previous control points
controlX=2*x-controlX;controlY=2*y-controlY;context.quadraticCurveTo(controlX+l,controlY+t,tempX+l,tempY+t);x=tempX;y=tempY;break;case'a':drawArc(context,x+l,y+t,[current[1],current[2],current[3],current[4],current[5],current[6]+x+l,current[7]+y+t]);x+=current[6];y+=current[7];break;case'A':drawArc(context,x+l,y+t,[current[1],current[2],current[3],current[4],current[5],current[6]+l,current[7]+t]);x=current[6];y=current[7];break;case'z':case'Z':context.closePath();break;}previous=current;}};function drawArc(context,x,y,coords){var seg=segments(coords[5],// end x
coords[6],// end y
coords[0],// radius x
coords[1],// radius y
coords[3],// large flag
coords[4],// sweep flag
coords[2],// rotation
x,y);for(var i=0;i<seg.length;++i){var bez=bezier(seg[i]);context.bezierCurveTo(bez[0],bez[1],bez[2],bez[3],bez[4],bez[5]);}}var tau$2=2*Math.PI;var halfSqrt3=Math.sqrt(3)/2;var builtins={'circle':{draw:function draw(context,size){var r=Math.sqrt(size)/2;context.moveTo(r,0);context.arc(0,0,r,0,tau$2);}},'cross':{draw:function draw(context,size){var r=Math.sqrt(size)/2,s=r/2.5;context.moveTo(-r,-s);context.lineTo(-r,s);context.lineTo(-s,s);context.lineTo(-s,r);context.lineTo(s,r);context.lineTo(s,s);context.lineTo(r,s);context.lineTo(r,-s);context.lineTo(s,-s);context.lineTo(s,-r);context.lineTo(-s,-r);context.lineTo(-s,-s);context.closePath();}},'diamond':{draw:function draw(context,size){var r=Math.sqrt(size)/2;context.moveTo(-r,0);context.lineTo(0,-r);context.lineTo(r,0);context.lineTo(0,r);context.closePath();}},'square':{draw:function draw(context,size){var w=Math.sqrt(size),x=-w/2;context.rect(x,x,w,w);}},'triangle-up':{draw:function draw(context,size){var r=Math.sqrt(size)/2,h=halfSqrt3*r;context.moveTo(0,-h);context.lineTo(-r,h);context.lineTo(r,h);context.closePath();}},'triangle-down':{draw:function draw(context,size){var r=Math.sqrt(size)/2,h=halfSqrt3*r;context.moveTo(0,h);context.lineTo(-r,-h);context.lineTo(r,-h);context.closePath();}},'triangle-right':{draw:function draw(context,size){var r=Math.sqrt(size)/2,h=halfSqrt3*r;context.moveTo(h,0);context.lineTo(-h,-r);context.lineTo(-h,r);context.closePath();}},'triangle-left':{draw:function draw(context,size){var r=Math.sqrt(size)/2,h=halfSqrt3*r;context.moveTo(-h,0);context.lineTo(h,-r);context.lineTo(h,r);context.closePath();}}};function symbols$1(_){return builtins.hasOwnProperty(_)?builtins[_]:customSymbol(_);}var custom={};function customSymbol(path){if(!custom.hasOwnProperty(path)){var parsed=pathParse(path);custom[path]={draw:function draw(context,size){pathRender(context,parsed,0,0,Math.sqrt(size)/2);}};}return custom[path];}function rectangleX(d){return d.x;}function rectangleY(d){return d.y;}function rectangleWidth(d){return d.width;}function rectangleHeight(d){return d.height;}function constant$3(_){return function(){return _;};}var vg_rect=function vg_rect(){var x=rectangleX,y=rectangleY,width=rectangleWidth,height=rectangleHeight,cornerRadius=constant$3(0),context=null;function rectangle(_,x0,y0){var buffer,x1=x0!=null?x0:+x.call(this,_),y1=y0!=null?y0:+y.call(this,_),w=+width.call(this,_),h=+height.call(this,_),cr=+cornerRadius.call(this,_);if(!context)context=buffer=path();if(cr<=0){context.rect(x1,y1,w,h);}else{var x2=x1+w,y2=y1+h;context.moveTo(x1+cr,y1);context.lineTo(x2-cr,y1);context.quadraticCurveTo(x2,y1,x2,y1+cr);context.lineTo(x2,y2-cr);context.quadraticCurveTo(x2,y2,x2-cr,y2);context.lineTo(x1+cr,y2);context.quadraticCurveTo(x1,y2,x1,y2-cr);context.lineTo(x1,y1+cr);context.quadraticCurveTo(x1,y1,x1+cr,y1);context.closePath();}if(buffer){context=null;return buffer+''||null;}}rectangle.x=function(_){if(arguments.length){x=typeof _==='function'?_:constant$3(+_);return rectangle;}else{return x;}};rectangle.y=function(_){if(arguments.length){y=typeof _==='function'?_:constant$3(+_);return rectangle;}else{return y;}};rectangle.width=function(_){if(arguments.length){width=typeof _==='function'?_:constant$3(+_);return rectangle;}else{return width;}};rectangle.height=function(_){if(arguments.length){height=typeof _==='function'?_:constant$3(+_);return rectangle;}else{return height;}};rectangle.cornerRadius=function(_){if(arguments.length){cornerRadius=typeof _==='function'?_:constant$3(+_);return rectangle;}else{return cornerRadius;}};rectangle.context=function(_){if(arguments.length){context=_==null?null:_;return rectangle;}else{return context;}};return rectangle;};var pi$2=Math.PI;var vg_trail=function vg_trail(){var x,y,size,defined,context=null,ready,x1,y1,r1;function point(x2,y2,w2){var r2=w2/2;if(ready){var ux=y1-y2,uy=x2-x1;if(ux||uy){// get normal vector
var ud=Math.sqrt(ux*ux+uy*uy),rx=(ux/=ud)*r1,ry=(uy/=ud)*r1,t=Math.atan2(uy,ux);// draw segment
context.moveTo(x1-rx,y1-ry);context.lineTo(x2-ux*r2,y2-uy*r2);context.arc(x2,y2,r2,t-pi$2,t);context.lineTo(x1+rx,y1+ry);context.arc(x1,y1,r1,t,t+pi$2);}else{context.arc(x2,y2,r2,0,2*pi$2);}context.closePath();}else{ready=1;}x1=x2;y1=y2;r1=r2;}function trail(data){var i,n=data.length,d,defined0=false,buffer;if(context==null)context=buffer=path();for(i=0;i<=n;++i){if(!(i<n&&defined(d=data[i],i,data))===defined0){if(defined0=!defined0)ready=0;}if(defined0)point(+x(d,i,data),+y(d,i,data),+size(d,i,data));}if(buffer){context=null;return buffer+''||null;}}trail.x=function(_){if(arguments.length){x=_;return trail;}else{return x;}};trail.y=function(_){if(arguments.length){y=_;return trail;}else{return y;}};trail.size=function(_){if(arguments.length){size=_;return trail;}else{return size;}};trail.defined=function(_){if(arguments.length){defined=_;return trail;}else{return defined;}};trail.context=function(_){if(arguments.length){if(_==null){context=null;}else{context=_;}return trail;}else{return context;}};return trail;};function x(item){return item.x||0;}function y(item){return item.y||0;}function w(item){return item.width||0;}function ts(item){return item.size||1;}function h(item){return item.height||0;}function xw(item){return(item.x||0)+(item.width||0);}function yh(item){return(item.y||0)+(item.height||0);}function cr(item){return item.cornerRadius||0;}function pa(item){return item.padAngle||0;}function def(item){return!(item.defined===false);}function size(item){return item.size==null?64:item.size;}function type$1(item){return symbols$1(item.shape||'circle');}var arcShape=d3_arc().cornerRadius(cr).padAngle(pa);var areavShape=area$1().x(x).y1(y).y0(yh).defined(def);var areahShape=area$1().y(y).x1(x).x0(xw).defined(def);var lineShape=line$1().x(x).y(y).defined(def);var rectShape=vg_rect().x(x).y(y).width(w).height(h).cornerRadius(cr);var symbolShape=d3_symbol().type(type$1).size(size);var trailShape=vg_trail().x(x).y(y).defined(def).size(ts);function arc$1(context,item){return arcShape.context(context)(item);}function area(context,items){var item=items[0],interp=item.interpolate||'linear';return(item.orient==='horizontal'?areahShape:areavShape).curve(curves(interp,item.orient,item.tension)).context(context)(items);}function line(context,items){var item=items[0],interp=item.interpolate||'linear';return lineShape.curve(curves(interp,item.orient,item.tension)).context(context)(items);}function rectangle(context,item,x,y){return rectShape.context(context)(item,x,y);}function shape(context,item){return(item.mark.shape||item.shape).context(context)(item);}function symbol(context,item){return symbolShape.context(context)(item);}function trail(context,items){return trailShape.context(context)(items);}var boundStroke=function boundStroke(bounds,item){if(item.stroke&&item.opacity!==0&&item.strokeOpacity!==0){bounds.expand(item.strokeWidth!=null?+item.strokeWidth:1);}return bounds;};var bounds;var tau$3=Math.PI*2;var halfPi$1=tau$3/4;var circleThreshold=tau$3-1e-8;function context(_){bounds=_;return context;}function noop$3(){}function add$1(x,y){bounds.add(x,y);}context.beginPath=noop$3;context.closePath=noop$3;context.moveTo=add$1;context.lineTo=add$1;context.rect=function(x,y,w,h){add$1(x,y);add$1(x+w,y+h);};context.quadraticCurveTo=function(x1,y1,x2,y2){add$1(x1,y1);add$1(x2,y2);};context.bezierCurveTo=function(x1,y1,x2,y2,x3,y3){add$1(x1,y1);add$1(x2,y2);add$1(x3,y3);};context.arc=function(cx,cy,r,sa,ea,ccw){if(Math.abs(ea-sa)>circleThreshold){add$1(cx-r,cy-r);add$1(cx+r,cy+r);return;}var xmin=Infinity,xmax=-Infinity,ymin=Infinity,ymax=-Infinity,s,i,x,y;function update(a){x=r*Math.cos(a);y=r*Math.sin(a);if(x<xmin)xmin=x;if(x>xmax)xmax=x;if(y<ymin)ymin=y;if(y>ymax)ymax=y;}// Sample end points and interior points aligned with 90 degrees
update(sa);update(ea);if(ea!==sa){sa=sa%tau$3;if(sa<0)sa+=tau$3;ea=ea%tau$3;if(ea<0)ea+=tau$3;if(ea<sa){ccw=!ccw;// flip direction
s=sa;sa=ea;ea=s;// swap end-points
}if(ccw){ea-=tau$3;s=sa-sa%halfPi$1;for(i=0;i<3&&s>ea;++i,s-=halfPi$1){update(s);}}else{s=sa-sa%halfPi$1+halfPi$1;for(i=0;i<3&&s<ea;++i,s=s+halfPi$1){update(s);}}}add$1(cx+xmin,cy+ymin);add$1(cx+xmax,cy+ymax);};var gradient=function gradient(context,_gradient,bounds){var w=bounds.width(),h=bounds.height(),x1=bounds.x1+_gradient.x1*w,y1=bounds.y1+_gradient.y1*h,x2=bounds.x1+_gradient.x2*w,y2=bounds.y1+_gradient.y2*h,stop=_gradient.stops,i=0,n=stop.length,linearGradient=context.createLinearGradient(x1,y1,x2,y2);for(;i<n;++i){linearGradient.addColorStop(stop[i].offset,stop[i].color);}return linearGradient;};var color=function color(context,item,value){return value.id?gradient(context,value,item.bounds):value;};var fill=function fill(context,item,opacity){opacity*=item.fillOpacity==null?1:item.fillOpacity;if(opacity>0){context.globalAlpha=opacity;context.fillStyle=color(context,item,item.fill);return true;}else{return false;}};var Empty$1=[];var stroke=function stroke(context,item,opacity){var lw=(lw=item.strokeWidth)!=null?lw:1;if(lw<=0)return false;opacity*=item.strokeOpacity==null?1:item.strokeOpacity;if(opacity>0){context.globalAlpha=opacity;context.strokeStyle=color(context,item,item.stroke);context.lineWidth=lw;context.lineCap=item.strokeCap||'butt';context.lineJoin=item.strokeJoin||'miter';context.miterLimit=item.strokeMiterLimit||10;if(context.setLineDash){context.setLineDash(item.strokeDash||Empty$1);context.lineDashOffset=item.strokeDashOffset||0;}return true;}else{return false;}};function compare$1(a,b){return a.zindex-b.zindex||a.index-b.index;}function zorder(scene){if(!scene.zdirty)return scene.zitems;var items=scene.items,output=[],item,i,n;for(i=0,n=items.length;i<n;++i){item=items[i];item.index=i;if(item.zindex)output.push(item);}scene.zdirty=false;return scene.zitems=output.sort(compare$1);}function visit(scene,visitor){var items=scene.items,i,n;if(!items||!items.length)return;var zitems=zorder(scene);if(zitems&&zitems.length){for(i=0,n=items.length;i<n;++i){if(!items[i].zindex)visitor(items[i]);}items=zitems;}for(i=0,n=items.length;i<n;++i){visitor(items[i]);}}function pickVisit(scene,visitor){var items=scene.items,hit,i;if(!items||!items.length)return null;var zitems=zorder(scene);if(zitems&&zitems.length)items=zitems;for(i=items.length;--i>=0;){if(hit=visitor(items[i]))return hit;}if(items===zitems){for(items=scene.items,i=items.length;--i>=0;){if(!items[i].zindex){if(hit=visitor(items[i]))return hit;}}}return null;}function drawAll(path){return function(context,scene,bounds){visit(scene,function(item){if(!bounds||bounds.intersects(item.bounds)){drawPath(path,context,item,item);}});};}function drawOne(path){return function(context,scene,bounds){if(scene.items.length&&(!bounds||bounds.intersects(scene.bounds))){drawPath(path,context,scene.items[0],scene.items);}};}function drawPath(path,context,item,items){var opacity=item.opacity==null?1:item.opacity;if(opacity===0)return;if(path(context,items))return;if(item.fill&&fill(context,item,opacity)){context.fill();}if(item.stroke&&stroke(context,item,opacity)){context.stroke();}}var trueFunc=function trueFunc(){return true;};function pick(test){if(!test)test=trueFunc;return function(context,scene,x,y,gx,gy){if(context.pixelRatio>1){x*=context.pixelRatio;y*=context.pixelRatio;}return pickVisit(scene,function(item){var b=item.bounds;// first hit test against bounding box
if(b&&!b.contains(gx,gy)||!b)return;// if in bounding box, perform more careful test
if(test(context,item,x,y,gx,gy))return item;});};}function hitPath(path,filled){return function(context,o,x,y){var item=Array.isArray(o)?o[0]:o,fill=filled==null?item.fill:filled,stroke=item.stroke&&context.isPointInStroke,lw,lc;if(stroke){lw=item.strokeWidth;lc=item.strokeCap;context.lineWidth=lw!=null?lw:1;context.lineCap=lc!=null?lc:'butt';}return path(context,o)?false:fill&&context.isPointInPath(x,y)||stroke&&context.isPointInStroke(x,y);};}function pickPath(path){return pick(hitPath(path));}var translate=function translate(x,y){return'translate('+x+','+y+')';};var translateItem=function translateItem(item){return translate(item.x||0,item.y||0);};var markItemPath=function markItemPath(type,shape){function attr(emit,item){emit('transform',translateItem(item));emit('d',shape(null,item));}function bound(bounds,item){shape(context(bounds),item);return boundStroke(bounds,item).translate(item.x||0,item.y||0);}function draw(context$$1,item){var x=item.x||0,y=item.y||0;context$$1.translate(x,y);context$$1.beginPath();shape(context$$1,item);context$$1.translate(-x,-y);}return{type:type,tag:'path',nested:false,attr:attr,bound:bound,draw:drawAll(draw),pick:pickPath(draw)};};var arc=markItemPath('arc',arc$1);var markMultiItemPath=function markMultiItemPath(type,shape){function attr(emit,item){var items=item.mark.items;if(items.length)emit('d',shape(null,items));}function bound(bounds,mark){var items=mark.items;if(items.length===0){return bounds;}else{shape(context(bounds),items);return boundStroke(bounds,items[0]);}}function draw(context$$1,items){context$$1.beginPath();shape(context$$1,items);}var hit=hitPath(draw);function pick$$1(context$$1,scene,x,y,gx,gy){var items=scene.items,b=scene.bounds;if(!items||!items.length||b&&!b.contains(gx,gy)){return null;}if(context$$1.pixelRatio>1){x*=context$$1.pixelRatio;y*=context$$1.pixelRatio;}return hit(context$$1,items,x,y)?items[0]:null;}return{type:type,tag:'path',nested:true,attr:attr,bound:bound,draw:drawOne(draw),pick:pick$$1};};var area$2=markMultiItemPath('area',area);var clip_id=1;function resetSVGClipId(){clip_id=1;}var clip=function clip(renderer,item,size){var defs=renderer._defs,id=item.clip_id||(item.clip_id='clip'+clip_id++),c=defs.clipping[id]||(defs.clipping[id]={id:id});c.width=size.width||0;c.height=size.height||0;return'url(#'+id+')';};var StrokeOffset=0.5;function attr(emit,item){emit('transform',translateItem(item));}function background(emit,item){var offset=item.stroke?StrokeOffset:0;emit('class','background');emit('d',rectangle(null,item,offset,offset));}function foreground(emit,item,renderer){var url=item.clip?clip(renderer,item,item):null;emit('clip-path',url);}function bound(bounds,group){if(!group.clip&&group.items){var items=group.items;for(var j=0,m=items.length;j<m;++j){bounds.union(items[j].bounds);}}if(group.clip||group.width||group.height){boundStroke(bounds.add(0,0).add(group.width||0,group.height||0),group);}return bounds.translate(group.x||0,group.y||0);}function draw(context,scene,bounds){var renderer=this;visit(scene,function(group){var gx=group.x||0,gy=group.y||0,w=group.width||0,h=group.height||0,offset,opacity;// setup graphics context
context.save();context.translate(gx,gy);// draw group background
if(group.stroke||group.fill){opacity=group.opacity==null?1:group.opacity;if(opacity>0){context.beginPath();offset=group.stroke?StrokeOffset:0;rectangle(context,group,offset,offset);if(group.fill&&fill(context,group,opacity)){context.fill();}if(group.stroke&&stroke(context,group,opacity)){context.stroke();}}}// set clip and bounds
if(group.clip){context.beginPath();context.rect(0,0,w,h);context.clip();}if(bounds)bounds.translate(-gx,-gy);// draw group contents
visit(group,function(item){renderer.draw(context,item,bounds);});// restore graphics context
if(bounds)bounds.translate(gx,gy);context.restore();});}function pick$1(context,scene,x,y,gx,gy){if(scene.bounds&&!scene.bounds.contains(gx,gy)||!scene.items){return null;}var handler=this;return pickVisit(scene,function(group){var hit,dx,dy,b;// first hit test against bounding box
// if a group is clipped, that should be handled by the bounds check.
b=group.bounds;if(b&&!b.contains(gx,gy))return;// passed bounds check, so test sub-groups
dx=group.x||0;dy=group.y||0;context.save();context.translate(dx,dy);dx=gx-dx;dy=gy-dy;hit=pickVisit(group,function(mark){return pickMark(mark,dx,dy)?handler.pick(mark,x,y,dx,dy):null;});context.restore();if(hit)return hit;hit=scene.interactive!==false&&(group.fill||group.stroke)&&dx>=0&&dx<=group.width&&dy>=0&&dy<=group.height;return hit?group:null;});}function pickMark(mark,x,y){return(mark.interactive!==false||mark.marktype==='group')&&mark.bounds&&mark.bounds.contains(x,y);}var group={type:'group',tag:'g',nested:false,attr:attr,bound:bound,draw:draw,pick:pick$1,background:background,foreground:foreground};function getImage(item,renderer){var image=item.image;if(!image||image.url!==item.url){image={loaded:false,width:0,height:0};renderer.loadImage(item.url).then(function(image){item.image=image;item.image.url=item.url;});}return image;}function imageXOffset(align,w){return align==='center'?w/2:align==='right'?w:0;}function imageYOffset(baseline,h){return baseline==='middle'?h/2:baseline==='bottom'?h:0;}function attr$1(emit,item,renderer){var image=getImage(item,renderer),x=item.x||0,y=item.y||0,w=(item.width!=null?item.width:image.width)||0,h=(item.height!=null?item.height:image.height)||0,a=item.aspect===false?'none':'xMidYMid';x-=imageXOffset(item.align,w);y-=imageYOffset(item.baseline,h);emit('href',image.src||'','http://www.w3.org/1999/xlink','xlink:href');emit('transform',translate(x,y));emit('width',w);emit('height',h);emit('preserveAspectRatio',a);}function bound$1(bounds,item){var image=item.image,x=item.x||0,y=item.y||0,w=(item.width!=null?item.width:image&&image.width)||0,h=(item.height!=null?item.height:image&&image.height)||0;x-=imageXOffset(item.align,w);y-=imageYOffset(item.baseline,h);return bounds.set(x,y,x+w,y+h);}function draw$1(context,scene,bounds){var renderer=this;visit(scene,function(item){if(bounds&&!bounds.intersects(item.bounds))return;// bounds check
var image=getImage(item,renderer),x=item.x||0,y=item.y||0,w=(item.width!=null?item.width:image.width)||0,h=(item.height!=null?item.height:image.height)||0,opacity,ar0,ar1,t;x-=imageXOffset(item.align,w);y-=imageYOffset(item.baseline,h);if(item.aspect!==false){ar0=image.width/image.height;ar1=item.width/item.height;if(ar0===ar0&&ar1===ar1&&ar0!==ar1){if(ar1<ar0){t=w/ar0;y+=(h-t)/2;h=t;}else{t=h*ar0;x+=(w-t)/2;w=t;}}}if(image.loaded){context.globalAlpha=(opacity=item.opacity)!=null?opacity:1;context.drawImage(image,x,y,w,h);}});}var image={type:'image',tag:'image',nested:false,attr:attr$1,bound:bound$1,draw:draw$1,pick:pick(),get:getImage,xOffset:imageXOffset,yOffset:imageYOffset};var line$2=markMultiItemPath('line',line);function attr$2(emit,item){emit('transform',translateItem(item));emit('d',item.path);}function path$2(context$$1,item){var path=item.path;if(path==null)return true;var cache=item.pathCache;if(!cache||cache.path!==path){(item.pathCache=cache=pathParse(path)).path=path;}pathRender(context$$1,cache,item.x,item.y);}function bound$2(bounds,item){return path$2(context(bounds),item)?bounds.set(0,0,0,0):boundStroke(bounds,item);}var path$3={type:'path',tag:'path',nested:false,attr:attr$2,bound:bound$2,draw:drawAll(path$2),pick:pickPath(path$2)};function attr$3(emit,item){emit('d',rectangle(null,item));}function bound$3(bounds,item){var x,y;return boundStroke(bounds.set(x=item.x||0,y=item.y||0,x+item.width||0,y+item.height||0),item);}function draw$2(context,item){context.beginPath();rectangle(context,item);}var rect={type:'rect',tag:'path',nested:false,attr:attr$3,bound:bound$3,draw:drawAll(draw$2),pick:pickPath(draw$2)};function attr$4(emit,item){emit('transform',translateItem(item));emit('x2',item.x2!=null?item.x2-(item.x||0):0);emit('y2',item.y2!=null?item.y2-(item.y||0):0);}function bound$4(bounds,item){var x1,y1;return boundStroke(bounds.set(x1=item.x||0,y1=item.y||0,item.x2!=null?item.x2:x1,item.y2!=null?item.y2:y1),item);}function path$4(context,item,opacity){var x1,y1,x2,y2;if(item.stroke&&stroke(context,item,opacity)){x1=item.x||0;y1=item.y||0;x2=item.x2!=null?item.x2:x1;y2=item.y2!=null?item.y2:y1;context.beginPath();context.moveTo(x1,y1);context.lineTo(x2,y2);return true;}return false;}function draw$3(context,scene,bounds){visit(scene,function(item){if(bounds&&!bounds.intersects(item.bounds))return;// bounds check
var opacity=item.opacity==null?1:item.opacity;if(opacity&&path$4(context,item,opacity)){context.stroke();}});}function hit(context,item,x,y){if(!context.isPointInStroke)return false;return path$4(context,item,1)&&context.isPointInStroke(x,y);}var rule={type:'rule',tag:'line',nested:false,attr:attr$4,bound:bound$4,draw:draw$3,pick:pick(hit)};var shape$1=markItemPath('shape',shape);var symbol$1=markItemPath('symbol',symbol);var context$1;var fontHeight;var textMetrics={height:height,measureWidth:measureWidth,estimateWidth:estimateWidth,width:estimateWidth,canvas:canvas};canvas(true);// make dumb, simple estimate if no canvas is available
function estimateWidth(item){fontHeight=height(item);return estimate(textValue(item));}function estimate(text){return~~(0.8*text.length*fontHeight);}// measure text width if canvas is available
function measureWidth(item){context$1.font=font(item);return measure$1(textValue(item));}function measure$1(text){return context$1.measureText(text).width;}function height(item){return item.fontSize!=null?item.fontSize:11;}function canvas(use){context$1=use&&(context$1=Canvas$1(1,1))?context$1.getContext('2d'):null;textMetrics.width=context$1?measureWidth:estimateWidth;}function textValue(item){var s=item.text;if(s==null){return'';}else{return item.limit>0?truncate$1(item):s+'';}}function truncate$1(item){var limit=+item.limit,text=item.text+'',width;if(context$1){context$1.font=font(item);width=measure$1;}else{fontHeight=height(item);width=estimate;}if(width(text)<limit)return text;var ellipsis=item.ellipsis||'\u2026',rtl=item.dir==='rtl',lo=0,hi=text.length,mid;limit-=width(ellipsis);if(rtl){while(lo<hi){mid=lo+hi>>>1;if(width(text.slice(mid))>limit)lo=mid+1;else hi=mid;}return ellipsis+text.slice(lo);}else{while(lo<hi){mid=1+(lo+hi>>>1);if(width(text.slice(0,mid))<limit)lo=mid;else hi=mid-1;}return text.slice(0,lo)+ellipsis;}}function font(item,quote){var font=item.font;if(quote&&font){font=String(font).replace(/"/g,'\'');}return''+(item.fontStyle?item.fontStyle+' ':'')+(item.fontVariant?item.fontVariant+' ':'')+(item.fontWeight?item.fontWeight+' ':'')+height(item)+'px '+(font||'sans-serif');}function offset(item){// perform our own font baseline calculation
// why? not all browsers support SVG 1.1 'alignment-baseline' :(
var baseline=item.baseline,h=height(item);return Math.round(baseline==='top'?0.93*h:baseline==='middle'?0.30*h:baseline==='bottom'?-0.21*h:0);}var textAlign={'left':'start','center':'middle','right':'end'};var tempBounds=new Bounds();function attr$5(emit,item){var dx=item.dx||0,dy=(item.dy||0)+offset(item),x=item.x||0,y=item.y||0,a=item.angle||0,r=item.radius||0,t;if(r){t=(item.theta||0)-Math.PI/2;x+=r*Math.cos(t);y+=r*Math.sin(t);}emit('text-anchor',textAlign[item.align]||'start');if(a){t=translate(x,y)+' rotate('+a+')';if(dx||dy)t+=' '+translate(dx,dy);}else{t=translate(x+dx,y+dy);}emit('transform',t);}function bound$5(bounds,item,noRotate){var h=textMetrics.height(item),a=item.align,r=item.radius||0,x=item.x||0,y=item.y||0,dx=item.dx||0,dy=(item.dy||0)+offset(item)-Math.round(0.8*h),// use 4/5 offset
w,t;if(r){t=(item.theta||0)-Math.PI/2;x+=r*Math.cos(t);y+=r*Math.sin(t);}// horizontal alignment
w=textMetrics.width(item);if(a==='center'){dx-=w/2;}else if(a==='right'){dx-=w;}else{// left by default, do nothing
}bounds.set(dx+=x,dy+=y,dx+w,dy+h);if(item.angle&&!noRotate){bounds.rotate(item.angle*Math.PI/180,x,y);}return bounds.expand(noRotate||!w?0:1);}function draw$4(context,scene,bounds){visit(scene,function(item){var opacity,x,y,r,t,str;if(bounds&&!bounds.intersects(item.bounds))return;// bounds check
if(!(str=textValue(item)))return;// get text string
opacity=item.opacity==null?1:item.opacity;if(opacity===0)return;context.font=font(item);context.textAlign=item.align||'left';x=item.x||0;y=item.y||0;if(r=item.radius){t=(item.theta||0)-Math.PI/2;x+=r*Math.cos(t);y+=r*Math.sin(t);}if(item.angle){context.save();context.translate(x,y);context.rotate(item.angle*Math.PI/180);x=y=0;// reset x, y
}x+=item.dx||0;y+=(item.dy||0)+offset(item);if(item.fill&&fill(context,item,opacity)){context.fillText(str,x,y);}if(item.stroke&&stroke(context,item,opacity)){context.strokeText(str,x,y);}if(item.angle)context.restore();});}function hit$1(context,item,x,y,gx,gy){if(item.fontSize<=0)return false;if(!item.angle)return true;// bounds sufficient if no rotation
// project point into space of unrotated bounds
var b=bound$5(tempBounds,item,true),a=-item.angle*Math.PI/180,cos=Math.cos(a),sin=Math.sin(a),ix=item.x,iy=item.y,px=cos*gx-sin*gy+(ix-ix*cos+iy*sin),py=sin*gx+cos*gy+(iy-ix*sin-iy*cos);return b.contains(px,py);}var text$1={type:'text',tag:'text',nested:false,attr:attr$5,bound:bound$5,draw:draw$4,pick:pick(hit$1)};var trail$1=markMultiItemPath('trail',trail);var marks={arc:arc,area:area$2,group:group,image:image,line:line$2,path:path$3,rect:rect,rule:rule,shape:shape$1,symbol:symbol$1,text:text$1,trail:trail$1};var boundItem$1=function boundItem$1(item,func,opt){var type=marks[item.mark.marktype],bound=func||type.bound;if(type.nested)item=item.mark;return bound(item.bounds||(item.bounds=new Bounds()),item,opt);};var DUMMY={mark:null};var boundMark=function boundMark(mark,bounds,opt){var type=marks[mark.marktype],bound=type.bound,items=mark.items,hasItems=items&&items.length,i,n,item,b;if(type.nested){if(hasItems){item=items[0];}else{// no items, fake it
DUMMY.mark=mark;item=DUMMY;}b=boundItem$1(item,bound,opt);bounds=bounds&&bounds.union(b)||b;return bounds;}bounds=bounds||mark.bounds&&mark.bounds.clear()||new Bounds();if(hasItems){for(i=0,n=items.length;i<n;++i){bounds.union(boundItem$1(items[i],bound,opt));}}return mark.bounds=bounds;};var keys$1=['marktype','name','role','interactive','clip','items','zindex','x','y','width','height','align','baseline',// layout
'fill','fillOpacity','opacity',// fill
'stroke','strokeOpacity','strokeWidth','strokeCap',// stroke
'strokeDash','strokeDashOffset',// stroke dash
'startAngle','endAngle','innerRadius','outerRadius',// arc
'cornerRadius','padAngle',// arc, rect
'interpolate','tension','orient','defined',// area, line
'url',// image
'path',// path
'x2','y2',// rule
'size','shape',// symbol
'text','angle','theta','radius','dx','dy',// text
'font','fontSize','fontWeight','fontStyle','fontVariant'// font
];function sceneToJSON(scene,indent){return JSON.stringify(scene,keys$1,indent);}function sceneFromJSON(json){var scene=typeof json==='string'?JSON.parse(json):json;return initialize(scene);}function initialize(scene){var type=scene.marktype,items=scene.items,parent,i,n;if(items){for(i=0,n=items.length;i<n;++i){parent=type?'mark':'group';items[i][parent]=scene;if(items[i].zindex)items[i][parent].zdirty=true;if('group'===(type||parent))initialize(items[i]);}}if(type)boundMark(scene);return scene;}function Scenegraph(scene){if(arguments.length){this.root=sceneFromJSON(scene);}else{this.root=createMark({marktype:'group',name:'root',role:'frame'});this.root.items=[new GroupItem(this.root)];}}var prototype$38=Scenegraph.prototype;prototype$38.toJSON=function(indent){return sceneToJSON(this.root,indent||0);};prototype$38.mark=function(markdef,group,index){group=group||this.root.items[0];var mark=createMark(markdef,group);group.items[index]=mark;if(mark.zindex)mark.group.zdirty=true;return mark;};function createMark(def,group){return{bounds:new Bounds(),clip:!!def.clip,group:group,interactive:def.interactive===false?false:true,items:[],marktype:def.marktype,name:def.name||undefined,role:def.role||undefined,zindex:def.zindex||0};}function Handler(customLoader){this._active=null;this._handlers={};this._loader=customLoader||loader();}var prototype$39=Handler.prototype;prototype$39.initialize=function(el,origin,obj){this._el=el;this._obj=obj||null;return this.origin(origin);};prototype$39.element=function(){return this._el;};prototype$39.origin=function(origin){this._origin=origin||[0,0];return this;};prototype$39.scene=function(scene){if(!arguments.length)return this._scene;this._scene=scene;return this;};// add an event handler
// subclasses should override
prototype$39.on=function()/*type, handler*/{};// remove an event handler
// subclasses should override
prototype$39.off=function()/*type, handler*/{};// return an array with all registered event handlers
prototype$39.handlers=function(){var h=this._handlers,a=[],k;for(k in h){a.push.apply(a,h[k]);}return a;};prototype$39.eventName=function(name){var i=name.indexOf('.');return i<0?name:name.slice(0,i);};prototype$39.handleHref=function(event,item,href){this._loader.sanitize(href,{context:'href'}).then(function(opt){var e=new MouseEvent(event.type,event),a=domCreate(null,'a');for(var name in opt){a.setAttribute(name,opt[name]);}a.dispatchEvent(e);}).catch(function(){/* do nothing */});};prototype$39.handleTooltip=function(event,item,tooltipText){this._el.setAttribute('title',tooltipText||'');};/**
 * Create a new Renderer instance.
 * @param {object} [loader] - Optional loader instance for
 *   image and href URL sanitization. If not specified, a
 *   standard loader instance will be generated.
 * @constructor
 */function Renderer(loader){this._el=null;this._bgcolor=null;this._loader=new ResourceLoader(loader);}var prototype$40=Renderer.prototype;/**
 * Initialize a new Renderer instance.
 * @param {DOMElement} el - The containing DOM element for the display.
 * @param {number} width - The width of the display, in pixels.
 * @param {number} height - The height of the display, in pixels.
 * @param {Array<number>} origin - The origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @return {Renderer} - This renderer instance;
 */prototype$40.initialize=function(el,width,height,origin){this._el=el;return this.resize(width,height,origin);};/**
 * Returns the parent container element for a visualization.
 * @return {DOMElement} - The containing DOM element.
 */prototype$40.element=function(){return this._el;};/**
 * Returns the scene element (e.g., canvas or SVG) of the visualization
 * Subclasses must override if the first child is not the scene element.
 * @return {DOMElement} - The scene (e.g., canvas or SVG) element.
 */prototype$40.scene=function(){return this._el&&this._el.firstChild;};/**
 * Get / set the background color.
 */prototype$40.background=function(bgcolor){if(arguments.length===0)return this._bgcolor;this._bgcolor=bgcolor;return this;};/**
 * Resize the display.
 * @param {number} width - The new width of the display, in pixels.
 * @param {number} height - The new height of the display, in pixels.
 * @param {Array<number>} origin - The new origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @return {Renderer} - This renderer instance;
 */prototype$40.resize=function(width,height,origin){this._width=width;this._height=height;this._origin=origin||[0,0];return this;};/**
 * Report a dirty item whose bounds should be redrawn.
 * This base class method does nothing. Subclasses that perform
 * incremental should implement this method.
 * @param {Item} item - The dirty item whose bounds should be redrawn.
 */prototype$40.dirty=function()/*item*/{};/**
 * Render an input scenegraph, potentially with a set of dirty items.
 * This method will perform an immediate rendering with available resources.
 * The renderer may also need to perform image loading to perform a complete
 * render. This process can lead to asynchronous re-rendering of the scene
 * after this method returns. To receive notification when rendering is
 * complete, use the renderAsync method instead.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Renderer} - This renderer instance.
 */prototype$40.render=function(scene){var r=this;// bind arguments into a render call, and cache it
// this function may be subsequently called for async redraw
r._call=function(){r._render(scene);};// invoke the renderer
r._call();// clear the cached call for garbage collection
// async redraws will stash their own copy
r._call=null;return r;};/**
 * Internal rendering method. Renderer subclasses should override this
 * method to actually perform rendering.
 * @param {object} scene - The root mark of a scenegraph to render.
 */prototype$40._render=function()/*scene*/{// subclasses to override
};/**
 * Asynchronous rendering method. Similar to render, but returns a Promise
 * that resolves when all rendering is completed. Sometimes a renderer must
 * perform image loading to get a complete rendering. The returned
 * Promise will not resolve until this process completes.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Promise} - A Promise that resolves when rendering is complete.
 */prototype$40.renderAsync=function(scene){var r=this.render(scene);return this._ready?this._ready.then(function(){return r;}):Promise.resolve(r);};/**
 * Internal method for asynchronous resource loading.
 * Proxies method calls to the ImageLoader, and tracks loading
 * progress to invoke a re-render once complete.
 * @param {string} method - The method name to invoke on the ImageLoader.
 * @param {string} uri - The URI for the requested resource.
 * @return {Promise} - A Promise that resolves to the requested resource.
 */prototype$40._load=function(method,uri){var r=this,p=r._loader[method](uri);if(!r._ready){// re-render the scene when loading completes
var call=r._call;r._ready=r._loader.ready().then(function(redraw){if(redraw)call();r._ready=null;});}return p;};/**
 * Sanitize a URL to include as a hyperlink in the rendered scene.
 * This method proxies a call to ImageLoader.sanitizeURL, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string to sanitize.
 * @return {Promise} - A Promise that resolves to the sanitized URL.
 */prototype$40.sanitizeURL=function(uri){return this._load('sanitizeURL',uri);};/**
 * Requests an image to include in the rendered scene.
 * This method proxies a call to ImageLoader.loadImage, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string of the image.
 * @return {Promise} - A Promise that resolves to the loaded Image.
 */prototype$40.loadImage=function(uri){return this._load('loadImage',uri);};var point$4=function point$4(event,el){var rect=el.getBoundingClientRect();return[event.clientX-rect.left-(el.clientLeft||0),event.clientY-rect.top-(el.clientTop||0)];};function CanvasHandler(loader){Handler.call(this,loader);this._down=null;this._touch=null;this._first=true;}var prototype$41=inherits(CanvasHandler,Handler);prototype$41.initialize=function(el,origin,obj){// add event listeners
var canvas=this._canvas=el&&domFind(el,'canvas');if(canvas){var that=this;this.events.forEach(function(type){canvas.addEventListener(type,function(evt){if(prototype$41[type]){prototype$41[type].call(that,evt);}else{that.fire(type,evt);}});});}return Handler.prototype.initialize.call(this,el,origin,obj);};prototype$41.canvas=function(){return this._canvas;};// retrieve the current canvas context
prototype$41.context=function(){return this._canvas.getContext('2d');};// supported events
prototype$41.events=['keydown','keypress','keyup','dragenter','dragleave','dragover','mousedown','mouseup','mousemove','mouseout','mouseover','click','dblclick','wheel','mousewheel','touchstart','touchmove','touchend'];// to keep old versions of firefox happy
prototype$41.DOMMouseScroll=function(evt){this.fire('mousewheel',evt);};function move(moveEvent,overEvent,outEvent){return function(evt){var a=this._active,p=this.pickEvent(evt);if(p===a){// active item and picked item are the same
this.fire(moveEvent,evt);// fire move
}else{// active item and picked item are different
if(!a||!a.exit){// fire out for prior active item
// suppress if active item was removed from scene
this.fire(outEvent,evt);}this._active=p;// set new active item
this.fire(overEvent,evt);// fire over for new active item
this.fire(moveEvent,evt);// fire move for new active item
}};}function inactive(type){return function(evt){this.fire(type,evt);this._active=null;};}prototype$41.mousemove=move('mousemove','mouseover','mouseout');prototype$41.dragover=move('dragover','dragenter','dragleave');prototype$41.mouseout=inactive('mouseout');prototype$41.dragleave=inactive('dragleave');prototype$41.mousedown=function(evt){this._down=this._active;this.fire('mousedown',evt);};prototype$41.click=function(evt){if(this._down===this._active){this.fire('click',evt);this._down=null;}};prototype$41.touchstart=function(evt){this._touch=this.pickEvent(evt.changedTouches[0]);if(this._first){this._active=this._touch;this._first=false;}this.fire('touchstart',evt,true);};prototype$41.touchmove=function(evt){this.fire('touchmove',evt,true);};prototype$41.touchend=function(evt){this.fire('touchend',evt,true);this._touch=null;};// fire an event
prototype$41.fire=function(type,evt,touch){var a=touch?this._touch:this._active,h=this._handlers[type],i,len;// if hyperlinked, handle link first
if(type==='click'&&a&&a.href){this.handleHref(evt,a,a.href);}else if((type==='mouseover'||type==='mouseout')&&a&&a.tooltip){this.handleTooltip(evt,a,type==='mouseover'?a.tooltip:null);}// invoke all registered handlers
if(h){evt.vegaType=type;for(i=0,len=h.length;i<len;++i){h[i].handler.call(this._obj,evt,a);}}};// add an event handler
prototype$41.on=function(type,handler){var name=this.eventName(type),h=this._handlers;(h[name]||(h[name]=[])).push({type:type,handler:handler});return this;};// remove an event handler
prototype$41.off=function(type,handler){var name=this.eventName(type),h=this._handlers[name],i;if(!h)return;for(i=h.length;--i>=0;){if(h[i].type!==type)continue;if(!handler||h[i].handler===handler)h.splice(i,1);}return this;};prototype$41.pickEvent=function(evt){var p=point$4(evt,this._canvas),o=this._origin;return this.pick(this._scene,p[0],p[1],p[0]-o[0],p[1]-o[1]);};// find the scenegraph item at the current mouse position
// x, y -- the absolute x, y mouse coordinates on the canvas element
// gx, gy -- the relative coordinates within the current group
prototype$41.pick=function(scene,x,y,gx,gy){var g=this.context(),mark=marks[scene.marktype];return mark.pick.call(this,g,scene,x,y,gx,gy);};var clip$1=function clip$1(context,scene){var group=scene.group;context.save();context.beginPath();context.rect(0,0,group.width||0,group.height||0);context.clip();};var devicePixelRatio=typeof window!=='undefined'?window.devicePixelRatio||1:1;var resize=function resize(canvas,width,height,origin){var scale=typeof HTMLElement!=='undefined'&&canvas instanceof HTMLElement&&canvas.parentNode!=null;var context=canvas.getContext('2d'),ratio=scale?devicePixelRatio:1;canvas.width=width*ratio;canvas.height=height*ratio;if(ratio!==1){canvas.style.width=width+'px';canvas.style.height=height+'px';}context.pixelRatio=ratio;context.setTransform(ratio,0,0,ratio,ratio*origin[0],ratio*origin[1]);return canvas;};function CanvasRenderer(loader){Renderer.call(this,loader);this._redraw=false;this._dirty=new Bounds();}var prototype$42=inherits(CanvasRenderer,Renderer);var base=Renderer.prototype;var tempBounds$1=new Bounds();prototype$42.initialize=function(el,width,height,origin){this._canvas=Canvas$1(1,1);// instantiate a small canvas
if(el){domClear(el,0).appendChild(this._canvas);this._canvas.setAttribute('class','marks');}// this method will invoke resize to size the canvas appropriately
return base.initialize.call(this,el,width,height,origin);};prototype$42.resize=function(width,height,origin){base.resize.call(this,width,height,origin);resize(this._canvas,this._width,this._height,this._origin);this._redraw=true;return this;};prototype$42.canvas=function(){return this._canvas;};prototype$42.context=function(){return this._canvas?this._canvas.getContext('2d'):null;};prototype$42.dirty=function(item){var b=translate$1(item.bounds,item.mark.group);this._dirty.union(b);};function clipToBounds(g,b,origin){// expand bounds by 1 pixel, then round to pixel boundaries
b.expand(1).round();// to avoid artifacts translate if origin has fractional pixels
b.translate(-(origin[0]%1),-(origin[1]%1));// set clipping path
g.beginPath();g.rect(b.x1,b.y1,b.width(),b.height());g.clip();return b;}function translate$1(bounds,group){if(group==null)return bounds;var b=tempBounds$1.clear().union(bounds);for(;group!=null;group=group.mark.group){b.translate(group.x||0,group.y||0);}return b;}prototype$42._render=function(scene){var g=this.context(),o=this._origin,w=this._width,h=this._height,b=this._dirty;// setup
g.save();if(this._redraw||b.empty()){this._redraw=false;b=null;}else{b=clipToBounds(g,b,o);}this.clear(-o[0],-o[1],w,h);// render
this.draw(g,scene,b);// takedown
g.restore();this._dirty.clear();return this;};prototype$42.draw=function(ctx,scene,bounds){var mark=marks[scene.marktype];if(scene.clip)clip$1(ctx,scene);mark.draw.call(this,ctx,scene,bounds);if(scene.clip)ctx.restore();};prototype$42.clear=function(x,y,w,h){var g=this.context();g.clearRect(x,y,w,h);if(this._bgcolor!=null){g.fillStyle=this._bgcolor;g.fillRect(x,y,w,h);}};function SVGHandler(loader){Handler.call(this,loader);var h=this;h._hrefHandler=listener(h,function(evt,item){if(item&&item.href)h.handleHref(evt,item,item.href);});h._tooltipHandler=listener(h,function(evt,item){if(item&&item.tooltip){h.handleTooltip(evt,item,evt.type==='mouseover'?item.tooltip:null);}});}var prototype$43=inherits(SVGHandler,Handler);prototype$43.initialize=function(el,origin,obj){var svg=this._svg;if(svg){svg.removeEventListener('click',this._hrefHandler);svg.removeEventListener('mouseover',this._tooltipHandler);svg.removeEventListener('mouseout',this._tooltipHandler);}this._svg=svg=el&&domFind(el,'svg');if(svg){svg.addEventListener('click',this._hrefHandler);svg.addEventListener('mouseover',this._tooltipHandler);svg.addEventListener('mouseout',this._tooltipHandler);}return Handler.prototype.initialize.call(this,el,origin,obj);};prototype$43.svg=function(){return this._svg;};// wrap an event listener for the SVG DOM
function listener(context,handler){return function(evt){var target=evt.target,item=target.__data__;evt.vegaType=evt.type;item=Array.isArray(item)?item[0]:item;handler.call(context._obj,evt,item);};}// add an event handler
prototype$43.on=function(type,handler){var name=this.eventName(type),h=this._handlers,x={type:type,handler:handler,listener:listener(this,handler)};(h[name]||(h[name]=[])).push(x);if(this._svg){this._svg.addEventListener(name,x.listener);}return this;};// remove an event handler
prototype$43.off=function(type,handler){var name=this.eventName(type),svg=this._svg,h=this._handlers[name],i;if(!h)return;for(i=h.length;--i>=0;){if(h[i].type===type&&!handler||h[i].handler===handler){if(this._svg){svg.removeEventListener(name,h[i].listener);}h.splice(i,1);}}return this;};// generate string for an opening xml tag
// tag: the name of the xml tag
// attr: hash of attribute name-value pairs to include
// raw: additional raw string to include in tag markup
function openTag(tag,attr,raw){var s='<'+tag,key,val;if(attr){for(key in attr){val=attr[key];if(val!=null){s+=' '+key+'="'+val+'"';}}}if(raw)s+=' '+raw;return s+'>';}// generate string for closing xml tag
// tag: the name of the xml tag
function closeTag(tag){return'</'+tag+'>';}var metadata={'version':'1.1','xmlns':'http://www.w3.org/2000/svg','xmlns:xlink':'http://www.w3.org/1999/xlink'};var styles={'fill':'fill','fillOpacity':'fill-opacity','stroke':'stroke','strokeWidth':'stroke-width','strokeOpacity':'stroke-opacity','strokeCap':'stroke-linecap','strokeJoin':'stroke-linejoin','strokeDash':'stroke-dasharray','strokeDashOffset':'stroke-dashoffset','strokeMiterLimit':'stroke-miterlimit','opacity':'opacity'};var styleProperties=Object.keys(styles);var ns=metadata.xmlns;function SVGRenderer(loader){Renderer.call(this,loader);this._dirtyID=1;this._dirty=[];this._svg=null;this._root=null;this._defs=null;}var prototype$44=inherits(SVGRenderer,Renderer);var base$1=Renderer.prototype;prototype$44.initialize=function(el,width,height,padding){if(el){this._svg=domChild(el,0,'svg',ns);this._svg.setAttribute('class','marks');domClear(el,1);// set the svg root group
this._root=domChild(this._svg,0,'g',ns);domClear(this._svg,1);}// create the svg definitions cache
this._defs={gradient:{},clipping:{}};// set background color if defined
this.background(this._bgcolor);return base$1.initialize.call(this,el,width,height,padding);};prototype$44.background=function(bgcolor){if(arguments.length&&this._svg){this._svg.style.setProperty('background-color',bgcolor);}return base$1.background.apply(this,arguments);};prototype$44.resize=function(width,height,origin){base$1.resize.call(this,width,height,origin);if(this._svg){this._svg.setAttribute('width',this._width);this._svg.setAttribute('height',this._height);this._svg.setAttribute('viewBox','0 0 '+this._width+' '+this._height);this._root.setAttribute('transform','translate('+this._origin+')');}this._dirty=[];return this;};prototype$44.svg=function(){if(!this._svg)return null;var attr={'class':'marks','width':this._width,'height':this._height,'viewBox':'0 0 '+this._width+' '+this._height};for(var key$$1 in metadata){attr[key$$1]=metadata[key$$1];}return openTag('svg',attr)+this._svg.innerHTML+closeTag('svg');};// -- Render entry point --
prototype$44._render=function(scene){// perform spot updates and re-render markup
if(this._dirtyCheck()){if(this._dirtyAll)this._resetDefs();this.draw(this._root,scene);domClear(this._root,1);}this.updateDefs();this._dirty=[];++this._dirtyID;return this;};// -- Manage SVG definitions ('defs') block --
prototype$44.updateDefs=function(){var svg=this._svg,defs=this._defs,el=defs.el,index=0,id$$1;for(id$$1 in defs.gradient){if(!el)defs.el=el=domChild(svg,0,'defs',ns);updateGradient(el,defs.gradient[id$$1],index++);}for(id$$1 in defs.clipping){if(!el)defs.el=el=domChild(svg,0,'defs',ns);updateClipping(el,defs.clipping[id$$1],index++);}// clean-up
if(el){if(index===0){svg.removeChild(el);defs.el=null;}else{domClear(el,index);}}};function updateGradient(el,grad,index){var i,n,stop;el=domChild(el,index,'linearGradient',ns);el.setAttribute('id',grad.id);el.setAttribute('x1',grad.x1);el.setAttribute('x2',grad.x2);el.setAttribute('y1',grad.y1);el.setAttribute('y2',grad.y2);for(i=0,n=grad.stops.length;i<n;++i){stop=domChild(el,i,'stop',ns);stop.setAttribute('offset',grad.stops[i].offset);stop.setAttribute('stop-color',grad.stops[i].color);}domClear(el,i);}function updateClipping(el,clip$$1,index){var rect;el=domChild(el,index,'clipPath',ns);el.setAttribute('id',clip$$1.id);rect=domChild(el,0,'rect',ns);rect.setAttribute('x',0);rect.setAttribute('y',0);rect.setAttribute('width',clip$$1.width);rect.setAttribute('height',clip$$1.height);}prototype$44._resetDefs=function(){var def=this._defs;def.gradient={};def.clipping={};};// -- Manage rendering of items marked as dirty --
prototype$44.dirty=function(item){if(item.dirty!==this._dirtyID){item.dirty=this._dirtyID;this._dirty.push(item);}};prototype$44.isDirty=function(item){return this._dirtyAll||!item._svg||item.dirty===this._dirtyID;};prototype$44._dirtyCheck=function(){this._dirtyAll=true;var items=this._dirty;if(!items.length)return true;var id$$1=++this._dirtyID,item,mark,type,mdef,i,n,o;for(i=0,n=items.length;i<n;++i){item=items[i];mark=item.mark;if(mark.marktype!==type){// memoize mark instance lookup
type=mark.marktype;mdef=marks[type];}if(mark.zdirty&&mark.dirty!==id$$1){this._dirtyAll=false;mark.dirty=id$$1;dirtyParents(mark.group,id$$1);}if(item.exit){// EXIT
if(mdef.nested&&mark.items.length){// if nested mark with remaining points, update instead
o=mark.items[0];if(o._svg)this._update(mdef,o._svg,o);}else if(item._svg){// otherwise remove from DOM
o=item._svg.parentNode;if(o)o.removeChild(item._svg);}item._svg=null;continue;}item=mdef.nested?mark.items[0]:item;if(item._update===id$$1)continue;// already visited
if(!item._svg||!item._svg.ownerSVGElement){// ENTER
this._dirtyAll=false;dirtyParents(item,id$$1);}else{// IN-PLACE UPDATE
this._update(mdef,item._svg,item);}item._update=id$$1;}return!this._dirtyAll;};function dirtyParents(item,id$$1){for(;item&&item.dirty!==id$$1;item=item.mark.group){item.dirty=id$$1;if(item.mark&&item.mark.dirty!==id$$1){item.mark.dirty=id$$1;}else return;}}// -- Construct & maintain scenegraph to SVG mapping ---
// Draw a mark container.
prototype$44.draw=function(el,scene,prev){if(!this.isDirty(scene))return scene._svg;var renderer=this,mdef=marks[scene.marktype],events=scene.interactive===false?'none':null,isGroup=mdef.tag==='g',sibling=null,i=0,parent;parent=bind(scene,el,prev,'g');parent.setAttribute('class',cssClass(scene));if(!isGroup&&events){parent.style.setProperty('pointer-events',events);}if(scene.clip){parent.setAttribute('clip-path',clip(renderer,scene,scene.group));}function process(item){var dirty=renderer.isDirty(item),node=bind(item,parent,sibling,mdef.tag);if(dirty){renderer._update(mdef,node,item);if(isGroup)recurse(renderer,node,item);}sibling=node;++i;}if(mdef.nested){if(scene.items.length)process(scene.items[0]);}else{visit(scene,process);}domClear(parent,i);return parent;};// Recursively process group contents.
function recurse(renderer,el,group){el=el.lastChild;var prev,idx=0;visit(group,function(item){prev=renderer.draw(el,item,prev);++idx;});// remove any extraneous DOM elements
domClear(el,1+idx);}// Bind a scenegraph item to an SVG DOM element.
// Create new SVG elements as needed.
function bind(item,el,sibling,tag){var node=item._svg,doc;// create a new dom node if needed
if(!node){doc=el.ownerDocument;node=domCreate(doc,tag,ns);item._svg=node;if(item.mark){node.__data__=item;node.__values__={fill:'default'};// if group, create background and foreground elements
if(tag==='g'){var bg=domCreate(doc,'path',ns);bg.setAttribute('class','background');node.appendChild(bg);bg.__data__=item;var fg=domCreate(doc,'g',ns);node.appendChild(fg);fg.__data__=item;}}}if(doc||node.previousSibling!==sibling||!sibling){el.insertBefore(node,sibling?sibling.nextSibling:el.firstChild);}return node;}// -- Set attributes & styles on SVG elements ---
var element=null;var values$1=null;// temp var for current values hash
// Extra configuration for certain mark types
var mark_extras={group:function group(mdef,el,item){values$1=el.__values__;// use parent's values hash
element=el.childNodes[1];mdef.foreground(emit,item,this);element=el.childNodes[0];mdef.background(emit,item,this);var value=item.mark.interactive===false?'none':null;if(value!==values$1.events){element.style.setProperty('pointer-events',value);values$1.events=value;}},text:function text(mdef,el,item){var str=textValue(item);if(str!==values$1.text){el.textContent=str;values$1.text=str;}str=font(item);if(str!==values$1.font){el.style.setProperty('font',str);values$1.font=str;}}};prototype$44._update=function(mdef,el,item){// set dom element and values cache
// provides access to emit method
element=el;values$1=el.__values__;// apply svg attributes
mdef.attr(emit,item,this);// some marks need special treatment
var extra=mark_extras[mdef.type];if(extra)extra.call(this,mdef,el,item);// apply svg css styles
// note: element may be modified by 'extra' method
this.style(element,item);};function emit(name,value,ns){// early exit if value is unchanged
if(value===values$1[name])return;if(value!=null){// if value is provided, update DOM attribute
if(ns){element.setAttributeNS(ns,name,value);}else{element.setAttribute(name,value);}}else{// else remove DOM attribute
if(ns){element.removeAttributeNS(ns,name);}else{element.removeAttribute(name);}}// note current value for future comparison
values$1[name]=value;}prototype$44.style=function(el,o){if(o==null)return;var i,n,prop,name,value;for(i=0,n=styleProperties.length;i<n;++i){prop=styleProperties[i];value=o[prop];if(value===values$1[prop])continue;name=styles[prop];if(value==null){if(name==='fill'){el.style.setProperty(name,'none');}else{el.style.removeProperty(name);}}else{if(value.id){// ensure definition is included
this._defs.gradient[value.id]=value;value='url('+href()+'#'+value.id+')';}el.style.setProperty(name,value+'');}values$1[prop]=value;}};function href(){var loc;return typeof window==='undefined'?'':(loc=window.location).hash?loc.href.slice(0,-loc.hash.length):loc.href;}function SVGStringRenderer(loader){Renderer.call(this,loader);this._text={head:'',root:'',foot:'',defs:'',body:''};this._defs={gradient:{},clipping:{}};}var prototype$45=inherits(SVGStringRenderer,Renderer);var base$2=Renderer.prototype;prototype$45.resize=function(width,height,origin){base$2.resize.call(this,width,height,origin);var o=this._origin,t=this._text;var attr={'class':'marks','width':this._width,'height':this._height,'viewBox':'0 0 '+this._width+' '+this._height};for(var key$$1 in metadata){attr[key$$1]=metadata[key$$1];}t.head=openTag('svg',attr);t.root=openTag('g',{transform:'translate('+o+')'});t.foot=closeTag('g')+closeTag('svg');return this;};prototype$45.svg=function(){var t=this._text;return t.head+t.defs+t.root+t.body+t.foot;};prototype$45._render=function(scene){this._text.body=this.mark(scene);this._text.defs=this.buildDefs();return this;};prototype$45.buildDefs=function(){var all=this._defs,defs='',i,id$$1,def,stops;for(id$$1 in all.gradient){def=all.gradient[id$$1];stops=def.stops;defs+=openTag('linearGradient',{id:id$$1,x1:def.x1,x2:def.x2,y1:def.y1,y2:def.y2});for(i=0;i<stops.length;++i){defs+=openTag('stop',{offset:stops[i].offset,'stop-color':stops[i].color})+closeTag('stop');}defs+=closeTag('linearGradient');}for(id$$1 in all.clipping){def=all.clipping[id$$1];defs+=openTag('clipPath',{id:id$$1});defs+=openTag('rect',{x:0,y:0,width:def.width,height:def.height})+closeTag('rect');defs+=closeTag('clipPath');}return defs.length>0?openTag('defs')+defs+closeTag('defs'):'';};var object$1;function emit$1(name,value,ns,prefixed){object$1[prefixed||name]=value;}prototype$45.attributes=function(attr,item){object$1={};attr(emit$1,item,this);return object$1;};prototype$45.href=function(item){var that=this,href=item.href,attr;if(href){if(attr=that._hrefs&&that._hrefs[href]){return attr;}else{that.sanitizeURL(href).then(function(attr){// rewrite to use xlink namespace
// note that this will be deprecated in SVG 2.0
attr['xlink:href']=attr.href;attr.href=null;(that._hrefs||(that._hrefs={}))[href]=attr;});}}return null;};prototype$45.mark=function(scene){var renderer=this,mdef=marks[scene.marktype],tag=mdef.tag,defs=this._defs,str='',style;if(tag!=='g'&&scene.interactive===false){style='style="pointer-events: none;"';}// render opening group tag
str+=openTag('g',{'class':cssClass(scene),'clip-path':scene.clip?clip(renderer,scene,scene.group):null},style);// render contained elements
function process(item){var href=renderer.href(item);if(href)str+=openTag('a',href);style=tag!=='g'?applyStyles(item,scene,tag,defs):null;str+=openTag(tag,renderer.attributes(mdef.attr,item),style);if(tag==='text'){str+=escape_text(textValue(item));}else if(tag==='g'){str+=openTag('path',renderer.attributes(mdef.background,item),applyStyles(item,scene,'bgrect',defs))+closeTag('path');str+=openTag('g',renderer.attributes(mdef.foreground,item))+renderer.markGroup(item)+closeTag('g');}str+=closeTag(tag);if(href)str+=closeTag('a');}if(mdef.nested){if(scene.items&&scene.items.length)process(scene.items[0]);}else{visit(scene,process);}// render closing group tag
return str+closeTag('g');};prototype$45.markGroup=function(scene){var renderer=this,str='';visit(scene,function(item){str+=renderer.mark(item);});return str;};function applyStyles(o,mark,tag,defs){if(o==null)return'';var i,n,prop,name,value,s='';if(tag==='bgrect'&&mark.interactive===false){s+='pointer-events: none;';}if(tag==='text'){s+='font: '+font(o)+';';}for(i=0,n=styleProperties.length;i<n;++i){prop=styleProperties[i];name=styles[prop];value=o[prop];if(value==null){if(name==='fill'){s+=(s.length?' ':'')+'fill: none;';}}else{if(value.id){// ensure definition is included
defs.gradient[value.id]=value;value='url(#'+value.id+')';}s+=(s.length?' ':'')+name+': '+value+';';}}return s?'style="'+s+'"':null;}function escape_text(s){return s.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');}var Canvas$2='canvas';var PNG='png';var SVG='svg';var None$1='none';var RenderType={Canvas:Canvas$2,PNG:PNG,SVG:SVG,None:None$1};var modules={};modules[Canvas$2]=modules[PNG]={renderer:CanvasRenderer,headless:CanvasRenderer,handler:CanvasHandler};modules[SVG]={renderer:SVGRenderer,headless:SVGStringRenderer,handler:SVGHandler};modules[None$1]={};function renderModule(name,_){name=String(name||'').toLowerCase();if(arguments.length>1){modules[name]=_;return this;}else{return modules[name];}}var TOLERANCE=1e-9;function sceneEqual(a,b,key$$1){return a===b?true:key$$1==='path'?pathEqual(a,b):a instanceof Date&&b instanceof Date?+a===+b:isNumber(a)&&isNumber(b)?Math.abs(a-b)<=TOLERANCE:!a||!b||!isObject(a)&&!isObject(b)?a==b:a==null||b==null?false:objectEqual(a,b);}function pathEqual(a,b){return sceneEqual(pathParse(a),pathParse(b));}function objectEqual(a,b){var ka=Object.keys(a),kb=Object.keys(b),key$$1,i;if(ka.length!==kb.length)return false;ka.sort();kb.sort();for(i=ka.length-1;i>=0;i--){if(ka[i]!=kb[i])return false;}for(i=ka.length-1;i>=0;i--){key$$1=ka[i];if(!sceneEqual(a[key$$1],b[key$$1],key$$1))return false;}return(typeof a==='undefined'?'undefined':_typeof(a))===(typeof b==='undefined'?'undefined':_typeof(b));}/**
 * Calculate bounding boxes for scenegraph items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - The scenegraph mark instance to bound.
 */function Bound(params){Transform.call(this,null,params);}var prototype$35=inherits(Bound,Transform);var temp=new Bounds();prototype$35.transform=function(_,pulse){var view=pulse.dataflow,mark=_.mark,type=mark.marktype,entry=marks[type],bound=entry.bound,clip=mark.clip,markBounds=mark.bounds,rebound;if(entry.nested){// multi-item marks have a single bounds instance
if(mark.items.length)view.dirty(mark.items[0]);markBounds=boundItem(mark,bound);mark.items.forEach(function(item){item.bounds.clear().union(markBounds);});}else if(type==='group'||_.modified()){// operator parameters modified -> re-bound all items
// updates group bounds in response to modified group content
pulse.visit(pulse.MOD,function(item){view.dirty(item);});markBounds.clear();mark.items.forEach(function(item){markBounds.union(boundItem(item,bound));});}else{// incrementally update bounds, re-bound mark as needed
rebound=pulse.changed(pulse.REM);pulse.visit(pulse.ADD,function(item){markBounds.union(boundItem(item,bound));});pulse.visit(pulse.MOD,function(item){rebound=rebound||markBounds.alignsWith(item.bounds);view.dirty(item);markBounds.union(boundItem(item,bound));});if(rebound&&!clip){markBounds.clear();mark.items.forEach(function(item){markBounds.union(item.bounds);});}}if(clip){markBounds.intersect(temp.set(0,0,mark.group.width,mark.group.height));}return pulse.modifies('bounds');};function boundItem(item,bound,opt){return bound(item.bounds.clear(),item,opt);}var COUNTER_NAME=':vega_identifier:';/**
 * Adds a unique identifier to all added tuples.
 * This transform creates a new signal that serves as an id counter.
 * As a result, the id counter is shared across all instances of this
 * transform, generating unique ids across multiple data streams. In
 * addition, this signal value can be included in a snapshot of the
 * dataflow state, enabling correct resumption of id allocation.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.as - The field name for the generated identifier.
 */function Identifier(params){Transform.call(this,0,params);}Identifier.Definition={"type":"Identifier","metadata":{"modifies":true},"params":[{"name":"as","type":"string","required":true}]};var prototype$46=inherits(Identifier,Transform);prototype$46.transform=function(_,pulse){var counter=getCounter(pulse.dataflow),id$$1=counter.value,as=_.as;pulse.visit(pulse.ADD,function(t){if(!t[as])t[as]=++id$$1;});counter.set(this.value=id$$1);return pulse;};function getCounter(view){var counter=view._signals[COUNTER_NAME];if(!counter){view._signals[COUNTER_NAME]=counter=view.add(0);}return counter;}/**
 * Bind scenegraph items to a scenegraph mark instance.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.markdef - The mark definition for creating the mark.
 *   This is an object of legal scenegraph mark properties which *must* include
 *   the 'marktype' property.
 * @param {Array<number>} params.scenepath - Scenegraph tree coordinates for the mark.
 *   The path is an array of integers, each indicating the index into
 *   a successive chain of items arrays.
 */function Mark(params){Transform.call(this,null,params);}var prototype$47=inherits(Mark,Transform);prototype$47.transform=function(_,pulse){var mark=this.value;// acquire mark on first invocation, bind context and group
if(!mark){mark=pulse.dataflow.scenegraph().mark(_.markdef,lookup$1(_),_.index);mark.group.context=_.context;if(!_.context.group)_.context.group=mark.group;mark.source=this;this.value=mark;}// initialize entering items
var Init=mark.marktype==='group'?GroupItem:Item;pulse.visit(pulse.ADD,function(item){Init.call(item,mark);});// bind items array to scenegraph mark
mark.items=pulse.source;return pulse;};function lookup$1(_){var g=_.groups,p=_.parent;return g&&g.size===1?g.get(Object.keys(g.object)[0]):g&&p?g.lookup(p):null;}/**
 * Analyze items for overlap, changing opacity to hide items with
 * overlapping bounding boxes. This transform will preserve at least
 * two items (e.g., first and last) even if overlap persists.
 * @param {object} params - The parameters for this operator.
 * @param {object} params.method - The overlap removal method to apply.
 *   One of 'parity' (default, hide every other item until there is no
 *   more overlap) or 'greedy' (sequentially scan and hide and items that
 *   overlap with the last visible item).
 * @constructor
 */function Overlap(params){Transform.call(this,null,params);}var prototype$48=inherits(Overlap,Transform);var methods={parity:function parity(items){return items.filter(function(item,i){return i%2?item.opacity=0:1;});},greedy:function greedy(items){var a;return items.filter(function(b,i){if(!i||!intersect$1(a.bounds,b.bounds)){a=b;return 1;}else{return b.opacity=0;}});}};// compute bounding box intersection
// allow 1 pixel of overlap tolerance
function intersect$1(a,b){return!(a.x2-1<b.x1||a.x1+1>b.x2||a.y2-1<b.y1||a.y1+1>b.y2);}function hasOverlap(items){for(var i=1,n=items.length,a=items[0].bounds,b;i<n;a=b,++i){if(intersect$1(a,b=items[i].bounds))return true;}}function hasBounds(item){var b=item.bounds;return b.width()>1&&b.height()>1;}prototype$48.transform=function(_,pulse){var reduce=methods[_.method]||methods.parity,source=pulse.materialize(pulse.SOURCE).source,items=source;if(!items)return;if(_.method==='greedy'){items=source=source.filter(hasBounds);}if(items.length>=3&&hasOverlap(items)){pulse=pulse.reflow(_.modified()).modifies('opacity');do{items=reduce(items);}while(items.length>=3&&hasOverlap(items));if(items.length<3&&!peek(source).opacity){if(items.length>1)peek(items).opacity=0;peek(source).opacity=1;}}return pulse;};/**
 * Queue modified scenegraph items for rendering.
 * @constructor
 */function Render(params){Transform.call(this,null,params);}var prototype$49=inherits(Render,Transform);prototype$49.transform=function(_,pulse){var view=pulse.dataflow;pulse.visit(pulse.ALL,function(item){view.dirty(item);});// set z-index dirty flag as needed
if(pulse.fields&&pulse.fields['zindex']){var item=pulse.source&&pulse.source[0];if(item)item.mark.zdirty=true;}};var AxisRole$1='axis';var LegendRole$1='legend';var RowHeader$1='row-header';var RowFooter$1='row-footer';var RowTitle='row-title';var ColHeader$1='column-header';var ColFooter$1='column-footer';var ColTitle='column-title';function extractGroups(group){var groups=group.items,n=groups.length,i=0,mark,items;var views={marks:[],rowheaders:[],rowfooters:[],colheaders:[],colfooters:[],rowtitle:null,coltitle:null};// layout axes, gather legends, collect bounds
for(;i<n;++i){mark=groups[i];items=mark.items;if(mark.marktype==='group'){switch(mark.role){case AxisRole$1:case LegendRole$1:break;case RowHeader$1:addAll(items,views.rowheaders);break;case RowFooter$1:addAll(items,views.rowfooters);break;case ColHeader$1:addAll(items,views.colheaders);break;case ColFooter$1:addAll(items,views.colfooters);break;case RowTitle:views.rowtitle=items[0];break;case ColTitle:views.coltitle=items[0];break;default:addAll(items,views.marks);}}}return views;}function addAll(items,array$$1){for(var i=0,n=items.length;i<n;++i){array$$1.push(items[i]);}}function bboxFlush(item){return{x1:0,y1:0,x2:item.width||0,y2:item.height||0};}function bboxFull(item){var b=item.bounds.clone();return b.empty()?b.set(0,0,0,0):b.translate(-(item.x||0),-(item.y||0));}function boundFlush(item,field$$1){return field$$1==='x1'?item.x||0:field$$1==='y1'?item.y||0:field$$1==='x2'?(item.x||0)+(item.width||0):field$$1==='y2'?(item.y||0)+(item.height||0):undefined;}function boundFull(item,field$$1){return item.bounds[field$$1];}function get$1(opt,key$$1,d){var v=isObject(opt)?opt[key$$1]:opt;return v!=null?v:d!==undefined?d:0;}function offsetValue(v){return v<0?Math.ceil(-v):0;}function gridLayout(view,group,opt){var views=extractGroups(group,opt),groups=views.marks,flush=opt.bounds==='flush',bbox=flush?bboxFlush:bboxFull,bounds=new Bounds(0,0,0,0),alignCol=get$1(opt.align,'column'),alignRow=get$1(opt.align,'row'),padCol=get$1(opt.padding,'column'),padRow=get$1(opt.padding,'row'),off=opt.offset,ncols=group.columns||opt.columns||groups.length,nrows=ncols<0?1:Math.ceil(groups.length/ncols),cells=nrows*ncols,xOffset=[],xExtent=[],xInit=0,yOffset=[],yExtent=[],yInit=0,n=groups.length,m,i,c,r,b,g,px,py,x,y,band,extent,offset;for(i=0;i<ncols;++i){xExtent[i]=0;}for(i=0;i<nrows;++i){yExtent[i]=0;}// determine offsets for each group
for(i=0;i<n;++i){b=bbox(groups[i]);c=i%ncols;r=~~(i/ncols);px=c?Math.ceil(bbox(groups[i-1]).x2):0;py=r?Math.ceil(bbox(groups[i-ncols]).y2):0;xExtent[c]=Math.max(xExtent[c],px);yExtent[r]=Math.max(yExtent[r],py);xOffset.push(padCol+offsetValue(b.x1));yOffset.push(padRow+offsetValue(b.y1));view.dirty(groups[i]);}// set initial alignment offsets
for(i=0;i<n;++i){if(i%ncols===0)xOffset[i]=xInit;if(i<ncols)yOffset[i]=yInit;}// enforce column alignment constraints
if(alignCol==='each'){for(c=1;c<ncols;++c){for(offset=0,i=c;i<n;i+=ncols){if(offset<xOffset[i])offset=xOffset[i];}for(i=c;i<n;i+=ncols){xOffset[i]=offset+xExtent[c];}}}else if(alignCol==='all'){for(extent=0,c=1;c<ncols;++c){if(extent<xExtent[c])extent=xExtent[c];}for(offset=0,i=0;i<n;++i){if(i%ncols&&offset<xOffset[i])offset=xOffset[i];}for(i=0;i<n;++i){if(i%ncols)xOffset[i]=offset+extent;}}else{for(c=1;c<ncols;++c){for(i=c;i<n;i+=ncols){xOffset[i]+=xExtent[c];}}}// enforce row alignment constraints
if(alignRow==='each'){for(r=1;r<nrows;++r){for(offset=0,i=r*ncols,m=i+ncols;i<m;++i){if(offset<yOffset[i])offset=yOffset[i];}for(i=r*ncols;i<m;++i){yOffset[i]=offset+yExtent[r];}}}else if(alignRow==='all'){for(extent=0,r=1;r<nrows;++r){if(extent<yExtent[r])extent=yExtent[r];}for(offset=0,i=ncols;i<n;++i){if(offset<yOffset[i])offset=yOffset[i];}for(i=ncols;i<n;++i){yOffset[i]=offset+extent;}}else{for(r=1;r<nrows;++r){for(i=r*ncols,m=i+ncols;i<m;++i){yOffset[i]+=yExtent[r];}}}// perform horizontal grid layout
for(x=0,i=0;i<n;++i){g=groups[i];px=g.x||0;g.x=x=xOffset[i]+(i%ncols?x:0);g.bounds.translate(x-px,0);}// perform vertical grid layout
for(c=0;c<ncols;++c){for(y=0,i=c;i<n;i+=ncols){g=groups[i];py=g.y||0;g.y=y+=yOffset[i];g.bounds.translate(0,y-py);}}// update mark bounds, mark dirty
for(i=0;i<n;++i){groups[i].mark.bounds.clear();}for(i=0;i<n;++i){g=groups[i];view.dirty(g);bounds.union(g.mark.bounds.union(g.bounds));}// -- layout grid headers and footers --
// aggregation functions for grid margin determination
function min(a,b){return Math.floor(Math.min(a,b));}function max(a,b){return Math.ceil(Math.max(a,b));}// bounding box calculation methods
bbox=flush?boundFlush:boundFull;// perform row header layout
band=get$1(opt.headerBand,'row',null);x=layoutHeaders(view,views.rowheaders,groups,ncols,nrows,-get$1(off,'rowHeader'),min,0,bbox,'x1',0,ncols,1,band);// perform column header layout
band=get$1(opt.headerBand,'column',null);y=layoutHeaders(view,views.colheaders,groups,ncols,ncols,-get$1(off,'columnHeader'),min,1,bbox,'y1',0,1,ncols,band);// perform row footer layout
band=get$1(opt.footerBand,'row',null);layoutHeaders(view,views.rowfooters,groups,ncols,nrows,get$1(off,'rowFooter'),max,0,bbox,'x2',ncols-1,ncols,1,band);// perform column footer layout
band=get$1(opt.footerBand,'column',null);layoutHeaders(view,views.colfooters,groups,ncols,ncols,get$1(off,'columnFooter'),max,1,bbox,'y2',cells-ncols,1,ncols,band);// perform row title layout
if(views.rowtitle){offset=x-get$1(off,'rowTitle');band=get$1(opt.titleBand,'row',0.5);layoutTitle$1(view,views.rowtitle,offset,0,bounds,band);}// perform column title layout
if(views.coltitle){offset=y-get$1(off,'columnTitle');band=get$1(opt.titleBand,'column',0.5);layoutTitle$1(view,views.coltitle,offset,1,bounds,band);}}function layoutHeaders(view,headers,groups,ncols,limit,offset,agg,isX,bound,bf,start,stride,back,band){var n=groups.length,init=0,edge=0,i,j,k,m,b,h,g,x,y;// compute margin
for(i=start;i<n;i+=stride){if(groups[i])init=agg(init,bound(groups[i],bf));}// if no headers, return margin calculation
if(!headers.length)return init;// check if number of headers exceeds number of rows or columns
if(headers.length>limit){view.warn('Grid headers exceed limit: '+limit);headers=headers.slice(0,limit);}// apply offset
init+=offset;// clear mark bounds for all headers
for(j=0,m=headers.length;j<m;++j){view.dirty(headers[j]);headers[j].mark.bounds.clear();}// layout each header
for(i=start,j=0,m=headers.length;j<m;++j,i+=stride){h=headers[j];b=h.mark.bounds;// search for nearest group to align to
// necessary if table has empty cells
for(k=i;(g=groups[k])==null;k-=back){}// assign coordinates and update bounds
if(isX){x=band==null?g.x:Math.round(g.bounds.x1+band*g.bounds.width());y=init;}else{x=init;y=band==null?g.y:Math.round(g.bounds.y1+band*g.bounds.height());}b.union(h.bounds.translate(x-(h.x||0),y-(h.y||0)));h.x=x;h.y=y;view.dirty(h);// update current edge of layout bounds
edge=agg(edge,b[bf]);}return edge;}function layoutTitle$1(view,g,offset,isX,bounds,band){if(!g)return;view.dirty(g);// compute title coordinates
var x=offset,y=offset;isX?x=Math.round(bounds.x1+band*bounds.width()):y=Math.round(bounds.y1+band*bounds.height());// assign coordinates and update bounds
g.bounds.translate(x-(g.x||0),y-(g.y||0));g.mark.bounds.clear().union(g.bounds);g.x=x;g.y=y;// queue title for redraw
view.dirty(g);}var Fit='fit';var Pad='pad';var None$2='none';var Padding='padding';var Top='top';var Left='left';var Right='right';var Bottom='bottom';var AxisRole='axis';var TitleRole='title';var FrameRole='frame';var LegendRole='legend';var ScopeRole='scope';var RowHeader='row-header';var RowFooter='row-footer';var ColHeader='column-header';var ColFooter='column-footer';var AxisOffset=0.5;var tempBounds$2=new Bounds();/**
 * Layout view elements such as axes and legends.
 * Also performs size adjustments.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - Scenegraph mark of groups to layout.
 */function ViewLayout(params){Transform.call(this,null,params);}var prototype$50=inherits(ViewLayout,Transform);prototype$50.transform=function(_,pulse){// TODO incremental update, output?
var view=pulse.dataflow;_.mark.items.forEach(function(group){if(_.layout)gridLayout(view,group,_.layout);layoutGroup(view,group,_);});return pulse;};function layoutGroup(view,group,_){var items=group.items,width=Math.max(0,group.width||0),height=Math.max(0,group.height||0),viewBounds=new Bounds().set(0,0,width,height),axisBounds=viewBounds.clone(),xBounds=viewBounds.clone(),yBounds=viewBounds.clone(),legends=[],title,mark,flow,b,i,n;// layout axes, gather legends, collect bounds
for(i=0,n=items.length;i<n;++i){mark=items[i];switch(mark.role){case AxisRole:axisBounds.union(b=layoutAxis(view,mark,width,height));(isYAxis(mark)?xBounds:yBounds).union(b);break;case TitleRole:title=mark;break;case LegendRole:legends.push(mark);break;case FrameRole:case ScopeRole:case RowHeader:case RowFooter:case ColHeader:case ColFooter:xBounds.union(mark.bounds);yBounds.union(mark.bounds);break;default:viewBounds.union(mark.bounds);}}// layout title, adjust bounds
if(title){axisBounds.union(b=layoutTitle(view,title,axisBounds));(isYAxis(title)?xBounds:yBounds).union(b);}// layout legends, adjust viewBounds
if(legends.length){flow={left:0,right:0,top:0,bottom:0,margin:_.legendMargin||8};for(i=0,n=legends.length;i<n;++i){b=layoutLegend(view,legends[i],flow,xBounds,yBounds,width,height);if(_.autosize&&_.autosize.type===Fit){// for autosize fit, incorporate the orthogonal dimension only
// legends that overrun the chart area will then be clipped
// otherwise the chart area gets reduced to nothing!
var orient=legends[i].items[0].datum.orient;if(orient===Left||orient===Right){viewBounds.add(b.x1,0).add(b.x2,0);}else if(orient===Top||orient===Bottom){viewBounds.add(0,b.y1).add(0,b.y2);}}else{viewBounds.union(b);}}}// perform size adjustment
viewBounds.union(xBounds).union(yBounds).union(axisBounds);layoutSize(view,group,viewBounds,_);}function set$3(item,property,value){if(item[property]===value){return 0;}else{item[property]=value;return 1;}}function isYAxis(mark){var orient=mark.items[0].datum.orient;return orient===Left||orient===Right;}function axisIndices(datum){var index=+datum.grid;return[datum.ticks?index++:-1,// ticks index
datum.labels?index++:-1,// labels index
index+ +datum.domain// title index
];}function layoutAxis(view,axis,width,height){var item=axis.items[0],datum=item.datum,orient=datum.orient,indices=axisIndices(datum),range=item.range,offset=item.offset,position=item.position,minExtent=item.minExtent,maxExtent=item.maxExtent,title=datum.title&&item.items[indices[2]].items[0],titlePadding=item.titlePadding,bounds=item.bounds,x=0,y=0,i,s;tempBounds$2.clear().union(bounds);bounds.clear();if((i=indices[0])>-1)bounds.union(item.items[i].bounds);if((i=indices[1])>-1)bounds.union(item.items[i].bounds);// position axis group and title
switch(orient){case Top:x=position||0;y=-offset;s=Math.max(minExtent,Math.min(maxExtent,-bounds.y1));if(title){if(title.auto){s+=titlePadding;title.y=-s;s+=title.bounds.height();}else{bounds.union(title.bounds);}}bounds.add(0,-s).add(range,0);break;case Left:x=-offset;y=position||0;s=Math.max(minExtent,Math.min(maxExtent,-bounds.x1));if(title){if(title.auto){s+=titlePadding;title.x=-s;s+=title.bounds.width();}else{bounds.union(title.bounds);}}bounds.add(-s,0).add(0,range);break;case Right:x=width+offset;y=position||0;s=Math.max(minExtent,Math.min(maxExtent,bounds.x2));if(title){if(title.auto){s+=titlePadding;title.x=s;s+=title.bounds.width();}else{bounds.union(title.bounds);}}bounds.add(0,0).add(s,range);break;case Bottom:x=position||0;y=height+offset;s=Math.max(minExtent,Math.min(maxExtent,bounds.y2));if(title)if(title.auto){s+=titlePadding;title.y=s;s+=title.bounds.height();}else{bounds.union(title.bounds);}bounds.add(0,0).add(range,s);break;default:x=item.x;y=item.y;}// update bounds
boundStroke(bounds.translate(x,y),item);if(set$3(item,'x',x+AxisOffset)|set$3(item,'y',y+AxisOffset)){item.bounds=tempBounds$2;view.dirty(item);item.bounds=bounds;view.dirty(item);}return item.mark.bounds.clear().union(bounds);}function layoutTitle(view,title,axisBounds){var item=title.items[0],datum=item.datum,orient=datum.orient,offset=item.offset,bounds=item.bounds,x=0,y=0;tempBounds$2.clear().union(bounds);// position axis group and title
switch(orient){case Top:x=item.x;y=axisBounds.y1-offset;break;case Left:x=axisBounds.x1-offset;y=item.y;break;case Right:x=axisBounds.x2+offset;y=item.y;break;case Bottom:x=item.x;y=axisBounds.y2+offset;break;default:x=item.x;y=item.y;}bounds.translate(x-item.x,y-item.y);if(set$3(item,'x',x)|set$3(item,'y',y)){item.bounds=tempBounds$2;view.dirty(item);item.bounds=bounds;view.dirty(item);}// update bounds
return title.bounds.clear().union(bounds);}function layoutLegend(view,legend,flow,xBounds,yBounds,width,height){var item=legend.items[0],datum=item.datum,orient=datum.orient,offset=item.offset,bounds=item.bounds,x=0,y=0,w,h,axisBounds;if(orient===Top||orient===Bottom){axisBounds=yBounds,x=flow[orient];}else if(orient===Left||orient===Right){axisBounds=xBounds;y=flow[orient];}tempBounds$2.clear().union(bounds);bounds.clear();// aggregate bounds to determine size
// shave off 1 pixel because it looks better...
item.items.forEach(function(_){bounds.union(_.bounds);});w=Math.round(bounds.width())+2*item.padding-1;h=Math.round(bounds.height())+2*item.padding-1;switch(orient){case Left:x-=w+offset-Math.floor(axisBounds.x1);flow.left+=h+flow.margin;break;case Right:x+=offset+Math.ceil(axisBounds.x2);flow.right+=h+flow.margin;break;case Top:y-=h+offset-Math.floor(axisBounds.y1);flow.top+=w+flow.margin;break;case Bottom:y+=offset+Math.ceil(axisBounds.y2);flow.bottom+=w+flow.margin;break;case'top-left':x+=offset;y+=offset;break;case'top-right':x+=width-w-offset;y+=offset;break;case'bottom-left':x+=offset;y+=height-h-offset;break;case'bottom-right':x+=width-w-offset;y+=height-h-offset;break;default:x=item.x;y=item.y;}// update bounds
boundStroke(bounds.set(x,y,x+w,y+h),item);// update legend layout
if(set$3(item,'x',x)|set$3(item,'width',w)|set$3(item,'y',y)|set$3(item,'height',h)){item.bounds=tempBounds$2;view.dirty(item);item.bounds=bounds;view.dirty(item);}return item.mark.bounds.clear().union(bounds);}function layoutSize(view,group,viewBounds,_){var auto=_.autosize||{},type=auto.type,viewWidth=view._width,viewHeight=view._height,padding=view.padding();if(view._autosize<1||!type)return;var width=Math.max(0,group.width||0),left=Math.max(0,Math.ceil(-viewBounds.x1)),right=Math.max(0,Math.ceil(viewBounds.x2-width)),height=Math.max(0,group.height||0),top=Math.max(0,Math.ceil(-viewBounds.y1)),bottom=Math.max(0,Math.ceil(viewBounds.y2-height));if(auto.contains===Padding){viewWidth-=padding.left+padding.right;viewHeight-=padding.top+padding.bottom;}if(type===None$2){left=0;top=0;width=viewWidth;height=viewHeight;}else if(type===Fit){width=Math.max(0,viewWidth-left-right);height=Math.max(0,viewHeight-top-bottom);}else if(type===Pad){viewWidth=width+left+right;viewHeight=height+top+bottom;}view._resizeView(viewWidth,viewHeight,width,height,[left,top],auto.resize);}var vtx=Object.freeze({bound:Bound,identifier:Identifier,mark:Mark,overlap:Overlap,render:Render,viewlayout:ViewLayout});var Log='log';var Pow='pow';var Sqrt='sqrt';var Band='band';var Point='point';var Linear$1='linear';var Ordinal='ordinal';var Quantile='quantile';var Quantize='quantize';var Threshold='threshold';var BinLinear='bin-linear';var BinOrdinal='bin-ordinal';var Sequential='sequential';var invertRange=function invertRange(scale){return function(_){var lo=_[0],hi=_[1],t;if(hi<lo){t=lo;lo=hi;hi=t;}return[scale.invert(lo),scale.invert(hi)];};};var invertRangeExtent=function invertRangeExtent(scale){return function(_){var range=scale.range(),lo=_[0],hi=_[1],min=-1,max,t,i,n;if(hi<lo){t=lo;lo=hi;hi=t;}for(i=0,n=range.length;i<n;++i){if(range[i]>=lo&&range[i]<=hi){if(min<0)min=i;max=i;}}if(min<0)return undefined;lo=scale.invertExtent(range[min]);hi=scale.invertExtent(range[max]);return[lo[0]===undefined?lo[1]:lo[0],hi[1]===undefined?hi[0]:hi[1]];};};var bandSpace=function bandSpace(count,paddingInner,paddingOuter){var space=count-paddingInner+paddingOuter*2;return count?space>0?space:1:0;};var array$2=Array.prototype;var map$3=array$2.map;var slice$2=array$2.slice;var implicit={name:"implicit"};function ordinal(range){var index=map(),domain=[],unknown=implicit;range=range==null?[]:slice$2.call(range);function scale(d){var key=d+"",i=index.get(key);if(!i){if(unknown!==implicit)return unknown;index.set(key,i=domain.push(d));}return range[(i-1)%range.length];}scale.domain=function(_){if(!arguments.length)return domain.slice();domain=[],index=map();var i=-1,n=_.length,d,key;while(++i<n){if(!index.has(key=(d=_[i])+""))index.set(key,domain.push(d));}return scale;};scale.range=function(_){return arguments.length?(range=slice$2.call(_),scale):range.slice();};scale.unknown=function(_){return arguments.length?(unknown=_,scale):unknown;};scale.copy=function(){return ordinal().domain(domain).range(range).unknown(unknown);};return scale;}var define=function define(constructor,factory,prototype){constructor.prototype=factory.prototype=prototype;prototype.constructor=constructor;};function extend$1(parent,definition){var prototype=Object.create(parent.prototype);for(var key in definition){prototype[key]=definition[key];}return prototype;}function Color(){}var _darker=0.7;var _brighter=1/_darker;var reI="\\s*([+-]?\\d+)\\s*";var reN="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";var reP="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";var reHex3=/^#([0-9a-f]{3})$/;var reHex6=/^#([0-9a-f]{6})$/;var reRgbInteger=new RegExp("^rgb\\("+[reI,reI,reI]+"\\)$");var reRgbPercent=new RegExp("^rgb\\("+[reP,reP,reP]+"\\)$");var reRgbaInteger=new RegExp("^rgba\\("+[reI,reI,reI,reN]+"\\)$");var reRgbaPercent=new RegExp("^rgba\\("+[reP,reP,reP,reN]+"\\)$");var reHslPercent=new RegExp("^hsl\\("+[reN,reP,reP]+"\\)$");var reHslaPercent=new RegExp("^hsla\\("+[reN,reP,reP,reN]+"\\)$");var named={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:0x00ffff,aquamarine:0x7fffd4,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0x000000,blanchedalmond:0xffebcd,blue:0x0000ff,blueviolet:0x8a2be2,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:0x5f9ea0,chartreuse:0x7fff00,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:0x6495ed,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:0x00ffff,darkblue:0x00008b,darkcyan:0x008b8b,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:0x006400,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:0x8b008b,darkolivegreen:0x556b2f,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:0x8b0000,darksalmon:0xe9967a,darkseagreen:0x8fbc8f,darkslateblue:0x483d8b,darkslategray:0x2f4f4f,darkslategrey:0x2f4f4f,darkturquoise:0x00ced1,darkviolet:0x9400d3,deeppink:0xff1493,deepskyblue:0x00bfff,dimgray:0x696969,dimgrey:0x696969,dodgerblue:0x1e90ff,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:0x228b22,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:0x808080,green:0x008000,greenyellow:0xadff2f,grey:0x808080,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:0x4b0082,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:0x7cfc00,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:0x90ee90,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:0x20b2aa,lightskyblue:0x87cefa,lightslategray:0x778899,lightslategrey:0x778899,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:0x00ff00,limegreen:0x32cd32,linen:0xfaf0e6,magenta:0xff00ff,maroon:0x800000,mediumaquamarine:0x66cdaa,mediumblue:0x0000cd,mediumorchid:0xba55d3,mediumpurple:0x9370db,mediumseagreen:0x3cb371,mediumslateblue:0x7b68ee,mediumspringgreen:0x00fa9a,mediumturquoise:0x48d1cc,mediumvioletred:0xc71585,midnightblue:0x191970,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:0x000080,oldlace:0xfdf5e6,olive:0x808000,olivedrab:0x6b8e23,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:0x800080,rebeccapurple:0x663399,red:0xff0000,rosybrown:0xbc8f8f,royalblue:0x4169e1,saddlebrown:0x8b4513,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:0x2e8b57,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:0x87ceeb,slateblue:0x6a5acd,slategray:0x708090,slategrey:0x708090,snow:0xfffafa,springgreen:0x00ff7f,steelblue:0x4682b4,tan:0xd2b48c,teal:0x008080,thistle:0xd8bfd8,tomato:0xff6347,turquoise:0x40e0d0,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32};define(Color,color$1,{displayable:function displayable(){return this.rgb().displayable();},toString:function toString(){return this.rgb()+"";}});function color$1(format){var m;format=(format+"").trim().toLowerCase();return(m=reHex3.exec(format))?(m=parseInt(m[1],16),new Rgb(m>>8&0xf|m>>4&0x0f0,m>>4&0xf|m&0xf0,(m&0xf)<<4|m&0xf,1)// #f00
):(m=reHex6.exec(format))?rgbn(parseInt(m[1],16))// #ff0000
:(m=reRgbInteger.exec(format))?new Rgb(m[1],m[2],m[3],1)// rgb(255, 0, 0)
:(m=reRgbPercent.exec(format))?new Rgb(m[1]*255/100,m[2]*255/100,m[3]*255/100,1)// rgb(100%, 0%, 0%)
:(m=reRgbaInteger.exec(format))?rgba(m[1],m[2],m[3],m[4])// rgba(255, 0, 0, 1)
:(m=reRgbaPercent.exec(format))?rgba(m[1]*255/100,m[2]*255/100,m[3]*255/100,m[4])// rgb(100%, 0%, 0%, 1)
:(m=reHslPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,1)// hsl(120, 50%, 50%)
:(m=reHslaPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,m[4])// hsla(120, 50%, 50%, 1)
:named.hasOwnProperty(format)?rgbn(named[format]):format==="transparent"?new Rgb(NaN,NaN,NaN,0):null;}function rgbn(n){return new Rgb(n>>16&0xff,n>>8&0xff,n&0xff,1);}function rgba(r,g,b,a){if(a<=0)r=g=b=NaN;return new Rgb(r,g,b,a);}function rgbConvert(o){if(!(o instanceof Color))o=color$1(o);if(!o)return new Rgb();o=o.rgb();return new Rgb(o.r,o.g,o.b,o.opacity);}function rgb(r,g,b,opacity){return arguments.length===1?rgbConvert(r):new Rgb(r,g,b,opacity==null?1:opacity);}function Rgb(r,g,b,opacity){this.r=+r;this.g=+g;this.b=+b;this.opacity=+opacity;}define(Rgb,rgb,extend$1(Color,{brighter:function brighter(k){k=k==null?_brighter:Math.pow(_brighter,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},darker:function darker(k){k=k==null?_darker:Math.pow(_darker,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},rgb:function rgb(){return this;},displayable:function displayable(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1;},toString:function toString(){var a=this.opacity;a=isNaN(a)?1:Math.max(0,Math.min(1,a));return(a===1?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(a===1?")":", "+a+")");}}));function hsla(h,s,l,a){if(a<=0)h=s=l=NaN;else if(l<=0||l>=1)h=s=NaN;else if(s<=0)h=NaN;return new Hsl(h,s,l,a);}function hslConvert(o){if(o instanceof Hsl)return new Hsl(o.h,o.s,o.l,o.opacity);if(!(o instanceof Color))o=color$1(o);if(!o)return new Hsl();if(o instanceof Hsl)return o;o=o.rgb();var r=o.r/255,g=o.g/255,b=o.b/255,min=Math.min(r,g,b),max=Math.max(r,g,b),h=NaN,s=max-min,l=(max+min)/2;if(s){if(r===max)h=(g-b)/s+(g<b)*6;else if(g===max)h=(b-r)/s+2;else h=(r-g)/s+4;s/=l<0.5?max+min:2-max-min;h*=60;}else{s=l>0&&l<1?0:h;}return new Hsl(h,s,l,o.opacity);}function hsl(h,s,l,opacity){return arguments.length===1?hslConvert(h):new Hsl(h,s,l,opacity==null?1:opacity);}function Hsl(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}define(Hsl,hsl,extend$1(Color,{brighter:function brighter(k){k=k==null?_brighter:Math.pow(_brighter,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},darker:function darker(k){k=k==null?_darker:Math.pow(_darker,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},rgb:function rgb(){var h=this.h%360+(this.h<0)*360,s=isNaN(h)||isNaN(this.s)?0:this.s,l=this.l,m2=l+(l<0.5?l:1-l)*s,m1=2*l-m2;return new Rgb(hsl2rgb(h>=240?h-240:h+120,m1,m2),hsl2rgb(h,m1,m2),hsl2rgb(h<120?h+240:h-120,m1,m2),this.opacity);},displayable:function displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1;}}));/* From FvD 13.37, CSS Color Module Level 3 */function hsl2rgb(h,m1,m2){return(h<60?m1+(m2-m1)*h/60:h<180?m2:h<240?m1+(m2-m1)*(240-h)/60:m1)*255;}var deg2rad=Math.PI/180;var rad2deg=180/Math.PI;var Kn=18;var Xn=0.950470;var Yn=1;var Zn=1.088830;var t0$1=4/29;var t1$1=6/29;var t2=3*t1$1*t1$1;var t3=t1$1*t1$1*t1$1;function labConvert(o){if(o instanceof Lab)return new Lab(o.l,o.a,o.b,o.opacity);if(o instanceof Hcl){var h=o.h*deg2rad;return new Lab(o.l,Math.cos(h)*o.c,Math.sin(h)*o.c,o.opacity);}if(!(o instanceof Rgb))o=rgbConvert(o);var b=rgb2xyz(o.r),a=rgb2xyz(o.g),l=rgb2xyz(o.b),x=xyz2lab((0.4124564*b+0.3575761*a+0.1804375*l)/Xn),y=xyz2lab((0.2126729*b+0.7151522*a+0.0721750*l)/Yn),z=xyz2lab((0.0193339*b+0.1191920*a+0.9503041*l)/Zn);return new Lab(116*y-16,500*(x-y),200*(y-z),o.opacity);}function lab(l,a,b,opacity){return arguments.length===1?labConvert(l):new Lab(l,a,b,opacity==null?1:opacity);}function Lab(l,a,b,opacity){this.l=+l;this.a=+a;this.b=+b;this.opacity=+opacity;}define(Lab,lab,extend$1(Color,{brighter:function brighter(k){return new Lab(this.l+Kn*(k==null?1:k),this.a,this.b,this.opacity);},darker:function darker(k){return new Lab(this.l-Kn*(k==null?1:k),this.a,this.b,this.opacity);},rgb:function rgb(){var y=(this.l+16)/116,x=isNaN(this.a)?y:y+this.a/500,z=isNaN(this.b)?y:y-this.b/200;y=Yn*lab2xyz(y);x=Xn*lab2xyz(x);z=Zn*lab2xyz(z);return new Rgb(xyz2rgb(3.2404542*x-1.5371385*y-0.4985314*z),// D65 -> sRGB
xyz2rgb(-0.9692660*x+1.8760108*y+0.0415560*z),xyz2rgb(0.0556434*x-0.2040259*y+1.0572252*z),this.opacity);}}));function xyz2lab(t){return t>t3?Math.pow(t,1/3):t/t2+t0$1;}function lab2xyz(t){return t>t1$1?t*t*t:t2*(t-t0$1);}function xyz2rgb(x){return 255*(x<=0.0031308?12.92*x:1.055*Math.pow(x,1/2.4)-0.055);}function rgb2xyz(x){return(x/=255)<=0.04045?x/12.92:Math.pow((x+0.055)/1.055,2.4);}function hclConvert(o){if(o instanceof Hcl)return new Hcl(o.h,o.c,o.l,o.opacity);if(!(o instanceof Lab))o=labConvert(o);var h=Math.atan2(o.b,o.a)*rad2deg;return new Hcl(h<0?h+360:h,Math.sqrt(o.a*o.a+o.b*o.b),o.l,o.opacity);}function hcl(h,c,l,opacity){return arguments.length===1?hclConvert(h):new Hcl(h,c,l,opacity==null?1:opacity);}function Hcl(h,c,l,opacity){this.h=+h;this.c=+c;this.l=+l;this.opacity=+opacity;}define(Hcl,hcl,extend$1(Color,{brighter:function brighter(k){return new Hcl(this.h,this.c,this.l+Kn*(k==null?1:k),this.opacity);},darker:function darker(k){return new Hcl(this.h,this.c,this.l-Kn*(k==null?1:k),this.opacity);},rgb:function rgb(){return labConvert(this).rgb();}}));var A=-0.14861;var B=+1.78277;var C=-0.29227;var D=-0.90649;var E=+1.97294;var ED=E*D;var EB=E*B;var BC_DA=B*C-D*A;function cubehelixConvert(o){if(o instanceof Cubehelix)return new Cubehelix(o.h,o.s,o.l,o.opacity);if(!(o instanceof Rgb))o=rgbConvert(o);var r=o.r/255,g=o.g/255,b=o.b/255,l=(BC_DA*b+ED*r-EB*g)/(BC_DA+ED-EB),bl=b-l,k=(E*(g-l)-C*bl)/D,s=Math.sqrt(k*k+bl*bl)/(E*l*(1-l)),// NaN if l=0 or l=1
h=s?Math.atan2(k,bl)*rad2deg-120:NaN;return new Cubehelix(h<0?h+360:h,s,l,o.opacity);}function cubehelix(h,s,l,opacity){return arguments.length===1?cubehelixConvert(h):new Cubehelix(h,s,l,opacity==null?1:opacity);}function Cubehelix(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}define(Cubehelix,cubehelix,extend$1(Color,{brighter:function brighter(k){k=k==null?_brighter:Math.pow(_brighter,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},darker:function darker(k){k=k==null?_darker:Math.pow(_darker,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},rgb:function rgb(){var h=isNaN(this.h)?0:(this.h+120)*deg2rad,l=+this.l,a=isNaN(this.s)?0:this.s*l*(1-l),cosh=Math.cos(h),sinh=Math.sin(h);return new Rgb(255*(l+a*(A*cosh+B*sinh)),255*(l+a*(C*cosh+D*sinh)),255*(l+a*(E*cosh)),this.opacity);}}));function basis(t1,v0,v1,v2,v3){var t2=t1*t1,t3=t2*t1;return((1-3*t1+3*t2-t3)*v0+(4-6*t2+3*t3)*v1+(1+3*t1+3*t2-3*t3)*v2+t3*v3)/6;}var basis$1=function basis$1(values){var n=values.length-1;return function(t){var i=t<=0?t=0:t>=1?(t=1,n-1):Math.floor(t*n),v1=values[i],v2=values[i+1],v0=i>0?values[i-1]:2*v1-v2,v3=i<n-1?values[i+2]:2*v2-v1;return basis((t-i/n)*n,v0,v1,v2,v3);};};var basisClosed=function basisClosed(values){var n=values.length;return function(t){var i=Math.floor(((t%=1)<0?++t:t)*n),v0=values[(i+n-1)%n],v1=values[i%n],v2=values[(i+1)%n],v3=values[(i+2)%n];return basis((t-i/n)*n,v0,v1,v2,v3);};};var constant$4=function constant$4(x){return function(){return x;};};function linear$1(a,d){return function(t){return a+t*d;};}function exponential(a,b,y){return a=Math.pow(a,y),b=Math.pow(b,y)-a,y=1/y,function(t){return Math.pow(a+t*b,y);};}function hue(a,b){var d=b-a;return d?linear$1(a,d>180||d<-180?d-360*Math.round(d/360):d):constant$4(isNaN(a)?b:a);}function gamma(y){return(y=+y)===1?nogamma:function(a,b){return b-a?exponential(a,b,y):constant$4(isNaN(a)?b:a);};}function nogamma(a,b){var d=b-a;return d?linear$1(a,d):constant$4(isNaN(a)?b:a);}var rgb$1=function rgbGamma(y){var color$$1=gamma(y);function rgb$$1(start,end){var r=color$$1((start=rgb(start)).r,(end=rgb(end)).r),g=color$$1(start.g,end.g),b=color$$1(start.b,end.b),opacity=nogamma(start.opacity,end.opacity);return function(t){start.r=r(t);start.g=g(t);start.b=b(t);start.opacity=opacity(t);return start+"";};}rgb$$1.gamma=rgbGamma;return rgb$$1;}(1);function rgbSpline(spline){return function(colors){var n=colors.length,r=new Array(n),g=new Array(n),b=new Array(n),i,color$$1;for(i=0;i<n;++i){color$$1=rgb(colors[i]);r[i]=color$$1.r||0;g[i]=color$$1.g||0;b[i]=color$$1.b||0;}r=spline(r);g=spline(g);b=spline(b);color$$1.opacity=1;return function(t){color$$1.r=r(t);color$$1.g=g(t);color$$1.b=b(t);return color$$1+"";};};}var rgbBasis=rgbSpline(basis$1);var rgbBasisClosed=rgbSpline(basisClosed);var array$3=function array$3(a,b){var nb=b?b.length:0,na=a?Math.min(nb,a.length):0,x=new Array(nb),c=new Array(nb),i;for(i=0;i<na;++i){x[i]=interpolate(a[i],b[i]);}for(;i<nb;++i){c[i]=b[i];}return function(t){for(i=0;i<na;++i){c[i]=x[i](t);}return c;};};var date=function date(a,b){var d=new Date();return a=+a,b-=a,function(t){return d.setTime(a+b*t),d;};};var reinterpolate=function reinterpolate(a,b){return a=+a,b-=a,function(t){return a+b*t;};};var object$2=function object$2(a,b){var i={},c={},k;if(a===null||(typeof a==='undefined'?'undefined':_typeof(a))!=="object")a={};if(b===null||(typeof b==='undefined'?'undefined':_typeof(b))!=="object")b={};for(k in b){if(k in a){i[k]=interpolate(a[k],b[k]);}else{c[k]=b[k];}}return function(t){for(k in i){c[k]=i[k](t);}return c;};};var reA=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;var reB=new RegExp(reA.source,"g");function zero$1(b){return function(){return b;};}function one$1(b){return function(t){return b(t)+"";};}var string=function string(a,b){var bi=reA.lastIndex=reB.lastIndex=0,// scan index for next number in b
am,// current match in a
bm,// current match in b
bs,// string preceding current number in b, if any
i=-1,// index in s
s=[],// string constants and placeholders
q=[];// number interpolators
// Coerce inputs to strings.
a=a+"",b=b+"";// Interpolate pairs of numbers in a & b.
while((am=reA.exec(a))&&(bm=reB.exec(b))){if((bs=bm.index)>bi){// a string precedes the next number in b
bs=b.slice(bi,bs);if(s[i])s[i]+=bs;// coalesce with previous string
else s[++i]=bs;}if((am=am[0])===(bm=bm[0])){// numbers in a & b match
if(s[i])s[i]+=bm;// coalesce with previous string
else s[++i]=bm;}else{// interpolate non-matching numbers
s[++i]=null;q.push({i:i,x:reinterpolate(am,bm)});}bi=reB.lastIndex;}// Add remains of b.
if(bi<b.length){bs=b.slice(bi);if(s[i])s[i]+=bs;// coalesce with previous string
else s[++i]=bs;}// Special optimization for only a single match.
// Otherwise, interpolate each of the numbers and rejoin the string.
return s.length<2?q[0]?one$1(q[0].x):zero$1(b):(b=q.length,function(t){for(var i=0,o;i<b;++i){s[(o=q[i]).i]=o.x(t);}return s.join("");});};var interpolate=function interpolate(a,b){var t=typeof b==='undefined'?'undefined':_typeof(b),c;return b==null||t==="boolean"?constant$4(b):(t==="number"?reinterpolate:t==="string"?(c=color$1(b))?(b=c,rgb$1):string:b instanceof color$1?rgb$1:b instanceof Date?date:Array.isArray(b)?array$3:typeof b.valueOf!=="function"&&typeof b.toString!=="function"||isNaN(b)?object$2:reinterpolate)(a,b);};var interpolateRound=function interpolateRound(a,b){return a=+a,b-=a,function(t){return Math.round(a+b*t);};};var degrees=180/Math.PI;var identity$4={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};var decompose=function decompose(a,b,c,d,e,f){var scaleX,scaleY,skewX;if(scaleX=Math.sqrt(a*a+b*b))a/=scaleX,b/=scaleX;if(skewX=a*c+b*d)c-=a*skewX,d-=b*skewX;if(scaleY=Math.sqrt(c*c+d*d))c/=scaleY,d/=scaleY,skewX/=scaleY;if(a*d<b*c)a=-a,b=-b,skewX=-skewX,scaleX=-scaleX;return{translateX:e,translateY:f,rotate:Math.atan2(b,a)*degrees,skewX:Math.atan(skewX)*degrees,scaleX:scaleX,scaleY:scaleY};};var cssNode;var cssRoot;var cssView;var svgNode;function parseCss(value){if(value==="none")return identity$4;if(!cssNode)cssNode=document.createElement("DIV"),cssRoot=document.documentElement,cssView=document.defaultView;cssNode.style.transform=value;value=cssView.getComputedStyle(cssRoot.appendChild(cssNode),null).getPropertyValue("transform");cssRoot.removeChild(cssNode);value=value.slice(7,-1).split(",");return decompose(+value[0],+value[1],+value[2],+value[3],+value[4],+value[5]);}function parseSvg(value){if(value==null)return identity$4;if(!svgNode)svgNode=document.createElementNS("http://www.w3.org/2000/svg","g");svgNode.setAttribute("transform",value);if(!(value=svgNode.transform.baseVal.consolidate()))return identity$4;value=value.matrix;return decompose(value.a,value.b,value.c,value.d,value.e,value.f);}function interpolateTransform(parse,pxComma,pxParen,degParen){function pop(s){return s.length?s.pop()+" ":"";}function translate(xa,ya,xb,yb,s,q){if(xa!==xb||ya!==yb){var i=s.push("translate(",null,pxComma,null,pxParen);q.push({i:i-4,x:reinterpolate(xa,xb)},{i:i-2,x:reinterpolate(ya,yb)});}else if(xb||yb){s.push("translate("+xb+pxComma+yb+pxParen);}}function rotate(a,b,s,q){if(a!==b){if(a-b>180)b+=360;else if(b-a>180)a+=360;// shortest path
q.push({i:s.push(pop(s)+"rotate(",null,degParen)-2,x:reinterpolate(a,b)});}else if(b){s.push(pop(s)+"rotate("+b+degParen);}}function skewX(a,b,s,q){if(a!==b){q.push({i:s.push(pop(s)+"skewX(",null,degParen)-2,x:reinterpolate(a,b)});}else if(b){s.push(pop(s)+"skewX("+b+degParen);}}function scale(xa,ya,xb,yb,s,q){if(xa!==xb||ya!==yb){var i=s.push(pop(s)+"scale(",null,",",null,")");q.push({i:i-4,x:reinterpolate(xa,xb)},{i:i-2,x:reinterpolate(ya,yb)});}else if(xb!==1||yb!==1){s.push(pop(s)+"scale("+xb+","+yb+")");}}return function(a,b){var s=[],// string constants and placeholders
q=[];// number interpolators
a=parse(a),b=parse(b);translate(a.translateX,a.translateY,b.translateX,b.translateY,s,q);rotate(a.rotate,b.rotate,s,q);skewX(a.skewX,b.skewX,s,q);scale(a.scaleX,a.scaleY,b.scaleX,b.scaleY,s,q);a=b=null;// gc
return function(t){var i=-1,n=q.length,o;while(++i<n){s[(o=q[i]).i]=o.x(t);}return s.join("");};};}var interpolateTransformCss=interpolateTransform(parseCss,"px, ","px)","deg)");var interpolateTransformSvg=interpolateTransform(parseSvg,", ",")",")");var rho=Math.SQRT2;var rho2=2;var rho4=4;var epsilon2=1e-12;function cosh(x){return((x=Math.exp(x))+1/x)/2;}function sinh(x){return((x=Math.exp(x))-1/x)/2;}function tanh(x){return((x=Math.exp(2*x))-1)/(x+1);}// p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]
var zoom=function zoom(p0,p1){var ux0=p0[0],uy0=p0[1],w0=p0[2],ux1=p1[0],uy1=p1[1],w1=p1[2],dx=ux1-ux0,dy=uy1-uy0,d2=dx*dx+dy*dy,i,S;// Special case for u0 ≅ u1.
if(d2<epsilon2){S=Math.log(w1/w0)/rho;i=function i(t){return[ux0+t*dx,uy0+t*dy,w0*Math.exp(rho*t*S)];};}// General case.
else{var d1=Math.sqrt(d2),b0=(w1*w1-w0*w0+rho4*d2)/(2*w0*rho2*d1),b1=(w1*w1-w0*w0-rho4*d2)/(2*w1*rho2*d1),r0=Math.log(Math.sqrt(b0*b0+1)-b0),r1=Math.log(Math.sqrt(b1*b1+1)-b1);S=(r1-r0)/rho;i=function i(t){var s=t*S,coshr0=cosh(r0),u=w0/(rho2*d1)*(coshr0*tanh(rho*s+r0)-sinh(r0));return[ux0+u*dx,uy0+u*dy,w0*coshr0/cosh(rho*s+r0)];};}i.duration=S*1000;return i;};function hsl$1(hue$$1){return function(start,end){var h=hue$$1((start=hsl(start)).h,(end=hsl(end)).h),s=nogamma(start.s,end.s),l=nogamma(start.l,end.l),opacity=nogamma(start.opacity,end.opacity);return function(t){start.h=h(t);start.s=s(t);start.l=l(t);start.opacity=opacity(t);return start+"";};};}var hsl$2=hsl$1(hue);var hslLong=hsl$1(nogamma);function lab$1(start,end){var l=nogamma((start=lab(start)).l,(end=lab(end)).l),a=nogamma(start.a,end.a),b=nogamma(start.b,end.b),opacity=nogamma(start.opacity,end.opacity);return function(t){start.l=l(t);start.a=a(t);start.b=b(t);start.opacity=opacity(t);return start+"";};}function hcl$1(hue$$1){return function(start,end){var h=hue$$1((start=hcl(start)).h,(end=hcl(end)).h),c=nogamma(start.c,end.c),l=nogamma(start.l,end.l),opacity=nogamma(start.opacity,end.opacity);return function(t){start.h=h(t);start.c=c(t);start.l=l(t);start.opacity=opacity(t);return start+"";};};}var hcl$2=hcl$1(hue);var hclLong=hcl$1(nogamma);function cubehelix$1(hue$$1){return function cubehelixGamma(y){y=+y;function cubehelix$$1(start,end){var h=hue$$1((start=cubehelix(start)).h,(end=cubehelix(end)).h),s=nogamma(start.s,end.s),l=nogamma(start.l,end.l),opacity=nogamma(start.opacity,end.opacity);return function(t){start.h=h(t);start.s=s(t);start.l=l(Math.pow(t,y));start.opacity=opacity(t);return start+"";};}cubehelix$$1.gamma=cubehelixGamma;return cubehelix$$1;}(1);}var cubehelix$2=cubehelix$1(hue);var cubehelixLong=cubehelix$1(nogamma);var quantize=function quantize(interpolator,n){var samples=new Array(n);for(var i=0;i<n;++i){samples[i]=interpolator(i/(n-1));}return samples;};var $$1=Object.freeze({interpolate:interpolate,interpolateArray:array$3,interpolateBasis:basis$1,interpolateBasisClosed:basisClosed,interpolateDate:date,interpolateNumber:reinterpolate,interpolateObject:object$2,interpolateRound:interpolateRound,interpolateString:string,interpolateTransformCss:interpolateTransformCss,interpolateTransformSvg:interpolateTransformSvg,interpolateZoom:zoom,interpolateRgb:rgb$1,interpolateRgbBasis:rgbBasis,interpolateRgbBasisClosed:rgbBasisClosed,interpolateHsl:hsl$2,interpolateHslLong:hslLong,interpolateLab:lab$1,interpolateHcl:hcl$2,interpolateHclLong:hclLong,interpolateCubehelix:cubehelix$2,interpolateCubehelixLong:cubehelixLong,quantize:quantize});var constant$5=function constant$5(x){return function(){return x;};};var number$2=function number$2(x){return+x;};var unit=[0,1];function deinterpolateLinear(a,b){return(b-=a=+a)?function(x){return(x-a)/b;}:constant$5(b);}function deinterpolateClamp(deinterpolate){return function(a,b){var d=deinterpolate(a=+a,b=+b);return function(x){return x<=a?0:x>=b?1:d(x);};};}function reinterpolateClamp(reinterpolate$$1){return function(a,b){var r=reinterpolate$$1(a=+a,b=+b);return function(t){return t<=0?a:t>=1?b:r(t);};};}function bimap(domain,range,deinterpolate,reinterpolate$$1){var d0=domain[0],d1=domain[1],r0=range[0],r1=range[1];if(d1<d0)d0=deinterpolate(d1,d0),r0=reinterpolate$$1(r1,r0);else d0=deinterpolate(d0,d1),r0=reinterpolate$$1(r0,r1);return function(x){return r0(d0(x));};}function polymap(domain,range,deinterpolate,reinterpolate$$1){var j=Math.min(domain.length,range.length)-1,d=new Array(j),r=new Array(j),i=-1;// Reverse descending domains.
if(domain[j]<domain[0]){domain=domain.slice().reverse();range=range.slice().reverse();}while(++i<j){d[i]=deinterpolate(domain[i],domain[i+1]);r[i]=reinterpolate$$1(range[i],range[i+1]);}return function(x){var i=bisectRight(domain,x,1,j)-1;return r[i](d[i](x));};}function copy(source,target){return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());}// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
function continuous(deinterpolate,reinterpolate$$1){var domain=unit,range=unit,interpolate$$1=interpolate,clamp=false,piecewise,output,input;function rescale(){piecewise=Math.min(domain.length,range.length)>2?polymap:bimap;output=input=null;return scale;}function scale(x){return(output||(output=piecewise(domain,range,clamp?deinterpolateClamp(deinterpolate):deinterpolate,interpolate$$1)))(+x);}scale.invert=function(y){return(input||(input=piecewise(range,domain,deinterpolateLinear,clamp?reinterpolateClamp(reinterpolate$$1):reinterpolate$$1)))(+y);};scale.domain=function(_){return arguments.length?(domain=map$3.call(_,number$2),rescale()):domain.slice();};scale.range=function(_){return arguments.length?(range=slice$2.call(_),rescale()):range.slice();};scale.rangeRound=function(_){return range=slice$2.call(_),interpolate$$1=interpolateRound,rescale();};scale.clamp=function(_){return arguments.length?(clamp=!!_,rescale()):clamp;};scale.interpolate=function(_){return arguments.length?(interpolate$$1=_,rescale()):interpolate$$1;};return rescale();}// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
var formatDecimal=function formatDecimal(x,p){if((i=(x=p?x.toExponential(p-1):x.toExponential()).indexOf("e"))<0)return null;// NaN, ±Infinity
var i,coefficient=x.slice(0,i);// The string returned by toExponential either has the form \d\.\d+e[-+]\d+
// (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
return[coefficient.length>1?coefficient[0]+coefficient.slice(2):coefficient,+x.slice(i+1)];};var exponent=function exponent(x){return x=formatDecimal(Math.abs(x)),x?x[1]:NaN;};var formatGroup=function formatGroup(grouping,thousands){return function(value,width){var i=value.length,t=[],j=0,g=grouping[0],length=0;while(i>0&&g>0){if(length+g+1>width)g=Math.max(1,width-length);t.push(value.substring(i-=g,i+g));if((length+=g+1)>width)break;g=grouping[j=(j+1)%grouping.length];}return t.reverse().join(thousands);};};var formatNumerals=function formatNumerals(numerals){return function(value){return value.replace(/[0-9]/g,function(i){return numerals[+i];});};};var formatDefault=function formatDefault(x,p){x=x.toPrecision(p);out:for(var n=x.length,i=1,i0=-1,i1;i<n;++i){switch(x[i]){case".":i0=i1=i;break;case"0":if(i0===0)i0=i;i1=i;break;case"e":break out;default:if(i0>0)i0=0;break;}}return i0>0?x.slice(0,i0)+x.slice(i1+1):x;};var prefixExponent;var formatPrefixAuto=function formatPrefixAuto(x,p){var d=formatDecimal(x,p);if(!d)return x+"";var coefficient=d[0],exponent=d[1],i=exponent-(prefixExponent=Math.max(-8,Math.min(8,Math.floor(exponent/3)))*3)+1,n=coefficient.length;return i===n?coefficient:i>n?coefficient+new Array(i-n+1).join("0"):i>0?coefficient.slice(0,i)+"."+coefficient.slice(i):"0."+new Array(1-i).join("0")+formatDecimal(x,Math.max(0,p+i-1))[0];// less than 1y!
};var formatRounded=function formatRounded(x,p){var d=formatDecimal(x,p);if(!d)return x+"";var coefficient=d[0],exponent=d[1];return exponent<0?"0."+new Array(-exponent).join("0")+coefficient:coefficient.length>exponent+1?coefficient.slice(0,exponent+1)+"."+coefficient.slice(exponent+1):coefficient+new Array(exponent-coefficient.length+2).join("0");};var formatTypes={"":formatDefault,"%":function _(x,p){return(x*100).toFixed(p);},"b":function b(x){return Math.round(x).toString(2);},"c":function c(x){return x+"";},"d":function d(x){return Math.round(x).toString(10);},"e":function e(x,p){return x.toExponential(p);},"f":function f(x,p){return x.toFixed(p);},"g":function g(x,p){return x.toPrecision(p);},"o":function o(x){return Math.round(x).toString(8);},"p":function p(x,_p){return formatRounded(x*100,_p);},"r":formatRounded,"s":formatPrefixAuto,"X":function X(x){return Math.round(x).toString(16).toUpperCase();},"x":function x(_x){return Math.round(_x).toString(16);}};// [[fill]align][sign][symbol][0][width][,][.precision][type]
var re=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function formatSpecifier(specifier){return new FormatSpecifier(specifier);}formatSpecifier.prototype=FormatSpecifier.prototype;// instanceof
function FormatSpecifier(specifier){if(!(match=re.exec(specifier)))throw new Error("invalid format: "+specifier);var match,fill=match[1]||" ",align=match[2]||">",sign=match[3]||"-",symbol=match[4]||"",zero=!!match[5],width=match[6]&&+match[6],comma=!!match[7],precision=match[8]&&+match[8].slice(1),type=match[9]||"";// The "n" type is an alias for ",g".
if(type==="n")comma=true,type="g";// Map invalid types to the default format.
else if(!formatTypes[type])type="";// If zero fill is specified, padding goes after sign and before digits.
if(zero||fill==="0"&&align==="=")zero=true,fill="0",align="=";this.fill=fill;this.align=align;this.sign=sign;this.symbol=symbol;this.zero=zero;this.width=width;this.comma=comma;this.precision=precision;this.type=type;}FormatSpecifier.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width==null?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision==null?"":"."+Math.max(0,this.precision|0))+this.type;};var identity$5=function identity$5(x){return x;};var prefixes=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];var formatLocale$1=function formatLocale$1(locale){var group=locale.grouping&&locale.thousands?formatGroup(locale.grouping,locale.thousands):identity$5,currency=locale.currency,decimal=locale.decimal,numerals=locale.numerals?formatNumerals(locale.numerals):identity$5,percent=locale.percent||"%";function newFormat(specifier){specifier=formatSpecifier(specifier);var fill=specifier.fill,align=specifier.align,sign=specifier.sign,symbol=specifier.symbol,zero=specifier.zero,width=specifier.width,comma=specifier.comma,precision=specifier.precision,type=specifier.type;// Compute the prefix and suffix.
// For SI-prefix, the suffix is lazily computed.
var prefix=symbol==="$"?currency[0]:symbol==="#"&&/[boxX]/.test(type)?"0"+type.toLowerCase():"",suffix=symbol==="$"?currency[1]:/[%p]/.test(type)?percent:"";// What format function should we use?
// Is this an integer type?
// Can this type generate exponential notation?
var formatType=formatTypes[type],maybeSuffix=!type||/[defgprs%]/.test(type);// Set the default precision if not specified,
// or clamp the specified precision to the supported range.
// For significant precision, it must be in [1, 21].
// For fixed precision, it must be in [0, 20].
precision=precision==null?type?6:12:/[gprs]/.test(type)?Math.max(1,Math.min(21,precision)):Math.max(0,Math.min(20,precision));function format(value){var valuePrefix=prefix,valueSuffix=suffix,i,n,c;if(type==="c"){valueSuffix=formatType(value)+valueSuffix;value="";}else{value=+value;// Perform the initial formatting.
var valueNegative=value<0;value=formatType(Math.abs(value),precision);// If a negative value rounds to zero during formatting, treat as positive.
if(valueNegative&&+value===0)valueNegative=false;// Compute the prefix and suffix.
valuePrefix=(valueNegative?sign==="("?sign:"-":sign==="-"||sign==="("?"":sign)+valuePrefix;valueSuffix=valueSuffix+(type==="s"?prefixes[8+prefixExponent/3]:"")+(valueNegative&&sign==="("?")":"");// Break the formatted value into the integer “value” part that can be
// grouped, and fractional or exponential “suffix” part that is not.
if(maybeSuffix){i=-1,n=value.length;while(++i<n){if(c=value.charCodeAt(i),48>c||c>57){valueSuffix=(c===46?decimal+value.slice(i+1):value.slice(i))+valueSuffix;value=value.slice(0,i);break;}}}}// If the fill character is not "0", grouping is applied before padding.
if(comma&&!zero)value=group(value,Infinity);// Compute the padding.
var length=valuePrefix.length+value.length+valueSuffix.length,padding=length<width?new Array(width-length+1).join(fill):"";// If the fill character is "0", grouping is applied after padding.
if(comma&&zero)value=group(padding+value,padding.length?width-valueSuffix.length:Infinity),padding="";// Reconstruct the final output based on the desired alignment.
switch(align){case"<":value=valuePrefix+value+valueSuffix+padding;break;case"=":value=valuePrefix+padding+value+valueSuffix;break;case"^":value=padding.slice(0,length=padding.length>>1)+valuePrefix+value+valueSuffix+padding.slice(length);break;default:value=padding+valuePrefix+value+valueSuffix;break;}return numerals(value);}format.toString=function(){return specifier+"";};return format;}function formatPrefix(specifier,value){var f=newFormat((specifier=formatSpecifier(specifier),specifier.type="f",specifier)),e=Math.max(-8,Math.min(8,Math.floor(exponent(value)/3)))*3,k=Math.pow(10,-e),prefix=prefixes[8+e/3];return function(value){return f(k*value)+prefix;};}return{format:newFormat,formatPrefix:formatPrefix};};var locale$2;var format;var formatPrefix;defaultLocale$1({decimal:".",thousands:",",grouping:[3],currency:["$",""]});function defaultLocale$1(definition){locale$2=formatLocale$1(definition);format=locale$2.format;formatPrefix=locale$2.formatPrefix;return locale$2;}var precisionFixed=function precisionFixed(step){return Math.max(0,-exponent(Math.abs(step)));};var precisionPrefix=function precisionPrefix(step,value){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(exponent(value)/3)))*3-exponent(Math.abs(step)));};var precisionRound=function precisionRound(step,max){step=Math.abs(step),max=Math.abs(max)-step;return Math.max(0,exponent(max)-exponent(step))+1;};var tickFormat$1=function tickFormat$1(domain,count,specifier){var start=domain[0],stop=domain[domain.length-1],step=tickStep(start,stop,count==null?10:count),precision;specifier=formatSpecifier(specifier==null?",f":specifier);switch(specifier.type){case"s":{var value=Math.max(Math.abs(start),Math.abs(stop));if(specifier.precision==null&&!isNaN(precision=precisionPrefix(step,value)))specifier.precision=precision;return formatPrefix(specifier,value);}case"":case"e":case"g":case"p":case"r":{if(specifier.precision==null&&!isNaN(precision=precisionRound(step,Math.max(Math.abs(start),Math.abs(stop)))))specifier.precision=precision-(specifier.type==="e");break;}case"f":case"%":{if(specifier.precision==null&&!isNaN(precision=precisionFixed(step)))specifier.precision=precision-(specifier.type==="%")*2;break;}}return format(specifier);};function linearish(scale){var domain=scale.domain;scale.ticks=function(count){var d=domain();return ticks(d[0],d[d.length-1],count==null?10:count);};scale.tickFormat=function(count,specifier){return tickFormat$1(domain(),count,specifier);};scale.nice=function(count){if(count==null)count=10;var d=domain(),i0=0,i1=d.length-1,start=d[i0],stop=d[i1],step;if(stop<start){step=start,start=stop,stop=step;step=i0,i0=i1,i1=step;}step=tickIncrement(start,stop,count);if(step>0){start=Math.floor(start/step)*step;stop=Math.ceil(stop/step)*step;step=tickIncrement(start,stop,count);}else if(step<0){start=Math.ceil(start*step)/step;stop=Math.floor(stop*step)/step;step=tickIncrement(start,stop,count);}if(step>0){d[i0]=Math.floor(start/step)*step;d[i1]=Math.ceil(stop/step)*step;domain(d);}else if(step<0){d[i0]=Math.ceil(start*step)/step;d[i1]=Math.floor(stop*step)/step;domain(d);}return scale;};return scale;}function linear(){var scale=continuous(deinterpolateLinear,reinterpolate);scale.copy=function(){return copy(scale,linear());};return linearish(scale);}function identity$3(){var domain=[0,1];function scale(x){return+x;}scale.invert=scale;scale.domain=scale.range=function(_){return arguments.length?(domain=map$3.call(_,number$2),scale):domain.slice();};scale.copy=function(){return identity$3().domain(domain);};return linearish(scale);}var nice=function nice(domain,interval){domain=domain.slice();var i0=0,i1=domain.length-1,x0=domain[i0],x1=domain[i1],t;if(x1<x0){t=i0,i0=i1,i1=t;t=x0,x0=x1,x1=t;}domain[i0]=interval.floor(x0);domain[i1]=interval.ceil(x1);return domain;};function deinterpolate(a,b){return(b=Math.log(b/a))?function(x){return Math.log(x/a)/b;}:constant$5(b);}function reinterpolate$1(a,b){return a<0?function(t){return-Math.pow(-b,t)*Math.pow(-a,1-t);}:function(t){return Math.pow(b,t)*Math.pow(a,1-t);};}function pow10(x){return isFinite(x)?+("1e"+x):x<0?0:x;}function powp(base){return base===10?pow10:base===Math.E?Math.exp:function(x){return Math.pow(base,x);};}function logp(base){return base===Math.E?Math.log:base===10&&Math.log10||base===2&&Math.log2||(base=Math.log(base),function(x){return Math.log(x)/base;});}function reflect(f){return function(x){return-f(-x);};}function log$1(){var scale=continuous(deinterpolate,reinterpolate$1).domain([1,10]),domain=scale.domain,base=10,logs=logp(10),pows=powp(10);function rescale(){logs=logp(base),pows=powp(base);if(domain()[0]<0)logs=reflect(logs),pows=reflect(pows);return scale;}scale.base=function(_){return arguments.length?(base=+_,rescale()):base;};scale.domain=function(_){return arguments.length?(domain(_),rescale()):domain();};scale.ticks=function(count){var d=domain(),u=d[0],v=d[d.length-1],r;if(r=v<u)i=u,u=v,v=i;var i=logs(u),j=logs(v),p,k,t,n=count==null?10:+count,z=[];if(!(base%1)&&j-i<n){i=Math.round(i)-1,j=Math.round(j)+1;if(u>0)for(;i<j;++i){for(k=1,p=pows(i);k<base;++k){t=p*k;if(t<u)continue;if(t>v)break;z.push(t);}}else for(;i<j;++i){for(k=base-1,p=pows(i);k>=1;--k){t=p*k;if(t<u)continue;if(t>v)break;z.push(t);}}}else{z=ticks(i,j,Math.min(j-i,n)).map(pows);}return r?z.reverse():z;};scale.tickFormat=function(count,specifier){if(specifier==null)specifier=base===10?".0e":",";if(typeof specifier!=="function")specifier=format(specifier);if(count===Infinity)return specifier;if(count==null)count=10;var k=Math.max(1,base*count/scale.ticks().length);// TODO fast estimate?
return function(d){var i=d/pows(Math.round(logs(d)));if(i*base<base-0.5)i*=base;return i<=k?specifier(d):"";};};scale.nice=function(){return domain(nice(domain(),{floor:function floor(x){return pows(Math.floor(logs(x)));},ceil:function ceil(x){return pows(Math.ceil(logs(x)));}}));};scale.copy=function(){return copy(scale,log$1().base(base));};return scale;}function raise(x,exponent){return x<0?-Math.pow(-x,exponent):Math.pow(x,exponent);}function pow(){var exponent=1,scale=continuous(deinterpolate,reinterpolate),domain=scale.domain;function deinterpolate(a,b){return(b=raise(b,exponent)-(a=raise(a,exponent)))?function(x){return(raise(x,exponent)-a)/b;}:constant$5(b);}function reinterpolate(a,b){b=raise(b,exponent)-(a=raise(a,exponent));return function(t){return raise(a+b*t,1/exponent);};}scale.exponent=function(_){return arguments.length?(exponent=+_,domain(domain())):exponent;};scale.copy=function(){return copy(scale,pow().exponent(exponent));};return linearish(scale);}function sqrt$1(){return pow().exponent(0.5);}function quantile(){var domain=[],range=[],thresholds=[];function rescale(){var i=0,n=Math.max(1,range.length);thresholds=new Array(n-1);while(++i<n){thresholds[i-1]=threshold(domain,i/n);}return scale;}function scale(x){if(!isNaN(x=+x))return range[bisectRight(thresholds,x)];}scale.invertExtent=function(y){var i=range.indexOf(y);return i<0?[NaN,NaN]:[i>0?thresholds[i-1]:domain[0],i<thresholds.length?thresholds[i]:domain[domain.length-1]];};scale.domain=function(_){if(!arguments.length)return domain.slice();domain=[];for(var i=0,n=_.length,d;i<n;++i){if(d=_[i],d!=null&&!isNaN(d=+d))domain.push(d);}domain.sort(ascending);return rescale();};scale.range=function(_){return arguments.length?(range=slice$2.call(_),rescale()):range.slice();};scale.quantiles=function(){return thresholds.slice();};scale.copy=function(){return quantile().domain(domain).range(range);};return scale;}function quantize$1(){var x0=0,x1=1,n=1,domain=[0.5],range=[0,1];function scale(x){if(x<=x)return range[bisectRight(domain,x,0,n)];}function rescale(){var i=-1;domain=new Array(n);while(++i<n){domain[i]=((i+1)*x1-(i-n)*x0)/(n+1);}return scale;}scale.domain=function(_){return arguments.length?(x0=+_[0],x1=+_[1],rescale()):[x0,x1];};scale.range=function(_){return arguments.length?(n=(range=slice$2.call(_)).length-1,rescale()):range.slice();};scale.invertExtent=function(y){var i=range.indexOf(y);return i<0?[NaN,NaN]:i<1?[x0,domain[0]]:i>=n?[domain[n-1],x1]:[domain[i-1],domain[i]];};scale.copy=function(){return quantize$1().domain([x0,x1]).range(range);};return linearish(scale);}function threshold$1(){var domain=[0.5],range=[0,1],n=1;function scale(x){if(x<=x)return range[bisectRight(domain,x,0,n)];}scale.domain=function(_){return arguments.length?(domain=slice$2.call(_),n=Math.min(domain.length,range.length-1),scale):domain.slice();};scale.range=function(_){return arguments.length?(range=slice$2.call(_),n=Math.min(domain.length,range.length-1),scale):range.slice();};scale.invertExtent=function(y){var i=range.indexOf(y);return[domain[i-1],domain[i]];};scale.copy=function(){return threshold$1().domain(domain).range(range);};return scale;}var durationSecond$1=1000;var durationMinute$1=durationSecond$1*60;var durationHour$1=durationMinute$1*60;var durationDay$1=durationHour$1*24;var durationWeek$1=durationDay$1*7;var durationMonth=durationDay$1*30;var durationYear=durationDay$1*365;function date$1(t){return new Date(t);}function number$3(t){return t instanceof Date?+t:+new Date(+t);}function calendar(year$$1,month$$1,week,day$$1,hour$$1,minute$$1,second$$1,millisecond$$1,format){var scale=continuous(deinterpolateLinear,reinterpolate),invert=scale.invert,domain=scale.domain;var formatMillisecond=format(".%L"),formatSecond=format(":%S"),formatMinute=format("%I:%M"),formatHour=format("%I %p"),formatDay=format("%a %d"),formatWeek=format("%b %d"),formatMonth=format("%B"),formatYear=format("%Y");var tickIntervals=[[second$$1,1,durationSecond$1],[second$$1,5,5*durationSecond$1],[second$$1,15,15*durationSecond$1],[second$$1,30,30*durationSecond$1],[minute$$1,1,durationMinute$1],[minute$$1,5,5*durationMinute$1],[minute$$1,15,15*durationMinute$1],[minute$$1,30,30*durationMinute$1],[hour$$1,1,durationHour$1],[hour$$1,3,3*durationHour$1],[hour$$1,6,6*durationHour$1],[hour$$1,12,12*durationHour$1],[day$$1,1,durationDay$1],[day$$1,2,2*durationDay$1],[week,1,durationWeek$1],[month$$1,1,durationMonth],[month$$1,3,3*durationMonth],[year$$1,1,durationYear]];function tickFormat(date$$1){return(second$$1(date$$1)<date$$1?formatMillisecond:minute$$1(date$$1)<date$$1?formatSecond:hour$$1(date$$1)<date$$1?formatMinute:day$$1(date$$1)<date$$1?formatHour:month$$1(date$$1)<date$$1?week(date$$1)<date$$1?formatDay:formatWeek:year$$1(date$$1)<date$$1?formatMonth:formatYear)(date$$1);}function tickInterval(interval,start,stop,step){if(interval==null)interval=10;// If a desired tick count is specified, pick a reasonable tick interval
// based on the extent of the domain and a rough estimate of tick size.
// Otherwise, assume interval is already a time interval and use it.
if(typeof interval==="number"){var target=Math.abs(stop-start)/interval,i=bisector(function(i){return i[2];}).right(tickIntervals,target);if(i===tickIntervals.length){step=tickStep(start/durationYear,stop/durationYear,interval);interval=year$$1;}else if(i){i=tickIntervals[target/tickIntervals[i-1][2]<tickIntervals[i][2]/target?i-1:i];step=i[1];interval=i[0];}else{step=tickStep(start,stop,interval);interval=millisecond$$1;}}return step==null?interval:interval.every(step);}scale.invert=function(y){return new Date(invert(y));};scale.domain=function(_){return arguments.length?domain(map$3.call(_,number$3)):domain().map(date$1);};scale.ticks=function(interval,step){var d=domain(),t0=d[0],t1=d[d.length-1],r=t1<t0,t;if(r)t=t0,t0=t1,t1=t;t=tickInterval(interval,t0,t1,step);t=t?t.range(t0,t1+1):[];// inclusive stop
return r?t.reverse():t;};scale.tickFormat=function(count,specifier){return specifier==null?tickFormat:format(specifier);};scale.nice=function(interval,step){var d=domain();return(interval=tickInterval(interval,d[0],d[d.length-1],step))?domain(nice(d,interval)):scale;};scale.copy=function(){return copy(scale,calendar(year$$1,month$$1,week,day$$1,hour$$1,minute$$1,second$$1,millisecond$$1,format));};return scale;}var time=function time(){return calendar(year,month,sunday,day,hour,minute,second,millisecond,timeFormat).domain([new Date(2000,0,1),new Date(2000,0,2)]);};var utcTime=function utcTime(){return calendar(utcYear,utcMonth,utcSunday,utcDay,utcHour,utcMinute,second,millisecond,utcFormat).domain([Date.UTC(2000,0,1),Date.UTC(2000,0,2)]);};var colors=function colors(s){return s.match(/.{6}/g).map(function(x){return"#"+x;});};var category10=colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");var category20b=colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");var category20c=colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");var category20=colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");cubehelixLong(cubehelix(300,0.5,0.0),cubehelix(-240,0.5,1.0));var warm=cubehelixLong(cubehelix(-100,0.75,0.35),cubehelix(80,1.50,0.8));var cool=cubehelixLong(cubehelix(260,0.75,0.35),cubehelix(80,1.50,0.8));var rainbow=cubehelix();function ramp(range){var n=range.length;return function(t){return range[Math.max(0,Math.min(n-1,Math.floor(t*n)))];};}var viridis=ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var magma=ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));var inferno=ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));var plasma=ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function band$$1(){var scale=ordinal().unknown(undefined),domain=scale.domain,ordinalRange=scale.range,range=[0,1],step,bandwidth,round=false,paddingInner=0,paddingOuter=0,align=0.5;delete scale.unknown;function rescale(){var n=domain().length,reverse=range[1]<range[0],start=range[reverse-0],stop=range[1-reverse],space=bandSpace(n,paddingInner,paddingOuter);step=(stop-start)/(space||1);if(round){step=Math.floor(step);}start+=(stop-start-step*(n-paddingInner))*align;bandwidth=step*(1-paddingInner);if(round){start=Math.round(start);bandwidth=Math.round(bandwidth);}var values=sequence(n).map(function(i){return start+step*i;});return ordinalRange(reverse?values.reverse():values);}scale.domain=function(_){if(arguments.length){domain(_);return rescale();}else{return domain();}};scale.range=function(_){if(arguments.length){range=[+_[0],+_[1]];return rescale();}else{return range.slice();}};scale.rangeRound=function(_){range=[+_[0],+_[1]];round=true;return rescale();};scale.bandwidth=function(){return bandwidth;};scale.step=function(){return step;};scale.round=function(_){if(arguments.length){round=!!_;return rescale();}else{return round;}};scale.padding=function(_){if(arguments.length){paddingOuter=Math.max(0,Math.min(1,_));paddingInner=paddingOuter;return rescale();}else{return paddingInner;}};scale.paddingInner=function(_){if(arguments.length){paddingInner=Math.max(0,Math.min(1,_));return rescale();}else{return paddingInner;}};scale.paddingOuter=function(_){if(arguments.length){paddingOuter=Math.max(0,Math.min(1,_));return rescale();}else{return paddingOuter;}};scale.align=function(_){if(arguments.length){align=Math.max(0,Math.min(1,_));return rescale();}else{return align;}};scale.invertRange=function(_){// bail if range has null or undefined values
if(_[0]==null||_[1]==null)return;var lo=+_[0],hi=+_[1],reverse=range[1]<range[0],values=reverse?ordinalRange().reverse():ordinalRange(),n=values.length-1,a,b,t;// bail if either range endpoint is invalid
if(lo!==lo||hi!==hi)return;// order range inputs, bail if outside of scale range
if(hi<lo){t=lo;lo=hi;hi=t;}if(hi<values[0]||lo>range[1-reverse])return;// binary search to index into scale range
a=Math.max(0,bisectRight(values,lo)-1);b=lo===hi?a:bisectRight(values,hi)-1;// increment index a if lo is within padding gap
if(lo-values[a]>bandwidth+1e-10)++a;if(reverse){// map + swap
t=a;a=n-b;b=n-t;}return a>b?undefined:domain().slice(a,b+1);};scale.invert=function(_){var value=scale.invertRange([_,_]);return value?value[0]:value;};scale.copy=function(){return band$$1().domain(domain()).range(range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);};return rescale();}function pointish(scale){var copy=scale.copy;scale.padding=scale.paddingOuter;delete scale.paddingInner;scale.copy=function(){return pointish(copy());};return scale;}function point$5(){return pointish(band$$1().paddingInner(1));}var map$4=Array.prototype.map;var slice$3=Array.prototype.slice;function numbers$1(_){return map$4.call(_,function(x){return+x;});}function binLinear(){var linear$$1=linear(),domain=[];function scale(x){return linear$$1(x);}function setDomain(_){domain=numbers$1(_);linear$$1.domain([domain[0],peek(domain)]);}scale.domain=function(_){return arguments.length?(setDomain(_),scale):domain.slice();};scale.range=function(_){return arguments.length?(linear$$1.range(_),scale):linear$$1.range();};scale.rangeRound=function(_){return arguments.length?(linear$$1.rangeRound(_),scale):linear$$1.rangeRound();};scale.interpolate=function(_){return arguments.length?(linear$$1.interpolate(_),scale):linear$$1.interpolate();};scale.invert=function(_){return linear$$1.invert(_);};scale.ticks=function(count){var n=domain.length,stride=~~(n/(count||n));return stride<2?scale.domain():domain.filter(function(x,i){return!(i%stride);});};scale.tickFormat=function(){return linear$$1.tickFormat.apply(linear$$1,arguments);};scale.copy=function(){return binLinear().domain(scale.domain()).range(scale.range());};return scale;}function binOrdinal(){var domain=[],range=[];function scale(x){return x==null||x!==x?undefined:range[(bisectRight(domain,x)-1)%range.length];}scale.domain=function(_){if(arguments.length){domain=numbers$1(_);return scale;}else{return domain.slice();}};scale.range=function(_){if(arguments.length){range=slice$3.call(_);return scale;}else{return range.slice();}};scale.copy=function(){return binOrdinal().domain(scale.domain()).range(scale.range());};return scale;}function sequential$1(interpolator){var linear$$1=linear(),x0=0,dx=1,clamp=false;function update(){var domain=linear$$1.domain();x0=domain[0];dx=peek(domain)-x0;}function scale(x){var t=(x-x0)/dx;return interpolator(clamp?Math.max(0,Math.min(1,t)):t);}scale.clamp=function(_){if(arguments.length){clamp=!!_;return scale;}else{return clamp;}};scale.domain=function(_){return arguments.length?(linear$$1.domain(_),update(),scale):linear$$1.domain();};scale.interpolator=function(_){if(arguments.length){interpolator=_;return scale;}else{return interpolator;}};scale.copy=function(){return sequential$1().domain(linear$$1.domain()).clamp(clamp).interpolator(interpolator);};scale.ticks=function(count){return linear$$1.ticks(count);};scale.tickFormat=function(count,specifier){return linear$$1.tickFormat(count,specifier);};scale.nice=function(count){return linear$$1.nice(count),update(),scale;};return scale;}/**
 * Augment scales with their type and needed inverse methods.
 */function create(type,constructor){return function scale(){var s=constructor();if(!s.invertRange){s.invertRange=s.invert?invertRange(s):s.invertExtent?invertRangeExtent(s):undefined;}s.type=type;return s;};}function scale$1(type,scale){if(arguments.length>1){scales[type]=create(type,scale);return this;}else{return scales.hasOwnProperty(type)?scales[type]:undefined;}}var scales={// base scale types
identity:identity$3,linear:linear,log:log$1,ordinal:ordinal,pow:pow,sqrt:sqrt$1,quantile:quantile,quantize:quantize$1,threshold:threshold$1,time:time,utc:utcTime,// extended scale types
band:band$$1,point:point$5,sequential:sequential$1,'bin-linear':binLinear,'bin-ordinal':binOrdinal};for(var key$1 in scales){scale$1(key$1,scales[key$1]);}function colors$1(specifier){var n=specifier.length/6|0,colors=new Array(n),i=0;while(i<n){colors[i]="#"+specifier.slice(i*6,++i*6);}return colors;}var tableau10=colors$1('4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac');var tableau20=colors$1('4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5');var blueOrange=new Array(3).concat("67a9cff7f7f7f1a340","0571b092c5defdb863e66101","0571b092c5def7f7f7fdb863e66101","2166ac67a9cfd1e5f0fee0b6f1a340b35806","2166ac67a9cfd1e5f0f7f7f7fee0b6f1a340b35806","2166ac4393c392c5ded1e5f0fee0b6fdb863e08214b35806","2166ac4393c392c5ded1e5f0f7f7f7fee0b6fdb863e08214b35806","0530612166ac4393c392c5ded1e5f0fee0b6fdb863e08214b358067f3b08","0530612166ac4393c392c5ded1e5f0f7f7f7fee0b6fdb863e08214b358067f3b08").map(colors$1);var colors$2=function colors$2(specifier){var n=specifier.length/6|0,colors=new Array(n),i=0;while(i<n){colors[i]="#"+specifier.slice(i*6,++i*6);}return colors;};var Accent=colors$2("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");var Dark2=colors$2("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");var Paired=colors$2("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");var Pastel1=colors$2("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");var Pastel2=colors$2("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");var Set1=colors$2("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");var Set2=colors$2("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");var Set3=colors$2("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var ramp$1=function ramp$1(scheme){return rgbBasis(scheme[scheme.length-1]);};var scheme=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors$2);var BrBG=ramp$1(scheme);var scheme$1=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors$2);var PRGn=ramp$1(scheme$1);var scheme$2=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors$2);var PiYG=ramp$1(scheme$2);var scheme$3=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors$2);var PuOr=ramp$1(scheme$3);var scheme$4=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors$2);var RdBu=ramp$1(scheme$4);var scheme$5=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors$2);var RdGy=ramp$1(scheme$5);var scheme$6=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors$2);var RdYlBu=ramp$1(scheme$6);var scheme$7=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors$2);var RdYlGn=ramp$1(scheme$7);var scheme$8=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors$2);var Spectral=ramp$1(scheme$8);var scheme$9=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors$2);var BuGn=ramp$1(scheme$9);var scheme$10=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors$2);var BuPu=ramp$1(scheme$10);var scheme$11=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors$2);var GnBu=ramp$1(scheme$11);var scheme$12=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors$2);var OrRd=ramp$1(scheme$12);var scheme$13=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors$2);var PuBuGn=ramp$1(scheme$13);var scheme$14=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors$2);var PuBu=ramp$1(scheme$14);var scheme$15=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors$2);var PuRd=ramp$1(scheme$15);var scheme$16=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors$2);var RdPu=ramp$1(scheme$16);var scheme$17=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors$2);var YlGnBu=ramp$1(scheme$17);var scheme$18=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors$2);var YlGn=ramp$1(scheme$18);var scheme$19=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors$2);var YlOrBr=ramp$1(scheme$19);var scheme$20=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors$2);var YlOrRd=ramp$1(scheme$20);var scheme$21=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors$2);var Blues=ramp$1(scheme$21);var scheme$22=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors$2);var Greens=ramp$1(scheme$22);var scheme$23=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors$2);var Greys=ramp$1(scheme$23);var scheme$24=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors$2);var Purples=ramp$1(scheme$24);var scheme$25=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors$2);var Reds=ramp$1(scheme$25);var scheme$26=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors$2);var Oranges=ramp$1(scheme$26);var _=Object.freeze({schemeAccent:Accent,schemeDark2:Dark2,schemePaired:Paired,schemePastel1:Pastel1,schemePastel2:Pastel2,schemeSet1:Set1,schemeSet2:Set2,schemeSet3:Set3,interpolateBrBG:BrBG,schemeBrBG:scheme,interpolatePRGn:PRGn,schemePRGn:scheme$1,interpolatePiYG:PiYG,schemePiYG:scheme$2,interpolatePuOr:PuOr,schemePuOr:scheme$3,interpolateRdBu:RdBu,schemeRdBu:scheme$4,interpolateRdGy:RdGy,schemeRdGy:scheme$5,interpolateRdYlBu:RdYlBu,schemeRdYlBu:scheme$6,interpolateRdYlGn:RdYlGn,schemeRdYlGn:scheme$7,interpolateSpectral:Spectral,schemeSpectral:scheme$8,interpolateBuGn:BuGn,schemeBuGn:scheme$9,interpolateBuPu:BuPu,schemeBuPu:scheme$10,interpolateGnBu:GnBu,schemeGnBu:scheme$11,interpolateOrRd:OrRd,schemeOrRd:scheme$12,interpolatePuBuGn:PuBuGn,schemePuBuGn:scheme$13,interpolatePuBu:PuBu,schemePuBu:scheme$14,interpolatePuRd:PuRd,schemePuRd:scheme$15,interpolateRdPu:RdPu,schemeRdPu:scheme$16,interpolateYlGnBu:YlGnBu,schemeYlGnBu:scheme$17,interpolateYlGn:YlGn,schemeYlGn:scheme$18,interpolateYlOrBr:YlOrBr,schemeYlOrBr:scheme$19,interpolateYlOrRd:YlOrRd,schemeYlOrRd:scheme$20,interpolateBlues:Blues,schemeBlues:scheme$21,interpolateGreens:Greens,schemeGreens:scheme$22,interpolateGreys:Greys,schemeGreys:scheme$23,interpolatePurples:Purples,schemePurples:scheme$24,interpolateReds:Reds,schemeReds:scheme$25,interpolateOranges:Oranges,schemeOranges:scheme$26});var discrete={blueorange:blueOrange};var schemes={// d3 built-in categorical palettes
category10:category10,category20:category20,category20b:category20b,category20c:category20c,// extended categorical palettes
accent:Accent,dark2:Dark2,paired:Paired,pastel1:Pastel1,pastel2:Pastel2,set1:Set1,set2:Set2,set3:Set3,tableau10:tableau10,tableau20:tableau20,// d3 built-in interpolators
viridis:viridis,magma:magma,inferno:inferno,plasma:plasma,// extended interpolators
blueorange:rgbBasis(peek(blueOrange))};function add$2(name,suffix){schemes[name]=_['interpolate'+suffix];discrete[name]=_['scheme'+suffix];}// sequential single-hue
add$2('blues','Blues');add$2('greens','Greens');add$2('greys','Greys');add$2('purples','Purples');add$2('reds','Reds');add$2('oranges','Oranges');// diverging
add$2('brownbluegreen','BrBG');add$2('purplegreen','PRGn');add$2('pinkyellowgreen','PiYG');add$2('purpleorange','PuOr');add$2('redblue','RdBu');add$2('redgrey','RdGy');add$2('redyellowblue','RdYlBu');add$2('redyellowgreen','RdYlGn');add$2('spectral','Spectral');// sequential multi-hue
add$2('bluegreen','BuGn');add$2('bluepurple','BuPu');add$2('greenblue','GnBu');add$2('orangered','OrRd');add$2('purplebluegreen','PuBuGn');add$2('purpleblue','PuBu');add$2('purplered','PuRd');add$2('redpurple','RdPu');add$2('yellowgreenblue','YlGnBu');add$2('yellowgreen','YlGn');add$2('yelloworangebrown','YlOrBr');add$2('yelloworangered','YlOrRd');var getScheme=function getScheme(name,scheme$$1){if(arguments.length>1){schemes[name]=scheme$$1;return this;}var part=name.split('-');name=part[0];part=+part[1]+1;return part&&discrete.hasOwnProperty(name)?discrete[name][part-1]:!part&&schemes.hasOwnProperty(name)?schemes[name]:undefined;};function interpolateRange(interpolator,range){var start=range[0],span=peek(range)-start;return function(i){return interpolator(start+i*span);};}function scaleFraction(scale,min,max){var delta=max-min;return!delta?constant(0):scale.type==='linear'||scale.type==='sequential'?function(_){return(_-min)/delta;}:scale.copy().domain([min,max]).range([0,1]).interpolate(lerp);}function lerp(a,b){var span=b-a;return function(i){return a+i*span;};}function interpolate$1(type,gamma){var interp=$$1[method(type)];return gamma!=null&&interp&&interp.gamma?interp.gamma(gamma):interp;}function method(type){return'interpolate'+type.toLowerCase().split('-').map(function(s){return s[0].toUpperCase()+s.slice(1);}).join('');}var time$1={millisecond:millisecond,second:second,minute:minute,hour:hour,day:day,week:sunday,month:month,year:year};var utc={millisecond:millisecond,second:second,minute:utcMinute,hour:utcHour,day:utcDay,week:utcSunday,month:utcMonth,year:utcYear};function timeInterval(name){return time$1.hasOwnProperty(name)&&time$1[name];}function utcInterval(name){return utc.hasOwnProperty(name)&&utc[name];}/**
 * Determine the tick count or interval function.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} count - The desired tick count or interval specifier.
 * @return {*} - The tick count or interval function.
 */function tickCount(scale$$1,count){var step;if(isObject(count)){step=count.step;count=count.interval;}if(isString(count)){count=scale$$1.type==='time'?timeInterval(count):scale$$1.type==='utc'?utcInterval(count):error$1('Only time and utc scales accept interval strings.');if(step)count=count.every(step);}return count;}/**
 * Filter a set of candidate tick values, ensuring that only tick values
 * that lie within the scale range are included.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {Array<*>} ticks - The candidate tick values.
 * @return {Array<*>} - The filtered tick values.
 */function validTicks(scale$$1,ticks){var range=scale$$1.range(),lo=range[0],hi=peek(range);if(lo>hi){range=hi;hi=lo;lo=range;}return ticks.filter(function(v){v=scale$$1(v);return!(v<lo||v>hi);});}/**
 * Generate tick values for the given scale and approximate tick count or
 * interval value. If the scale has a 'ticks' method, it will be used to
 * generate the ticks, with the count argument passed as a parameter. If the
 * scale lacks a 'ticks' method, the full scale domain will be returned.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} [count] - The approximate number of desired ticks.
 * @return {Array<*>} - The generated tick values.
 */function tickValues(scale$$1,count){return scale$$1.ticks?scale$$1.ticks(count):scale$$1.domain();}/**
 * Generate a label format function for a scale. If the scale has a
 * 'tickFormat' method, it will be used to generate the formatter, with the
 * count and specifier arguments passed as parameters. If the scale lacks a
 * 'tickFormat' method, the returned formatter performs simple string coercion.
 * If the input scale is a logarithmic scale and the format specifier does not
 * indicate a desired decimal precision, a special variable precision formatter
 * that automatically trims trailing zeroes will be generated.
 * @param {Scale} scale - The scale for which to generate the label formatter.
 * @param {*} [count] - The approximate number of desired ticks.
 * @param {string} [specifier] - The format specifier. Must be a legal d3 4.0
 *   specifier string (see https://github.com/d3/d3-format#formatSpecifier).
 * @return {function(*):string} - The generated label formatter.
 */function tickFormat(scale$$1,count,specifier){var format$$1=scale$$1.tickFormat?scale$$1.tickFormat(count,specifier):String;return scale$$1.type===Log?filter$1(format$$1,variablePrecision(specifier)):format$$1;}function filter$1(sourceFormat,targetFormat){return function(_){return sourceFormat(_)?targetFormat(_):'';};}function variablePrecision(specifier){var s=formatSpecifier(specifier||',');if(s.precision==null){s.precision=12;switch(s.type){case'%':s.precision-=2;break;case'e':s.precision-=1;break;}return trimZeroes(format(s),// number format
format('.1f')(1)[1]// decimal point character
);}else{return format(s);}}function trimZeroes(format$$1,decimalChar){return function(x){var str=format$$1(x),dec=str.indexOf(decimalChar),idx,end;if(dec<0)return str;idx=rightmostDigit(str,dec);end=idx<str.length?str.slice(idx):'';while(--idx>dec){if(str[idx]!=='0'){++idx;break;}}return str.slice(0,idx)+end;};}function rightmostDigit(str,dec){var i=str.lastIndexOf('e'),c;if(i>0)return i;for(i=str.length;--i>dec;){c=str.charCodeAt(i);if(c>=48&&c<=57)return i+1;// is digit
}}/**
 * Generates axis ticks for visualizing a spatial scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate ticks for.
 * @param {*} [params.count=10] - The approximate number of ticks, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {function(*):string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid d3 4.0 format specifier.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */function AxisTicks(params){Transform.call(this,null,params);}var prototype$51=inherits(AxisTicks,Transform);prototype$51.transform=function(_,pulse){if(this.value&&!_.modified()){return pulse.StopPropagation;}var out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),ticks=this.value,scale=_.scale,count=_.values?_.values.length:tickCount(scale,_.count),format=_.format||tickFormat(scale,count,_.formatSpecifier),values=_.values?validTicks(scale,_.values):tickValues(scale,count);if(ticks)out.rem=ticks;ticks=values.map(function(value){return ingest({value:value,label:format(value)});});if(_.extra){// add an extra tick pegged to the initial domain value
// this is used to generate axes with 'binned' domains
ticks.push(ingest({extra:{value:ticks[0].value},label:''}));}out.source=ticks;out.add=ticks;this.value=ticks;return out;};/**
 * Joins a set of data elements against a set of visual items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): object} [params.item] - An item generator function.
 * @param {function(object): *} [params.key] - The key field associating data and visual items.
 */function DataJoin(params){Transform.call(this,null,params);}var prototype$52=inherits(DataJoin,Transform);function defaultItemCreate(){return ingest({});}function isExit(t){return t.exit;}prototype$52.transform=function(_,pulse){var df=pulse.dataflow,out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),item=_.item||defaultItemCreate,key$$1=_.key||tupleid,map=this.value;// prevent transient (e.g., hover) requests from
// cascading across marks derived from marks
if(isArray(out.encode)){out.encode=null;}if(!map){pulse=pulse.addAll();this.value=map=fastmap().test(isExit);map.lookup=function(t){return map.get(key$$1(t));};}if(_.modified('key')||pulse.modified(key$$1)){error$1('DataJoin does not support modified key function or fields.');}pulse.visit(pulse.ADD,function(t){var k=key$$1(t),x=map.get(k);if(x){if(x.exit){map.empty--;out.add.push(x);}else{out.mod.push(x);}}else{map.set(k,x=item(t));out.add.push(x);}x.datum=t;x.exit=false;});pulse.visit(pulse.MOD,function(t){var k=key$$1(t),x=map.get(k);if(x){x.datum=t;out.mod.push(x);}});pulse.visit(pulse.REM,function(t){var k=key$$1(t),x=map.get(k);if(t===x.datum&&!x.exit){out.rem.push(x);x.exit=true;++map.empty;}});if(pulse.changed(pulse.ADD_MOD))out.modifies('datum');if(_.clean&&map.empty>df.cleanThreshold)df.runAfter(map.clean);return out;};/**
 * Invokes encoding functions for visual items.
 * @constructor
 * @param {object} params - The parameters to the encoding functions. This
 *   parameter object will be passed through to all invoked encoding functions.
 * @param {object} param.encoders - The encoding functions
 * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set
 * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set
 * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set
 */function Encode(params){Transform.call(this,null,params);}var prototype$53=inherits(Encode,Transform);prototype$53.transform=function(_,pulse){var out=pulse.fork(pulse.ADD_REM),encoders=_.encoders,encode=pulse.encode;// if an array, the encode directive includes additional sets
// that must be defined in order for the primary set to be invoked
// e.g., only run the update set if the hover set is defined
if(isArray(encode)){if(out.changed()||encode.every(function(e){return encoders[e];})){encode=encode[0];}else{return pulse.StopPropagation;}}// marshall encoder functions
var reenter=encode==='enter',update=encoders.update||falsy,enter=encoders.enter||falsy,exit=encoders.exit||falsy,set=(encode&&!reenter?encoders[encode]:update)||falsy;if(pulse.changed(pulse.ADD)){pulse.visit(pulse.ADD,function(t){enter(t,_);update(t,_);if(set!==falsy&&set!==update)set(t,_);});out.modifies(enter.output);out.modifies(update.output);if(set!==falsy&&set!==update)out.modifies(set.output);}if(pulse.changed(pulse.REM)&&exit!==falsy){pulse.visit(pulse.REM,function(t){exit(t,_);});out.modifies(exit.output);}if(reenter||set!==falsy){var flag=pulse.MOD|(_.modified()?pulse.REFLOW:0);if(reenter){pulse.visit(flag,function(t){var mod=enter(t,_);if(set(t,_)||mod)out.mod.push(t);});if(out.mod.length)out.modifies(enter.output);}else{pulse.visit(flag,function(t){if(set(t,_))out.mod.push(t);});}if(out.mod.length)out.modifies(set.output);}return out.changed()?out:pulse.StopPropagation;};var discrete$1={};discrete$1[Quantile]=quantile$1;discrete$1[Quantize]=quantize$2;discrete$1[Threshold]=threshold$2;discrete$1[BinLinear]=bin$1;discrete$1[BinOrdinal]=bin$1;function labelValues(scale,count,gradient){if(gradient)return scale.domain();var values=discrete$1[scale.type];return values?values(scale):tickValues(scale,count);}function quantize$2(scale){var domain=scale.domain(),x0=domain[0],x1=peek(domain),n=scale.range().length,values=new Array(n),i=0;values[0]=-Infinity;while(++i<n){values[i]=(i*x1-(i-n)*x0)/n;}values.max=+Infinity;return values;}function quantile$1(scale){var values=[-Infinity].concat(scale.quantiles());values.max=+Infinity;return values;}function threshold$2(scale){var values=[-Infinity].concat(scale.domain());values.max=+Infinity;return values;}function bin$1(scale){var values=scale.domain();values.max=values.pop();return values;}function labelFormat(scale,format){return discrete$1[scale.type]?formatRange(format):formatPoint(format);}function formatRange(format){return function(value,index,array$$1){var limit=array$$1[index+1]||array$$1.max||+Infinity,lo=formatValue(value,format),hi=formatValue(limit,format);return lo&&hi?lo+'\u2013'+hi:hi?'< '+hi:'\u2265 '+lo;};}function formatValue(value,format){return isFinite(value)?format(value):null;}function formatPoint(format){return function(value){return format(value);};}/**
 * Generates legend entries for visualizing a scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate items for.
 * @param {*} [params.count=10] - The approximate number of items, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {function(*):string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid d3 4.0 format specifier.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */function LegendEntries(params){Transform.call(this,[],params);}var prototype$54=inherits(LegendEntries,Transform);prototype$54.transform=function(_,pulse){if(this.value!=null&&!_.modified()){return pulse.StopPropagation;}var out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),total=0,items=this.value,grad=_.type==='gradient',scale=_.scale,count=_.count==null?5:tickCount(scale,_.count),format=_.format||tickFormat(scale,count,_.formatSpecifier),values=_.values||labelValues(scale,count,grad);format=labelFormat(scale,format);if(items)out.rem=items;if(grad){var domain=_.values?scale.domain():values,fraction=scaleFraction(scale,domain[0],peek(domain));}else{var size=_.size,offset;if(isFunction(size)){// if first value maps to size zero, remove from list (vega#717)
if(!_.values&&scale(values[0])===0){values=values.slice(1);}// compute size offset for legend entries
offset=values.reduce(function(max,value){return Math.max(max,size(value,_));},0);}else{size=constant(offset=size||8);}}items=values.map(function(value,index){var t=ingest({index:index,label:format(value,index,values),value:value});if(grad){t.perc=fraction(value);}else{t.offset=offset;t.size=size(value,_);t.total=Math.round(total);total+=t.size;}return t;});out.source=items;out.add=items;this.value=items;return out;};var Paths=fastmap({'line':line$3,'line-radial':lineR,'arc':arc$2,'arc-radial':arcR,'curve':curve,'curve-radial':curveR,'orthogonal-horizontal':orthoX,'orthogonal-vertical':orthoY,'orthogonal-radial':orthoR,'diagonal-horizontal':diagonalX,'diagonal-vertical':diagonalY,'diagonal-radial':diagonalR});function sourceX(t){return t.source.x;}function sourceY(t){return t.source.y;}function targetX(t){return t.target.x;}function targetY(t){return t.target.y;}/**
  * Layout paths linking source and target elements.
  * @constructor
  * @param {object} params - The parameters for this operator.
  */function LinkPath(params){Transform.call(this,{},params);}LinkPath.Definition={"type":"LinkPath","metadata":{"modifies":true},"params":[{"name":"sourceX","type":"field","default":"source.x"},{"name":"sourceY","type":"field","default":"source.y"},{"name":"targetX","type":"field","default":"target.x"},{"name":"targetY","type":"field","default":"target.y"},{"name":"orient","type":"enum","default":"vertical","values":["horizontal","vertical","radial"]},{"name":"shape","type":"enum","default":"line","values":["line","arc","curve","diagonal","orthogonal"]},{"name":"as","type":"string","default":"path"}]};var prototype$55=inherits(LinkPath,Transform);prototype$55.transform=function(_,pulse){var sx=_.sourceX||sourceX,sy=_.sourceY||sourceY,tx=_.targetX||targetX,ty=_.targetY||targetY,as=_.as||'path',orient=_.orient||'vertical',shape=_.shape||'line',path=Paths.get(shape+'-'+orient)||Paths.get(shape);if(!path){error$1('LinkPath unsupported type: '+_.shape+(_.orient?'-'+_.orient:''));}pulse.visit(pulse.SOURCE,function(t){t[as]=path(sx(t),sy(t),tx(t),ty(t));});return pulse.reflow(_.modified()).modifies(as);};// -- Link Path Generation Methods -----
function line$3(sx,sy,tx,ty){return'M'+sx+','+sy+'L'+tx+','+ty;}function lineR(sa,sr,ta,tr){return line$3(sr*Math.cos(sa),sr*Math.sin(sa),tr*Math.cos(ta),tr*Math.sin(ta));}function arc$2(sx,sy,tx,ty){var dx=tx-sx,dy=ty-sy,rr=Math.sqrt(dx*dx+dy*dy)/2,ra=180*Math.atan2(dy,dx)/Math.PI;return'M'+sx+','+sy+'A'+rr+','+rr+' '+ra+' 0 1'+' '+tx+','+ty;}function arcR(sa,sr,ta,tr){return arc$2(sr*Math.cos(sa),sr*Math.sin(sa),tr*Math.cos(ta),tr*Math.sin(ta));}function curve(sx,sy,tx,ty){var dx=tx-sx,dy=ty-sy,ix=0.2*(dx+dy),iy=0.2*(dy-dx);return'M'+sx+','+sy+'C'+(sx+ix)+','+(sy+iy)+' '+(tx+iy)+','+(ty-ix)+' '+tx+','+ty;}function curveR(sa,sr,ta,tr){return curve(sr*Math.cos(sa),sr*Math.sin(sa),tr*Math.cos(ta),tr*Math.sin(ta));}function orthoX(sx,sy,tx,ty){return'M'+sx+','+sy+'V'+ty+'H'+tx;}function orthoY(sx,sy,tx,ty){return'M'+sx+','+sy+'H'+tx+'V'+ty;}function orthoR(sa,sr,ta,tr){var sc=Math.cos(sa),ss=Math.sin(sa),tc=Math.cos(ta),ts=Math.sin(ta),sf=Math.abs(ta-sa)>Math.PI?ta<=sa:ta>sa;return'M'+sr*sc+','+sr*ss+'A'+sr+','+sr+' 0 0,'+(sf?1:0)+' '+sr*tc+','+sr*ts+'L'+tr*tc+','+tr*ts;}function diagonalX(sx,sy,tx,ty){var m=(sx+tx)/2;return'M'+sx+','+sy+'C'+m+','+sy+' '+m+','+ty+' '+tx+','+ty;}function diagonalY(sx,sy,tx,ty){var m=(sy+ty)/2;return'M'+sx+','+sy+'C'+sx+','+m+' '+tx+','+m+' '+tx+','+ty;}function diagonalR(sa,sr,ta,tr){var sc=Math.cos(sa),ss=Math.sin(sa),tc=Math.cos(ta),ts=Math.sin(ta),mr=(sr+tr)/2;return'M'+sr*sc+','+sr*ss+'C'+mr*sc+','+mr*ss+' '+mr*tc+','+mr*ts+' '+tr*tc+','+tr*ts;}/**
 * Pie and donut chart layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size pie segments.
 * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.
 * @param {number} [params.endAngle=2π] - The end angle (in radians) of the layout.
 * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.
 */function Pie(params){Transform.call(this,null,params);}Pie.Definition={"type":"Pie","metadata":{"modifies":true},"params":[{"name":"field","type":"field"},{"name":"startAngle","type":"number","default":0},{"name":"endAngle","type":"number","default":6.283185307179586},{"name":"sort","type":"boolean","default":false},{"name":"as","type":"string","array":true,"length":2,"default":["startAngle","endAngle"]}]};var prototype$56=inherits(Pie,Transform);prototype$56.transform=function(_,pulse){var as=_.as||['startAngle','endAngle'],startAngle=as[0],endAngle=as[1],field$$1=_.field||one,start=_.startAngle||0,stop=_.endAngle!=null?_.endAngle:2*Math.PI,data=pulse.source,values=data.map(field$$1),n=values.length,a=start,k=(stop-start)/sum(values),index=sequence(n),i,t,v;if(_.sort){index.sort(function(a,b){return values[a]-values[b];});}for(i=0;i<n;++i){v=values[index[i]];t=data[index[i]];t[startAngle]=a;t[endAngle]=a+=v*k;}this.value=values;return pulse.reflow(_.modified()).modifies(as);};var DEFAULT_COUNT=5;var INCLUDE_ZERO=toSet([Linear$1,Pow,Sqrt]);var SKIP$2=toSet(['set','modified','clear','type','scheme','schemeExtent','schemeCount','domain','domainMin','domainMid','domainMax','domainRaw','nice','zero','range','rangeStep','round','reverse','interpolate','interpolateGamma']);/**
 * Maintains a scale function mapping data values to visual channels.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */function Scale(params){Transform.call(this,null,params);this.modified(true);// always treat as modified
}var prototype$57=inherits(Scale,Transform);prototype$57.transform=function(_,pulse){var df=pulse.dataflow,scale=this.value,prop;if(!scale||_.modified('type')){this.value=scale=scale$1((_.type||Linear$1).toLowerCase())();}for(prop in _){if(!SKIP$2[prop]){isFunction(scale[prop])?scale[prop](_[prop]):df.warn('Unsupported scale property: '+prop);}}configureRange(scale,_,configureDomain(scale,_,df));return pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS);};function configureDomain(scale,_,df){// check raw domain, if provided use that and exit early
var raw=rawDomain(scale,_.domainRaw);if(raw>-1)return raw;var domain=_.domain,zero$$1=_.zero||_.zero===undefined&&INCLUDE_ZERO[scale.type],n,mid;if(!domain)return 0;// adjust domain based on zero, min, max settings
if(zero$$1||_.domainMin!=null||_.domainMax!=null||_.domainMid!=null){n=(domain=domain.slice()).length-1||1;if(zero$$1){if(domain[0]>0)domain[0]=0;if(domain[n]<0)domain[n]=0;}if(_.domainMin!=null)domain[0]=_.domainMin;if(_.domainMax!=null)domain[n]=_.domainMax;if(_.domainMid!=null){mid=_.domainMid;if(mid<domain[0]||mid>domain[n]){df.warn('Scale domainMid exceeds domain min or max.',mid);}domain.splice(n,0,mid);}}// set the scale domain
scale.domain(domain);// perform 'nice' adjustment as requested
if(_.nice&&scale.nice){scale.nice(_.nice!==true&&tickCount(scale,_.nice)||null);}// return the cardinality of the domain
return domain.length;}function rawDomain(scale,raw){if(raw){scale.domain(raw);return raw.length;}else{return-1;}}function configureRange(scale,_,count){var round=_.round||false,range=_.range;// if range step specified, calculate full range extent
if(_.rangeStep!=null){range=configureRangeStep(scale.type,_,count);}// else if a range scheme is defined, use that
else if(_.scheme){range=configureScheme(scale.type,_,count);if(isFunction(range))return scale.interpolator(range);}// given a range array for a sequential scale, convert to interpolator
else if(range&&scale.type===Sequential){return scale.interpolator(rgbBasis(flip(range,_.reverse)));}// configure rounding / interpolation
if(range&&_.interpolate&&scale.interpolate){scale.interpolate(interpolate$1(_.interpolate,_.interpolateGamma));}else if(isFunction(scale.round)){scale.round(round);}else if(isFunction(scale.rangeRound)){scale.interpolate(round?interpolateRound:interpolate);}if(range)scale.range(flip(range,_.reverse));}function configureRangeStep(type,_,count){if(type!==Band&&type!==Point){error$1('Only band and point scales support rangeStep.');}// calculate full range based on requested step size and padding
var outer=(_.paddingOuter!=null?_.paddingOuter:_.padding)||0,inner=type===Point?1:(_.paddingInner!=null?_.paddingInner:_.padding)||0;return[0,_.rangeStep*bandSpace(count,inner,outer)];}function configureScheme(type,_,count){var name=_.scheme.toLowerCase(),scheme=getScheme(name),extent=_.schemeExtent,discrete;if(!scheme){error$1('Unrecognized scheme name: '+_.scheme);}// determine size for potential discrete range
count=type===Threshold?count+1:type===BinOrdinal?count-1:type===Quantile||type===Quantize?+_.schemeCount||DEFAULT_COUNT:count;// adjust and/or quantize scheme as appropriate
return type===Sequential?adjustScheme(scheme,extent,_.reverse):!extent&&(discrete=getScheme(name+'-'+count))?discrete:isFunction(scheme)?quantize$3(adjustScheme(scheme,extent),count):type===Ordinal?scheme:scheme.slice(0,count);}function adjustScheme(scheme,extent,reverse){return isFunction(scheme)&&(extent||reverse)?interpolateRange(scheme,flip(extent||[0,1],reverse)):scheme;}function flip(array$$1,reverse){return reverse?array$$1.slice().reverse():array$$1;}function quantize$3(interpolator,count){var samples=new Array(count),n=count-1||1;for(var i=0;i<count;++i){samples[i]=interpolator(i/n);}return samples;}/**
 * Sorts scenegraph items in the pulse source array.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator
 *   function for sorting tuples.
 */function SortItems(params){Transform.call(this,null,params);}var prototype$58=inherits(SortItems,Transform);prototype$58.transform=function(_,pulse){var mod=_.modified('sort')||pulse.changed(pulse.ADD)||pulse.modified(_.sort.fields)||pulse.modified('datum');if(mod)pulse.source.sort(_.sort);this.modified(mod);return pulse;};var Center='center';var Normalize='normalize';/**
 * Stack layout for visualization elements.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to stack.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.
 * @param {string} [offset='zero'] - One of 'zero', 'center', 'normalize'.
 */function Stack(params){Transform.call(this,null,params);}Stack.Definition={"type":"Stack","metadata":{"modifies":true},"params":[{"name":"field","type":"field"},{"name":"groupby","type":"field","array":true},{"name":"sort","type":"compare"},{"name":"offset","type":"enum","default":"zero","values":["zero","center","normalize"]},{"name":"as","type":"string","array":true,"length":2,"default":["y0","y1"]}]};var prototype$59=inherits(Stack,Transform);prototype$59.transform=function(_,pulse){var as=_.as||['y0','y1'],y0=as[0],y1=as[1],field$$1=_.field||one,stack=_.offset===Center?stackCenter:_.offset===Normalize?stackNormalize:stackZero,groups,i,n,max;// partition, sum, and sort the stack groups
groups=partition$1(pulse.source,_.groupby,_.sort,field$$1);// compute stack layouts per group
for(i=0,n=groups.length,max=groups.max;i<n;++i){stack(groups[i],max,field$$1,y0,y1);}return pulse.reflow(_.modified()).modifies(as);};function stackCenter(group,max,field$$1,y0,y1){var last=(max-group.sum)/2,m=group.length,j=0,t;for(;j<m;++j){t=group[j];t[y0]=last;t[y1]=last+=Math.abs(field$$1(t));}}function stackNormalize(group,max,field$$1,y0,y1){var scale=1/group.sum,last=0,m=group.length,j=0,v=0,t;for(;j<m;++j){t=group[j];t[y0]=last;t[y1]=last=scale*(v+=Math.abs(field$$1(t)));}}function stackZero(group,max,field$$1,y0,y1){var lastPos=0,lastNeg=0,m=group.length,j=0,v,t;for(;j<m;++j){t=group[j];v=field$$1(t);if(v<0){t[y0]=lastNeg;t[y1]=lastNeg+=v;}else{t[y0]=lastPos;t[y1]=lastPos+=v;}}}function partition$1(data,groupby,sort,field$$1){var groups=[],get=function get(f){return f(t);},map,i,n,m,t,k,g,s,max;// partition data points into stack groups
if(groupby==null){groups.push(data.slice());}else{for(map={},i=0,n=data.length;i<n;++i){t=data[i];k=groupby.map(get);g=map[k];if(!g){map[k]=g=[];groups.push(g);}g.push(t);}}// compute sums of groups, sort groups as needed
for(k=0,max=0,m=groups.length;k<m;++k){g=groups[k];for(i=0,s=0,n=g.length;i<n;++i){s+=Math.abs(field$$1(g[i]));}g.sum=s;if(s>max)max=s;if(sort)g.sort(sort);}groups.max=max;return groups;}var encode=Object.freeze({axisticks:AxisTicks,datajoin:DataJoin,encode:Encode,legendentries:LegendEntries,linkpath:LinkPath,pie:Pie,scale:Scale,sortitems:SortItems,stack:Stack});var array$4=Array.prototype;var slice$4=array$4.slice;var ascending$2=function ascending$2(a,b){return a-b;};var area$3=function area$3(ring){var i=0,n=ring.length,area=ring[n-1][1]*ring[0][0]-ring[n-1][0]*ring[0][1];while(++i<n){area+=ring[i-1][1]*ring[i][0]-ring[i-1][0]*ring[i][1];}return area;};var constant$6=function constant$6(x){return function(){return x;};};var contains=function contains(ring,hole){var i=-1,n=hole.length,c;while(++i<n){if(c=ringContains(ring,hole[i]))return c;}return 0;};function ringContains(ring,point){var x=point[0],y=point[1],contains=-1;for(var i=0,n=ring.length,j=n-1;i<n;j=i++){var pi=ring[i],xi=pi[0],yi=pi[1],pj=ring[j],xj=pj[0],yj=pj[1];if(segmentContains(pi,pj,point))return 0;if(yi>y!==yj>y&&x<(xj-xi)*(y-yi)/(yj-yi)+xi)contains=-contains;}return contains;}function segmentContains(a,b,c){var i;return collinear(a,b,c)&&within(a[i=+(a[0]===b[0])],c[i],b[i]);}function collinear(a,b,c){return(b[0]-a[0])*(c[1]-a[1])===(c[0]-a[0])*(b[1]-a[1]);}function within(p,q,r){return p<=q&&q<=r||r<=q&&q<=p;}var noop$4=function noop$4(){};var cases=[[],[[[1,1.5],[0.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[0.5,1]]],[[[1,0.5],[1.5,1]]],[[[1,0.5],[0.5,1]],[[1,1.5],[1.5,1]]],[[[1,0.5],[1,1.5]]],[[[1,0.5],[0.5,1]]],[[[0.5,1],[1,0.5]]],[[[1,1.5],[1,0.5]]],[[[0.5,1],[1,1.5]],[[1.5,1],[1,0.5]]],[[[1.5,1],[1,0.5]]],[[[0.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[0.5,1],[1,1.5]]],[]];var contours=function contours(){var dx=1,dy=1,threshold$$1=thresholdSturges,smooth=smoothLinear;function contours(values){var tz=threshold$$1(values);// Convert number of thresholds into uniform thresholds.
if(!Array.isArray(tz)){var domain=extent(values),start=domain[0],stop=domain[1];tz=tickStep(start,stop,tz);tz=sequence(Math.floor(start/tz)*tz,Math.floor(stop/tz)*tz,tz);}else{tz=tz.slice().sort(ascending$2);}// Accumulate, smooth contour rings, assign holes to exterior rings.
// Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
var layers=tz.map(function(value){var polygons=[],holes=[];isorings(values,value,function(ring){smooth(ring,values,value);if(area$3(ring)>0)polygons.push([ring]);else holes.push(ring);});holes.forEach(function(hole){for(var i=0,n=polygons.length,polygon;i<n;++i){if(contains((polygon=polygons[i])[0],hole)!==-1){polygon.push(hole);return;}}});return polygons;});return layers.map(function(polygons,i){return{type:"MultiPolygon",value:tz[i],coordinates:polygons};});}// Marching squares with isolines stitched into rings.
// Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
function isorings(values,value,callback){var fragmentByStart=new Array(),fragmentByEnd=new Array(),x,y,t0,t1,t2,t3;// Special case for the first row (y = -1, t2 = t3 = 0).
x=y=-1;t1=values[0]>=value;cases[t1<<1].forEach(stitch);while(++x<dx-1){t0=t1,t1=values[x+1]>=value;cases[t0|t1<<1].forEach(stitch);}cases[t1<<0].forEach(stitch);// General case for the intermediate rows.
while(++y<dy-1){x=-1;t1=values[y*dx+dx]>=value;t2=values[y*dx]>=value;cases[t1<<1|t2<<2].forEach(stitch);while(++x<dx-1){t0=t1,t1=values[y*dx+dx+x+1]>=value;t3=t2,t2=values[y*dx+x+1]>=value;cases[t0|t1<<1|t2<<2|t3<<3].forEach(stitch);}cases[t1|t2<<3].forEach(stitch);}// Special case for the last row (y = dy - 1, t0 = t1 = 0).
x=-1;t2=values[y*dx]>=value;cases[t2<<2].forEach(stitch);while(++x<dx-1){t3=t2,t2=values[y*dx+x+1]>=value;cases[t2<<2|t3<<3].forEach(stitch);}cases[t2<<3].forEach(stitch);function stitch(line){var start=[line[0][0]+x,line[0][1]+y],end=[line[1][0]+x,line[1][1]+y],startIndex=index(start),endIndex=index(end),f,g;if(f=fragmentByEnd[startIndex]){if(g=fragmentByStart[endIndex]){delete fragmentByEnd[f.end];delete fragmentByStart[g.start];if(f===g){f.ring.push(end);callback(f.ring);}else{fragmentByStart[f.start]=fragmentByEnd[g.end]={start:f.start,end:g.end,ring:f.ring.concat(g.ring)};}}else{delete fragmentByEnd[f.end];f.ring.push(end);fragmentByEnd[f.end=endIndex]=f;}}else if(f=fragmentByStart[endIndex]){if(g=fragmentByEnd[startIndex]){delete fragmentByStart[f.start];delete fragmentByEnd[g.end];if(f===g){f.ring.push(end);callback(f.ring);}else{fragmentByStart[g.start]=fragmentByEnd[f.end]={start:g.start,end:f.end,ring:g.ring.concat(f.ring)};}}else{delete fragmentByStart[f.start];f.ring.unshift(start);fragmentByStart[f.start=startIndex]=f;}}else{fragmentByStart[startIndex]=fragmentByEnd[endIndex]={start:startIndex,end:endIndex,ring:[start,end]};}}}function index(point){return point[0]*2+point[1]*(dx+1)*4;}function smoothLinear(ring,values,value){ring.forEach(function(point){var x=point[0],y=point[1],xt=x|0,yt=y|0,v0,v1=values[yt*dx+xt];if(x>0&&x<dx&&xt===x){v0=values[yt*dx+xt-1];point[0]=x+(value-v0)/(v1-v0)-0.5;}if(y>0&&y<dy&&yt===y){v0=values[(yt-1)*dx+xt];point[1]=y+(value-v0)/(v1-v0)-0.5;}});}contours.size=function(_){if(!arguments.length)return[dx,dy];var _0=Math.ceil(_[0]),_1=Math.ceil(_[1]);if(!(_0>0)||!(_1>0))throw new Error("invalid size");return dx=_0,dy=_1,contours;};contours.thresholds=function(_){return arguments.length?(threshold$$1=typeof _==="function"?_:Array.isArray(_)?constant$6(slice$4.call(_)):constant$6(_),contours):threshold$$1;};contours.smooth=function(_){return arguments.length?(smooth=_?smoothLinear:noop$4,contours):smooth===smoothLinear;};return contours;};// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source,target,r){var n=source.width,m=source.height,w=(r<<1)+1;for(var j=0;j<m;++j){for(var i=0,sr=0;i<n+r;++i){if(i<n){sr+=source.data[i+j*n];}if(i>=r){if(i>=w){sr-=source.data[i-w+j*n];}target.data[i-r+j*n]=sr/Math.min(i+1,n-1+w-i,w);}}}}// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurY(source,target,r){var n=source.width,m=source.height,w=(r<<1)+1;for(var i=0;i<n;++i){for(var j=0,sr=0;j<m+r;++j){if(j<m){sr+=source.data[i+j*n];}if(j>=r){if(j>=w){sr-=source.data[i+(j-w)*n];}target.data[i+(j-r)*n]=sr/Math.min(j+1,m-1+w-j,w);}}}}function defaultX(d){return d[0];}function defaultY(d){return d[1];}var contourDensity=function contourDensity(){var x=defaultX,y=defaultY,dx=960,dy=500,r=20,// blur radius
k=2,// log2(grid cell size)
o=r*3,// grid offset, to pad for blur
n=dx+o*2>>k,// grid width
m=dy+o*2>>k,// grid height
threshold$$1=constant$6(20);function density(data){var values0=new Float32Array(n*m),values1=new Float32Array(n*m);data.forEach(function(d,i,data){var xi=x(d,i,data)+o>>k,yi=y(d,i,data)+o>>k;if(xi>=0&&xi<n&&yi>=0&&yi<m){++values0[xi+yi*n];}});// TODO Optimize.
blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);var tz=threshold$$1(values0);// Convert number of thresholds into uniform thresholds.
if(!Array.isArray(tz)){var stop=max(values0);tz=tickStep(0,stop,tz);tz=sequence(0,Math.floor(stop/tz)*tz,tz);tz.shift();}return contours().thresholds(tz).size([n,m])(values0).map(transform);}function transform(geometry){geometry.value*=Math.pow(2,-2*k);// Density in points per square pixel.
geometry.coordinates.forEach(transformPolygon);return geometry;}function transformPolygon(coordinates){coordinates.forEach(transformRing);}function transformRing(coordinates){coordinates.forEach(transformPoint);}// TODO Optimize.
function transformPoint(coordinates){coordinates[0]=coordinates[0]*Math.pow(2,k)-o;coordinates[1]=coordinates[1]*Math.pow(2,k)-o;}function resize(){o=r*3;n=dx+o*2>>k;m=dy+o*2>>k;return density;}density.x=function(_){return arguments.length?(x=typeof _==="function"?_:constant$6(+_),density):x;};density.y=function(_){return arguments.length?(y=typeof _==="function"?_:constant$6(+_),density):y;};density.size=function(_){if(!arguments.length)return[dx,dy];var _0=Math.ceil(_[0]),_1=Math.ceil(_[1]);if(!(_0>=0)&&!(_0>=0))throw new Error("invalid size");return dx=_0,dy=_1,resize();};density.cellSize=function(_){if(!arguments.length)return 1<<k;if(!((_=+_)>=1))throw new Error("invalid cell size");return k=Math.floor(Math.log(_)/Math.LN2),resize();};density.thresholds=function(_){return arguments.length?(threshold$$1=typeof _==="function"?_:Array.isArray(_)?constant$6(slice$4.call(_)):constant$6(_),density):threshold$$1;};density.bandwidth=function(_){if(!arguments.length)return Math.sqrt(r*(r+1));if(!((_=+_)>=0))throw new Error("invalid bandwidth");return r=Math.round((Math.sqrt(4*_*_+1)-1)/2),resize();};return density;};var CONTOUR_PARAMS=['values','size'];var DENSITY_PARAMS=['x','y','size','cellSize','bandwidth'];/**
 * Generate contours based on kernel-density estimation of point data.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.
 *  If the values parameter is provided, this must be the dimensions of the input data.
 *  If density estimation is performed, this is the output view dimensions in pixels.
 * @param {Array<number>} [params.values] - An array of numeric values representing an
 *  width x height grid of values over which to compute contours. If unspecified, this
 *  transform will instead attempt to compute contours for the kernel density estimate
 *  using values drawn from data tuples in the input pulse.
 * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.
 * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.
 * @param {number} [params.cellSize] - Contour density calculation cell size.
 * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.
 * @param {Array<number>} [params.thresholds] - Contour threshold array. If
 *   this parameter is set, the count and nice parameters will be ignored.
 * @param {number} [params.count] - The desired number of contours.
 * @param {boolean} [params.nice] - Boolean flag indicating if the contour
 *   threshold values should be automatically aligned to "nice"
 *   human-friendly values. Setting this flag may cause the number of
 *   thresholds to deviate from the specified count.
 */function Contour(params){Transform.call(this,null,params);}Contour.Definition={"type":"Contour","metadata":{"generates":true,"source":true},"params":[{"name":"size","type":"number","array":true,"length":2,"required":true},{"name":"values","type":"number","array":true},{"name":"x","type":"field"},{"name":"y","type":"field"},{"name":"cellSize","type":"number"},{"name":"bandwidth","type":"number"},{"name":"count","type":"number"},{"name":"nice","type":"number","default":false},{"name":"thresholds","type":"number","array":true}]};var prototype$60=inherits(Contour,Transform);prototype$60.transform=function(_,pulse){if(this.value&&!pulse.changed()&&!_.modified())return pulse.StopPropagation;var out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),count=_.count||10,contour,params,values;if(_.values){contour=contours();params=CONTOUR_PARAMS;values=_.values;}else{contour=contourDensity();params=DENSITY_PARAMS;values=pulse.materialize(pulse.SOURCE).source;}// set threshold parameter
contour.thresholds(_.thresholds||(_.nice?count:quantize$4(count)));// set all other parameters
params.forEach(function(param){if(_[param]!=null)contour[param](_[param]);});if(this.value)out.rem=this.value;this.value=out.source=out.add=contour(values).map(ingest);return out;};function quantize$4(k){return function(values){var ex=extent(values),x0=ex[0],dx=ex[1]-x0,t=[],i=1;for(;i<=k;++i){t.push(x0+dx*i/(k+1));}return t;};}var Feature='Feature';var FeatureCollection='FeatureCollection';var MultiPoint='MultiPoint';/**
 * Consolidate an array of [longitude, latitude] points or GeoJSON features
 * into a combined GeoJSON object. This transform is particularly useful for
 * combining geo data for a Projection's fit argument. The resulting GeoJSON
 * data is available as this transform's value. Input pulses are unchanged.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.fields] - A two-element array
 *   of field accessors for the longitude and latitude values.
 * @param {function(object): *} params.geojson - A field accessor for
 *   retrieving GeoJSON feature data.
 */function GeoJSON(params){Transform.call(this,null,params);}GeoJSON.Definition={"type":"GeoJSON","metadata":{},"params":[{"name":"fields","type":"field","array":true,"length":2},{"name":"geojson","type":"field"}]};var prototype$61=inherits(GeoJSON,Transform);prototype$61.transform=function(_,pulse){var features=this._features,points=this._points,fields=_.fields,lon=fields&&fields[0],lat=fields&&fields[1],geojson=_.geojson,flag=pulse.ADD,mod;mod=_.modified()||pulse.changed(pulse.REM)||pulse.modified(accessorFields(geojson))||lon&&pulse.modified(accessorFields(lon))||lat&&pulse.modified(accessorFields(lat));if(!this.value||mod){flag=pulse.SOURCE;this._features=features=[];this._points=points=[];}if(geojson){pulse.visit(flag,function(t){features.push(geojson(t));});}if(lon&&lat){pulse.visit(flag,function(t){var x=lon(t),y=lat(t);if(x!=null&&y!=null&&(x=+x)===x&&(y=+y)===y){points.push([x,y]);}});features=features.concat({type:Feature,geometry:{type:MultiPoint,coordinates:points}});}this.value={type:FeatureCollection,features:features};};// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
var adder=function adder(){return new Adder();};function Adder(){this.reset();}Adder.prototype={constructor:Adder,reset:function reset(){this.s=// rounded value
this.t=0;// exact error
},add:function add(y){add$3(temp$2,y,this.t);add$3(this,temp$2.s,this.s);if(this.s)this.t+=temp$2.t;else this.s=temp$2.t;},valueOf:function valueOf(){return this.s;}};var temp$2=new Adder();function add$3(adder,a,b){var x=adder.s=a+b,bv=x-a,av=x-bv;adder.t=a-av+(b-bv);}var epsilon$2=1e-6;var pi$3=Math.PI;var halfPi$2=pi$3/2;var quarterPi=pi$3/4;var tau$4=pi$3*2;var degrees$1=180/pi$3;var radians=pi$3/180;var abs$1=Math.abs;var atan=Math.atan;var atan2$1=Math.atan2;var cos$1=Math.cos;var ceil=Math.ceil;var exp=Math.exp;var log$2=Math.log;var pow$1=Math.pow;var sin$1=Math.sin;var sign$1=Math.sign||function(x){return x>0?1:x<0?-1:0;};var sqrt$2=Math.sqrt;var tan=Math.tan;function acos$1(x){return x>1?0:x<-1?pi$3:Math.acos(x);}function asin$1(x){return x>1?halfPi$2:x<-1?-halfPi$2:Math.asin(x);}function noop$5(){}function streamGeometry(geometry,stream){if(geometry&&streamGeometryType.hasOwnProperty(geometry.type)){streamGeometryType[geometry.type](geometry,stream);}}var streamObjectType={Feature:function Feature(object,stream){streamGeometry(object.geometry,stream);},FeatureCollection:function FeatureCollection(object,stream){var features=object.features,i=-1,n=features.length;while(++i<n){streamGeometry(features[i].geometry,stream);}}};var streamGeometryType={Sphere:function Sphere(object,stream){stream.sphere();},Point:function Point(object,stream){object=object.coordinates;stream.point(object[0],object[1],object[2]);},MultiPoint:function MultiPoint(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){object=coordinates[i],stream.point(object[0],object[1],object[2]);}},LineString:function LineString(object,stream){streamLine(object.coordinates,stream,0);},MultiLineString:function MultiLineString(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){streamLine(coordinates[i],stream,0);}},Polygon:function Polygon(object,stream){streamPolygon(object.coordinates,stream);},MultiPolygon:function MultiPolygon(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){streamPolygon(coordinates[i],stream);}},GeometryCollection:function GeometryCollection(object,stream){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n){streamGeometry(geometries[i],stream);}}};function streamLine(coordinates,stream,closed){var i=-1,n=coordinates.length-closed,coordinate;stream.lineStart();while(++i<n){coordinate=coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);}stream.lineEnd();}function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;stream.polygonStart();while(++i<n){streamLine(coordinates[i],stream,1);}stream.polygonEnd();}var geoStream=function geoStream(object,stream){if(object&&streamObjectType.hasOwnProperty(object.type)){streamObjectType[object.type](object,stream);}else{streamGeometry(object,stream);}};var areaRingSum=adder();var areaSum=adder();var lambda00;var phi00;var lambda0;var cosPhi0;var sinPhi0;function spherical(cartesian){return[atan2$1(cartesian[1],cartesian[0]),asin$1(cartesian[2])];}function cartesian(spherical){var lambda=spherical[0],phi=spherical[1],cosPhi=cos$1(phi);return[cosPhi*cos$1(lambda),cosPhi*sin$1(lambda),sin$1(phi)];}function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];}function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}// TODO return a
function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2];}function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k];}// TODO return d
function cartesianNormalizeInPlace(d){var l=sqrt$2(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/=l,d[2]/=l;}var lambda0$1;var phi0;var lambda1;var phi1;var lambda2;var lambda00$1;var phi00$1;var p0;var deltaSum=adder();var ranges;var range;var W0;var X0;var Y0;var Z0;// previous point
var compose=function compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1]);}if(a.invert&&b.invert)compose.invert=function(x,y){return x=b.invert(x,y),x&&a.invert(x[0],x[1]);};return compose;};function rotationIdentity(lambda,phi){return[lambda>pi$3?lambda-tau$4:lambda<-pi$3?lambda+tau$4:lambda,phi];}rotationIdentity.invert=rotationIdentity;function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau$4)?deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity;}function forwardRotationLambda(deltaLambda){return function(lambda,phi){return lambda+=deltaLambda,[lambda>pi$3?lambda-tau$4:lambda<-pi$3?lambda+tau$4:lambda,phi];};}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);rotation.invert=forwardRotationLambda(-deltaLambda);return rotation;}function rotationPhiGamma(deltaPhi,deltaGamma){var cosDeltaPhi=cos$1(deltaPhi),sinDeltaPhi=sin$1(deltaPhi),cosDeltaGamma=cos$1(deltaGamma),sinDeltaGamma=sin$1(deltaGamma);function rotation(lambda,phi){var cosPhi=cos$1(phi),x=cos$1(lambda)*cosPhi,y=sin$1(lambda)*cosPhi,z=sin$1(phi),k=z*cosDeltaPhi+x*sinDeltaPhi;return[atan2$1(y*cosDeltaGamma-k*sinDeltaGamma,x*cosDeltaPhi-z*sinDeltaPhi),asin$1(k*cosDeltaGamma+y*sinDeltaGamma)];}rotation.invert=function(lambda,phi){var cosPhi=cos$1(phi),x=cos$1(lambda)*cosPhi,y=sin$1(lambda)*cosPhi,z=sin$1(phi),k=z*cosDeltaGamma-y*sinDeltaGamma;return[atan2$1(y*cosDeltaGamma+z*sinDeltaGamma,x*cosDeltaPhi+k*sinDeltaPhi),asin$1(k*cosDeltaPhi-x*sinDeltaPhi)];};return rotation;}var rotation=function rotation(rotate){rotate=rotateRadians(rotate[0]*radians,rotate[1]*radians,rotate.length>2?rotate[2]*radians:0);function forward(coordinates){coordinates=rotate(coordinates[0]*radians,coordinates[1]*radians);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;}forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*radians,coordinates[1]*radians);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;};return forward;};// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream,radius,delta,direction,t0,t1){if(!delta)return;var cosRadius=cos$1(radius),sinRadius=sin$1(radius),step=direction*delta;if(t0==null){t0=radius+direction*tau$4;t1=radius-step/2;}else{t0=circleRadius(cosRadius,t0);t1=circleRadius(cosRadius,t1);if(direction>0?t0<t1:t0>t1)t0+=direction*tau$4;}for(var point,t=t0;direction>0?t>t1:t<t1;t-=step){point=spherical([cosRadius,-sinRadius*cos$1(t),-sinRadius*sin$1(t)]);stream.point(point[0],point[1]);}}// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius,point){point=cartesian(point),point[0]-=cosRadius;cartesianNormalizeInPlace(point);var radius=acos$1(-point[1]);return((-point[2]<0?-radius:radius)+tau$4-epsilon$2)%tau$4;}var clipBuffer=function clipBuffer(){var lines=[],line;return{point:function point(x,y){line.push([x,y]);},lineStart:function lineStart(){lines.push(line=[]);},lineEnd:noop$5,rejoin:function rejoin(){if(lines.length>1)lines.push(lines.pop().concat(lines.shift()));},result:function result(){var result=lines;lines=[];line=null;return result;}};};var clipLine=function clipLine(a,b,x0,y0,x1,y1){var ax=a[0],ay=a[1],bx=b[0],by=b[1],t0=0,t1=1,dx=bx-ax,dy=by-ay,r;r=x0-ax;if(!dx&&r>0)return;r/=dx;if(dx<0){if(r<t0)return;if(r<t1)t1=r;}else if(dx>0){if(r>t1)return;if(r>t0)t0=r;}r=x1-ax;if(!dx&&r<0)return;r/=dx;if(dx<0){if(r>t1)return;if(r>t0)t0=r;}else if(dx>0){if(r<t0)return;if(r<t1)t1=r;}r=y0-ay;if(!dy&&r>0)return;r/=dy;if(dy<0){if(r<t0)return;if(r<t1)t1=r;}else if(dy>0){if(r>t1)return;if(r>t0)t0=r;}r=y1-ay;if(!dy&&r<0)return;r/=dy;if(dy<0){if(r>t1)return;if(r>t0)t0=r;}else if(dy>0){if(r<t0)return;if(r<t1)t1=r;}if(t0>0)a[0]=ax+t0*dx,a[1]=ay+t0*dy;if(t1<1)b[0]=ax+t1*dx,b[1]=ay+t1*dy;return true;};var pointEqual=function pointEqual(a,b){return abs$1(a[0]-b[0])<epsilon$2&&abs$1(a[1]-b[1])<epsilon$2;};function Intersection(point,points,other,entry){this.x=point;this.z=points;this.o=other;// another intersection
this.e=entry;// is an entry?
this.v=false;// visited
this.n=this.p=null;// next & previous
}// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
var clipPolygon=function clipPolygon(segments,compareIntersection,startInside,interpolate,stream){var subject=[],clip=[],i,n;segments.forEach(function(segment){if((n=segment.length-1)<=0)return;var n,p0=segment[0],p1=segment[n],x;// If the first and last points of a segment are coincident, then treat as a
// closed ring. TODO if all rings are closed, then the winding order of the
// exterior ring should be checked.
if(pointEqual(p0,p1)){stream.lineStart();for(i=0;i<n;++i){stream.point((p0=segment[i])[0],p0[1]);}stream.lineEnd();return;}subject.push(x=new Intersection(p0,segment,null,true));clip.push(x.o=new Intersection(p0,null,x,false));subject.push(x=new Intersection(p1,segment,null,false));clip.push(x.o=new Intersection(p1,null,x,true));});if(!subject.length)return;clip.sort(compareIntersection);link$1(subject);link$1(clip);for(i=0,n=clip.length;i<n;++i){clip[i].e=startInside=!startInside;}var start=subject[0],points,point;while(1){// Find first unvisited intersection.
var current=start,isSubject=true;while(current.v){if((current=current.n)===start)return;}points=current.z;stream.lineStart();do{current.v=current.o.v=true;if(current.e){if(isSubject){for(i=0,n=points.length;i<n;++i){stream.point((point=points[i])[0],point[1]);}}else{interpolate(current.x,current.n.x,1,stream);}current=current.n;}else{if(isSubject){points=current.p.z;for(i=points.length-1;i>=0;--i){stream.point((point=points[i])[0],point[1]);}}else{interpolate(current.x,current.p.x,-1,stream);}current=current.p;}current=current.o;points=current.z;isSubject=!isSubject;}while(!current.v);stream.lineEnd();}};function link$1(array){if(!(n=array.length))return;var n,i=0,a=array[0],b;while(++i<n){a.n=b=array[i];b.p=a;a=b;}a.n=b=array[0];b.p=a;}var clipMax=1e9;var clipMin=-clipMax;// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?
function clipExtent(x0,y0,x1,y1){function visible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1;}function interpolate(from,to,direction,stream){var a=0,a1=0;if(from==null||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoint(from,to)<0^direction>0){do{stream.point(a===0||a===3?x0:x1,a>1?y1:y0);}while((a=(a+direction+4)%4)!==a1);}else{stream.point(to[0],to[1]);}}function corner(p,direction){return abs$1(p[0]-x0)<epsilon$2?direction>0?0:3:abs$1(p[0]-x1)<epsilon$2?direction>0?2:1:abs$1(p[1]-y0)<epsilon$2?direction>0?1:0:direction>0?3:2;// abs(p[1] - y1) < epsilon
}function compareIntersection(a,b){return comparePoint(a.x,b.x);}function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:ca===0?b[1]-a[1]:ca===1?a[0]-b[0]:ca===2?a[1]-b[1]:b[0]-a[0];}return function(stream){var activeStream=stream,bufferStream=clipBuffer(),segments,polygon,ring,x__,y__,v__,// first point
x_,y_,v_,// previous point
first,clean;var clipStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:polygonStart,polygonEnd:polygonEnd};function point(x,y){if(visible(x,y))activeStream.point(x,y);}function polygonInside(){var winding=0;for(var i=0,n=polygon.length;i<n;++i){for(var ring=polygon[i],j=1,m=ring.length,point=ring[0],a0,a1,b0=point[0],b1=point[1];j<m;++j){a0=b0,a1=b1,point=ring[j],b0=point[0],b1=point[1];if(a1<=y1){if(b1>y1&&(b0-a0)*(y1-a1)>(b1-a1)*(x0-a0))++winding;}else{if(b1<=y1&&(b0-a0)*(y1-a1)<(b1-a1)*(x0-a0))--winding;}}}return winding;}// Buffer geometry within a polygon and then clip it en masse.
function polygonStart(){activeStream=bufferStream,segments=[],polygon=[],clean=true;}function polygonEnd(){var startInside=polygonInside(),cleanInside=clean&&startInside,visible=(segments=merge$2(segments)).length;if(cleanInside||visible){stream.polygonStart();if(cleanInside){stream.lineStart();interpolate(null,null,1,stream);stream.lineEnd();}if(visible){clipPolygon(segments,compareIntersection,startInside,interpolate,stream);}stream.polygonEnd();}activeStream=stream,segments=polygon=ring=null;}function lineStart(){clipStream.point=linePoint;if(polygon)polygon.push(ring=[]);first=true;v_=false;x_=y_=NaN;}// TODO rather than special-case polygons, simply handle them separately.
// Ideally, coincident intersection points should be jittered to avoid
// clipping issues.
function lineEnd(){if(segments){linePoint(x__,y__);if(v__&&v_)bufferStream.rejoin();segments.push(bufferStream.result());}clipStream.point=point;if(v_)activeStream.lineEnd();}function linePoint(x,y){var v=visible(x,y);if(polygon)ring.push([x,y]);if(first){x__=x,y__=y,v__=v;first=false;if(v){activeStream.lineStart();activeStream.point(x,y);}}else{if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(clipMin,Math.min(clipMax,x_)),y_=Math.max(clipMin,Math.min(clipMax,y_))],b=[x=Math.max(clipMin,Math.min(clipMax,x)),y=Math.max(clipMin,Math.min(clipMax,y))];if(clipLine(a,b,x0,y0,x1,y1)){if(!v_){activeStream.lineStart();activeStream.point(a[0],a[1]);}activeStream.point(b[0],b[1]);if(!v)activeStream.lineEnd();clean=false;}else if(v){activeStream.lineStart();activeStream.point(x,y);clean=false;}}}x_=x,y_=y,v_=v;}return clipStream;};}var sum$2=adder();var polygonContains=function polygonContains(polygon,point){var lambda=point[0],phi=point[1],normal=[sin$1(lambda),-cos$1(lambda),0],angle=0,winding=0;sum$2.reset();for(var i=0,n=polygon.length;i<n;++i){if(!(m=(ring=polygon[i]).length))continue;var ring,m,point0=ring[m-1],lambda0=point0[0],phi0=point0[1]/2+quarterPi,sinPhi0=sin$1(phi0),cosPhi0=cos$1(phi0);for(var j=0;j<m;++j,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[j],lambda1=point1[0],phi1=point1[1]/2+quarterPi,sinPhi1=sin$1(phi1),cosPhi1=cos$1(phi1),delta=lambda1-lambda0,sign=delta>=0?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi$3,k=sinPhi0*sinPhi1;sum$2.add(atan2$1(k*sign*sin$1(absDelta),cosPhi0*cosPhi1+k*cos$1(absDelta)));angle+=antimeridian?delta+sign*tau$4:delta;// Are the longitudes either side of the point’s meridian (lambda),
// and are the latitudes smaller than the parallel (phi)?
if(antimeridian^lambda0>=lambda^lambda1>=lambda){var arc=cartesianCross(cartesian(point0),cartesian(point1));cartesianNormalizeInPlace(arc);var intersection=cartesianCross(normal,arc);cartesianNormalizeInPlace(intersection);var phiArc=(antimeridian^delta>=0?-1:1)*asin$1(intersection[2]);if(phi>phiArc||phi===phiArc&&(arc[0]||arc[1])){winding+=antimeridian^delta>=0?1:-1;}}}}// First, determine whether the South pole is inside or outside:
//
// It is inside if:
// * the polygon winds around it in a clockwise direction.
// * the polygon does not (cumulatively) wind around it, but has a negative
//   (counter-clockwise) area.
//
// Second, count the (signed) number of times a segment crosses a lambda
// from the point to the South pole.  If it is zero, then the point is the
// same side as the South pole.
return(angle<-epsilon$2||angle<epsilon$2&&sum$2<-epsilon$2)^winding&1;};var lengthSum=adder();var lambda0$2;var sinPhi0$1;var cosPhi0$1;var lengthStream={sphere:noop$5,point:noop$5,lineStart:lengthLineStart,lineEnd:noop$5,polygonStart:noop$5,polygonEnd:noop$5};function lengthLineStart(){lengthStream.point=lengthPointFirst;lengthStream.lineEnd=lengthLineEnd;}function lengthLineEnd(){lengthStream.point=lengthStream.lineEnd=noop$5;}function lengthPointFirst(lambda,phi){lambda*=radians,phi*=radians;lambda0$2=lambda,sinPhi0$1=sin$1(phi),cosPhi0$1=cos$1(phi);lengthStream.point=lengthPoint;}function lengthPoint(lambda,phi){lambda*=radians,phi*=radians;var sinPhi=sin$1(phi),cosPhi=cos$1(phi),delta=abs$1(lambda-lambda0$2),cosDelta=cos$1(delta),sinDelta=sin$1(delta),x=cosPhi*sinDelta,y=cosPhi0$1*sinPhi-sinPhi0$1*cosPhi*cosDelta,z=sinPhi0$1*sinPhi+cosPhi0$1*cosPhi*cosDelta;lengthSum.add(atan2$1(sqrt$2(x*x+y*y),z));lambda0$2=lambda,sinPhi0$1=sinPhi,cosPhi0$1=cosPhi;}var length$1=function length$1(object){lengthSum.reset();geoStream(object,lengthStream);return+lengthSum;};var coordinates=[null,null];var object$3={type:"LineString",coordinates:coordinates};var distance=function distance(a,b){coordinates[0]=a;coordinates[1]=b;return length$1(object$3);};var containsGeometryType={Sphere:function Sphere(){return true;},Point:function Point(object,point){return containsPoint(object.coordinates,point);},MultiPoint:function MultiPoint(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){if(containsPoint(coordinates[i],point))return true;}return false;},LineString:function LineString(object,point){return containsLine(object.coordinates,point);},MultiLineString:function MultiLineString(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){if(containsLine(coordinates[i],point))return true;}return false;},Polygon:function Polygon(object,point){return containsPolygon(object.coordinates,point);},MultiPolygon:function MultiPolygon(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n){if(containsPolygon(coordinates[i],point))return true;}return false;},GeometryCollection:function GeometryCollection(object,point){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n){if(containsGeometry(geometries[i],point))return true;}return false;}};function containsGeometry(geometry,point){return geometry&&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):false;}function containsPoint(coordinates,point){return distance(coordinates,point)===0;}function containsLine(coordinates,point){var ab=distance(coordinates[0],coordinates[1]),ao=distance(coordinates[0],point),ob=distance(point,coordinates[1]);return ao+ob<=ab+epsilon$2;}function containsPolygon(coordinates,point){return!!polygonContains(coordinates.map(ringRadians),pointRadians(point));}function ringRadians(ring){return ring=ring.map(pointRadians),ring.pop(),ring;}function pointRadians(point){return[point[0]*radians,point[1]*radians];}function graticuleX(y0,y1,dy){var y=sequence(y0,y1-epsilon$2,dy).concat(y1);return function(x){return y.map(function(y){return[x,y];});};}function graticuleY(x0,x1,dx){var x=sequence(x0,x1-epsilon$2,dx).concat(x1);return function(y){return x.map(function(x){return[x,y];});};}function graticule(){var x1,x0,X1,X0,y1,y0,Y1,Y0,dx=10,dy=dx,DX=90,DY=360,x,y,X,Y,precision=2.5;function graticule(){return{type:"MultiLineString",coordinates:lines()};}function lines(){return sequence(ceil(X0/DX)*DX,X1,DX).map(X).concat(sequence(ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(sequence(ceil(x0/dx)*dx,x1,dx).filter(function(x){return abs$1(x%DX)>epsilon$2;}).map(x)).concat(sequence(ceil(y0/dy)*dy,y1,dy).filter(function(y){return abs$1(y%DY)>epsilon$2;}).map(y));}graticule.lines=function(){return lines().map(function(coordinates){return{type:"LineString",coordinates:coordinates};});};graticule.outline=function(){return{type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]};};graticule.extent=function(_){if(!arguments.length)return graticule.extentMinor();return graticule.extentMajor(_).extentMinor(_);};graticule.extentMajor=function(_){if(!arguments.length)return[[X0,Y0],[X1,Y1]];X0=+_[0][0],X1=+_[1][0];Y0=+_[0][1],Y1=+_[1][1];if(X0>X1)_=X0,X0=X1,X1=_;if(Y0>Y1)_=Y0,Y0=Y1,Y1=_;return graticule.precision(precision);};graticule.extentMinor=function(_){if(!arguments.length)return[[x0,y0],[x1,y1]];x0=+_[0][0],x1=+_[1][0];y0=+_[0][1],y1=+_[1][1];if(x0>x1)_=x0,x0=x1,x1=_;if(y0>y1)_=y0,y0=y1,y1=_;return graticule.precision(precision);};graticule.step=function(_){if(!arguments.length)return graticule.stepMinor();return graticule.stepMajor(_).stepMinor(_);};graticule.stepMajor=function(_){if(!arguments.length)return[DX,DY];DX=+_[0],DY=+_[1];return graticule;};graticule.stepMinor=function(_){if(!arguments.length)return[dx,dy];dx=+_[0],dy=+_[1];return graticule;};graticule.precision=function(_){if(!arguments.length)return precision;precision=+_;x=graticuleX(y0,y1,90);y=graticuleY(x0,x1,precision);X=graticuleX(Y0,Y1,90);Y=graticuleY(X0,X1,precision);return graticule;};return graticule.extentMajor([[-180,-90+epsilon$2],[180,90-epsilon$2]]).extentMinor([[-180,-80-epsilon$2],[180,80+epsilon$2]]);}var identity$6=function identity$6(x){return x;};var areaSum$1=adder();var areaRingSum$1=adder();var x00;var y00;var x0$1;var y0$1;var areaStream$1={point:noop$5,lineStart:noop$5,lineEnd:noop$5,polygonStart:function polygonStart(){areaStream$1.lineStart=areaRingStart$1;areaStream$1.lineEnd=areaRingEnd$1;},polygonEnd:function polygonEnd(){areaStream$1.lineStart=areaStream$1.lineEnd=areaStream$1.point=noop$5;areaSum$1.add(abs$1(areaRingSum$1));areaRingSum$1.reset();},result:function result(){var area=areaSum$1/2;areaSum$1.reset();return area;}};function areaRingStart$1(){areaStream$1.point=areaPointFirst$1;}function areaPointFirst$1(x,y){areaStream$1.point=areaPoint$1;x00=x0$1=x,y00=y0$1=y;}function areaPoint$1(x,y){areaRingSum$1.add(y0$1*x-x0$1*y);x0$1=x,y0$1=y;}function areaRingEnd$1(){areaPoint$1(x00,y00);}var x0$2=Infinity;var y0$2=x0$2;var x1=-x0$2;var y1=x1;var boundsStream$1={point:boundsPoint$1,lineStart:noop$5,lineEnd:noop$5,polygonStart:noop$5,polygonEnd:noop$5,result:function result(){var bounds=[[x0$2,y0$2],[x1,y1]];x1=y1=-(y0$2=x0$2=Infinity);return bounds;}};function boundsPoint$1(x,y){if(x<x0$2)x0$2=x;if(x>x1)x1=x;if(y<y0$2)y0$2=y;if(y>y1)y1=y;}// TODO Enforce positive area for exterior, negative area for interior?
var X0$1=0;var Y0$1=0;var Z0$1=0;var X1$1=0;var Y1$1=0;var Z1$1=0;var X2$1=0;var Y2$1=0;var Z2$1=0;var x00$1;var y00$1;var x0$3;var y0$3;var centroidStream$1={point:centroidPoint$1,lineStart:centroidLineStart$1,lineEnd:centroidLineEnd$1,polygonStart:function polygonStart(){centroidStream$1.lineStart=centroidRingStart$1;centroidStream$1.lineEnd=centroidRingEnd$1;},polygonEnd:function polygonEnd(){centroidStream$1.point=centroidPoint$1;centroidStream$1.lineStart=centroidLineStart$1;centroidStream$1.lineEnd=centroidLineEnd$1;},result:function result(){var centroid=Z2$1?[X2$1/Z2$1,Y2$1/Z2$1]:Z1$1?[X1$1/Z1$1,Y1$1/Z1$1]:Z0$1?[X0$1/Z0$1,Y0$1/Z0$1]:[NaN,NaN];X0$1=Y0$1=Z0$1=X1$1=Y1$1=Z1$1=X2$1=Y2$1=Z2$1=0;return centroid;}};function centroidPoint$1(x,y){X0$1+=x;Y0$1+=y;++Z0$1;}function centroidLineStart$1(){centroidStream$1.point=centroidPointFirstLine;}function centroidPointFirstLine(x,y){centroidStream$1.point=centroidPointLine;centroidPoint$1(x0$3=x,y0$3=y);}function centroidPointLine(x,y){var dx=x-x0$3,dy=y-y0$3,z=sqrt$2(dx*dx+dy*dy);X1$1+=z*(x0$3+x)/2;Y1$1+=z*(y0$3+y)/2;Z1$1+=z;centroidPoint$1(x0$3=x,y0$3=y);}function centroidLineEnd$1(){centroidStream$1.point=centroidPoint$1;}function centroidRingStart$1(){centroidStream$1.point=centroidPointFirstRing;}function centroidRingEnd$1(){centroidPointRing(x00$1,y00$1);}function centroidPointFirstRing(x,y){centroidStream$1.point=centroidPointRing;centroidPoint$1(x00$1=x0$3=x,y00$1=y0$3=y);}function centroidPointRing(x,y){var dx=x-x0$3,dy=y-y0$3,z=sqrt$2(dx*dx+dy*dy);X1$1+=z*(x0$3+x)/2;Y1$1+=z*(y0$3+y)/2;Z1$1+=z;z=y0$3*x-x0$3*y;X2$1+=z*(x0$3+x);Y2$1+=z*(y0$3+y);Z2$1+=z*3;centroidPoint$1(x0$3=x,y0$3=y);}function PathContext(context){this._context=context;}PathContext.prototype={_radius:4.5,pointRadius:function pointRadius(_){return this._radius=_,this;},polygonStart:function polygonStart(){this._line=0;},polygonEnd:function polygonEnd(){this._line=NaN;},lineStart:function lineStart(){this._point=0;},lineEnd:function lineEnd(){if(this._line===0)this._context.closePath();this._point=NaN;},point:function point(x,y){switch(this._point){case 0:{this._context.moveTo(x,y);this._point=1;break;}case 1:{this._context.lineTo(x,y);break;}default:{this._context.moveTo(x+this._radius,y);this._context.arc(x,y,this._radius,0,tau$4);break;}}},result:noop$5};var lengthSum$1=adder();var lengthRing;var x00$2;var y00$2;var x0$4;var y0$4;var lengthStream$1={point:noop$5,lineStart:function lineStart(){lengthStream$1.point=lengthPointFirst$1;},lineEnd:function lineEnd(){if(lengthRing)lengthPoint$1(x00$2,y00$2);lengthStream$1.point=noop$5;},polygonStart:function polygonStart(){lengthRing=true;},polygonEnd:function polygonEnd(){lengthRing=null;},result:function result(){var length=+lengthSum$1;lengthSum$1.reset();return length;}};function lengthPointFirst$1(x,y){lengthStream$1.point=lengthPoint$1;x00$2=x0$4=x,y00$2=y0$4=y;}function lengthPoint$1(x,y){x0$4-=x,y0$4-=y;lengthSum$1.add(sqrt$2(x0$4*x0$4+y0$4*y0$4));x0$4=x,y0$4=y;}function PathString(){this._string=[];}PathString.prototype={_radius:4.5,_circle:circle$2(4.5),pointRadius:function pointRadius(_){if((_=+_)!==this._radius)this._radius=_,this._circle=null;return this;},polygonStart:function polygonStart(){this._line=0;},polygonEnd:function polygonEnd(){this._line=NaN;},lineStart:function lineStart(){this._point=0;},lineEnd:function lineEnd(){if(this._line===0)this._string.push("Z");this._point=NaN;},point:function point(x,y){switch(this._point){case 0:{this._string.push("M",x,",",y);this._point=1;break;}case 1:{this._string.push("L",x,",",y);break;}default:{if(this._circle==null)this._circle=circle$2(this._radius);this._string.push("M",x,",",y,this._circle);break;}}},result:function result(){if(this._string.length){var result=this._string.join("");this._string=[];return result;}else{return null;}}};function circle$2(radius){return"m0,"+radius+"a"+radius+","+radius+" 0 1,1 0,"+-2*radius+"a"+radius+","+radius+" 0 1,1 0,"+2*radius+"z";}var geoPath=function geoPath(projection,context){var pointRadius=4.5,projectionStream,contextStream;function path(object){if(object){if(typeof pointRadius==="function")contextStream.pointRadius(+pointRadius.apply(this,arguments));geoStream(object,projectionStream(contextStream));}return contextStream.result();}path.area=function(object){geoStream(object,projectionStream(areaStream$1));return areaStream$1.result();};path.measure=function(object){geoStream(object,projectionStream(lengthStream$1));return lengthStream$1.result();};path.bounds=function(object){geoStream(object,projectionStream(boundsStream$1));return boundsStream$1.result();};path.centroid=function(object){geoStream(object,projectionStream(centroidStream$1));return centroidStream$1.result();};path.projection=function(_){return arguments.length?(projectionStream=_==null?(projection=null,identity$6):(projection=_).stream,path):projection;};path.context=function(_){if(!arguments.length)return context;contextStream=_==null?(context=null,new PathString()):new PathContext(context=_);if(typeof pointRadius!=="function")contextStream.pointRadius(pointRadius);return path;};path.pointRadius=function(_){if(!arguments.length)return pointRadius;pointRadius=typeof _==="function"?_:(contextStream.pointRadius(+_),+_);return path;};return path.projection(projection).context(context);};var clip$2=function clip$2(pointVisible,clipLine,interpolate,start){return function(rotate,sink){var line=clipLine(sink),rotatedStart=rotate.invert(start[0],start[1]),ringBuffer=clipBuffer(),ringSink=clipLine(ringBuffer),polygonStarted=false,polygon,segments,ring;var clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){clip.point=pointRing;clip.lineStart=ringStart;clip.lineEnd=ringEnd;segments=[];polygon=[];},polygonEnd:function polygonEnd(){clip.point=point;clip.lineStart=lineStart;clip.lineEnd=lineEnd;segments=merge$2(segments);var startInside=polygonContains(polygon,rotatedStart);if(segments.length){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;clipPolygon(segments,compareIntersection,startInside,interpolate,sink);}else if(startInside){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();}if(polygonStarted)sink.polygonEnd(),polygonStarted=false;segments=polygon=null;},sphere:function sphere(){sink.polygonStart();sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();sink.polygonEnd();}};function point(lambda,phi){var point=rotate(lambda,phi);if(pointVisible(lambda=point[0],phi=point[1]))sink.point(lambda,phi);}function pointLine(lambda,phi){var point=rotate(lambda,phi);line.point(point[0],point[1]);}function lineStart(){clip.point=pointLine;line.lineStart();}function lineEnd(){clip.point=point;line.lineEnd();}function pointRing(lambda,phi){ring.push([lambda,phi]);var point=rotate(lambda,phi);ringSink.point(point[0],point[1]);}function ringStart(){ringSink.lineStart();ring=[];}function ringEnd(){pointRing(ring[0][0],ring[0][1]);ringSink.lineEnd();var clean=ringSink.clean(),ringSegments=ringBuffer.result(),i,n=ringSegments.length,m,segment,point;ring.pop();polygon.push(ring);ring=null;if(!n)return;// No intersections.
if(clean&1){segment=ringSegments[0];if((m=segment.length-1)>0){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();for(i=0;i<m;++i){sink.point((point=segment[i])[0],point[1]);}sink.lineEnd();}return;}// Rejoin connected segments.
// TODO reuse ringBuffer.rejoin()?
if(n>1&&clean&2)ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));segments.push(ringSegments.filter(validSegment));}return clip;};};function validSegment(segment){return segment.length>1;}// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a,b){return((a=a.x)[0]<0?a[1]-halfPi$2-epsilon$2:halfPi$2-a[1])-((b=b.x)[0]<0?b[1]-halfPi$2-epsilon$2:halfPi$2-b[1]);}var clipAntimeridian=clip$2(function(){return true;},clipAntimeridianLine,clipAntimeridianInterpolate,[-pi$3,-halfPi$2]);// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream){var lambda0=NaN,phi0=NaN,sign0=NaN,_clean;// no intersections
return{lineStart:function lineStart(){stream.lineStart();_clean=1;},point:function point(lambda1,phi1){var sign1=lambda1>0?pi$3:-pi$3,delta=abs$1(lambda1-lambda0);if(abs$1(delta-pi$3)<epsilon$2){// line crosses a pole
stream.point(lambda0,phi0=(phi0+phi1)/2>0?halfPi$2:-halfPi$2);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);stream.point(lambda1,phi0);_clean=0;}else if(sign0!==sign1&&delta>=pi$3){// line crosses antimeridian
if(abs$1(lambda0-sign0)<epsilon$2)lambda0-=sign0*epsilon$2;// handle degeneracies
if(abs$1(lambda1-sign1)<epsilon$2)lambda1-=sign1*epsilon$2;phi0=clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);_clean=0;}stream.point(lambda0=lambda1,phi0=phi1);sign0=sign1;},lineEnd:function lineEnd(){stream.lineEnd();lambda0=phi0=NaN;},clean:function clean(){return 2-_clean;// if intersections, rejoin first and last segments
}};}function clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1=sin$1(lambda0-lambda1);return abs$1(sinLambda0Lambda1)>epsilon$2?atan((sin$1(phi0)*(cosPhi1=cos$1(phi1))*sin$1(lambda1)-sin$1(phi1)*(cosPhi0=cos$1(phi0))*sin$1(lambda0))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2;}function clipAntimeridianInterpolate(from,to,direction,stream){var phi;if(from==null){phi=direction*halfPi$2;stream.point(-pi$3,phi);stream.point(0,phi);stream.point(pi$3,phi);stream.point(pi$3,0);stream.point(pi$3,-phi);stream.point(0,-phi);stream.point(-pi$3,-phi);stream.point(-pi$3,0);stream.point(-pi$3,phi);}else if(abs$1(from[0]-to[0])>epsilon$2){var lambda=from[0]<to[0]?pi$3:-pi$3;phi=direction*lambda/2;stream.point(-lambda,phi);stream.point(0,phi);stream.point(lambda,phi);}else{stream.point(to[0],to[1]);}}var clipCircle=function clipCircle(radius,delta){var cr=cos$1(radius),smallRadius=cr>0,notHemisphere=abs$1(cr)>epsilon$2;// TODO optimise for this common case
function interpolate(from,to,direction,stream){circleStream(stream,radius,delta,direction,from,to);}function visible(lambda,phi){return cos$1(lambda)*cos$1(phi)>cr;}// Takes a line and cuts into visible segments. Return values used for polygon
// clipping: 0 - there were intersections or the line was empty; 1 - no
// intersections 2 - there were intersections, and the first and last segments
// should be rejoined.
function clipLine(stream){var point0,// previous point
c0,// code for previous point
v0,// visibility of previous point
v00,// visibility of first point
_clean2;// no intersections
return{lineStart:function lineStart(){v00=v0=false;_clean2=1;},point:function point(lambda,phi){var point1=[lambda,phi],point2,v=visible(lambda,phi),c=smallRadius?v?0:code(lambda,phi):v?code(lambda+(lambda<0?pi$3:-pi$3),phi):0;if(!point0&&(v00=v0=v))stream.lineStart();// Handle degeneracies.
// TODO ignore if not clipping polygons.
if(v!==v0){point2=intersect(point0,point1);if(!point2||pointEqual(point0,point2)||pointEqual(point1,point2)){point1[0]+=epsilon$2;point1[1]+=epsilon$2;v=visible(point1[0],point1[1]);}}if(v!==v0){_clean2=0;if(v){// outside going in
stream.lineStart();point2=intersect(point1,point0);stream.point(point2[0],point2[1]);}else{// inside going out
point2=intersect(point0,point1);stream.point(point2[0],point2[1]);stream.lineEnd();}point0=point2;}else if(notHemisphere&&point0&&smallRadius^v){var t;// If the codes for two points are different, or are both zero,
// and there this segment intersects with the small circle.
if(!(c&c0)&&(t=intersect(point1,point0,true))){_clean2=0;if(smallRadius){stream.lineStart();stream.point(t[0][0],t[0][1]);stream.point(t[1][0],t[1][1]);stream.lineEnd();}else{stream.point(t[1][0],t[1][1]);stream.lineEnd();stream.lineStart();stream.point(t[0][0],t[0][1]);}}}if(v&&(!point0||!pointEqual(point0,point1))){stream.point(point1[0],point1[1]);}point0=point1,v0=v,c0=c;},lineEnd:function lineEnd(){if(v0)stream.lineEnd();point0=null;},// Rejoin first and last segments if there were intersections and the first
// and last points were visible.
clean:function clean(){return _clean2|(v00&&v0)<<1;}};}// Intersects the great circle between a and b with the clip circle.
function intersect(a,b,two){var pa=cartesian(a),pb=cartesian(b);// We have two planes, n1.p = d1 and n2.p = d2.
// Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
var n1=[1,0,0],// normal
n2=cartesianCross(pa,pb),n2n2=cartesianDot(n2,n2),n1n2=n2[0],// cartesianDot(n1, n2),
determinant=n2n2-n1n2*n1n2;// Two polar points.
if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=cartesianCross(n1,n2),A=cartesianScale(n1,c1),B=cartesianScale(n2,c2);cartesianAddInPlace(A,B);// Solve |p(t)|^2 = 1.
var u=n1xn2,w=cartesianDot(A,u),uu=cartesianDot(u,u),t2=w*w-uu*(cartesianDot(A,A)-1);if(t2<0)return;var t=sqrt$2(t2),q=cartesianScale(u,(-w-t)/uu);cartesianAddInPlace(q,A);q=spherical(q);if(!two)return q;// Two intersection points.
var lambda0=a[0],lambda1=b[0],phi0=a[1],phi1=b[1],z;if(lambda1<lambda0)z=lambda0,lambda0=lambda1,lambda1=z;var delta=lambda1-lambda0,polar=abs$1(delta-pi$3)<epsilon$2,meridian=polar||delta<epsilon$2;if(!polar&&phi1<phi0)z=phi0,phi0=phi1,phi1=z;// Check that the first point is between a and b.
if(meridian?polar?phi0+phi1>0^q[1]<(abs$1(q[0]-lambda0)<epsilon$2?phi0:phi1):phi0<=q[1]&&q[1]<=phi1:delta>pi$3^(lambda0<=q[0]&&q[0]<=lambda1)){var q1=cartesianScale(u,(-w+t)/uu);cartesianAddInPlace(q1,A);return[q,spherical(q1)];}}// Generates a 4-bit vector representing the location of a point relative to
// the small circle's bounding box.
function code(lambda,phi){var r=smallRadius?radius:pi$3-radius,code=0;if(lambda<-r)code|=1;// left
else if(lambda>r)code|=2;// right
if(phi<-r)code|=4;// below
else if(phi>r)code|=8;// above
return code;}return clip$2(visible,clipLine,interpolate,smallRadius?[0,-radius]:[-pi$3,radius-pi$3]);};function transformer(methods){return function(stream){var s=new TransformStream();for(var key in methods){s[key]=methods[key];}s.stream=stream;return s;};}function TransformStream(){}TransformStream.prototype={constructor:TransformStream,point:function point(x,y){this.stream.point(x,y);},sphere:function sphere(){this.stream.sphere();},lineStart:function lineStart(){this.stream.lineStart();},lineEnd:function lineEnd(){this.stream.lineEnd();},polygonStart:function polygonStart(){this.stream.polygonStart();},polygonEnd:function polygonEnd(){this.stream.polygonEnd();}};function fitExtent(projection,extent,object){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],clip=projection.clipExtent&&projection.clipExtent();projection.scale(150).translate([0,0]);if(clip!=null)projection.clipExtent(null);geoStream(object,projection.stream(boundsStream$1));var b=boundsStream$1.result(),k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-b[0][1])),x=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2,y=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;if(clip!=null)projection.clipExtent(clip);return projection.scale(k*150).translate([x,y]);}function fitSize(projection,size,object){return fitExtent(projection,[[0,0],size],object);}var maxDepth=16;var cosMinDistance=cos$1(30*radians);// cos(minimum angular distance)
var resample=function resample(project,delta2){return+delta2?resample$1(project,delta2):resampleNone(project);};function resampleNone(project){return transformer({point:function point(x,y){x=project(x,y);this.stream.point(x[0],x[1]);}});}function resample$1(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt$2(a*a+b*b+c*c),phi2=asin$1(c/=m),lambda2=abs$1(abs$1(c)-1)<epsilon$2||abs$1(lambda0-lambda1)<epsilon$2?(lambda0+lambda1)/2:atan2$1(b,a),p=project(lambda2,phi2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;if(dz*dz/d2>delta2// perpendicular projected distance
||abs$1((dx*dx2+dy*dy2)/d2-0.5)>0.3// midpoint close to an end
||a0*a1+b0*b1+c0*c1<cosMinDistance){// angular distance
resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a/=m,b/=m,c,depth,stream);stream.point(x2,y2);resampleLineTo(x2,y2,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream);}}}return function(stream){var lambda00,x00,y00,a00,b00,c00,// first point
lambda0,x0,y0,a0,b0,c0;// previous point
var resampleStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function polygonStart(){stream.polygonStart();resampleStream.lineStart=ringStart;},polygonEnd:function polygonEnd(){stream.polygonEnd();resampleStream.lineStart=lineStart;}};function point(x,y){x=project(x,y);stream.point(x[0],x[1]);}function lineStart(){x0=NaN;resampleStream.point=linePoint;stream.lineStart();}function linePoint(lambda,phi){var c=cartesian([lambda,phi]),p=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=p[0],y0=p[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream);stream.point(x0,y0);}function lineEnd(){resampleStream.point=point;stream.lineEnd();}function ringStart(){lineStart();resampleStream.point=ringPoint;resampleStream.lineEnd=ringEnd;}function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0;resampleStream.point=linePoint;}function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream);resampleStream.lineEnd=lineEnd;lineEnd();}return resampleStream;};}var transformRadians=transformer({point:function point(x,y){this.stream.point(x*radians,y*radians);}});function projection$1(project){return projectionMutator(function(){return project;})();}function projectionMutator(projectAt){var project,k=150,// scale
x=480,y=250,// translate
dx,dy,lambda=0,phi=0,// center
deltaLambda=0,deltaPhi=0,deltaGamma=0,rotate,projectRotate,// rotate
theta=null,preclip=clipAntimeridian,// clip angle
x0=null,y0,x1,y1,postclip=identity$6,// clip extent
delta2=0.5,projectResample=resample(projectTransform,delta2),// precision
cache,cacheStream;function projection(point){point=projectRotate(point[0]*radians,point[1]*radians);return[point[0]*k+dx,dy-point[1]*k];}function invert(point){point=projectRotate.invert((point[0]-dx)/k,(dy-point[1])/k);return point&&[point[0]*degrees$1,point[1]*degrees$1];}function projectTransform(x,y){return x=project(x,y),[x[0]*k+dx,dy-x[1]*k];}projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(preclip(rotate,projectResample(postclip(cacheStream=stream))));};projection.clipAngle=function(_){return arguments.length?(preclip=+_?clipCircle(theta=_*radians,6*radians):(theta=null,clipAntimeridian),reset()):theta*degrees$1;};projection.clipExtent=function(_){return arguments.length?(postclip=_==null?(x0=y0=x1=y1=null,identity$6):clipExtent(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):x0==null?null:[[x0,y0],[x1,y1]];};projection.scale=function(_){return arguments.length?(k=+_,recenter()):k;};projection.translate=function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y];};projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians,phi=_[1]%360*radians,recenter()):[lambda*degrees$1,phi*degrees$1];};projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians,deltaPhi=_[1]%360*radians,deltaGamma=_.length>2?_[2]%360*radians:0,recenter()):[deltaLambda*degrees$1,deltaPhi*degrees$1,deltaGamma*degrees$1];};projection.precision=function(_){return arguments.length?(projectResample=resample(projectTransform,delta2=_*_),reset()):sqrt$2(delta2);};projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object);};projection.fitSize=function(size,object){return fitSize(projection,size,object);};function recenter(){projectRotate=compose(rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma),project);var center=project(lambda,phi);dx=x-center[0]*k;dy=y+center[1]*k;return reset();}function reset(){cache=cacheStream=null;return projection;}return function(){project=projectAt.apply(this,arguments);projection.invert=project.invert&&invert;return recenter();};}function conicProjection(projectAt){var phi0=0,phi1=pi$3/3,m=projectionMutator(projectAt),p=m(phi0,phi1);p.parallels=function(_){return arguments.length?m(phi0=_[0]*radians,phi1=_[1]*radians):[phi0*degrees$1,phi1*degrees$1];};return p;}function cylindricalEqualAreaRaw(phi0){var cosPhi0=cos$1(phi0);function forward(lambda,phi){return[lambda*cosPhi0,sin$1(phi)/cosPhi0];}forward.invert=function(x,y){return[x/cosPhi0,asin$1(y*cosPhi0)];};return forward;}function conicEqualAreaRaw(y0,y1){var sy0=sin$1(y0),n=(sy0+sin$1(y1))/2;// Are the parallels symmetrical around the Equator?
if(abs$1(n)<epsilon$2)return cylindricalEqualAreaRaw(y0);var c=1+sy0*(2*n-sy0),r0=sqrt$2(c)/n;function project(x,y){var r=sqrt$2(c-2*n*sin$1(y))/n;return[r*sin$1(x*=n),r0-r*cos$1(x)];}project.invert=function(x,y){var r0y=r0-y;return[atan2$1(x,abs$1(r0y))/n*sign$1(r0y),asin$1((c-(x*x+r0y*r0y)*n*n)/(2*n))];};return project;}var conicEqualArea=function conicEqualArea(){return conicProjection(conicEqualAreaRaw).scale(155.424).center([0,33.6442]);};var albers=function albers(){return conicEqualArea().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-0.6,38.7]);};// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams){var n=streams.length;return{point:function point(x,y){var i=-1;while(++i<n){streams[i].point(x,y);}},sphere:function sphere(){var i=-1;while(++i<n){streams[i].sphere();}},lineStart:function lineStart(){var i=-1;while(++i<n){streams[i].lineStart();}},lineEnd:function lineEnd(){var i=-1;while(++i<n){streams[i].lineEnd();}},polygonStart:function polygonStart(){var i=-1;while(++i<n){streams[i].polygonStart();}},polygonEnd:function polygonEnd(){var i=-1;while(++i<n){streams[i].polygonEnd();}}};}// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
var geoAlbersUsa=function geoAlbersUsa(){var cache,cacheStream,lower48=albers(),lower48Point,alaska=conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),alaskaPoint,// EPSG:3338
hawaii=conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),hawaiiPoint,// ESRI:102007
_point2,pointStream={point:function point(x,y){_point2=[x,y];}};function albersUsa(coordinates){var x=coordinates[0],y=coordinates[1];return _point2=null,(lower48Point.point(x,y),_point2)||(alaskaPoint.point(x,y),_point2)||(hawaiiPoint.point(x,y),_point2);}albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k,y=(coordinates[1]-t[1])/k;return(y>=0.120&&y<0.234&&x>=-0.425&&x<-0.214?alaska:y>=0.166&&y<0.234&&x>=-0.214&&x<-0.115?hawaii:lower48).invert(coordinates);};albersUsa.stream=function(stream){return cache&&cacheStream===stream?cache:cache=multiplex([lower48.stream(cacheStream=stream),alaska.stream(stream),hawaii.stream(stream)]);};albersUsa.precision=function(_){if(!arguments.length)return lower48.precision();lower48.precision(_),alaska.precision(_),hawaii.precision(_);return reset();};albersUsa.scale=function(_){if(!arguments.length)return lower48.scale();lower48.scale(_),alaska.scale(_*0.35),hawaii.scale(_);return albersUsa.translate(lower48.translate());};albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];lower48Point=lower48.translate(_).clipExtent([[x-0.455*k,y-0.238*k],[x+0.455*k,y+0.238*k]]).stream(pointStream);alaskaPoint=alaska.translate([x-0.307*k,y+0.201*k]).clipExtent([[x-0.425*k+epsilon$2,y+0.120*k+epsilon$2],[x-0.214*k-epsilon$2,y+0.234*k-epsilon$2]]).stream(pointStream);hawaiiPoint=hawaii.translate([x-0.205*k,y+0.212*k]).clipExtent([[x-0.214*k+epsilon$2,y+0.166*k+epsilon$2],[x-0.115*k-epsilon$2,y+0.234*k-epsilon$2]]).stream(pointStream);return reset();};albersUsa.fitExtent=function(extent,object){return fitExtent(albersUsa,extent,object);};albersUsa.fitSize=function(size,object){return fitSize(albersUsa,size,object);};function reset(){cache=cacheStream=null;return albersUsa;}return albersUsa.scale(1070);};function azimuthalRaw(scale){return function(x,y){var cx=cos$1(x),cy=cos$1(y),k=scale(cx*cy);return[k*cy*sin$1(x),k*sin$1(y)];};}function azimuthalInvert(angle){return function(x,y){var z=sqrt$2(x*x+y*y),c=angle(z),sc=sin$1(c),cc=cos$1(c);return[atan2$1(x*sc,z*cc),asin$1(z&&y*sc/z)];};}var azimuthalEqualAreaRaw=azimuthalRaw(function(cxcy){return sqrt$2(2/(1+cxcy));});azimuthalEqualAreaRaw.invert=azimuthalInvert(function(z){return 2*asin$1(z/2);});var geoAzimuthalEqualArea=function geoAzimuthalEqualArea(){return projection$1(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180-1e-3);};var azimuthalEquidistantRaw=azimuthalRaw(function(c){return(c=acos$1(c))&&c/sin$1(c);});azimuthalEquidistantRaw.invert=azimuthalInvert(function(z){return z;});var geoAzimuthalEquidistant=function geoAzimuthalEquidistant(){return projection$1(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180-1e-3);};function mercatorRaw(lambda,phi){return[lambda,log$2(tan((halfPi$2+phi)/2))];}mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi$2];};var geoMercator=function geoMercator(){return mercatorProjection(mercatorRaw).scale(961/tau$4);};function mercatorProjection(project){var m=projection$1(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null,y0,x1,y1;// clip extent
m.scale=function(_){return arguments.length?(scale(_),reclip()):scale();};m.translate=function(_){return arguments.length?(translate(_),reclip()):translate();};m.center=function(_){return arguments.length?(center(_),reclip()):center();};m.clipExtent=function(_){return arguments.length?(_==null?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reclip()):x0==null?null:[[x0,y0],[x1,y1]];};function reclip(){var k=pi$3*scale(),t=m(rotation(m.rotate()).invert([0,0]));return clipExtent(x0==null?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]]);}return reclip();}function tany(y){return tan((halfPi$2+y)/2);}function conicConformalRaw(y0,y1){var cy0=cos$1(y0),n=y0===y1?sin$1(y0):log$2(cy0/cos$1(y1))/log$2(tany(y1)/tany(y0)),f=cy0*pow$1(tany(y0),n)/n;if(!n)return mercatorRaw;function project(x,y){if(f>0){if(y<-halfPi$2+epsilon$2)y=-halfPi$2+epsilon$2;}else{if(y>halfPi$2-epsilon$2)y=halfPi$2-epsilon$2;}var r=f/pow$1(tany(y),n);return[r*sin$1(n*x),f-r*cos$1(n*x)];}project.invert=function(x,y){var fy=f-y,r=sign$1(n)*sqrt$2(x*x+fy*fy);return[atan2$1(x,abs$1(fy))/n*sign$1(fy),2*atan(pow$1(f/r,1/n))-halfPi$2];};return project;}var geoConicConformal=function geoConicConformal(){return conicProjection(conicConformalRaw).scale(109.5).parallels([30,30]);};function equirectangularRaw(lambda,phi){return[lambda,phi];}equirectangularRaw.invert=equirectangularRaw;var geoEquirectangular=function geoEquirectangular(){return projection$1(equirectangularRaw).scale(152.63);};function conicEquidistantRaw(y0,y1){var cy0=cos$1(y0),n=y0===y1?sin$1(y0):(cy0-cos$1(y1))/(y1-y0),g=cy0/n+y0;if(abs$1(n)<epsilon$2)return equirectangularRaw;function project(x,y){var gy=g-y,nx=n*x;return[gy*sin$1(nx),g-gy*cos$1(nx)];}project.invert=function(x,y){var gy=g-y;return[atan2$1(x,abs$1(gy))/n*sign$1(gy),g-sign$1(n)*sqrt$2(x*x+gy*gy)];};return project;}var geoConicEquidistant=function geoConicEquidistant(){return conicProjection(conicEquidistantRaw).scale(131.154).center([0,13.9389]);};function gnomonicRaw(x,y){var cy=cos$1(y),k=cos$1(x)*cy;return[cy*sin$1(x)/k,sin$1(y)/k];}gnomonicRaw.invert=azimuthalInvert(atan);var geoGnomonic=function geoGnomonic(){return projection$1(gnomonicRaw).scale(144.049).clipAngle(60);};function orthographicRaw(x,y){return[cos$1(y)*sin$1(x),sin$1(y)];}orthographicRaw.invert=azimuthalInvert(asin$1);var geoOrthographic=function geoOrthographic(){return projection$1(orthographicRaw).scale(249.5).clipAngle(90+epsilon$2);};function stereographicRaw(x,y){var cy=cos$1(y),k=1+cos$1(x)*cy;return[cy*sin$1(x)/k,sin$1(y)/k];}stereographicRaw.invert=azimuthalInvert(function(z){return 2*atan(z);});var geoStereographic=function geoStereographic(){return projection$1(stereographicRaw).scale(250).clipAngle(142);};function transverseMercatorRaw(lambda,phi){return[log$2(tan((halfPi$2+phi)/2)),-lambda];}transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi$2];};var geoTransverseMercator=function geoTransverseMercator(){var m=mercatorProjection(transverseMercatorRaw),center=m.center,rotate=m.rotate;m.center=function(_){return arguments.length?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]]);};m.rotate=function(_){return arguments.length?rotate([_[0],_[1],_.length>2?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90]);};return rotate([0,0,90]).scale(159.155);};var defaultPath=geoPath();var projectionProperties=[// standard properties in d3-geo
'clipAngle','clipExtent','scale','translate','center','rotate','parallels','precision',// extended properties in d3-geo-projections
'coefficient','distance','fraction','lobes','parallel','radius','ratio','spacing','tilt'];/**
 * Augment projections with their type and a copy method.
 */function create$1(type,constructor){return function projection$$1(){var p=constructor();p.type=type;p.path=geoPath().projection(p);p.copy=p.copy||function(){var c=projection$$1();projectionProperties.forEach(function(prop){if(p.hasOwnProperty(prop))c[prop](p[prop]());});c.path.pointRadius(p.path.pointRadius());return c;};return p;};}function projection$$1(type,proj){if(arguments.length>1){projections[type]=create$1(type,proj);return this;}else{return projections.hasOwnProperty(type)?projections[type]:null;}}function getProjectionPath(proj){return proj&&proj.path||defaultPath;}var projections={// base d3-geo projection types
albers:albers,albersusa:geoAlbersUsa,azimuthalequalarea:geoAzimuthalEqualArea,azimuthalequidistant:geoAzimuthalEquidistant,conicconformal:geoConicConformal,conicequalarea:conicEqualArea,conicequidistant:geoConicEquidistant,equirectangular:geoEquirectangular,gnomonic:geoGnomonic,mercator:geoMercator,orthographic:geoOrthographic,stereographic:geoStereographic,transversemercator:geoTransverseMercator};for(var key$2 in projections){projection$$1(key$2,projections[key$2]);}/**
 * Map GeoJSON data to an SVG path string.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='path'] - The output field in which to store
 *   the generated path data (default 'path').
 */function GeoPath(params){Transform.call(this,null,params);}GeoPath.Definition={"type":"GeoPath","metadata":{"modifies":true},"params":[{"name":"projection","type":"projection"},{"name":"field","type":"field"},{"name":"as","type":"string","default":"path"}]};var prototype$62=inherits(GeoPath,Transform);prototype$62.transform=function(_,pulse){var out=pulse.fork(pulse.ALL),path=this.value,field$$1=_.field||identity,as=_.as||'path',mod;function set(t){t[as]=path(field$$1(t));}if(!path||_.modified()){// parameters updated, reset and reflow
this.value=path=getProjectionPath(_.projection).context(null);out.materialize().reflow().visit(out.SOURCE,set);}else{path.context(null);mod=field$$1===identity||pulse.modified(field$$1.fields);out.visit(mod?out.ADD_MOD:out.ADD,set);}return out.modifies(as);};/**
 * Geo-code a longitude/latitude point to an x/y coordinate.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {Array<function(object): *>} params.fields - A two-element array of
 *   field accessors for the longitude and latitude values.
 * @param {Array<string>} [params.as] - A two-element array of field names
 *   under which to store the result. Defaults to ['x','y'].
 */function GeoPoint(params){Transform.call(this,null,params);}GeoPoint.Definition={"type":"GeoPoint","metadata":{"modifies":true},"params":[{"name":"projection","type":"projection","required":true},{"name":"fields","type":"field","array":true,"required":true,"length":2},{"name":"as","type":"string","array":true,"length":2,"default":["x","y"]}]};var prototype$63=inherits(GeoPoint,Transform);prototype$63.transform=function(_,pulse){var proj=_.projection,lon=_.fields[0],lat=_.fields[1],as=_.as||['x','y'],x=as[0],y=as[1],mod;function set(t){var xy=proj([lon(t),lat(t)]);if(xy){t[x]=xy[0];t[y]=xy[1];}else{t[x]=undefined;t[y]=undefined;}}if(_.modified()){// parameters updated, reflow
pulse=pulse.materialize().reflow(true).visit(pulse.SOURCE,set);}else{mod=pulse.modified(lon.fields)||pulse.modified(lat.fields);pulse.visit(mod?pulse.ADD_MOD:pulse.ADD,set);}return pulse.modifies(as);};/**
 * Annotate items with a geopath shape generator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='shape'] - The output field in which to store
 *   the generated path data (default 'shape').
 */function GeoShape(params){Transform.call(this,null,params);}GeoShape.Definition={"type":"GeoShape","metadata":{"modifies":true},"params":[{"name":"projection","type":"projection"},{"name":"field","type":"field","default":"datum"},{"name":"as","type":"string","default":"shape"}]};var prototype$64=inherits(GeoShape,Transform);prototype$64.transform=function(_,pulse){var out=pulse.fork(pulse.ALL),shape=this.value,datum=_.field||field('datum'),as=_.as||'shape',flag=out.ADD_MOD;if(!shape||_.modified()){// parameters updated, reset and reflow
this.value=shape=shapeGenerator(getProjectionPath(_.projection),datum);out.materialize().reflow();flag=out.SOURCE;}out.visit(flag,function(t){t[as]=shape;});return out.modifies(as);};function shapeGenerator(path,field$$1){var shape=function shape(_){return path(field$$1(_));};shape.context=function(_){path.context(_);return shape;};return shape;}/**
 * GeoJSON feature generator for creating graticules.
 * @constructor
 */function Graticule(params){Transform.call(this,[],params);this.generator=graticule();}Graticule.Definition={"type":"Graticule","metadata":{"source":true,"generates":true,"changes":true},"params":[{"name":"extent","type":"array","array":true,"length":2,"content":{"type":"number","array":true,"length":2}},{"name":"extentMajor","type":"array","array":true,"length":2,"content":{"type":"number","array":true,"length":2}},{"name":"extentMinor","type":"array","array":true,"length":2,"content":{"type":"number","array":true,"length":2}},{"name":"step","type":"number","array":true,"length":2},{"name":"stepMajor","type":"number","array":true,"length":2,"default":[90,360]},{"name":"stepMinor","type":"number","array":true,"length":2,"default":[10,10]},{"name":"precision","type":"number","default":2.5}]};var prototype$65=inherits(Graticule,Transform);prototype$65.transform=function(_,pulse){var out=pulse.fork(),src=this.value,gen=this.generator,t;if(!src.length||_.modified()){for(var prop in _){if(isFunction(gen[prop])){gen[prop](_[prop]);}}}t=gen();if(src.length){out.mod.push(replace(src[0],t));}else{out.add.push(ingest(t));}src[0]=t;out.source=src;return out;};/**
 * Maintains a cartographic projection.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */function Projection(params){Transform.call(this,null,params);this.modified(true);// always treat as modified
}var prototype$66=inherits(Projection,Transform);prototype$66.transform=function(_,pulse){var proj=this.value;if(!proj||_.modified('type')){this.value=proj=create$2(_.type);projectionProperties.forEach(function(prop){if(_[prop]!=null)set$4(proj,prop,_[prop]);});}else{projectionProperties.forEach(function(prop){if(_.modified(prop))set$4(proj,prop,_[prop]);});}if(_.pointRadius!=null)proj.path.pointRadius(_.pointRadius);if(_.fit)fit(proj,_);return pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS);};function fit(proj,_){var data=collectGeoJSON(_.fit);_.extent?proj.fitExtent(_.extent,data):_.size?proj.fitSize(_.size,data):0;}function create$2(type){var constructor=projection$$1((type||'mercator').toLowerCase());if(!constructor)error$1('Unrecognized projection type: '+type);return constructor();}function set$4(proj,key$$1,value){if(isFunction(proj[key$$1]))proj[key$$1](value);}function collectGeoJSON(features){features=array(features);return features.length===1?features[0]:{type:FeatureCollection,features:features.reduce(function(list,f){f&&f.type===FeatureCollection?list.push.apply(list,f.features):isArray(f)?list.push.apply(list,f):list.push(f);return list;},[])};}var geo=Object.freeze({contour:Contour,geojson:GeoJSON,geopath:GeoPath,geopoint:GeoPoint,geoshape:GeoShape,graticule:Graticule,projection:Projection});var forceCenter=function forceCenter(x,y){var nodes;if(x==null)x=0;if(y==null)y=0;function force(){var i,n=nodes.length,node,sx=0,sy=0;for(i=0;i<n;++i){node=nodes[i],sx+=node.x,sy+=node.y;}for(sx=sx/n-x,sy=sy/n-y,i=0;i<n;++i){node=nodes[i],node.x-=sx,node.y-=sy;}}force.initialize=function(_){nodes=_;};force.x=function(_){return arguments.length?(x=+_,force):x;};force.y=function(_){return arguments.length?(y=+_,force):y;};return force;};var constant$8=function constant$8(x){return function(){return x;};};var jiggle=function jiggle(){return(Math.random()-0.5)*1e-6;};var tree_add=function tree_add(d){var x=+this._x.call(null,d),y=+this._y.call(null,d);return add$4(this.cover(x,y),x,y,d);};function add$4(tree,x,y,d){if(isNaN(x)||isNaN(y))return tree;// ignore invalid points
var parent,node=tree._root,leaf={data:d},x0=tree._x0,y0=tree._y0,x1=tree._x1,y1=tree._y1,xm,ym,xp,yp,right,bottom,i,j;// If the tree is empty, initialize the root as a leaf.
if(!node)return tree._root=leaf,tree;// Find the existing leaf for the new point, or add it.
while(node.length){if(right=x>=(xm=(x0+x1)/2))x0=xm;else x1=xm;if(bottom=y>=(ym=(y0+y1)/2))y0=ym;else y1=ym;if(parent=node,!(node=node[i=bottom<<1|right]))return parent[i]=leaf,tree;}// Is the new point is exactly coincident with the existing point?
xp=+tree._x.call(null,node.data);yp=+tree._y.call(null,node.data);if(x===xp&&y===yp)return leaf.next=node,parent?parent[i]=leaf:tree._root=leaf,tree;// Otherwise, split the leaf node until the old and new point are separated.
do{parent=parent?parent[i]=new Array(4):tree._root=new Array(4);if(right=x>=(xm=(x0+x1)/2))x0=xm;else x1=xm;if(bottom=y>=(ym=(y0+y1)/2))y0=ym;else y1=ym;}while((i=bottom<<1|right)===(j=(yp>=ym)<<1|xp>=xm));return parent[j]=node,parent[i]=leaf,tree;}function addAll$1(data){var d,i,n=data.length,x,y,xz=new Array(n),yz=new Array(n),x0=Infinity,y0=Infinity,x1=-Infinity,y1=-Infinity;// Compute the points and their extent.
for(i=0;i<n;++i){if(isNaN(x=+this._x.call(null,d=data[i]))||isNaN(y=+this._y.call(null,d)))continue;xz[i]=x;yz[i]=y;if(x<x0)x0=x;if(x>x1)x1=x;if(y<y0)y0=y;if(y>y1)y1=y;}// If there were no (valid) points, inherit the existing extent.
if(x1<x0)x0=this._x0,x1=this._x1;if(y1<y0)y0=this._y0,y1=this._y1;// Expand the tree to cover the new points.
this.cover(x0,y0).cover(x1,y1);// Add the new points.
for(i=0;i<n;++i){add$4(this,xz[i],yz[i],data[i]);}return this;}var tree_cover=function tree_cover(x,y){if(isNaN(x=+x)||isNaN(y=+y))return this;// ignore invalid points
var x0=this._x0,y0=this._y0,x1=this._x1,y1=this._y1;// If the quadtree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing quadrant boundaries don’t change due to floating point error!
if(isNaN(x0)){x1=(x0=Math.floor(x))+1;y1=(y0=Math.floor(y))+1;}// Otherwise, double repeatedly to cover.
else if(x0>x||x>x1||y0>y||y>y1){var z=x1-x0,node=this._root,parent,i;switch(i=(y<(y0+y1)/2)<<1|x<(x0+x1)/2){case 0:{do{parent=new Array(4),parent[i]=node,node=parent;}while((z*=2,x1=x0+z,y1=y0+z,x>x1||y>y1));break;}case 1:{do{parent=new Array(4),parent[i]=node,node=parent;}while((z*=2,x0=x1-z,y1=y0+z,x0>x||y>y1));break;}case 2:{do{parent=new Array(4),parent[i]=node,node=parent;}while((z*=2,x1=x0+z,y0=y1-z,x>x1||y0>y));break;}case 3:{do{parent=new Array(4),parent[i]=node,node=parent;}while((z*=2,x0=x1-z,y0=y1-z,x0>x||y0>y));break;}}if(this._root&&this._root.length)this._root=node;}// If the quadtree covers the point already, just return.
else return this;this._x0=x0;this._y0=y0;this._x1=x1;this._y1=y1;return this;};var tree_data=function tree_data(){var data=[];this.visit(function(node){if(!node.length)do{data.push(node.data);}while(node=node.next);});return data;};var tree_extent=function tree_extent(_){return arguments.length?this.cover(+_[0][0],+_[0][1]).cover(+_[1][0],+_[1][1]):isNaN(this._x0)?undefined:[[this._x0,this._y0],[this._x1,this._y1]];};var Quad=function Quad(node,x0,y0,x1,y1){this.node=node;this.x0=x0;this.y0=y0;this.x1=x1;this.y1=y1;};var tree_find=function tree_find(x,y,radius){var data,x0=this._x0,y0=this._y0,x1,y1,x2,y2,x3=this._x1,y3=this._y1,quads=[],node=this._root,q,i;if(node)quads.push(new Quad(node,x0,y0,x3,y3));if(radius==null)radius=Infinity;else{x0=x-radius,y0=y-radius;x3=x+radius,y3=y+radius;radius*=radius;}while(q=quads.pop()){// Stop searching if this quadrant can’t contain a closer node.
if(!(node=q.node)||(x1=q.x0)>x3||(y1=q.y0)>y3||(x2=q.x1)<x0||(y2=q.y1)<y0)continue;// Bisect the current quadrant.
if(node.length){var xm=(x1+x2)/2,ym=(y1+y2)/2;quads.push(new Quad(node[3],xm,ym,x2,y2),new Quad(node[2],x1,ym,xm,y2),new Quad(node[1],xm,y1,x2,ym),new Quad(node[0],x1,y1,xm,ym));// Visit the closest quadrant first.
if(i=(y>=ym)<<1|x>=xm){q=quads[quads.length-1];quads[quads.length-1]=quads[quads.length-1-i];quads[quads.length-1-i]=q;}}// Visit this point. (Visiting coincident points isn’t necessary!)
else{var dx=x-+this._x.call(null,node.data),dy=y-+this._y.call(null,node.data),d2=dx*dx+dy*dy;if(d2<radius){var d=Math.sqrt(radius=d2);x0=x-d,y0=y-d;x3=x+d,y3=y+d;data=node.data;}}}return data;};var tree_remove=function tree_remove(d){if(isNaN(x=+this._x.call(null,d))||isNaN(y=+this._y.call(null,d)))return this;// ignore invalid points
var parent,node=this._root,retainer,previous,next,x0=this._x0,y0=this._y0,x1=this._x1,y1=this._y1,x,y,xm,ym,right,bottom,i,j;// If the tree is empty, initialize the root as a leaf.
if(!node)return this;// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(node.length)while(true){if(right=x>=(xm=(x0+x1)/2))x0=xm;else x1=xm;if(bottom=y>=(ym=(y0+y1)/2))y0=ym;else y1=ym;if(!(parent=node,node=node[i=bottom<<1|right]))return this;if(!node.length)break;if(parent[i+1&3]||parent[i+2&3]||parent[i+3&3])retainer=parent,j=i;}// Find the point to remove.
while(node.data!==d){if(!(previous=node,node=node.next))return this;}if(next=node.next)delete node.next;// If there are multiple coincident points, remove just the point.
if(previous)return next?previous.next=next:delete previous.next,this;// If this is the root point, remove it.
if(!parent)return this._root=next,this;// Remove this leaf.
next?parent[i]=next:delete parent[i];// If the parent now contains exactly one leaf, collapse superfluous parents.
if((node=parent[0]||parent[1]||parent[2]||parent[3])&&node===(parent[3]||parent[2]||parent[1]||parent[0])&&!node.length){if(retainer)retainer[j]=node;else this._root=node;}return this;};function removeAll(data){for(var i=0,n=data.length;i<n;++i){this.remove(data[i]);}return this;}var tree_root=function tree_root(){return this._root;};var tree_size=function tree_size(){var size=0;this.visit(function(node){if(!node.length)do{++size;}while(node=node.next);});return size;};var tree_visit=function tree_visit(callback){var quads=[],q,node=this._root,child,x0,y0,x1,y1;if(node)quads.push(new Quad(node,this._x0,this._y0,this._x1,this._y1));while(q=quads.pop()){if(!callback(node=q.node,x0=q.x0,y0=q.y0,x1=q.x1,y1=q.y1)&&node.length){var xm=(x0+x1)/2,ym=(y0+y1)/2;if(child=node[3])quads.push(new Quad(child,xm,ym,x1,y1));if(child=node[2])quads.push(new Quad(child,x0,ym,xm,y1));if(child=node[1])quads.push(new Quad(child,xm,y0,x1,ym));if(child=node[0])quads.push(new Quad(child,x0,y0,xm,ym));}}return this;};var tree_visitAfter=function tree_visitAfter(callback){var quads=[],next=[],q;if(this._root)quads.push(new Quad(this._root,this._x0,this._y0,this._x1,this._y1));while(q=quads.pop()){var node=q.node;if(node.length){var child,x0=q.x0,y0=q.y0,x1=q.x1,y1=q.y1,xm=(x0+x1)/2,ym=(y0+y1)/2;if(child=node[0])quads.push(new Quad(child,x0,y0,xm,ym));if(child=node[1])quads.push(new Quad(child,xm,y0,x1,ym));if(child=node[2])quads.push(new Quad(child,x0,ym,xm,y1));if(child=node[3])quads.push(new Quad(child,xm,ym,x1,y1));}next.push(q);}while(q=next.pop()){callback(q.node,q.x0,q.y0,q.x1,q.y1);}return this;};function defaultX$1(d){return d[0];}var tree_x=function tree_x(_){return arguments.length?(this._x=_,this):this._x;};function defaultY$1(d){return d[1];}var tree_y=function tree_y(_){return arguments.length?(this._y=_,this):this._y;};function quadtree(nodes,x,y){var tree=new Quadtree(x==null?defaultX$1:x,y==null?defaultY$1:y,NaN,NaN,NaN,NaN);return nodes==null?tree:tree.addAll(nodes);}function Quadtree(x,y,x0,y0,x1,y1){this._x=x;this._y=y;this._x0=x0;this._y0=y0;this._x1=x1;this._y1=y1;this._root=undefined;}function leaf_copy(leaf){var copy={data:leaf.data},next=copy;while(leaf=leaf.next){next=next.next={data:leaf.data};}return copy;}var treeProto=quadtree.prototype=Quadtree.prototype;treeProto.copy=function(){var copy=new Quadtree(this._x,this._y,this._x0,this._y0,this._x1,this._y1),node=this._root,nodes,child;if(!node)return copy;if(!node.length)return copy._root=leaf_copy(node),copy;nodes=[{source:node,target:copy._root=new Array(4)}];while(node=nodes.pop()){for(var i=0;i<4;++i){if(child=node.source[i]){if(child.length)nodes.push({source:child,target:node.target[i]=new Array(4)});else node.target[i]=leaf_copy(child);}}}return copy;};treeProto.add=tree_add;treeProto.addAll=addAll$1;treeProto.cover=tree_cover;treeProto.data=tree_data;treeProto.extent=tree_extent;treeProto.find=tree_find;treeProto.remove=tree_remove;treeProto.removeAll=removeAll;treeProto.root=tree_root;treeProto.size=tree_size;treeProto.visit=tree_visit;treeProto.visitAfter=tree_visitAfter;treeProto.x=tree_x;treeProto.y=tree_y;function x$2(d){return d.x+d.vx;}function y$2(d){return d.y+d.vy;}var forceCollide=function forceCollide(radius){var nodes,radii,strength=1,iterations=1;if(typeof radius!=="function")radius=constant$8(radius==null?1:+radius);function force(){var i,n=nodes.length,tree,node,xi,yi,ri,ri2;for(var k=0;k<iterations;++k){tree=quadtree(nodes,x$2,y$2).visitAfter(prepare);for(i=0;i<n;++i){node=nodes[i];ri=radii[node.index],ri2=ri*ri;xi=node.x+node.vx;yi=node.y+node.vy;tree.visit(apply);}}function apply(quad,x0,y0,x1,y1){var data=quad.data,rj=quad.r,r=ri+rj;if(data){if(data.index>node.index){var x=xi-data.x-data.vx,y=yi-data.y-data.vy,l=x*x+y*y;if(l<r*r){if(x===0)x=jiggle(),l+=x*x;if(y===0)y=jiggle(),l+=y*y;l=(r-(l=Math.sqrt(l)))/l*strength;node.vx+=(x*=l)*(r=(rj*=rj)/(ri2+rj));node.vy+=(y*=l)*r;data.vx-=x*(r=1-r);data.vy-=y*r;}}return;}return x0>xi+r||x1<xi-r||y0>yi+r||y1<yi-r;}}function prepare(quad){if(quad.data)return quad.r=radii[quad.data.index];for(var i=quad.r=0;i<4;++i){if(quad[i]&&quad[i].r>quad.r){quad.r=quad[i].r;}}}function initialize(){if(!nodes)return;var i,n=nodes.length,node;radii=new Array(n);for(i=0;i<n;++i){node=nodes[i],radii[node.index]=+radius(node,i,nodes);}}force.initialize=function(_){nodes=_;initialize();};force.iterations=function(_){return arguments.length?(iterations=+_,force):iterations;};force.strength=function(_){return arguments.length?(strength=+_,force):strength;};force.radius=function(_){return arguments.length?(radius=typeof _==="function"?_:constant$8(+_),initialize(),force):radius;};return force;};function index(d){return d.index;}function find(nodeById,nodeId){var node=nodeById.get(nodeId);if(!node)throw new Error("missing: "+nodeId);return node;}var forceLink=function forceLink(links){var id=index,strength=defaultStrength,strengths,distance=constant$8(30),distances,nodes,count,bias,iterations=1;if(links==null)links=[];function defaultStrength(link){return 1/Math.min(count[link.source.index],count[link.target.index]);}function force(alpha){for(var k=0,n=links.length;k<iterations;++k){for(var i=0,link,source,target,x,y,l,b;i<n;++i){link=links[i],source=link.source,target=link.target;x=target.x+target.vx-source.x-source.vx||jiggle();y=target.y+target.vy-source.y-source.vy||jiggle();l=Math.sqrt(x*x+y*y);l=(l-distances[i])/l*alpha*strengths[i];x*=l,y*=l;target.vx-=x*(b=bias[i]);target.vy-=y*b;source.vx+=x*(b=1-b);source.vy+=y*b;}}}function initialize(){if(!nodes)return;var i,n=nodes.length,m=links.length,nodeById=map(nodes,id),link;for(i=0,count=new Array(n);i<m;++i){link=links[i],link.index=i;if(_typeof(link.source)!=="object")link.source=find(nodeById,link.source);if(_typeof(link.target)!=="object")link.target=find(nodeById,link.target);count[link.source.index]=(count[link.source.index]||0)+1;count[link.target.index]=(count[link.target.index]||0)+1;}for(i=0,bias=new Array(m);i<m;++i){link=links[i],bias[i]=count[link.source.index]/(count[link.source.index]+count[link.target.index]);}strengths=new Array(m),initializeStrength();distances=new Array(m),initializeDistance();}function initializeStrength(){if(!nodes)return;for(var i=0,n=links.length;i<n;++i){strengths[i]=+strength(links[i],i,links);}}function initializeDistance(){if(!nodes)return;for(var i=0,n=links.length;i<n;++i){distances[i]=+distance(links[i],i,links);}}force.initialize=function(_){nodes=_;initialize();};force.links=function(_){return arguments.length?(links=_,initialize(),force):links;};force.id=function(_){return arguments.length?(id=_,force):id;};force.iterations=function(_){return arguments.length?(iterations=+_,force):iterations;};force.strength=function(_){return arguments.length?(strength=typeof _==="function"?_:constant$8(+_),initializeStrength(),force):strength;};force.distance=function(_){return arguments.length?(distance=typeof _==="function"?_:constant$8(+_),initializeDistance(),force):distance;};return force;};var frame=0;var timeout=0;var interval=0;var pokeDelay=1000;var taskHead;var taskTail;var clockLast=0;var clockNow=0;var clockSkew=0;var clock=(typeof performance==='undefined'?'undefined':_typeof(performance))==="object"&&performance.now?performance:Date;var setFrame=(typeof window==='undefined'?'undefined':_typeof(window))==="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(f){setTimeout(f,17);};function now(){return clockNow||(setFrame(clearNow),clockNow=clock.now()+clockSkew);}function clearNow(){clockNow=0;}function Timer(){this._call=this._time=this._next=null;}Timer.prototype=timer.prototype={constructor:Timer,restart:function restart(callback,delay,time){if(typeof callback!=="function")throw new TypeError("callback is not a function");time=(time==null?now():+time)+(delay==null?0:+delay);if(!this._next&&taskTail!==this){if(taskTail)taskTail._next=this;else taskHead=this;taskTail=this;}this._call=callback;this._time=time;sleep();},stop:function stop(){if(this._call){this._call=null;this._time=Infinity;sleep();}}};function timer(callback,delay,time){var t=new Timer();t.restart(callback,delay,time);return t;}function timerFlush(){now();// Get the current time, if not already set.
++frame;// Pretend we’ve set an alarm, if we haven’t already.
var t=taskHead,e;while(t){if((e=clockNow-t._time)>=0)t._call.call(null,e);t=t._next;}--frame;}function wake(){clockNow=(clockLast=clock.now())+clockSkew;frame=timeout=0;try{timerFlush();}finally{frame=0;nap();clockNow=0;}}function poke(){var now=clock.now(),delay=now-clockLast;if(delay>pokeDelay)clockSkew-=delay,clockLast=now;}function nap(){var t0,t1=taskHead,t2,time=Infinity;while(t1){if(t1._call){if(time>t1._time)time=t1._time;t0=t1,t1=t1._next;}else{t2=t1._next,t1._next=null;t1=t0?t0._next=t2:taskHead=t2;}}taskTail=t0;sleep(time);}function sleep(time){if(frame)return;// Soonest alarm already set, or will be.
if(timeout)timeout=clearTimeout(timeout);var delay=time-clockNow;if(delay>24){if(time<Infinity)timeout=setTimeout(wake,delay);if(interval)interval=clearInterval(interval);}else{if(!interval)clockLast=clockNow,interval=setInterval(poke,pokeDelay);frame=1,setFrame(wake);}}function x$3(d){return d.x;}function y$3(d){return d.y;}var initialRadius=10;var initialAngle=Math.PI*(3-Math.sqrt(5));var forceSimulation=function forceSimulation(_nodes){var simulation,_alpha=1,_alphaMin=0.001,_alphaDecay=1-Math.pow(_alphaMin,1/300),_alphaTarget=0,_velocityDecay=0.6,forces=map(),stepper=timer(step),event=dispatch("tick","end");if(_nodes==null)_nodes=[];function step(){tick();event.call("tick",simulation);if(_alpha<_alphaMin){stepper.stop();event.call("end",simulation);}}function tick(){var i,n=_nodes.length,node;_alpha+=(_alphaTarget-_alpha)*_alphaDecay;forces.each(function(force){force(_alpha);});for(i=0;i<n;++i){node=_nodes[i];if(node.fx==null)node.x+=node.vx*=_velocityDecay;else node.x=node.fx,node.vx=0;if(node.fy==null)node.y+=node.vy*=_velocityDecay;else node.y=node.fy,node.vy=0;}}function initializeNodes(){for(var i=0,n=_nodes.length,node;i<n;++i){node=_nodes[i],node.index=i;if(isNaN(node.x)||isNaN(node.y)){var radius=initialRadius*Math.sqrt(i),angle=i*initialAngle;node.x=radius*Math.cos(angle);node.y=radius*Math.sin(angle);}if(isNaN(node.vx)||isNaN(node.vy)){node.vx=node.vy=0;}}}function initializeForce(force){if(force.initialize)force.initialize(_nodes);return force;}initializeNodes();return simulation={tick:tick,restart:function restart(){return stepper.restart(step),simulation;},stop:function stop(){return stepper.stop(),simulation;},nodes:function nodes(_){return arguments.length?(_nodes=_,initializeNodes(),forces.each(initializeForce),simulation):_nodes;},alpha:function alpha(_){return arguments.length?(_alpha=+_,simulation):_alpha;},alphaMin:function alphaMin(_){return arguments.length?(_alphaMin=+_,simulation):_alphaMin;},alphaDecay:function alphaDecay(_){return arguments.length?(_alphaDecay=+_,simulation):+_alphaDecay;},alphaTarget:function alphaTarget(_){return arguments.length?(_alphaTarget=+_,simulation):_alphaTarget;},velocityDecay:function velocityDecay(_){return arguments.length?(_velocityDecay=1-_,simulation):1-_velocityDecay;},force:function force(name,_){return arguments.length>1?(_==null?forces.remove(name):forces.set(name,initializeForce(_)),simulation):forces.get(name);},find:function find(x,y,radius){var i=0,n=_nodes.length,dx,dy,d2,node,closest;if(radius==null)radius=Infinity;else radius*=radius;for(i=0;i<n;++i){node=_nodes[i];dx=x-node.x;dy=y-node.y;d2=dx*dx+dy*dy;if(d2<radius)closest=node,radius=d2;}return closest;},on:function on(name,_){return arguments.length>1?(event.on(name,_),simulation):event.on(name);}};};var forceManyBody=function forceManyBody(){var nodes,node,alpha,strength=constant$8(-30),strengths,distanceMin2=1,distanceMax2=Infinity,theta2=0.81;function force(_){var i,n=nodes.length,tree=quadtree(nodes,x$3,y$3).visitAfter(accumulate);for(alpha=_,i=0;i<n;++i){node=nodes[i],tree.visit(apply);}}function initialize(){if(!nodes)return;var i,n=nodes.length,node;strengths=new Array(n);for(i=0;i<n;++i){node=nodes[i],strengths[node.index]=+strength(node,i,nodes);}}function accumulate(quad){var strength=0,q,c,x,y,i;// For internal nodes, accumulate forces from child quadrants.
if(quad.length){for(x=y=i=0;i<4;++i){if((q=quad[i])&&(c=q.value)){strength+=c,x+=c*q.x,y+=c*q.y;}}quad.x=x/strength;quad.y=y/strength;}// For leaf nodes, accumulate forces from coincident quadrants.
else{q=quad;q.x=q.data.x;q.y=q.data.y;do{strength+=strengths[q.data.index];}while(q=q.next);}quad.value=strength;}function apply(quad,x1,_,x2){if(!quad.value)return true;var x=quad.x-node.x,y=quad.y-node.y,w=x2-x1,l=x*x+y*y;// Apply the Barnes-Hut approximation if possible.
// Limit forces for very close nodes; randomize direction if coincident.
if(w*w/theta2<l){if(l<distanceMax2){if(x===0)x=jiggle(),l+=x*x;if(y===0)y=jiggle(),l+=y*y;if(l<distanceMin2)l=Math.sqrt(distanceMin2*l);node.vx+=x*quad.value*alpha/l;node.vy+=y*quad.value*alpha/l;}return true;}// Otherwise, process points directly.
else if(quad.length||l>=distanceMax2)return;// Limit forces for very close nodes; randomize direction if coincident.
if(quad.data!==node||quad.next){if(x===0)x=jiggle(),l+=x*x;if(y===0)y=jiggle(),l+=y*y;if(l<distanceMin2)l=Math.sqrt(distanceMin2*l);}do{if(quad.data!==node){w=strengths[quad.data.index]*alpha/l;node.vx+=x*w;node.vy+=y*w;}}while(quad=quad.next);}force.initialize=function(_){nodes=_;initialize();};force.strength=function(_){return arguments.length?(strength=typeof _==="function"?_:constant$8(+_),initialize(),force):strength;};force.distanceMin=function(_){return arguments.length?(distanceMin2=_*_,force):Math.sqrt(distanceMin2);};force.distanceMax=function(_){return arguments.length?(distanceMax2=_*_,force):Math.sqrt(distanceMax2);};force.theta=function(_){return arguments.length?(theta2=_*_,force):Math.sqrt(theta2);};return force;};var forceX=function forceX(x){var strength=constant$8(0.1),nodes,strengths,xz;if(typeof x!=="function")x=constant$8(x==null?0:+x);function force(alpha){for(var i=0,n=nodes.length,node;i<n;++i){node=nodes[i],node.vx+=(xz[i]-node.x)*strengths[i]*alpha;}}function initialize(){if(!nodes)return;var i,n=nodes.length;strengths=new Array(n);xz=new Array(n);for(i=0;i<n;++i){strengths[i]=isNaN(xz[i]=+x(nodes[i],i,nodes))?0:+strength(nodes[i],i,nodes);}}force.initialize=function(_){nodes=_;initialize();};force.strength=function(_){return arguments.length?(strength=typeof _==="function"?_:constant$8(+_),initialize(),force):strength;};force.x=function(_){return arguments.length?(x=typeof _==="function"?_:constant$8(+_),initialize(),force):x;};return force;};var forceY=function forceY(y){var strength=constant$8(0.1),nodes,strengths,yz;if(typeof y!=="function")y=constant$8(y==null?0:+y);function force(alpha){for(var i=0,n=nodes.length,node;i<n;++i){node=nodes[i],node.vy+=(yz[i]-node.y)*strengths[i]*alpha;}}function initialize(){if(!nodes)return;var i,n=nodes.length;strengths=new Array(n);yz=new Array(n);for(i=0;i<n;++i){strengths[i]=isNaN(yz[i]=+y(nodes[i],i,nodes))?0:+strength(nodes[i],i,nodes);}}force.initialize=function(_){nodes=_;initialize();};force.strength=function(_){return arguments.length?(strength=typeof _==="function"?_:constant$8(+_),initialize(),force):strength;};force.y=function(_){return arguments.length?(y=typeof _==="function"?_:constant$8(+_),initialize(),force):y;};return force;};var ForceMap={center:forceCenter,collide:forceCollide,nbody:forceManyBody,link:forceLink,x:forceX,y:forceY};var Forces='forces';var ForceParams=['alpha','alphaMin','alphaTarget','velocityDecay','forces'];var ForceConfig=['static','iterations'];var ForceOutput=['x','y','vx','vy'];/**
 * Force simulation layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<object>} params.forces - The forces to apply.
 */function Force(params){Transform.call(this,null,params);}Force.Definition={"type":"Force","metadata":{"modifies":true},"params":[{"name":"static","type":"boolean","default":false},{"name":"restart","type":"boolean","default":false},{"name":"iterations","type":"number","default":300},{"name":"alpha","type":"number","default":1},{"name":"alphaMin","type":"number","default":0.001},{"name":"alphaTarget","type":"number","default":0},{"name":"velocityDecay","type":"number","default":0.4},{"name":"forces","type":"param","array":true,"params":[{"key":{"force":"center"},"params":[{"name":"x","type":"number","default":0},{"name":"y","type":"number","default":0}]},{"key":{"force":"collide"},"params":[{"name":"radius","type":"number","expr":true},{"name":"strength","type":"number","default":0.7},{"name":"iterations","type":"number","default":1}]},{"key":{"force":"nbody"},"params":[{"name":"strength","type":"number","default":-30},{"name":"theta","type":"number","default":0.9},{"name":"distanceMin","type":"number","default":1},{"name":"distanceMax","type":"number"}]},{"key":{"force":"link"},"params":[{"name":"links","type":"data"},{"name":"id","type":"field"},{"name":"distance","type":"number","default":30,"expr":true},{"name":"strength","type":"number","expr":true},{"name":"iterations","type":"number","default":1}]},{"key":{"force":"x"},"params":[{"name":"strength","type":"number","default":0.1},{"name":"x","type":"field"}]},{"key":{"force":"y"},"params":[{"name":"strength","type":"number","default":0.1},{"name":"y","type":"field"}]}]},{"name":"as","type":"string","array":true,"modify":false,"default":ForceOutput}]};var prototype$67=inherits(Force,Transform);prototype$67.transform=function(_,pulse){var sim=this.value,change=pulse.changed(pulse.ADD_REM),params=_.modified(ForceParams),iters=_.iterations||300;// configure simulation
if(!sim){this.value=sim=simulation(pulse.source,_);sim.on('tick',rerun(pulse.dataflow,this));if(!_.static){change=true;sim.tick();// ensure we run on init
}pulse.modifies('index');}else{if(change){pulse.modifies('index');sim.nodes(pulse.source);}if(params||pulse.changed(pulse.MOD)){setup(sim,_,0,pulse);}}// run simulation
if(params||change||_.modified(ForceConfig)||pulse.changed()&&_.restart){sim.alpha(Math.max(sim.alpha(),_.alpha||1)).alphaDecay(1-Math.pow(sim.alphaMin(),1/iters));if(_.static){for(sim.stop();--iters>=0;){sim.tick();}}else{if(sim.stopped())sim.restart();if(!change)return pulse.StopPropagation;// defer to sim ticks
}}return this.finish(_,pulse);};prototype$67.finish=function(_,pulse){var dataflow=pulse.dataflow;// inspect dependencies, touch link source data
for(var args=this._argops,j=0,m=args.length,arg;j<m;++j){arg=args[j];if(arg.name!==Forces||arg.op._argval.force!=='link'){continue;}for(var ops=arg.op._argops,i=0,n=ops.length,op;i<n;++i){if(ops[i].name==='links'&&(op=ops[i].op.source)){dataflow.pulse(op,dataflow.changeset().reflow());break;}}}// reflow all nodes
return pulse.reflow(_.modified()).modifies(ForceOutput);};function rerun(df,op){return function(){df.touch(op).run();};}function simulation(nodes,_){var sim=forceSimulation(nodes),stopped=false,stop=sim.stop,restart=sim.restart;sim.stopped=function(){return stopped;};sim.restart=function(){stopped=false;return restart();};sim.stop=function(){stopped=true;return stop();};return setup(sim,_,true).on('end',function(){stopped=true;});}function setup(sim,_,init,pulse){var f=array(_.forces),i,n,p,name;for(i=0,n=ForceParams.length;i<n;++i){p=ForceParams[i];if(p!==Forces&&_.modified(p))sim[p](_[p]);}for(i=0,n=f.length;i<n;++i){name=Forces+i;p=init||_.modified(Forces,i)?getForce(f[i]):pulse&&modified(f[i],pulse)?sim.force(name):null;if(p)sim.force(name,p);}for(n=sim.numForces||0;i<n;++i){sim.force(Forces+i,null);// remove
}sim.numForces=f.length;return sim;}function modified(f,pulse){var k,v;for(k in f){if(isFunction(v=f[k])&&pulse.modified(accessorFields(v)))return 1;}return 0;}function getForce(_){var f,p;if(!ForceMap.hasOwnProperty(_.force)){error$1('Unrecognized force: '+_.force);}f=ForceMap[_.force]();for(p in _){if(isFunction(f[p]))setForceParam(f[p],_[p],_);}return f;}function setForceParam(f,v,_){f(isFunction(v)?function(d){return v(d,_);}:v);}var force=Object.freeze({force:Force});function defaultSeparation(a,b){return a.parent===b.parent?1:2;}function meanX(children){return children.reduce(meanXReduce,0)/children.length;}function meanXReduce(x,c){return x+c.x;}function maxY(children){return 1+children.reduce(maxYReduce,0);}function maxYReduce(y,c){return Math.max(y,c.y);}function leafLeft(node){var children;while(children=node.children){node=children[0];}return node;}function leafRight(node){var children;while(children=node.children){node=children[children.length-1];}return node;}var cluster=function cluster(){var separation=defaultSeparation,dx=1,dy=1,nodeSize=false;function cluster(root){var previousNode,x=0;// First walk, computing the initial x & y values.
root.eachAfter(function(node){var children=node.children;if(children){node.x=meanX(children);node.y=maxY(children);}else{node.x=previousNode?x+=separation(node,previousNode):0;node.y=0;previousNode=node;}});var left=leafLeft(root),right=leafRight(root),x0=left.x-separation(left,right)/2,x1=right.x+separation(right,left)/2;// Second walk, normalizing x & y to the desired size.
return root.eachAfter(nodeSize?function(node){node.x=(node.x-root.x)*dx;node.y=(root.y-node.y)*dy;}:function(node){node.x=(node.x-x0)/(x1-x0)*dx;node.y=(1-(root.y?node.y/root.y:1))*dy;});}cluster.separation=function(x){return arguments.length?(separation=x,cluster):separation;};cluster.size=function(x){return arguments.length?(nodeSize=false,dx=+x[0],dy=+x[1],cluster):nodeSize?null:[dx,dy];};cluster.nodeSize=function(x){return arguments.length?(nodeSize=true,dx=+x[0],dy=+x[1],cluster):nodeSize?[dx,dy]:null;};return cluster;};function count(node){var sum=0,children=node.children,i=children&&children.length;if(!i)sum=1;else while(--i>=0){sum+=children[i].value;}node.value=sum;}var node_count=function node_count(){return this.eachAfter(count);};var node_each=function node_each(callback){var node=this,current,next=[node],children,i,n;do{current=next.reverse(),next=[];while(node=current.pop()){callback(node),children=node.children;if(children)for(i=0,n=children.length;i<n;++i){next.push(children[i]);}}}while(next.length);return this;};var node_eachBefore=function node_eachBefore(callback){var node=this,nodes=[node],children,i;while(node=nodes.pop()){callback(node),children=node.children;if(children)for(i=children.length-1;i>=0;--i){nodes.push(children[i]);}}return this;};var node_eachAfter=function node_eachAfter(callback){var node=this,nodes=[node],next=[],children,i,n;while(node=nodes.pop()){next.push(node),children=node.children;if(children)for(i=0,n=children.length;i<n;++i){nodes.push(children[i]);}}while(node=next.pop()){callback(node);}return this;};var node_sum=function node_sum(value){return this.eachAfter(function(node){var sum=+value(node.data)||0,children=node.children,i=children&&children.length;while(--i>=0){sum+=children[i].value;}node.value=sum;});};var node_sort=function node_sort(compare){return this.eachBefore(function(node){if(node.children){node.children.sort(compare);}});};var node_path=function node_path(end){var start=this,ancestor=leastCommonAncestor(start,end),nodes=[start];while(start!==ancestor){start=start.parent;nodes.push(start);}var k=nodes.length;while(end!==ancestor){nodes.splice(k,0,end);end=end.parent;}return nodes;};function leastCommonAncestor(a,b){if(a===b)return a;var aNodes=a.ancestors(),bNodes=b.ancestors(),c=null;a=aNodes.pop();b=bNodes.pop();while(a===b){c=a;a=aNodes.pop();b=bNodes.pop();}return c;}var node_ancestors=function node_ancestors(){var node=this,nodes=[node];while(node=node.parent){nodes.push(node);}return nodes;};var node_descendants=function node_descendants(){var nodes=[];this.each(function(node){nodes.push(node);});return nodes;};var node_leaves=function node_leaves(){var leaves=[];this.eachBefore(function(node){if(!node.children){leaves.push(node);}});return leaves;};var node_links=function node_links(){var root=this,links=[];root.each(function(node){if(node!==root){// Don’t include the root’s parent, if any.
links.push({source:node.parent,target:node});}});return links;};function hierarchy(data,children){var root=new Node(data),valued=+data.value&&(root.value=data.value),node,nodes=[root],child,childs,i,n;if(children==null)children=defaultChildren;while(node=nodes.pop()){if(valued)node.value=+node.data.value;if((childs=children(node.data))&&(n=childs.length)){node.children=new Array(n);for(i=n-1;i>=0;--i){nodes.push(child=node.children[i]=new Node(childs[i]));child.parent=node;child.depth=node.depth+1;}}}return root.eachBefore(computeHeight);}function node_copy(){return hierarchy(this).eachBefore(copyData);}function defaultChildren(d){return d.children;}function copyData(node){node.data=node.data.data;}function computeHeight(node){var height=0;do{node.height=height;}while((node=node.parent)&&node.height<++height);}function Node(data){this.data=data;this.depth=this.height=0;this.parent=null;}Node.prototype=hierarchy.prototype={constructor:Node,count:node_count,each:node_each,eachAfter:node_eachAfter,eachBefore:node_eachBefore,sum:node_sum,sort:node_sort,path:node_path,ancestors:node_ancestors,descendants:node_descendants,leaves:node_leaves,links:node_links,copy:node_copy};var slice$5=Array.prototype.slice;function shuffle$1(array){var m=array.length,t,i;while(m){i=Math.random()*m--|0;t=array[m];array[m]=array[i];array[i]=t;}return array;}var enclose=function enclose(circles){var i=0,n=(circles=shuffle$1(slice$5.call(circles))).length,B=[],p,e;while(i<n){p=circles[i];if(e&&enclosesWeak(e,p))++i;else e=encloseBasis(B=extendBasis(B,p)),i=0;}return e;};function extendBasis(B,p){var i,j;if(enclosesWeakAll(p,B))return[p];// If we get here then B must have at least one element.
for(i=0;i<B.length;++i){if(enclosesNot(p,B[i])&&enclosesWeakAll(encloseBasis2(B[i],p),B)){return[B[i],p];}}// If we get here then B must have at least two elements.
for(i=0;i<B.length-1;++i){for(j=i+1;j<B.length;++j){if(enclosesNot(encloseBasis2(B[i],B[j]),p)&&enclosesNot(encloseBasis2(B[i],p),B[j])&&enclosesNot(encloseBasis2(B[j],p),B[i])&&enclosesWeakAll(encloseBasis3(B[i],B[j],p),B)){return[B[i],B[j],p];}}}// If we get here then something is very wrong.
throw new Error();}function enclosesNot(a,b){var dr=a.r-b.r,dx=b.x-a.x,dy=b.y-a.y;return dr<0||dr*dr<dx*dx+dy*dy;}function enclosesWeak(a,b){var dr=a.r-b.r+1e-6,dx=b.x-a.x,dy=b.y-a.y;return dr>0&&dr*dr>dx*dx+dy*dy;}function enclosesWeakAll(a,B){for(var i=0;i<B.length;++i){if(!enclosesWeak(a,B[i])){return false;}}return true;}function encloseBasis(B){switch(B.length){case 1:return encloseBasis1(B[0]);case 2:return encloseBasis2(B[0],B[1]);case 3:return encloseBasis3(B[0],B[1],B[2]);}}function encloseBasis1(a){return{x:a.x,y:a.y,r:a.r};}function encloseBasis2(a,b){var x1=a.x,y1=a.y,r1=a.r,x2=b.x,y2=b.y,r2=b.r,x21=x2-x1,y21=y2-y1,r21=r2-r1,l=Math.sqrt(x21*x21+y21*y21);return{x:(x1+x2+x21/l*r21)/2,y:(y1+y2+y21/l*r21)/2,r:(l+r1+r2)/2};}function encloseBasis3(a,b,c){var x1=a.x,y1=a.y,r1=a.r,x2=b.x,y2=b.y,r2=b.r,x3=c.x,y3=c.y,r3=c.r,a2=x1-x2,a3=x1-x3,b2=y1-y2,b3=y1-y3,c2=r2-r1,c3=r3-r1,d1=x1*x1+y1*y1-r1*r1,d2=d1-x2*x2-y2*y2+r2*r2,d3=d1-x3*x3-y3*y3+r3*r3,ab=a3*b2-a2*b3,xa=(b2*d3-b3*d2)/(ab*2)-x1,xb=(b3*c2-b2*c3)/ab,ya=(a3*d2-a2*d3)/(ab*2)-y1,yb=(a2*c3-a3*c2)/ab,A=xb*xb+yb*yb-1,B=2*(r1+xa*xb+ya*yb),C=xa*xa+ya*ya-r1*r1,r=-(A?(B+Math.sqrt(B*B-4*A*C))/(2*A):C/B);return{x:x1+xa+xb*r,y:y1+ya+yb*r,r:r};}function place(a,b,c){var ax=a.x,ay=a.y,da=b.r+c.r,db=a.r+c.r,dx=b.x-ax,dy=b.y-ay,dc=dx*dx+dy*dy;if(dc){var x=0.5+((db*=db)-(da*=da))/(2*dc),y=Math.sqrt(Math.max(0,2*da*(db+dc)-(db-=dc)*db-da*da))/(2*dc);c.x=ax+x*dx+y*dy;c.y=ay+x*dy-y*dx;}else{c.x=ax+db;c.y=ay;}}function intersects(a,b){var dx=b.x-a.x,dy=b.y-a.y,dr=a.r+b.r;return dr*dr-1e-6>dx*dx+dy*dy;}function score(node){var a=node._,b=node.next._,ab=a.r+b.r,dx=(a.x*b.r+b.x*a.r)/ab,dy=(a.y*b.r+b.y*a.r)/ab;return dx*dx+dy*dy;}function Node$1(circle){this._=circle;this.next=null;this.previous=null;}function packEnclose(circles){if(!(n=circles.length))return 0;var a,b,c,n,aa,ca,i,j,k,sj,sk;// Place the first circle.
a=circles[0],a.x=0,a.y=0;if(!(n>1))return a.r;// Place the second circle.
b=circles[1],a.x=-b.r,b.x=a.r,b.y=0;if(!(n>2))return a.r+b.r;// Place the third circle.
place(b,a,c=circles[2]);// Initialize the front-chain using the first three circles a, b and c.
a=new Node$1(a),b=new Node$1(b),c=new Node$1(c);a.next=c.previous=b;b.next=a.previous=c;c.next=b.previous=a;// Attempt to place each remaining circle…
pack:for(i=3;i<n;++i){place(a._,b._,c=circles[i]),c=new Node$1(c);// Find the closest intersecting circle on the front-chain, if any.
// “Closeness” is determined by linear distance along the front-chain.
// “Ahead” or “behind” is likewise determined by linear distance.
j=b.next,k=a.previous,sj=b._.r,sk=a._.r;do{if(sj<=sk){if(intersects(j._,c._)){b=j,a.next=b,b.previous=a,--i;continue pack;}sj+=j._.r,j=j.next;}else{if(intersects(k._,c._)){a=k,a.next=b,b.previous=a,--i;continue pack;}sk+=k._.r,k=k.previous;}}while(j!==k.next);// Success! Insert the new circle c between a and b.
c.previous=a,c.next=b,a.next=b.previous=b=c;// Compute the new closest circle pair to the centroid.
aa=score(a);while((c=c.next)!==b){if((ca=score(c))<aa){a=c,aa=ca;}}b=a.next;}// Compute the enclosing circle of the front chain.
a=[b._],c=b;while((c=c.next)!==b){a.push(c._);}c=enclose(a);// Translate the circles to put the enclosing circle around the origin.
for(i=0;i<n;++i){a=circles[i],a.x-=c.x,a.y-=c.y;}return c.r;}function optional(f){return f==null?null:required(f);}function required(f){if(typeof f!=="function")throw new Error();return f;}function constantZero(){return 0;}var constant$9=function constant$9(x){return function(){return x;};};function defaultRadius(d){return Math.sqrt(d.value);}var pack$1=function pack$1(){var radius=null,dx=1,dy=1,padding=constantZero;function pack(root){root.x=dx/2,root.y=dy/2;if(radius){root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding,0.5)).eachBefore(translateChild(1));}else{root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero,1)).eachAfter(packChildren(padding,root.r/Math.min(dx,dy))).eachBefore(translateChild(Math.min(dx,dy)/(2*root.r)));}return root;}pack.radius=function(x){return arguments.length?(radius=optional(x),pack):radius;};pack.size=function(x){return arguments.length?(dx=+x[0],dy=+x[1],pack):[dx,dy];};pack.padding=function(x){return arguments.length?(padding=typeof x==="function"?x:constant$9(+x),pack):padding;};return pack;};function radiusLeaf(radius){return function(node){if(!node.children){node.r=Math.max(0,+radius(node)||0);}};}function packChildren(padding,k){return function(node){if(children=node.children){var children,i,n=children.length,r=padding(node)*k||0,e;if(r)for(i=0;i<n;++i){children[i].r+=r;}e=packEnclose(children);if(r)for(i=0;i<n;++i){children[i].r-=r;}node.r=e+r;}};}function translateChild(k){return function(node){var parent=node.parent;node.r*=k;if(parent){node.x=parent.x+k*node.x;node.y=parent.y+k*node.y;}};}var roundNode=function roundNode(node){node.x0=Math.round(node.x0);node.y0=Math.round(node.y0);node.x1=Math.round(node.x1);node.y1=Math.round(node.y1);};var treemapDice=function treemapDice(parent,x0,y0,x1,y1){var nodes=parent.children,node,i=-1,n=nodes.length,k=parent.value&&(x1-x0)/parent.value;while(++i<n){node=nodes[i],node.y0=y0,node.y1=y1;node.x0=x0,node.x1=x0+=node.value*k;}};var partition$2=function partition$2(){var dx=1,dy=1,padding=0,round=false;function partition(root){var n=root.height+1;root.x0=root.y0=padding;root.x1=dx;root.y1=dy/n;root.eachBefore(positionNode(dy,n));if(round)root.eachBefore(roundNode);return root;}function positionNode(dy,n){return function(node){if(node.children){treemapDice(node,node.x0,dy*(node.depth+1)/n,node.x1,dy*(node.depth+2)/n);}var x0=node.x0,y0=node.y0,x1=node.x1-padding,y1=node.y1-padding;if(x1<x0)x0=x1=(x0+x1)/2;if(y1<y0)y0=y1=(y0+y1)/2;node.x0=x0;node.y0=y0;node.x1=x1;node.y1=y1;};}partition.round=function(x){return arguments.length?(round=!!x,partition):round;};partition.size=function(x){return arguments.length?(dx=+x[0],dy=+x[1],partition):[dx,dy];};partition.padding=function(x){return arguments.length?(padding=+x,partition):padding;};return partition;};var keyPrefix="$";var preroot={depth:-1};var ambiguous={};function defaultId(d){return d.id;}function defaultParentId(d){return d.parentId;}var stratify=function stratify(){var id=defaultId,parentId=defaultParentId;function stratify(data){var d,i,n=data.length,root,parent,node,nodes=new Array(n),nodeId,nodeKey,nodeByKey={};for(i=0;i<n;++i){d=data[i],node=nodes[i]=new Node(d);if((nodeId=id(d,i,data))!=null&&(nodeId+="")){nodeKey=keyPrefix+(node.id=nodeId);nodeByKey[nodeKey]=nodeKey in nodeByKey?ambiguous:node;}}for(i=0;i<n;++i){node=nodes[i],nodeId=parentId(data[i],i,data);if(nodeId==null||!(nodeId+="")){if(root)throw new Error("multiple roots");root=node;}else{parent=nodeByKey[keyPrefix+nodeId];if(!parent)throw new Error("missing: "+nodeId);if(parent===ambiguous)throw new Error("ambiguous: "+nodeId);if(parent.children)parent.children.push(node);else parent.children=[node];node.parent=parent;}}if(!root)throw new Error("no root");root.parent=preroot;root.eachBefore(function(node){node.depth=node.parent.depth+1;--n;}).eachBefore(computeHeight);root.parent=null;if(n>0)throw new Error("cycle");return root;}stratify.id=function(x){return arguments.length?(id=required(x),stratify):id;};stratify.parentId=function(x){return arguments.length?(parentId=required(x),stratify):parentId;};return stratify;};function defaultSeparation$1(a,b){return a.parent===b.parent?1:2;}// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v){var children=v.children;return children?children[0]:v.t;}// This function works analogously to nextLeft.
function nextRight(v){var children=v.children;return children?children[children.length-1]:v.t;}// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm,wp,shift){var change=shift/(wp.i-wm.i);wp.c-=change;wp.s+=shift;wm.c+=change;wp.z+=shift;wp.m+=shift;}// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v){var shift=0,change=0,children=v.children,i=children.length,w;while(--i>=0){w=children[i];w.z+=shift;w.m+=shift;shift+=w.s+(change+=w.c);}}// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim,v,ancestor){return vim.a.parent===v.parent?vim.a:ancestor;}function TreeNode(node,i){this._=node;this.parent=null;this.children=null;this.A=null;// default ancestor
this.a=this;// ancestor
this.z=0;// prelim
this.m=0;// mod
this.c=0;// change
this.s=0;// shift
this.t=null;// thread
this.i=i;// number
}TreeNode.prototype=Object.create(Node.prototype);function treeRoot(root){var tree=new TreeNode(root,0),node,nodes=[tree],child,children,i,n;while(node=nodes.pop()){if(children=node._.children){node.children=new Array(n=children.length);for(i=n-1;i>=0;--i){nodes.push(child=node.children[i]=new TreeNode(children[i],i));child.parent=node;}}}(tree.parent=new TreeNode(null,0)).children=[tree];return tree;}// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
var tree$1=function tree$1(){var separation=defaultSeparation$1,dx=1,dy=1,nodeSize=null;function tree(root){var t=treeRoot(root);// Compute the layout using Buchheim et al.’s algorithm.
t.eachAfter(firstWalk),t.parent.m=-t.z;t.eachBefore(secondWalk);// If a fixed node size is specified, scale x and y.
if(nodeSize)root.eachBefore(sizeNode);// If a fixed tree size is specified, scale x and y based on the extent.
// Compute the left-most, right-most, and depth-most nodes for extents.
else{var left=root,right=root,bottom=root;root.eachBefore(function(node){if(node.x<left.x)left=node;if(node.x>right.x)right=node;if(node.depth>bottom.depth)bottom=node;});var s=left===right?1:separation(left,right)/2,tx=s-left.x,kx=dx/(right.x+s+tx),ky=dy/(bottom.depth||1);root.eachBefore(function(node){node.x=(node.x+tx)*kx;node.y=node.depth*ky;});}return root;}// Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
// applied recursively to the children of v, as well as the function
// APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
// node v is placed to the midpoint of its outermost children.
function firstWalk(v){var children=v.children,siblings=v.parent.children,w=v.i?siblings[v.i-1]:null;if(children){executeShifts(v);var midpoint=(children[0].z+children[children.length-1].z)/2;if(w){v.z=w.z+separation(v._,w._);v.m=v.z-midpoint;}else{v.z=midpoint;}}else if(w){v.z=w.z+separation(v._,w._);}v.parent.A=apportion(v,w,v.parent.A||siblings[0]);}// Computes all real x-coordinates by summing up the modifiers recursively.
function secondWalk(v){v._.x=v.z+v.parent.m;v.m+=v.parent.m;}// The core of the algorithm. Here, a new subtree is combined with the
// previous subtrees. Threads are used to traverse the inside and outside
// contours of the left and right subtree up to the highest common level. The
// vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
// superscript o means outside and i means inside, the subscript - means left
// subtree and + means right subtree. For summing up the modifiers along the
// contour, we use respective variables si+, si-, so-, and so+. Whenever two
// nodes of the inside contours conflict, we compute the left one of the
// greatest uncommon ancestors using the function ANCESTOR and call MOVE
// SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
// Finally, we add a new thread (if necessary).
function apportion(v,w,ancestor){if(w){var vip=v,vop=v,vim=w,vom=vip.parent.children[0],sip=vip.m,sop=vop.m,sim=vim.m,som=vom.m,shift;while(vim=nextRight(vim),vip=nextLeft(vip),vim&&vip){vom=nextLeft(vom);vop=nextRight(vop);vop.a=v;shift=vim.z+sim-vip.z-sip+separation(vim._,vip._);if(shift>0){moveSubtree(nextAncestor(vim,v,ancestor),v,shift);sip+=shift;sop+=shift;}sim+=vim.m;sip+=vip.m;som+=vom.m;sop+=vop.m;}if(vim&&!nextRight(vop)){vop.t=vim;vop.m+=sim-sop;}if(vip&&!nextLeft(vom)){vom.t=vip;vom.m+=sip-som;ancestor=v;}}return ancestor;}function sizeNode(node){node.x*=dx;node.y=node.depth*dy;}tree.separation=function(x){return arguments.length?(separation=x,tree):separation;};tree.size=function(x){return arguments.length?(nodeSize=false,dx=+x[0],dy=+x[1],tree):nodeSize?null:[dx,dy];};tree.nodeSize=function(x){return arguments.length?(nodeSize=true,dx=+x[0],dy=+x[1],tree):nodeSize?[dx,dy]:null;};return tree;};var treemapSlice=function treemapSlice(parent,x0,y0,x1,y1){var nodes=parent.children,node,i=-1,n=nodes.length,k=parent.value&&(y1-y0)/parent.value;while(++i<n){node=nodes[i],node.x0=x0,node.x1=x1;node.y0=y0,node.y1=y0+=node.value*k;}};var phi=(1+Math.sqrt(5))/2;function squarifyRatio(ratio,parent,x0,y0,x1,y1){var rows=[],nodes=parent.children,row,nodeValue,i0=0,i1=0,n=nodes.length,dx,dy,value=parent.value,sumValue,minValue,maxValue,newRatio,minRatio,alpha,beta;while(i0<n){dx=x1-x0,dy=y1-y0;// Find the next non-empty node.
do{sumValue=nodes[i1++].value;}while(!sumValue&&i1<n);minValue=maxValue=sumValue;alpha=Math.max(dy/dx,dx/dy)/(value*ratio);beta=sumValue*sumValue*alpha;minRatio=Math.max(maxValue/beta,beta/minValue);// Keep adding nodes while the aspect ratio maintains or improves.
for(;i1<n;++i1){sumValue+=nodeValue=nodes[i1].value;if(nodeValue<minValue)minValue=nodeValue;if(nodeValue>maxValue)maxValue=nodeValue;beta=sumValue*sumValue*alpha;newRatio=Math.max(maxValue/beta,beta/minValue);if(newRatio>minRatio){sumValue-=nodeValue;break;}minRatio=newRatio;}// Position and record the row orientation.
rows.push(row={value:sumValue,dice:dx<dy,children:nodes.slice(i0,i1)});if(row.dice)treemapDice(row,x0,y0,x1,value?y0+=dy*sumValue/value:y1);else treemapSlice(row,x0,y0,value?x0+=dx*sumValue/value:x1,y1);value-=sumValue,i0=i1;}return rows;}var treemapSquarify=function custom(ratio){function squarify(parent,x0,y0,x1,y1){squarifyRatio(ratio,parent,x0,y0,x1,y1);}squarify.ratio=function(x){return custom((x=+x)>1?x:1);};return squarify;}(phi);var treemap=function treemap(){var tile=treemapSquarify,round=false,dx=1,dy=1,paddingStack=[0],paddingInner=constantZero,paddingTop=constantZero,paddingRight=constantZero,paddingBottom=constantZero,paddingLeft=constantZero;function treemap(root){root.x0=root.y0=0;root.x1=dx;root.y1=dy;root.eachBefore(positionNode);paddingStack=[0];if(round)root.eachBefore(roundNode);return root;}function positionNode(node){var p=paddingStack[node.depth],x0=node.x0+p,y0=node.y0+p,x1=node.x1-p,y1=node.y1-p;if(x1<x0)x0=x1=(x0+x1)/2;if(y1<y0)y0=y1=(y0+y1)/2;node.x0=x0;node.y0=y0;node.x1=x1;node.y1=y1;if(node.children){p=paddingStack[node.depth+1]=paddingInner(node)/2;x0+=paddingLeft(node)-p;y0+=paddingTop(node)-p;x1-=paddingRight(node)-p;y1-=paddingBottom(node)-p;if(x1<x0)x0=x1=(x0+x1)/2;if(y1<y0)y0=y1=(y0+y1)/2;tile(node,x0,y0,x1,y1);}}treemap.round=function(x){return arguments.length?(round=!!x,treemap):round;};treemap.size=function(x){return arguments.length?(dx=+x[0],dy=+x[1],treemap):[dx,dy];};treemap.tile=function(x){return arguments.length?(tile=required(x),treemap):tile;};treemap.padding=function(x){return arguments.length?treemap.paddingInner(x).paddingOuter(x):treemap.paddingInner();};treemap.paddingInner=function(x){return arguments.length?(paddingInner=typeof x==="function"?x:constant$9(+x),treemap):paddingInner;};treemap.paddingOuter=function(x){return arguments.length?treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x):treemap.paddingTop();};treemap.paddingTop=function(x){return arguments.length?(paddingTop=typeof x==="function"?x:constant$9(+x),treemap):paddingTop;};treemap.paddingRight=function(x){return arguments.length?(paddingRight=typeof x==="function"?x:constant$9(+x),treemap):paddingRight;};treemap.paddingBottom=function(x){return arguments.length?(paddingBottom=typeof x==="function"?x:constant$9(+x),treemap):paddingBottom;};treemap.paddingLeft=function(x){return arguments.length?(paddingLeft=typeof x==="function"?x:constant$9(+x),treemap):paddingLeft;};return treemap;};var treemapBinary=function treemapBinary(parent,x0,y0,x1,y1){var nodes=parent.children,i,n=nodes.length,sum,sums=new Array(n+1);for(sums[0]=sum=i=0;i<n;++i){sums[i+1]=sum+=nodes[i].value;}partition(0,n,parent.value,x0,y0,x1,y1);function partition(i,j,value,x0,y0,x1,y1){if(i>=j-1){var node=nodes[i];node.x0=x0,node.y0=y0;node.x1=x1,node.y1=y1;return;}var valueOffset=sums[i],valueTarget=value/2+valueOffset,k=i+1,hi=j-1;while(k<hi){var mid=k+hi>>>1;if(sums[mid]<valueTarget)k=mid+1;else hi=mid;}if(valueTarget-sums[k-1]<sums[k]-valueTarget&&i+1<k)--k;var valueLeft=sums[k]-valueOffset,valueRight=value-valueLeft;if(x1-x0>y1-y0){var xk=(x0*valueRight+x1*valueLeft)/value;partition(i,k,valueLeft,x0,y0,xk,y1);partition(k,j,valueRight,xk,y0,x1,y1);}else{var yk=(y0*valueRight+y1*valueLeft)/value;partition(i,k,valueLeft,x0,y0,x1,yk);partition(k,j,valueRight,x0,yk,x1,y1);}}};var treemapSliceDice=function treemapSliceDice(parent,x0,y0,x1,y1){(parent.depth&1?treemapSlice:treemapDice)(parent,x0,y0,x1,y1);};var treemapResquarify=function custom(ratio){function resquarify(parent,x0,y0,x1,y1){if((rows=parent._squarify)&&rows.ratio===ratio){var rows,row,nodes,i,j=-1,n,m=rows.length,value=parent.value;while(++j<m){row=rows[j],nodes=row.children;for(i=row.value=0,n=nodes.length;i<n;++i){row.value+=nodes[i].value;}if(row.dice)treemapDice(row,x0,y0,x1,y0+=(y1-y0)*row.value/value);else treemapSlice(row,x0,y0,x0+=(x1-x0)*row.value/value,y1);value-=row.value;}}else{parent._squarify=rows=squarifyRatio(ratio,parent,x0,y0,x1,y1);rows.ratio=ratio;}}resquarify.ratio=function(x){return custom((x=+x)>1?x:1);};return resquarify;}(phi);/**
  * Nest tuples into a tree structure, grouped by key values.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.
  * @param {function(object): *} [params.key] - Unique key field for each tuple.
  *   If not provided, the tuple id field is used.
  * @param {boolean} [params.generate=false] - A boolean flag indicating if
  *   non-leaf nodes generated by this transform should be included in the
  *   output. The default (false) includes only the input data (leaf nodes)
  *   in the data stream.
  */function Nest(params){Transform.call(this,null,params);}Nest.Definition={"type":"Nest","metadata":{"treesource":true,"source":true,"generates":true,"changes":true},"params":[{"name":"keys","type":"field","array":true},{"name":"key","type":"field"},{"name":"generate","type":"boolean"}]};var prototype$68=inherits(Nest,Transform);function children(n){return n.values;}prototype$68.transform=function(_,pulse){if(!pulse.source){error$1('Nest transform requires an upstream data source.');}var key$$1=_.key||tupleid,gen=_.generate,mod=_.modified(),out=gen||mod?pulse.fork(pulse.ALL):pulse,root,tree,map$$1;if(!this.value||mod||pulse.changed()){// collect nodes to remove
if(gen&&this.value){out.materialize(out.REM);this.value.each(function(node){if(node.children)out.rem.push(node);});}// generate new tree structure
root=array(_.keys).reduce(function(n,k){n.key(k);return n;},nest()).entries(pulse.source);this.value=tree=hierarchy({values:root},children);// collect nodes to add
if(gen){out.materialize(out.ADD);out.source=out.source.slice();tree.each(function(node){if(node.children){node=ingest(node.data);out.add.push(node);out.source.push(node);}});}// build lookup table
map$$1=tree.lookup={};tree.each(function(node){if(tupleid(node.data)!=null){map$$1[key$$1(node.data)]=node;}});}out.source.root=this.value;return out;};/**
 * Abstract class for tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */function HierarchyLayout(params){Transform.call(this,null,params);}var prototype$70=inherits(HierarchyLayout,Transform);prototype$70.transform=function(_,pulse){if(!pulse.source||!pulse.source.root){error$1(this.constructor.name+' transform requires a backing tree data source.');}var layout=this.layout(_.method),fields=this.fields,root=pulse.source.root,as=_.as||fields;if(_.field)root.sum(_.field);if(_.sort)root.sort(_.sort);setParams(layout,this.params,_);try{this.value=layout(root);}catch(err){error$1(err);}root.each(function(node){setFields(node,fields,as);});return pulse.reflow(_.modified()).modifies(as).modifies('leaf');};function setParams(layout,params,_){for(var p,i=0,n=params.length;i<n;++i){p=params[i];if(p in _)layout[p](_[p]);}}function setFields(node,fields,as){var t=node.data;for(var i=0,n=fields.length-1;i<n;++i){t[as[i]]=node[fields[i]];}t[as[n]]=node.children?node.children.length:0;}var Output=['x','y','r','depth','children'];/**
 * Packed circle tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */function Pack(params){HierarchyLayout.call(this,params);}Pack.Definition={"type":"Pack","metadata":{"tree":true,"modifies":true},"params":[{"name":"field","type":"field"},{"name":"sort","type":"compare"},{"name":"padding","type":"number","default":0},{"name":"radius","type":"field","default":null},{"name":"size","type":"number","array":true,"length":2},{"name":"as","type":"string","array":true,"length":3,"default":Output}]};var prototype$69=inherits(Pack,HierarchyLayout);prototype$69.layout=pack$1;prototype$69.params=['size','padding'];prototype$69.fields=Output;var Output$1=["x0","y0","x1","y1","depth","children"];/**
 * Partition tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */function Partition(params){HierarchyLayout.call(this,params);}Partition.Definition={"type":"Partition","metadata":{"tree":true,"modifies":true},"params":[{"name":"field","type":"field"},{"name":"sort","type":"compare"},{"name":"padding","type":"number","default":0},{"name":"round","type":"boolean","default":false},{"name":"size","type":"number","array":true,"length":2},{"name":"as","type":"string","array":true,"length":4,"default":Output$1}]};var prototype$71=inherits(Partition,HierarchyLayout);prototype$71.layout=partition$2;prototype$71.params=['size','round','padding'];prototype$71.fields=Output$1;/**
  * Stratify a collection of tuples into a tree structure based on
  * id and parent id fields.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {function(object): *} params.key - Unique key field for each tuple.
  * @param {function(object): *} params.parentKey - Field with key for parent tuple.
  */function Stratify(params){Transform.call(this,null,params);}Stratify.Definition={"type":"Stratify","metadata":{"treesource":true},"params":[{"name":"key","type":"field","required":true},{"name":"parentKey","type":"field","required":true}]};var prototype$72=inherits(Stratify,Transform);prototype$72.transform=function(_,pulse){if(!pulse.source){error$1('Stratify transform requires an upstream data source.');}var mod=_.modified(),tree,map,run=!this.value||mod||pulse.changed(pulse.ADD_REM)||pulse.modified(_.key.fields)||pulse.modified(_.parentKey.fields);if(run){tree=stratify().id(_.key).parentId(_.parentKey)(pulse.source);map=tree.lookup={};tree.each(function(node){map[_.key(node.data)]=node;});this.value=tree;}pulse.source.root=this.value;return mod?pulse.fork(pulse.ALL):pulse;};var Layouts={tidy:tree$1,cluster:cluster};var Output$2=["x","y","depth","children"];/**
 * Tree layout. Depending on the method parameter, performs either
 * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */function Tree(params){HierarchyLayout.call(this,params);}Tree.Definition={"type":"Tree","metadata":{"tree":true,"modifies":true},"params":[{"name":"field","type":"field"},{"name":"sort","type":"compare"},{"name":"method","type":"enum","default":"tidy","values":["tidy","cluster"]},{"name":"size","type":"number","array":true,"length":2},{"name":"nodeSize","type":"number","array":true,"length":2},{"name":"as","type":"string","array":true,"length":4,"default":Output$2}]};var prototype$73=inherits(Tree,HierarchyLayout);/**
 * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.
 */prototype$73.layout=function(method){var m=method||'tidy';if(Layouts.hasOwnProperty(m))return Layouts[m]();else error$1('Unrecognized Tree layout method: '+m);};prototype$73.params=['size','nodeSize','separation'];prototype$73.fields=Output$2;/**
  * Generate tuples representing links between tree nodes.
  * The resulting tuples will contain 'source' and 'target' fields,
  * which point to parent and child node tuples, respectively.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {function(object): *} [params.key] - Unique key field for each tuple.
  *   If not provided, the tuple id field is used.
  */function TreeLinks(params){Transform.call(this,{},params);}TreeLinks.Definition={"type":"TreeLinks","metadata":{"tree":true,"generates":true,"changes":true},"params":[{"name":"key","type":"field"}]};var prototype$74=inherits(TreeLinks,Transform);function parentTuple(node){var p;return node.parent&&(p=node.parent.data)&&tupleid(p)!=null&&p;}prototype$74.transform=function(_,pulse){if(!pulse.source||!pulse.source.root){error$1('TreeLinks transform requires a backing tree data source.');}var root=pulse.source.root,nodes=root.lookup,links=this.value,key$$1=_.key||tupleid,mods={},out=pulse.fork();function modify(id$$1){var link=links[id$$1];if(link){mods[id$$1]=1;out.mod.push(link);}}// process removed tuples
// assumes that if a parent node is removed the child will be, too.
pulse.visit(pulse.REM,function(t){var id$$1=key$$1(t),link=links[id$$1];if(link){delete links[id$$1];out.rem.push(link);}});// create new link instances for added nodes with valid parents
pulse.visit(pulse.ADD,function(t){var id$$1=key$$1(t),p;if(p=parentTuple(nodes[id$$1])){out.add.push(links[id$$1]=ingest({source:p,target:t}));mods[id$$1]=1;}});// process modified nodes and their children
pulse.visit(pulse.MOD,function(t){var id$$1=key$$1(t),node=nodes[id$$1],kids=node.children;modify(id$$1);if(kids)for(var i=0,n=kids.length;i<n;++i){if(!mods[id$$1=key$$1(kids[i].data)])modify(id$$1);}});return out;};var Tiles={binary:treemapBinary,dice:treemapDice,slice:treemapSlice,slicedice:treemapSliceDice,squarify:treemapSquarify,resquarify:treemapResquarify};var Output$3=["x0","y0","x1","y1","depth","children"];/**
 * Treemap layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */function Treemap(params){HierarchyLayout.call(this,params);}Treemap.Definition={"type":"Treemap","metadata":{"tree":true,"modifies":true},"params":[{"name":"field","type":"field"},{"name":"sort","type":"compare"},{"name":"method","type":"enum","default":"squarify","values":["squarify","resquarify","binary","dice","slice","slicedice"]},{"name":"padding","type":"number","default":0},{"name":"paddingInner","type":"number","default":0},{"name":"paddingOuter","type":"number","default":0},{"name":"paddingTop","type":"number","default":0},{"name":"paddingRight","type":"number","default":0},{"name":"paddingBottom","type":"number","default":0},{"name":"paddingLeft","type":"number","default":0},{"name":"ratio","type":"number","default":1.618033988749895},{"name":"round","type":"boolean","default":false},{"name":"size","type":"number","array":true,"length":2},{"name":"as","type":"string","array":true,"length":4,"default":Output$3}]};var prototype$75=inherits(Treemap,HierarchyLayout);/**
 * Treemap layout generator. Adds 'method' and 'ratio' parameters
 * to configure the underlying tile method.
 */prototype$75.layout=function(){var x=treemap();x.ratio=function(_){var t=x.tile();if(t.ratio)x.tile(t.ratio(_));};x.method=function(_){if(Tiles.hasOwnProperty(_))x.tile(Tiles[_]);else error$1('Unrecognized Treemap layout method: '+_);};return x;};prototype$75.params=['method','ratio','size','round','padding','paddingInner','paddingOuter','paddingTop','paddingRight','paddingBottom','paddingLeft'];prototype$75.fields=Output$3;var tree=Object.freeze({nest:Nest,pack:Pack,partition:Partition,stratify:Stratify,tree:Tree,treelinks:TreeLinks,treemap:Treemap});var constant$10=function constant$10(x){return function(){return x;};};function x$4(d){return d[0];}function y$4(d){return d[1];}function RedBlackTree(){this._=null;// root node
}function RedBlackNode(node){node.U=// parent node
node.C=// color - true for red, false for black
node.L=// left node
node.R=// right node
node.P=// previous node
node.N=null;// next node
}RedBlackTree.prototype={constructor:RedBlackTree,insert:function insert(after,node){var parent,grandpa,uncle;if(after){node.P=after;node.N=after.N;if(after.N)after.N.P=node;after.N=node;if(after.R){after=after.R;while(after.L){after=after.L;}after.L=node;}else{after.R=node;}parent=after;}else if(this._){after=RedBlackFirst(this._);node.P=null;node.N=after;after.P=after.L=node;parent=after;}else{node.P=node.N=null;this._=node;parent=null;}node.L=node.R=null;node.U=parent;node.C=true;after=node;while(parent&&parent.C){grandpa=parent.U;if(parent===grandpa.L){uncle=grandpa.R;if(uncle&&uncle.C){parent.C=uncle.C=false;grandpa.C=true;after=grandpa;}else{if(after===parent.R){RedBlackRotateLeft(this,parent);after=parent;parent=after.U;}parent.C=false;grandpa.C=true;RedBlackRotateRight(this,grandpa);}}else{uncle=grandpa.L;if(uncle&&uncle.C){parent.C=uncle.C=false;grandpa.C=true;after=grandpa;}else{if(after===parent.L){RedBlackRotateRight(this,parent);after=parent;parent=after.U;}parent.C=false;grandpa.C=true;RedBlackRotateLeft(this,grandpa);}}parent=after.U;}this._.C=false;},remove:function remove(node){if(node.N)node.N.P=node.P;if(node.P)node.P.N=node.N;node.N=node.P=null;var parent=node.U,sibling,left=node.L,right=node.R,next,red;if(!left)next=right;else if(!right)next=left;else next=RedBlackFirst(right);if(parent){if(parent.L===node)parent.L=next;else parent.R=next;}else{this._=next;}if(left&&right){red=next.C;next.C=node.C;next.L=left;left.U=next;if(next!==right){parent=next.U;next.U=node.U;node=next.R;parent.L=node;next.R=right;right.U=next;}else{next.U=parent;parent=next;node=next.R;}}else{red=node.C;node=next;}if(node)node.U=parent;if(red)return;if(node&&node.C){node.C=false;return;}do{if(node===this._)break;if(node===parent.L){sibling=parent.R;if(sibling.C){sibling.C=false;parent.C=true;RedBlackRotateLeft(this,parent);sibling=parent.R;}if(sibling.L&&sibling.L.C||sibling.R&&sibling.R.C){if(!sibling.R||!sibling.R.C){sibling.L.C=false;sibling.C=true;RedBlackRotateRight(this,sibling);sibling=parent.R;}sibling.C=parent.C;parent.C=sibling.R.C=false;RedBlackRotateLeft(this,parent);node=this._;break;}}else{sibling=parent.L;if(sibling.C){sibling.C=false;parent.C=true;RedBlackRotateRight(this,parent);sibling=parent.L;}if(sibling.L&&sibling.L.C||sibling.R&&sibling.R.C){if(!sibling.L||!sibling.L.C){sibling.R.C=false;sibling.C=true;RedBlackRotateLeft(this,sibling);sibling=parent.L;}sibling.C=parent.C;parent.C=sibling.L.C=false;RedBlackRotateRight(this,parent);node=this._;break;}}sibling.C=true;node=parent;parent=parent.U;}while(!node.C);if(node)node.C=false;}};function RedBlackRotateLeft(tree,node){var p=node,q=node.R,parent=p.U;if(parent){if(parent.L===p)parent.L=q;else parent.R=q;}else{tree._=q;}q.U=parent;p.U=q;p.R=q.L;if(p.R)p.R.U=p;q.L=p;}function RedBlackRotateRight(tree,node){var p=node,q=node.L,parent=p.U;if(parent){if(parent.L===p)parent.L=q;else parent.R=q;}else{tree._=q;}q.U=parent;p.U=q;p.L=q.R;if(p.L)p.L.U=p;q.R=p;}function RedBlackFirst(node){while(node.L){node=node.L;}return node;}function createEdge(left,right,v0,v1){var edge=[null,null],index=edges.push(edge)-1;edge.left=left;edge.right=right;if(v0)setEdgeEnd(edge,left,right,v0);if(v1)setEdgeEnd(edge,right,left,v1);cells[left.index].halfedges.push(index);cells[right.index].halfedges.push(index);return edge;}function createBorderEdge(left,v0,v1){var edge=[v0,v1];edge.left=left;return edge;}function setEdgeEnd(edge,left,right,vertex){if(!edge[0]&&!edge[1]){edge[0]=vertex;edge.left=left;edge.right=right;}else if(edge.left===right){edge[1]=vertex;}else{edge[0]=vertex;}}// Liang–Barsky line clipping.
function clipEdge(edge,x0,y0,x1,y1){var a=edge[0],b=edge[1],ax=a[0],ay=a[1],bx=b[0],by=b[1],t0=0,t1=1,dx=bx-ax,dy=by-ay,r;r=x0-ax;if(!dx&&r>0)return;r/=dx;if(dx<0){if(r<t0)return;if(r<t1)t1=r;}else if(dx>0){if(r>t1)return;if(r>t0)t0=r;}r=x1-ax;if(!dx&&r<0)return;r/=dx;if(dx<0){if(r>t1)return;if(r>t0)t0=r;}else if(dx>0){if(r<t0)return;if(r<t1)t1=r;}r=y0-ay;if(!dy&&r>0)return;r/=dy;if(dy<0){if(r<t0)return;if(r<t1)t1=r;}else if(dy>0){if(r>t1)return;if(r>t0)t0=r;}r=y1-ay;if(!dy&&r<0)return;r/=dy;if(dy<0){if(r>t1)return;if(r>t0)t0=r;}else if(dy>0){if(r<t0)return;if(r<t1)t1=r;}if(!(t0>0)&&!(t1<1))return true;// TODO Better check?
if(t0>0)edge[0]=[ax+t0*dx,ay+t0*dy];if(t1<1)edge[1]=[ax+t1*dx,ay+t1*dy];return true;}function connectEdge(edge,x0,y0,x1,y1){var v1=edge[1];if(v1)return true;var v0=edge[0],left=edge.left,right=edge.right,lx=left[0],ly=left[1],rx=right[0],ry=right[1],fx=(lx+rx)/2,fy=(ly+ry)/2,fm,fb;if(ry===ly){if(fx<x0||fx>=x1)return;if(lx>rx){if(!v0)v0=[fx,y0];else if(v0[1]>=y1)return;v1=[fx,y1];}else{if(!v0)v0=[fx,y1];else if(v0[1]<y0)return;v1=[fx,y0];}}else{fm=(lx-rx)/(ry-ly);fb=fy-fm*fx;if(fm<-1||fm>1){if(lx>rx){if(!v0)v0=[(y0-fb)/fm,y0];else if(v0[1]>=y1)return;v1=[(y1-fb)/fm,y1];}else{if(!v0)v0=[(y1-fb)/fm,y1];else if(v0[1]<y0)return;v1=[(y0-fb)/fm,y0];}}else{if(ly<ry){if(!v0)v0=[x0,fm*x0+fb];else if(v0[0]>=x1)return;v1=[x1,fm*x1+fb];}else{if(!v0)v0=[x1,fm*x1+fb];else if(v0[0]<x0)return;v1=[x0,fm*x0+fb];}}}edge[0]=v0;edge[1]=v1;return true;}function clipEdges(x0,y0,x1,y1){var i=edges.length,edge;while(i--){if(!connectEdge(edge=edges[i],x0,y0,x1,y1)||!clipEdge(edge,x0,y0,x1,y1)||!(Math.abs(edge[0][0]-edge[1][0])>epsilon$3||Math.abs(edge[0][1]-edge[1][1])>epsilon$3)){delete edges[i];}}}function createCell(site){return cells[site.index]={site:site,halfedges:[]};}function cellHalfedgeAngle(cell,edge){var site=cell.site,va=edge.left,vb=edge.right;if(site===vb)vb=va,va=site;if(vb)return Math.atan2(vb[1]-va[1],vb[0]-va[0]);if(site===va)va=edge[1],vb=edge[0];else va=edge[0],vb=edge[1];return Math.atan2(va[0]-vb[0],vb[1]-va[1]);}function cellHalfedgeStart(cell,edge){return edge[+(edge.left!==cell.site)];}function cellHalfedgeEnd(cell,edge){return edge[+(edge.left===cell.site)];}function sortCellHalfedges(){for(var i=0,n=cells.length,cell,halfedges,j,m;i<n;++i){if((cell=cells[i])&&(m=(halfedges=cell.halfedges).length)){var index=new Array(m),array=new Array(m);for(j=0;j<m;++j){index[j]=j,array[j]=cellHalfedgeAngle(cell,edges[halfedges[j]]);}index.sort(function(i,j){return array[j]-array[i];});for(j=0;j<m;++j){array[j]=halfedges[index[j]];}for(j=0;j<m;++j){halfedges[j]=array[j];}}}}function clipCells(x0,y0,x1,y1){var nCells=cells.length,iCell,cell,site,iHalfedge,halfedges,nHalfedges,start,startX,startY,end,endX,endY,cover=true;for(iCell=0;iCell<nCells;++iCell){if(cell=cells[iCell]){site=cell.site;halfedges=cell.halfedges;iHalfedge=halfedges.length;// Remove any dangling clipped edges.
while(iHalfedge--){if(!edges[halfedges[iHalfedge]]){halfedges.splice(iHalfedge,1);}}// Insert any border edges as necessary.
iHalfedge=0,nHalfedges=halfedges.length;while(iHalfedge<nHalfedges){end=cellHalfedgeEnd(cell,edges[halfedges[iHalfedge]]),endX=end[0],endY=end[1];start=cellHalfedgeStart(cell,edges[halfedges[++iHalfedge%nHalfedges]]),startX=start[0],startY=start[1];if(Math.abs(endX-startX)>epsilon$3||Math.abs(endY-startY)>epsilon$3){halfedges.splice(iHalfedge,0,edges.push(createBorderEdge(site,end,Math.abs(endX-x0)<epsilon$3&&y1-endY>epsilon$3?[x0,Math.abs(startX-x0)<epsilon$3?startY:y1]:Math.abs(endY-y1)<epsilon$3&&x1-endX>epsilon$3?[Math.abs(startY-y1)<epsilon$3?startX:x1,y1]:Math.abs(endX-x1)<epsilon$3&&endY-y0>epsilon$3?[x1,Math.abs(startX-x1)<epsilon$3?startY:y0]:Math.abs(endY-y0)<epsilon$3&&endX-x0>epsilon$3?[Math.abs(startY-y0)<epsilon$3?startX:x0,y0]:null))-1);++nHalfedges;}}if(nHalfedges)cover=false;}}// If there weren’t any edges, have the closest site cover the extent.
// It doesn’t matter which corner of the extent we measure!
if(cover){var dx,dy,d2,dc=Infinity;for(iCell=0,cover=null;iCell<nCells;++iCell){if(cell=cells[iCell]){site=cell.site;dx=site[0]-x0;dy=site[1]-y0;d2=dx*dx+dy*dy;if(d2<dc)dc=d2,cover=cell;}}if(cover){var v00=[x0,y0],v01=[x0,y1],v11=[x1,y1],v10=[x1,y0];cover.halfedges.push(edges.push(createBorderEdge(site=cover.site,v00,v01))-1,edges.push(createBorderEdge(site,v01,v11))-1,edges.push(createBorderEdge(site,v11,v10))-1,edges.push(createBorderEdge(site,v10,v00))-1);}}// Lastly delete any cells with no edges; these were entirely clipped.
for(iCell=0;iCell<nCells;++iCell){if(cell=cells[iCell]){if(!cell.halfedges.length){delete cells[iCell];}}}}var circlePool=[];var firstCircle;function Circle(){RedBlackNode(this);this.x=this.y=this.arc=this.site=this.cy=null;}function attachCircle(arc){var lArc=arc.P,rArc=arc.N;if(!lArc||!rArc)return;var lSite=lArc.site,cSite=arc.site,rSite=rArc.site;if(lSite===rSite)return;var bx=cSite[0],by=cSite[1],ax=lSite[0]-bx,ay=lSite[1]-by,cx=rSite[0]-bx,cy=rSite[1]-by;var d=2*(ax*cy-ay*cx);if(d>=-epsilon2$2)return;var ha=ax*ax+ay*ay,hc=cx*cx+cy*cy,x=(cy*ha-ay*hc)/d,y=(ax*hc-cx*ha)/d;var circle=circlePool.pop()||new Circle();circle.arc=arc;circle.site=cSite;circle.x=x+bx;circle.y=(circle.cy=y+by)+Math.sqrt(x*x+y*y);// y bottom
arc.circle=circle;var before=null,node=circles._;while(node){if(circle.y<node.y||circle.y===node.y&&circle.x<=node.x){if(node.L)node=node.L;else{before=node.P;break;}}else{if(node.R)node=node.R;else{before=node;break;}}}circles.insert(before,circle);if(!before)firstCircle=circle;}function detachCircle(arc){var circle=arc.circle;if(circle){if(!circle.P)firstCircle=circle.N;circles.remove(circle);circlePool.push(circle);RedBlackNode(circle);arc.circle=null;}}var beachPool=[];function Beach(){RedBlackNode(this);this.edge=this.site=this.circle=null;}function createBeach(site){var beach=beachPool.pop()||new Beach();beach.site=site;return beach;}function detachBeach(beach){detachCircle(beach);beaches.remove(beach);beachPool.push(beach);RedBlackNode(beach);}function removeBeach(beach){var circle=beach.circle,x=circle.x,y=circle.cy,vertex=[x,y],previous=beach.P,next=beach.N,disappearing=[beach];detachBeach(beach);var lArc=previous;while(lArc.circle&&Math.abs(x-lArc.circle.x)<epsilon$3&&Math.abs(y-lArc.circle.cy)<epsilon$3){previous=lArc.P;disappearing.unshift(lArc);detachBeach(lArc);lArc=previous;}disappearing.unshift(lArc);detachCircle(lArc);var rArc=next;while(rArc.circle&&Math.abs(x-rArc.circle.x)<epsilon$3&&Math.abs(y-rArc.circle.cy)<epsilon$3){next=rArc.N;disappearing.push(rArc);detachBeach(rArc);rArc=next;}disappearing.push(rArc);detachCircle(rArc);var nArcs=disappearing.length,iArc;for(iArc=1;iArc<nArcs;++iArc){rArc=disappearing[iArc];lArc=disappearing[iArc-1];setEdgeEnd(rArc.edge,lArc.site,rArc.site,vertex);}lArc=disappearing[0];rArc=disappearing[nArcs-1];rArc.edge=createEdge(lArc.site,rArc.site,null,vertex);attachCircle(lArc);attachCircle(rArc);}function addBeach(site){var x=site[0],directrix=site[1],lArc,rArc,dxl,dxr,node=beaches._;while(node){dxl=leftBreakPoint(node,directrix)-x;if(dxl>epsilon$3)node=node.L;else{dxr=x-rightBreakPoint(node,directrix);if(dxr>epsilon$3){if(!node.R){lArc=node;break;}node=node.R;}else{if(dxl>-epsilon$3){lArc=node.P;rArc=node;}else if(dxr>-epsilon$3){lArc=node;rArc=node.N;}else{lArc=rArc=node;}break;}}}createCell(site);var newArc=createBeach(site);beaches.insert(lArc,newArc);if(!lArc&&!rArc)return;if(lArc===rArc){detachCircle(lArc);rArc=createBeach(lArc.site);beaches.insert(newArc,rArc);newArc.edge=rArc.edge=createEdge(lArc.site,newArc.site);attachCircle(lArc);attachCircle(rArc);return;}if(!rArc){// && lArc
newArc.edge=createEdge(lArc.site,newArc.site);return;}// else lArc !== rArc
detachCircle(lArc);detachCircle(rArc);var lSite=lArc.site,ax=lSite[0],ay=lSite[1],bx=site[0]-ax,by=site[1]-ay,rSite=rArc.site,cx=rSite[0]-ax,cy=rSite[1]-ay,d=2*(bx*cy-by*cx),hb=bx*bx+by*by,hc=cx*cx+cy*cy,vertex=[(cy*hb-by*hc)/d+ax,(bx*hc-cx*hb)/d+ay];setEdgeEnd(rArc.edge,lSite,rSite,vertex);newArc.edge=createEdge(lSite,site,null,vertex);rArc.edge=createEdge(site,rSite,null,vertex);attachCircle(lArc);attachCircle(rArc);}function leftBreakPoint(arc,directrix){var site=arc.site,rfocx=site[0],rfocy=site[1],pby2=rfocy-directrix;if(!pby2)return rfocx;var lArc=arc.P;if(!lArc)return-Infinity;site=lArc.site;var lfocx=site[0],lfocy=site[1],plby2=lfocy-directrix;if(!plby2)return lfocx;var hl=lfocx-rfocx,aby2=1/pby2-1/plby2,b=hl/plby2;if(aby2)return(-b+Math.sqrt(b*b-2*aby2*(hl*hl/(-2*plby2)-lfocy+plby2/2+rfocy-pby2/2)))/aby2+rfocx;return(rfocx+lfocx)/2;}function rightBreakPoint(arc,directrix){var rArc=arc.N;if(rArc)return leftBreakPoint(rArc,directrix);var site=arc.site;return site[1]===directrix?site[0]:Infinity;}var epsilon$3=1e-6;var epsilon2$2=1e-12;var beaches;var cells;var circles;var edges;function triangleArea(a,b,c){return(a[0]-c[0])*(b[1]-a[1])-(a[0]-b[0])*(c[1]-a[1]);}function lexicographic(a,b){return b[1]-a[1]||b[0]-a[0];}function Diagram(sites,extent){var site=sites.sort(lexicographic).pop(),x,y,circle;edges=[];cells=new Array(sites.length);beaches=new RedBlackTree();circles=new RedBlackTree();while(true){circle=firstCircle;if(site&&(!circle||site[1]<circle.y||site[1]===circle.y&&site[0]<circle.x)){if(site[0]!==x||site[1]!==y){addBeach(site);x=site[0],y=site[1];}site=sites.pop();}else if(circle){removeBeach(circle.arc);}else{break;}}sortCellHalfedges();if(extent){var x0=+extent[0][0],y0=+extent[0][1],x1=+extent[1][0],y1=+extent[1][1];clipEdges(x0,y0,x1,y1);clipCells(x0,y0,x1,y1);}this.edges=edges;this.cells=cells;beaches=circles=edges=cells=null;}Diagram.prototype={constructor:Diagram,polygons:function polygons(){var edges=this.edges;return this.cells.map(function(cell){var polygon=cell.halfedges.map(function(i){return cellHalfedgeStart(cell,edges[i]);});polygon.data=cell.site.data;return polygon;});},triangles:function triangles(){var triangles=[],edges=this.edges;this.cells.forEach(function(cell,i){if(!(m=(halfedges=cell.halfedges).length))return;var site=cell.site,halfedges,j=-1,m,s0,e1=edges[halfedges[m-1]],s1=e1.left===site?e1.right:e1.left;while(++j<m){s0=s1;e1=edges[halfedges[j]];s1=e1.left===site?e1.right:e1.left;if(s0&&s1&&i<s0.index&&i<s1.index&&triangleArea(site,s0,s1)<0){triangles.push([site.data,s0.data,s1.data]);}}});return triangles;},links:function links(){return this.edges.filter(function(edge){return edge.right;}).map(function(edge){return{source:edge.left.data,target:edge.right.data};});},find:function find(x,y,radius){var that=this,i0,i1=that._found||0,n=that.cells.length,cell;// Use the previously-found cell, or start with an arbitrary one.
while(!(cell=that.cells[i1])){if(++i1>=n)return null;}var dx=x-cell.site[0],dy=y-cell.site[1],d2=dx*dx+dy*dy;// Traverse the half-edges to find a closer cell, if any.
do{cell=that.cells[i0=i1],i1=null;cell.halfedges.forEach(function(e){var edge=that.edges[e],v=edge.left;if((v===cell.site||!v)&&!(v=edge.right))return;var vx=x-v[0],vy=y-v[1],v2=vx*vx+vy*vy;if(v2<d2)d2=v2,i1=v.index;});}while(i1!==null);that._found=i0;return radius==null||d2<=radius*radius?cell.site:null;}};var voronoi$1=function voronoi$1(){var x=x$4,y=y$4,extent=null;function voronoi(data){return new Diagram(data.map(function(d,i){var s=[Math.round(x(d,i,data)/epsilon$3)*epsilon$3,Math.round(y(d,i,data)/epsilon$3)*epsilon$3];s.index=i;s.data=d;return s;}),extent);}voronoi.polygons=function(data){return voronoi(data).polygons();};voronoi.links=function(data){return voronoi(data).links();};voronoi.triangles=function(data){return voronoi(data).triangles();};voronoi.x=function(_){return arguments.length?(x=typeof _==="function"?_:constant$10(+_),voronoi):x;};voronoi.y=function(_){return arguments.length?(y=typeof _==="function"?_:constant$10(+_),voronoi):y;};voronoi.extent=function(_){return arguments.length?(extent=_==null?null:[[+_[0][0],+_[0][1]],[+_[1][0],+_[1][1]]],voronoi):extent&&[[extent[0][0],extent[0][1]],[extent[1][0],extent[1][1]]];};voronoi.size=function(_){return arguments.length?(extent=_==null?null:[[0,0],[+_[0],+_[1]]],voronoi):extent&&[extent[1][0]-extent[0][0],extent[1][1]-extent[0][1]];};return voronoi;};function Voronoi(params){Transform.call(this,null,params);}Voronoi.Definition={"type":"Voronoi","metadata":{"modifies":true},"params":[{"name":"x","type":"field","required":true},{"name":"y","type":"field","required":true},{"name":"size","type":"number","array":true,"length":2},{"name":"extent","type":"array","array":true,"length":2,"default":[[-1e5,-1e5],[1e5,1e5]],"content":{"type":"number","array":true,"length":2}},{"name":"as","type":"string","default":"path"}]};var prototype$76=inherits(Voronoi,Transform);var defaultExtent=[[-1e5,-1e5],[1e5,1e5]];prototype$76.transform=function(_,pulse){var as=_.as||'path',data=pulse.source,diagram,polygons,i,n;// configure and construct voronoi diagram
diagram=voronoi$1().x(_.x).y(_.y);if(_.size)diagram.size(_.size);else diagram.extent(_.extent||defaultExtent);this.value=diagram=diagram(data);// map polygons to paths
polygons=diagram.polygons();for(i=0,n=data.length;i<n;++i){data[i][as]=polygons[i]?'M'+polygons[i].join('L')+'Z':null;}return pulse.reflow(_.modified()).modifies(as);};var voronoi=Object.freeze({voronoi:Voronoi});/*
Copyright (c) 2013, Jason Davies.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  * The name Jason Davies may not be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/
// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf
var cloudRadians=Math.PI/180;var cw=1<<11>>5;var ch=1<<11;var cloud=function cloud(){var size=[256,256],text,font,fontSize,fontStyle,fontWeight,rotate,padding,spiral=archimedeanSpiral,words=[],random=Math.random,cloud={},canvas=cloudCanvas;cloud.layout=function(){var contextAndRatio=getContext(canvas()),board=zeroArray((size[0]>>5)*size[1]),bounds=null,n=words.length,i=-1,tags=[],data=words.map(function(d){return{text:text(d),font:font(d),style:fontStyle(d),weight:fontWeight(d),rotate:rotate(d),size:~~fontSize(d),padding:padding(d),xoff:0,yoff:0,x1:0,y1:0,x0:0,y0:0,hasText:false,sprite:null,datum:d};}).sort(function(a,b){return b.size-a.size;});while(++i<n){var d=data[i];d.x=size[0]*(random()+.5)>>1;d.y=size[1]*(random()+.5)>>1;cloudSprite(contextAndRatio,d,data,i);if(d.hasText&&place(board,d,bounds)){tags.push(d);if(bounds)cloudBounds(bounds,d);else bounds=[{x:d.x+d.x0,y:d.y+d.y0},{x:d.x+d.x1,y:d.y+d.y1}];// Temporary hack
d.x-=size[0]>>1;d.y-=size[1]>>1;}}return tags;};function getContext(canvas){canvas.width=canvas.height=1;var ratio=Math.sqrt(canvas.getContext("2d").getImageData(0,0,1,1).data.length>>2);canvas.width=(cw<<5)/ratio;canvas.height=ch/ratio;var context=canvas.getContext("2d");context.fillStyle=context.strokeStyle="red";context.textAlign="center";return{context:context,ratio:ratio};}function place(board,tag,bounds){var startX=tag.x,startY=tag.y,maxDelta=Math.sqrt(size[0]*size[0]+size[1]*size[1]),s=spiral(size),dt=random()<.5?1:-1,t=-dt,dxdy,dx,dy;while(dxdy=s(t+=dt)){dx=~~dxdy[0];dy=~~dxdy[1];if(Math.min(Math.abs(dx),Math.abs(dy))>=maxDelta)break;tag.x=startX+dx;tag.y=startY+dy;if(tag.x+tag.x0<0||tag.y+tag.y0<0||tag.x+tag.x1>size[0]||tag.y+tag.y1>size[1])continue;// TODO only check for collisions within current bounds.
if(!bounds||!cloudCollide(tag,board,size[0])){if(!bounds||collideRects(tag,bounds)){var sprite=tag.sprite,w=tag.width>>5,sw=size[0]>>5,lx=tag.x-(w<<4),sx=lx&0x7f,msx=32-sx,h=tag.y1-tag.y0,x=(tag.y+tag.y0)*sw+(lx>>5),last;for(var j=0;j<h;j++){last=0;for(var i=0;i<=w;i++){board[x+i]|=last<<msx|(i<w?(last=sprite[j*w+i])>>>sx:0);}x+=sw;}tag.sprite=null;return true;}}}return false;}cloud.words=function(_){if(arguments.length){words=_;return cloud;}else{return words;}};cloud.size=function(_){if(arguments.length){size=[+_[0],+_[1]];return cloud;}else{return size;}};cloud.font=function(_){if(arguments.length){font=functor(_);return cloud;}else{return font;}};cloud.fontStyle=function(_){if(arguments.length){fontStyle=functor(_);return cloud;}else{return fontStyle;}};cloud.fontWeight=function(_){if(arguments.length){fontWeight=functor(_);return cloud;}else{return fontWeight;}};cloud.rotate=function(_){if(arguments.length){rotate=functor(_);return cloud;}else{return rotate;}};cloud.text=function(_){if(arguments.length){text=functor(_);return cloud;}else{return text;}};cloud.spiral=function(_){if(arguments.length){spiral=spirals[_]||_;return cloud;}else{return spiral;}};cloud.fontSize=function(_){if(arguments.length){fontSize=functor(_);return cloud;}else{return fontSize;}};cloud.padding=function(_){if(arguments.length){padding=functor(_);return cloud;}else{return padding;}};cloud.random=function(_){if(arguments.length){random=_;return cloud;}else{return random;}};return cloud;};// Fetches a monochrome sprite bitmap for the specified text.
// Load in batches for speed.
function cloudSprite(contextAndRatio,d,data,di){if(d.sprite)return;var c=contextAndRatio.context,ratio=contextAndRatio.ratio;c.clearRect(0,0,(cw<<5)/ratio,ch/ratio);var x=0,y=0,maxh=0,n=data.length,w,w32,h,i,j;--di;while(++di<n){d=data[di];c.save();c.font=d.style+" "+d.weight+" "+~~((d.size+1)/ratio)+"px "+d.font;w=c.measureText(d.text+"m").width*ratio;h=d.size<<1;if(d.rotate){var sr=Math.sin(d.rotate*cloudRadians),cr=Math.cos(d.rotate*cloudRadians),wcr=w*cr,wsr=w*sr,hcr=h*cr,hsr=h*sr;w=Math.max(Math.abs(wcr+hsr),Math.abs(wcr-hsr))+0x1f>>5<<5;h=~~Math.max(Math.abs(wsr+hcr),Math.abs(wsr-hcr));}else{w=w+0x1f>>5<<5;}if(h>maxh)maxh=h;if(x+w>=cw<<5){x=0;y+=maxh;maxh=0;}if(y+h>=ch)break;c.translate((x+(w>>1))/ratio,(y+(h>>1))/ratio);if(d.rotate)c.rotate(d.rotate*cloudRadians);c.fillText(d.text,0,0);if(d.padding){c.lineWidth=2*d.padding;c.strokeText(d.text,0,0);}c.restore();d.width=w;d.height=h;d.xoff=x;d.yoff=y;d.x1=w>>1;d.y1=h>>1;d.x0=-d.x1;d.y0=-d.y1;d.hasText=true;x+=w;}var pixels=c.getImageData(0,0,(cw<<5)/ratio,ch/ratio).data,sprite=[];while(--di>=0){d=data[di];if(!d.hasText)continue;w=d.width;w32=w>>5;h=d.y1-d.y0;// Zero the buffer
for(i=0;i<h*w32;i++){sprite[i]=0;}x=d.xoff;if(x==null)return;y=d.yoff;var seen=0,seenRow=-1;for(j=0;j<h;j++){for(i=0;i<w;i++){var k=w32*j+(i>>5),m=pixels[(y+j)*(cw<<5)+(x+i)<<2]?1<<31-i%32:0;sprite[k]|=m;seen|=m;}if(seen)seenRow=j;else{d.y0++;h--;j--;y++;}}d.y1=d.y0+seenRow;d.sprite=sprite.slice(0,(d.y1-d.y0)*w32);}}// Use mask-based collision detection.
function cloudCollide(tag,board,sw){sw>>=5;var sprite=tag.sprite,w=tag.width>>5,lx=tag.x-(w<<4),sx=lx&0x7f,msx=32-sx,h=tag.y1-tag.y0,x=(tag.y+tag.y0)*sw+(lx>>5),last;for(var j=0;j<h;j++){last=0;for(var i=0;i<=w;i++){if((last<<msx|(i<w?(last=sprite[j*w+i])>>>sx:0))&board[x+i])return true;}x+=sw;}return false;}function cloudBounds(bounds,d){var b0=bounds[0],b1=bounds[1];if(d.x+d.x0<b0.x)b0.x=d.x+d.x0;if(d.y+d.y0<b0.y)b0.y=d.y+d.y0;if(d.x+d.x1>b1.x)b1.x=d.x+d.x1;if(d.y+d.y1>b1.y)b1.y=d.y+d.y1;}function collideRects(a,b){return a.x+a.x1>b[0].x&&a.x+a.x0<b[1].x&&a.y+a.y1>b[0].y&&a.y+a.y0<b[1].y;}function archimedeanSpiral(size){var e=size[0]/size[1];return function(t){return[e*(t*=.1)*Math.cos(t),t*Math.sin(t)];};}function rectangularSpiral(size){var dy=4,dx=dy*size[0]/size[1],x=0,y=0;return function(t){var sign=t<0?-1:1;// See triangular numbers: T_n = n * (n + 1) / 2.
switch(Math.sqrt(1+4*sign*t)-sign&3){case 0:x+=dx;break;case 1:y+=dy;break;case 2:x-=dx;break;default:y-=dy;break;}return[x,y];};}// TODO reuse arrays?
function zeroArray(n){var a=[],i=-1;while(++i<n){a[i]=0;}return a;}function cloudCanvas(){try{var canvas=typeof document!=='undefined'&&document.createElement?document.createElement('canvas'):0;return canvas&&canvas.getContext?canvas:new(require('canvas'))();}catch(e){error$1('Canvas unavailable. Run in browser or install node-canvas.');}}function functor(d){return typeof d==="function"?d:function(){return d;};}var spirals={archimedean:archimedeanSpiral,rectangular:rectangularSpiral};var Output$4=['x','y','font','fontSize','fontStyle','fontWeight','angle'];var Params$1=['text','font','rotate','fontSize','fontStyle','fontWeight'];function Wordcloud(params){Transform.call(this,cloud(),params);}Wordcloud.Definition={"type":"Wordcloud","metadata":{"modifies":true},"params":[{"name":"size","type":"number","array":true,"length":2},{"name":"font","type":"string","expr":true,"default":"sans-serif"},{"name":"fontStyle","type":"string","expr":true,"default":"normal"},{"name":"fontWeight","type":"string","expr":true,"default":"normal"},{"name":"fontSize","type":"number","expr":true,"default":14},{"name":"fontSizeRange","type":"number","array":"nullable","default":[10,50]},{"name":"rotate","type":"number","expr":true,"default":0},{"name":"text","type":"field"},{"name":"spiral","type":"string","values":["archimedean","rectangular"]},{"name":"padding","type":"number","expr":true},{"name":"as","type":"string","array":true,"length":7,"default":Output$4}]};var prototype$77=inherits(Wordcloud,Transform);prototype$77.transform=function(_,pulse){function modp(param){var p=_[param];return isFunction(p)&&pulse.modified(p.fields);}var mod=_.modified();if(!(mod||pulse.changed(pulse.ADD_REM)||Params$1.some(modp)))return;var data=pulse.materialize(pulse.SOURCE).source,layout=this.value,as=_.as||Output$4,fontSize=_.fontSize||14,range;isFunction(fontSize)?range=_.fontSizeRange:fontSize=constant(fontSize);// create font size scaling function as needed
if(range){var fsize=fontSize,sizeScale=scale$1('sqrt')().domain(extent$2(fsize,data)).range(range);fontSize=function fontSize(x){return sizeScale(fsize(x));};}data.forEach(function(t){t[as[0]]=NaN;t[as[1]]=NaN;t[as[3]]=0;});// configure layout
var words=layout.words(data).text(_.text).size(_.size||[500,500]).padding(_.padding||1).spiral(_.spiral||'archimedean').rotate(_.rotate||0).font(_.font||'sans-serif').fontStyle(_.fontStyle||'normal').fontWeight(_.fontWeight||'normal').fontSize(fontSize).layout();var size=layout.size(),dx=size[0]>>1,dy=size[1]>>1,i=0,n=words.length,w,t;for(;i<n;++i){w=words[i];t=w.datum;t[as[0]]=w.x+dx;t[as[1]]=w.y+dy;t[as[2]]=w.font;t[as[3]]=w.size;t[as[4]]=w.style;t[as[5]]=w.weight;t[as[6]]=w.rotate;}return pulse.reflow(mod).modifies(as);};function extent$2(field$$1,data){var min=+Infinity,max=-Infinity,i=0,n=data.length,v;for(;i<n;++i){v=field$$1(data[i]);if(v<min)min=v;if(v>max)max=v;}return[min,max];}var wordcloud=Object.freeze({wordcloud:Wordcloud});function array8(n){return new Uint8Array(n);}function array16(n){return new Uint16Array(n);}function array32(n){return new Uint32Array(n);}/**
 * Maintains CrossFilter state.
 */function Bitmaps(){var width=8,_data2=[],_seen=array32(0),_curr=array$5(0,width),_prev=array$5(0,width);return{data:function data(){return _data2;},seen:function seen(){return _seen=lengthen(_seen,_data2.length);},add:function add(array){for(var i=0,j=_data2.length,n=array.length,t;i<n;++i){t=array[i];t._index=j++;_data2.push(t);}},remove:function remove(num,map){// map: index -> boolean (true => remove)
var n=_data2.length,copy=Array(n-num),reindex=_data2,// reuse old data array for index map
t,i,j;// seek forward to first removal
for(i=0;!map[i]&&i<n;++i){copy[i]=_data2[i];reindex[i]=i;}// condense arrays
for(j=i;i<n;++i){t=_data2[i];if(!map[i]){reindex[i]=j;_curr[j]=_curr[i];_prev[j]=_prev[i];copy[j]=t;t._index=j++;}else{reindex[i]=-1;}_curr[i]=0;// clear unused bits
}_data2=copy;return reindex;},size:function size(){return _data2.length;},curr:function curr(){return _curr;},prev:function prev(){return _prev;},reset:function reset(k){_prev[k]=_curr[k];},all:function all(){return width<0x101?0xff:width<0x10001?0xffff:0xffffffff;},set:function set(k,one){_curr[k]|=one;},clear:function clear(k,one){_curr[k]&=~one;},resize:function resize(n,m){var k=_curr.length;if(n>k||m>width){width=Math.max(m,width);_curr=array$5(n,width,_curr);_prev=array$5(n,width);}}};}function lengthen(array,length,copy){if(array.length>=length)return array;copy=copy||new array.constructor(length);copy.set(array);return copy;}function array$5(n,m,array){var copy=(m<0x101?array8:m<0x10001?array16:array32)(n);if(array)copy.set(array);return copy;}var Dimension=function Dimension(index,i,query){var bit=1<<i;return{one:bit,zero:~bit,range:query.slice(),bisect:index.bisect,index:index.index,size:index.size,onAdd:function onAdd(added,curr){var dim=this,range=dim.bisect(dim.range,added.value),idx=added.index,lo=range[0],hi=range[1],n1=idx.length,i;for(i=0;i<lo;++i){curr[idx[i]]|=bit;}for(i=hi;i<n1;++i){curr[idx[i]]|=bit;}return dim;}};};/**
 * Maintains a list of values, sorted by key.
 */function SortedIndex(){var _index=array32(0),value=[],_size=0;function insert(key,data,base){if(!data.length)return[];var n0=_size,n1=data.length,addv=Array(n1),addi=array32(n1),oldv,oldi,i;for(i=0;i<n1;++i){addv[i]=key(data[i]);addi[i]=i;}addv=sort(addv,addi);if(n0){oldv=value;oldi=_index;value=Array(n0+n1);_index=array32(n0+n1);merge$3(base,oldv,oldi,n0,addv,addi,n1,value,_index);}else{if(base>0)for(i=0;i<n1;++i){addi[i]+=base;}value=addv;_index=addi;}_size=n0+n1;return{index:addi,value:addv};}function remove(num,map){// map: index -> remove
var n=_size,idx,i,j;// seek forward to first removal
for(i=0;!map[_index[i]]&&i<n;++i){}// condense index and value arrays
for(j=i;i<n;++i){if(!map[idx=_index[i]]){_index[j]=idx;value[j]=value[i];++j;}}_size=n-num;}function reindex(map){for(var i=0,n=_size;i<n;++i){_index[i]=map[_index[i]];}}function bisect(range,array){var n;if(array){n=array.length;}else{array=value;n=_size;}return[bisectLeft(array,range[0],0,n),bisectRight(array,range[1],0,n)];}return{insert:insert,remove:remove,bisect:bisect,reindex:reindex,index:function index(){return _index;},size:function size(){return _size;}};}function sort(values,index){values.sort.call(index,function(a,b){var x=values[a],y=values[b];return x<y?-1:x>y?1:0;});return permute(values,index);}function merge$3(base,value0,index0,n0,value1,index1,n1,value,index){var i0=0,i1=0,i;for(i=0;i0<n0&&i1<n1;++i){if(value0[i0]<value1[i1]){value[i]=value0[i0];index[i]=index0[i0++];}else{value[i]=value1[i1];index[i]=index1[i1++]+base;}}for(;i0<n0;++i0,++i){value[i]=value0[i0];index[i]=index0[i0];}for(;i1<n1;++i1,++i){value[i]=value1[i1];index[i]=index1[i1]+base;}}/**
 * An indexed multi-dimensional filter.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} params.fields - An array of dimension accessors to filter.
 * @param {Array} params.query - An array of per-dimension range queries.
 */function CrossFilter(params){Transform.call(this,Bitmaps(),params);this._indices=null;this._dims=null;}CrossFilter.Definition={"type":"CrossFilter","metadata":{},"params":[{"name":"fields","type":"field","array":true,"required":true},{"name":"query","type":"array","array":true,"required":true,"content":{"type":"number","array":true,"length":2}}]};var prototype$78=inherits(CrossFilter,Transform);prototype$78.transform=function(_,pulse){if(!this._dims){return this.init(_,pulse);}else{var init=_.modified('fields')||_.fields.some(function(f){return pulse.modified(f.fields);});return init?this.reinit(_,pulse):this.eval(_,pulse);}};prototype$78.init=function(_,pulse){var fields=_.fields,query=_.query,indices=this._indices={},dims=this._dims=[],m=query.length,i=0,key$$1,index;// instantiate indices and dimensions
for(;i<m;++i){key$$1=fields[i].fname;index=indices[key$$1]||(indices[key$$1]=SortedIndex());dims.push(Dimension(index,i,query[i]));}return this.eval(_,pulse);};prototype$78.reinit=function(_,pulse){var output=pulse.materialize().fork(),fields=_.fields,query=_.query,indices=this._indices,dims=this._dims,bits=this.value,curr=bits.curr(),prev=bits.prev(),all=bits.all(),out=output.rem=output.add,mod=output.mod,m=query.length,adds={},add,index,key$$1,mods,remMap,modMap,i,n,f;// set prev to current state
prev.set(curr);// if pulse has remove tuples, process them first
if(pulse.rem.length){remMap=this.remove(_,pulse,output);}// if pulse has added tuples, add them to state
if(pulse.add.length){bits.add(pulse.add);}// if pulse has modified tuples, create an index map
if(pulse.mod.length){modMap={};for(mods=pulse.mod,i=0,n=mods.length;i<n;++i){modMap[mods[i]._index]=1;}}// re-initialize indices as needed, update curr bitmap
for(i=0;i<m;++i){f=fields[i];if(!dims[i]||_.modified('fields',i)||pulse.modified(f.fields)){key$$1=f.fname;if(!(add=adds[key$$1])){indices[key$$1]=index=SortedIndex();adds[key$$1]=add=index.insert(f,pulse.source,0);}dims[i]=Dimension(index,i,query[i]).onAdd(add,curr);}}// visit each tuple
// if filter state changed, push index to add/rem
// else if in mod and passes a filter, push index to mod
for(i=0,n=bits.data().length;i<n;++i){if(remMap[i]){// skip if removed tuple
continue;}else if(prev[i]!==curr[i]){// add if state changed
out.push(i);}else if(modMap[i]&&curr[i]!==all){// otherwise, pass mods through
mod.push(i);}}bits.mask=(1<<m)-1;return output;};prototype$78.eval=function(_,pulse){var output=pulse.materialize().fork(),m=this._dims.length,mask=0;if(pulse.rem.length){this.remove(_,pulse,output);mask|=(1<<m)-1;}if(_.modified('query')&&!_.modified('fields')){mask|=this.update(_,pulse,output);}if(pulse.add.length){this.insert(_,pulse,output);mask|=(1<<m)-1;}if(pulse.mod.length){this.modify(pulse,output);mask|=(1<<m)-1;}this.value.mask=mask;return output;};prototype$78.insert=function(_,pulse,output){var tuples=pulse.add,bits=this.value,dims=this._dims,indices=this._indices,fields=_.fields,adds={},out=output.add,k=bits.size(),n=k+tuples.length,m=dims.length,j,key$$1,add;// resize bitmaps and add tuples as needed
bits.resize(n,m);bits.add(tuples);var curr=bits.curr(),prev=bits.prev(),all=bits.all();// add to dimensional indices
for(j=0;j<m;++j){key$$1=fields[j].fname;add=adds[key$$1]||(adds[key$$1]=indices[key$$1].insert(fields[j],tuples,k));dims[j].onAdd(add,curr);}// set previous filters, output if passes at least one filter
for(;k<n;++k){prev[k]=all;if(curr[k]!==all)out.push(k);}};prototype$78.modify=function(pulse,output){var out=output.mod,bits=this.value,curr=bits.curr(),all=bits.all(),tuples=pulse.mod,i,n,k;for(i=0,n=tuples.length;i<n;++i){k=tuples[i]._index;if(curr[k]!==all)out.push(k);}};prototype$78.remove=function(_,pulse,output){var indices=this._indices,bits=this.value,curr=bits.curr(),prev=bits.prev(),all=bits.all(),map={},out=output.rem,tuples=pulse.rem,i,n,k,f;// process tuples, output if passes at least one filter
for(i=0,n=tuples.length;i<n;++i){k=tuples[i]._index;map[k]=1;// build index map
prev[k]=f=curr[k];curr[k]=all;if(f!==all)out.push(k);}// remove from dimensional indices
for(k in indices){indices[k].remove(n,map);}this.reindex(pulse,n,map);return map;};// reindex filters and indices after propagation completes
prototype$78.reindex=function(pulse,num,map){var indices=this._indices,bits=this.value;pulse.runAfter(function(){var indexMap=bits.remove(num,map);for(var key$$1 in indices){indices[key$$1].reindex(indexMap);}});};prototype$78.update=function(_,pulse,output){var dims=this._dims,query=_.query,stamp=pulse.stamp,m=dims.length,mask=0,i,q;// survey how many queries have changed
output.filters=0;for(q=0;q<m;++q){if(_.modified('query',q)){i=q;++mask;}}if(mask===1){// only one query changed, use more efficient update
mask=dims[i].one;this.incrementOne(dims[i],query[i],output.add,output.rem);}else{// multiple queries changed, perform full record keeping
for(q=0,mask=0;q<m;++q){if(!_.modified('query',q))continue;mask|=dims[q].one;this.incrementAll(dims[q],query[q],stamp,output.add);output.rem=output.add;// duplicate add/rem for downstream resolve
}}return mask;};prototype$78.incrementAll=function(dim,query,stamp,out){var bits=this.value,seen=bits.seen(),curr=bits.curr(),prev=bits.prev(),index=dim.index(),old=dim.bisect(dim.range),range=dim.bisect(query),lo1=range[0],hi1=range[1],lo0=old[0],hi0=old[1],one$$1=dim.one,i,j,k;// Fast incremental update based on previous lo index.
if(lo1<lo0){for(i=lo1,j=Math.min(lo0,hi1);i<j;++i){k=index[i];if(seen[k]!==stamp){prev[k]=curr[k];seen[k]=stamp;out.push(k);}curr[k]^=one$$1;}}else if(lo1>lo0){for(i=lo0,j=Math.min(lo1,hi0);i<j;++i){k=index[i];if(seen[k]!==stamp){prev[k]=curr[k];seen[k]=stamp;out.push(k);}curr[k]^=one$$1;}}// Fast incremental update based on previous hi index.
if(hi1>hi0){for(i=Math.max(lo1,hi0),j=hi1;i<j;++i){k=index[i];if(seen[k]!==stamp){prev[k]=curr[k];seen[k]=stamp;out.push(k);}curr[k]^=one$$1;}}else if(hi1<hi0){for(i=Math.max(lo0,hi1),j=hi0;i<j;++i){k=index[i];if(seen[k]!==stamp){prev[k]=curr[k];seen[k]=stamp;out.push(k);}curr[k]^=one$$1;}}dim.range=query.slice();};prototype$78.incrementOne=function(dim,query,add,rem){var bits=this.value,curr=bits.curr(),index=dim.index(),old=dim.bisect(dim.range),range=dim.bisect(query),lo1=range[0],hi1=range[1],lo0=old[0],hi0=old[1],one$$1=dim.one,i,j,k;// Fast incremental update based on previous lo index.
if(lo1<lo0){for(i=lo1,j=Math.min(lo0,hi1);i<j;++i){k=index[i];curr[k]^=one$$1;add.push(k);}}else if(lo1>lo0){for(i=lo0,j=Math.min(lo1,hi0);i<j;++i){k=index[i];curr[k]^=one$$1;rem.push(k);}}// Fast incremental update based on previous hi index.
if(hi1>hi0){for(i=Math.max(lo1,hi0),j=hi1;i<j;++i){k=index[i];curr[k]^=one$$1;add.push(k);}}else if(hi1<hi0){for(i=Math.max(lo0,hi1),j=hi0;i<j;++i){k=index[i];curr[k]^=one$$1;rem.push(k);}}dim.range=query.slice();};/**
 * Selectively filters tuples by resolving against a filter bitmap.
 * Useful for processing the output of a cross-filter transform.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.ignore - A bit mask indicating which filters to ignore.
 * @param {object} params.filter - The per-tuple filter bitmaps. Typically this
 *   parameter value is a reference to a {@link CrossFilter} transform.
 */function ResolveFilter(params){Transform.call(this,null,params);}ResolveFilter.Definition={"type":"ResolveFilter","metadata":{},"params":[{"name":"ignore","type":"number","required":true,"description":"A bit mask indicating which filters to ignore."},{"name":"filter","type":"object","required":true,"description":"Per-tuple filter bitmaps from a CrossFilter transform."}]};var prototype$79=inherits(ResolveFilter,Transform);prototype$79.transform=function(_,pulse){var ignore=~(_.ignore||0),// bit mask where zeros -> dims to ignore
bitmap=_.filter,mask=bitmap.mask;// exit early if no relevant filter changes
if((mask&ignore)===0)return pulse.StopPropagation;var output=pulse.fork(pulse.ALL),data=bitmap.data(),curr=bitmap.curr(),prev=bitmap.prev(),pass=function pass(k){return!(curr[k]&ignore)?data[k]:null;};// propagate all mod tuples that pass the filter
output.filter(output.MOD,pass);// determine add & rem tuples via filter functions
// for efficiency, we do *not* populate new arrays,
// instead we add filter functions applied downstream
if(!(mask&mask-1)){// only one filter changed
output.filter(output.ADD,pass);output.filter(output.REM,function(k){return(curr[k]&ignore)===mask?data[k]:null;});}else{// multiple filters changed
output.filter(output.ADD,function(k){var c=curr[k]&ignore,f=!c&&c^prev[k]&ignore;return f?data[k]:null;});output.filter(output.REM,function(k){var c=curr[k]&ignore,f=c&&!(c^(c^prev[k]&ignore));return f?data[k]:null;});}// add filter to source data in case of reflow...
return output.filter(output.SOURCE,function(t){return pass(t._index);});};var xf=Object.freeze({crossfilter:CrossFilter,resolvefilter:ResolveFilter});var version="3.0.2";var Default='default';var cursor=function cursor(view){var cursor=view._signals.cursor;// add cursor signal to dataflow, if needed
if(!cursor){view._signals.cursor=cursor=view.add({user:Default,item:null});}// evaluate cursor on each mousemove event
view.on(view.events('view','mousemove'),cursor,function(_,event){var value=cursor.value,user=value?isString(value)?value:value.user:Default,item=event.item&&event.item.cursor||null;return value&&user===value.user&&item==value.item?value:{user:user,item:item};});// when cursor signal updates, set visible cursor
view.add(null,function(_){var user=_.cursor,item=this.value;if(!isString(user)){item=user.item;user=user.user;}setCursor(user&&user!==Default?user:item||user);return item;},{cursor:cursor});};function setCursor(cursor){// set cursor on document body
// this ensures cursor applies even if dragging out of view
if(typeof document!=='undefined'&&document.body){document.body.style.cursor=cursor;}}function dataref(view,name){var data=view._runtime.data;if(!data.hasOwnProperty(name)){error$1('Unrecognized data set: '+name);}return data[name];}function data(name){return dataref(this,name).values.value;}function change(name,changes){if(!isChangeSet(changes)){error$1('Second argument to changes must be a changeset.');}var dataset=dataref(this,name);dataset.modified=true;return this.pulse(dataset.input,changes);}function insert(name,_){return change.call(this,name,changeset().insert(_));}function remove(name,_){return change.call(this,name,changeset().remove(_));}function width(view){var padding=view.padding();return Math.max(0,view._viewWidth+padding.left+padding.right);}function height$1(view){var padding=view.padding();return Math.max(0,view._viewHeight+padding.top+padding.bottom);}function offset$1(view){var padding=view.padding(),origin=view._origin;return[padding.left+origin[0],padding.top+origin[1]];}function resizeRenderer(view){var origin=offset$1(view);view._renderer.background(view._background);view._renderer.resize(width(view),height$1(view),origin);view._handler.origin(origin);}/**
 * Extend an event with additional view-specific methods.
 * Adds a new property ('vega') to an event that provides a number
 * of methods for querying information about the current interaction.
 * The vega object provides the following methods:
 *   view - Returns the backing View instance.
 *   item - Returns the currently active scenegraph item (if any).
 *   group - Returns the currently active scenegraph group (if any).
 *     This method accepts a single string-typed argument indicating the name
 *     of the desired parent group. The scenegraph will be traversed from
 *     the item up towards the root to search for a matching group. If no
 *     argument is provided the enclosing group for the active item is
 *     returned, unless the item it itself a group, in which case it is
 *     returned directly.
 *   xy - Returns a two-element array containing the x and y coordinates for
 *     mouse or touch events. For touch events, this is based on the first
 *     elements in the changedTouches array. This method accepts a single
 *     argument: either an item instance or mark name that should serve as
 *     the reference coordinate system. If no argument is provided the
 *     top-level view coordinate system is assumed.
 *   x - Returns the current x-coordinate, accepts the same arguments as xy.
 *   y - Returns the current y-coordinate, accepts the same arguments as xy.
 * @param {Event} event - The input event to extend.
 * @param {Item} item - The currently active scenegraph item (if any).
 * @return {Event} - The extended input event.
 */var eventExtend=function eventExtend(view,event,item){var el=view._renderer.scene(),p,e,translate;if(el){translate=offset$1(view);e=event.changedTouches?event.changedTouches[0]:event;p=point$4(e,el);p[0]-=translate[0];p[1]-=translate[1];}event.dataflow=view;event.vega=extension(view,item,p);event.item=item;return event;};function extension(view,item,point){var itemGroup=item?item.mark.marktype==='group'?item:item.mark.group:null;function group(name){var g=itemGroup,i;if(name)for(i=item;i;i=i.mark.group){if(i.mark.name===name){g=i;break;}}return g&&g.mark&&g.mark.interactive?g:{};}function xy(item){if(!item)return point;if(isString(item))item=group(item);var p=point.slice();while(item){p[0]-=item.x||0;p[1]-=item.y||0;item=item.mark&&item.mark.group;}return p;}return{view:constant(view),item:constant(item||{}),group:group,xy:xy,x:function x(item){return xy(item)[0];},y:function y(item){return xy(item)[1];}};}var VIEW='view';var WINDOW='window';/**
 * Initialize event handling configuration.
 * @param {object} config - The configuration settings.
 * @return {object}
 */function initializeEventConfig(config){config=extend({},config);var def=config.defaults;if(def){if(isArray(def.prevent)){def.prevent=toSet(def.prevent);}if(isArray(def.allow)){def.allow=toSet(def.allow);}}return config;}function prevent(view,type){var def=view._eventConfig.defaults,prevent=def&&def.prevent,allow=def&&def.allow;return prevent===false||allow===true?false:prevent===true||allow===false?true:prevent?prevent[type]:allow?!allow[type]:view.preventDefault();}/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @return {EventStream}
 */function events$1(source,type,filter){var view=this,s=new EventStream(filter),send=function send(e,item){if(source===VIEW&&prevent(view,type)){e.preventDefault();}try{s.receive(eventExtend(view,e,item));}catch(error){view.error(error);}finally{view.run();}},sources;if(source===VIEW){view.addEventListener(type,send);return s;}if(source===WINDOW){if(typeof window!=='undefined')sources=[window];}else if(typeof document!=='undefined'){sources=document.querySelectorAll(source);}if(!sources){view.warn('Can not resolve event source: '+source);return s;}for(var i=0,n=sources.length;i<n;++i){sources[i].addEventListener(type,send);}view._eventListeners.push({type:type,sources:sources,handler:send});return s;}function itemFilter(event){return event.item;}function markTarget(event){// grab upstream collector feeding the mark operator
var source=event.item.mark.source;return source.source||source;}function invoke(name){return function(_,event){return event.vega.view().changeset().encode(event.item,name);};}var hover=function hover(hoverSet,leaveSet){hoverSet=[hoverSet||'hover'];leaveSet=[leaveSet||'update',hoverSet];// invoke hover set upon mouseover
this.on(this.events('view','mouseover',itemFilter),markTarget,invoke(hoverSet));// invoke leave set upon mouseout
this.on(this.events('view','mouseout',itemFilter),markTarget,invoke(leaveSet));return this;};/**
 * Remove all external event listeners.
 */var finalize=function finalize(){var listeners=this._eventListeners,n=listeners.length,m,e;while(--n>=0){e=listeners[n];m=e.sources.length;while(--m>=0){e.sources[m].removeEventListener(e.type,e.handler);}}};var element$1=function element$1(tag,attr,text){var el=document.createElement(tag);for(var key in attr){el.setAttribute(key,attr[key]);}if(text!=null)el.textContent=text;return el;};var BindClass='vega-bind';var NameClass='vega-bind-name';var RadioClass='vega-bind-radio';var OptionClass='vega-option-';/**
 * Bind a signal to an external HTML input element. The resulting two-way
 * binding will propagate input changes to signals, and propagate signal
 * changes to the input element state. If this view instance has no parent
 * element, we assume the view is headless and no bindings are created.
 * @param {Element|string} el - The parent DOM element to which the input
 *   element should be appended as a child. If string-valued, this argument
 *   will be treated as a CSS selector. If null or undefined, the parent
 *   element of this view will be used as the element.
 * @param {object} param - The binding parameters which specify the signal
 *   to bind to, the input element type, and type-specific configuration.
 * @return {View} - This view instance.
 */var bind$1=function bind$1(view,el,binding){if(!el)return;var param=binding.param,bind=binding.state;if(!bind){bind=binding.state={elements:null,active:false,set:null,update:function update(value){bind.source=true;view.signal(param.signal,value).run();}};if(param.debounce){bind.update=debounce(param.debounce,bind.update);}}if(isString(el))el=document.querySelector(el);generate(bind,el,param,view.signal(param.signal));if(!bind.active){view.on(view._signals[param.signal],null,function(){bind.source?bind.source=false:bind.set(view.signal(param.signal));});bind.active=true;}return bind;};/**
 * Generate an HTML input form element and bind it to a signal.
 */function generate(bind,el,param,value){var div=element$1('div',{'class':BindClass});div.appendChild(element$1('span',{'class':NameClass},param.name||param.signal));el.appendChild(div);var input=form;switch(param.input){case'checkbox':input=checkbox;break;case'select':input=select;break;case'radio':input=radio;break;case'range':input=range$1;break;}input(bind,div,param,value);}/**
 * Generates an arbitrary input form element.
 * The input type is controlled via user-provided parameters.
 */function form(bind,el,param,value){var node=element$1('input');for(var key$$1 in param){if(key$$1!=='signal'&&key$$1!=='element'){node.setAttribute(key$$1==='input'?'type':key$$1,param[key$$1]);}}node.setAttribute('name',param.signal);node.value=value;el.appendChild(node);node.addEventListener('input',function(){bind.update(node.value);});bind.elements=[node];bind.set=function(value){node.value=value;};}/**
 * Generates a checkbox input element.
 */function checkbox(bind,el,param,value){var attr={type:'checkbox',name:param.signal};if(value)attr.checked=true;var node=element$1('input',attr);el.appendChild(node);node.addEventListener('change',function(){bind.update(node.checked);});bind.elements=[node];bind.set=function(value){node.checked=!!value||null;};}/**
 * Generates a selection list input element.
 */function select(bind,el,param,value){var node=element$1('select',{name:param.signal});param.options.forEach(function(option){var attr={value:option};if(valuesEqual(option,value))attr.selected=true;node.appendChild(element$1('option',attr,option+''));});el.appendChild(node);node.addEventListener('change',function(){bind.update(param.options[node.selectedIndex]);});bind.elements=[node];bind.set=function(value){for(var i=0,n=param.options.length;i<n;++i){if(valuesEqual(param.options[i],value)){node.selectedIndex=i;return;}}};}/**
 * Generates a radio button group.
 */function radio(bind,el,param,value){var group=element$1('span',{'class':RadioClass});el.appendChild(group);bind.elements=param.options.map(function(option){var id$$1=OptionClass+param.signal+'-'+option;var attr={id:id$$1,type:'radio',name:param.signal,value:option};if(valuesEqual(option,value))attr.checked=true;var input=element$1('input',attr);input.addEventListener('change',function(){bind.update(option);});group.appendChild(input);group.appendChild(element$1('label',{'for':id$$1},option+''));return input;});bind.set=function(value){var nodes=bind.elements,i=0,n=nodes.length;for(;i<n;++i){if(valuesEqual(nodes[i].value,value))nodes[i].checked=true;}};}/**
 * Generates a slider input element.
 */function range$1(bind,el,param,value){value=value!==undefined?value:(+param.max+ +param.min)/2;var min$$1=param.min||Math.min(0,+value)||0,max$$1=param.max||Math.max(100,+value)||100,step=param.step||tickStep(min$$1,max$$1,100);var node=element$1('input',{type:'range',name:param.signal,min:min$$1,max:max$$1,step:step});node.value=value;var label=element$1('label',{},+value);el.appendChild(node);el.appendChild(label);function update(){label.textContent=node.value;bind.update(+node.value);}// subscribe to both input and change
// signal updates halt redundant values, maintaining performance
node.addEventListener('input',update);node.addEventListener('change',update);bind.elements=[node];bind.set=function(value){node.value=value;label.textContent=value;};}function valuesEqual(a,b){return a===b||a+''===b+'';}var initializeRenderer=function initializeRenderer(view,r,el,constructor){r=r||new constructor(view.loader());return r.initialize(el,width(view),height$1(view),offset$1(view)).background(view._background);};var initializeHandler=function initializeHandler(view,prevHandler,el,constructor){var handler=new constructor().scene(view.scenegraph().root).initialize(el,offset$1(view),view);if(prevHandler){handler.handleTooltip=prevHandler.handleTooltip;prevHandler.handlers().forEach(function(h){handler.on(h.type,h.handler);});}return handler;};var initialize$1=function initialize$1(el,elBind){var view=this,type=view._renderType,module=renderModule(type),Handler$$1,Renderer$$1;// containing dom element
el=view._el=el?lookup$2(view,el):null;// select appropriate renderer & handler
if(!module)view.error('Unrecognized renderer type: '+type);Handler$$1=module.handler||CanvasHandler;Renderer$$1=el?module.renderer:module.headless;// initialize renderer and input handler
view._renderer=!Renderer$$1?null:initializeRenderer(view,view._renderer,el,Renderer$$1);view._handler=initializeHandler(view,view._handler,el,Handler$$1);view._redraw=true;// initialize signal bindings
if(el){elBind=elBind?lookup$2(view,elBind):el.appendChild(element$1('div',{'class':'vega-bindings'}));view._bind.forEach(function(_){if(_.param.element)lookup$2(view,_.param.element);});view._bind.forEach(function(_){bind$1(view,_.param.element||elBind,_);});}return view;};function lookup$2(view,el){if(typeof el==='string'){if(typeof document!=='undefined'){el=document.querySelector(el);}else{view.error('DOM document instance not found.');return null;}}el.innerHTML='';return el;}/**
 * Render the current scene in a headless fashion.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A Promise that resolves to a renderer.
 */var renderHeadless=function renderHeadless(view,type){var module=renderModule(type);return!(module&&module.headless)?Promise.reject('Unrecognized renderer type: '+type):view.runAsync().then(function(){return initializeRenderer(view,null,null,module.headless).renderAsync(view._scenegraph.root);});};/**
 * Produce an image URL for the visualization. Depending on the type
 * parameter, the generated URL contains data for either a PNG or SVG image.
 * The URL can be used (for example) to download images of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.
 *   The 'canvas' and 'png' types are synonyms for a PNG image.
 * @return {Promise} - A promise that resolves to an image URL.
 */var renderToImageURL=function renderToImageURL(type){return type!==RenderType.Canvas&&type!==RenderType.SVG&&type!==RenderType.PNG?Promise.reject('Unrecognized image type: '+type):renderHeadless(this,type).then(function(renderer){return type===RenderType.SVG?toBlobURL(renderer.svg(),'image/svg+xml'):renderer.canvas().toDataURL('image/png');});};function toBlobURL(data,mime){var blob=new Blob([data],{type:mime});return window.URL.createObjectURL(blob);}/**
 * Produce a Canvas instance containing a rendered visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to a Canvas instance.
 */var renderToCanvas=function renderToCanvas(){return renderHeadless(this,RenderType.Canvas).then(function(renderer){return renderer.canvas();});};/**
 * Produce a rendered SVG string of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to an SVG string.
 */var renderToSVG=function renderToSVG(){return renderHeadless(this,RenderType.SVG).then(function(renderer){return renderer.svg();});};var parseAutosize=function parseAutosize(spec,config){spec=spec||config.autosize;if(isObject(spec)){return spec;}else{spec=spec||'pad';return{type:spec};}};var parsePadding=function parsePadding(spec,config){spec=spec||config.padding;if(isObject(spec)){return spec;}else{spec=+spec||0;return{top:spec,bottom:spec,left:spec,right:spec};}};var OUTER='outer';var OUTER_INVALID=['value','update','react','bind'];function outerError(prefix,name){error$1(prefix+' for "outer" push: '+$(name));}var parseSignal=function parseSignal(signal,scope){var name=signal.name;if(signal.push===OUTER){// signal must already be defined, raise error if not
if(!scope.signals[name])outerError('No prior signal definition',name);// signal push must not use properties reserved for standard definition
OUTER_INVALID.forEach(function(prop){if(signal[prop]!==undefined)outerError('Invalid property ',prop);});}else{// define a new signal in the current scope
var op=scope.addSignal(name,signal.value);if(signal.react===false)op.react=false;if(signal.bind)scope.addBinding(name,signal.bind);}};function ASTNode(type){this.type=type;}ASTNode.prototype.visit=function(visitor){var node=this,c,i,n;if(visitor(node))return 1;for(c=children$1(node),i=0,n=c.length;i<n;++i){if(c[i].visit(visitor))return 1;}};function children$1(node){switch(node.type){case'ArrayExpression':return node.elements;case'BinaryExpression':case'LogicalExpression':return[node.left,node.right];case'CallExpression':var args=node.arguments.slice();args.unshift(node.callee);return args;case'ConditionalExpression':return[node.test,node.consequent,node.alternate];case'MemberExpression':return[node.object,node.property];case'ObjectExpression':return node.properties;case'Property':return[node.key,node.value];case'UnaryExpression':return[node.argument];case'Identifier':case'Literal':case'RawCode':default:return[];}}/*
  The following expression parser is based on Esprima (http://esprima.org/).
  Original header comment and license for Esprima is included here:

  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>
  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>
  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/var source$1;var index$1;var length$2;var lookahead;var TokenBooleanLiteral=1;var TokenEOF=2;var TokenIdentifier=3;var TokenKeyword=4;var TokenNullLiteral=5;var TokenNumericLiteral=6;var TokenPunctuator=7;var TokenStringLiteral=8;var SyntaxArrayExpression='ArrayExpression';var SyntaxBinaryExpression='BinaryExpression';var SyntaxCallExpression='CallExpression';var SyntaxConditionalExpression='ConditionalExpression';var SyntaxIdentifier='Identifier';var SyntaxLiteral='Literal';var SyntaxLogicalExpression='LogicalExpression';var SyntaxMemberExpression='MemberExpression';var SyntaxObjectExpression='ObjectExpression';var SyntaxProperty='Property';var SyntaxUnaryExpression='UnaryExpression';// Error messages should be identical to V8.
var MessageUnexpectedToken='Unexpected token %0';var MessageUnexpectedNumber='Unexpected number';var MessageUnexpectedString='Unexpected string';var MessageUnexpectedIdentifier='Unexpected identifier';var MessageUnexpectedReserved='Unexpected reserved word';var MessageUnexpectedEOS='Unexpected end of input';var MessageInvalidRegExp='Invalid regular expression';var MessageUnterminatedRegExp='Invalid regular expression: missing /';var MessageStrictOctalLiteral='Octal literals are not allowed in strict mode.';var MessageStrictDuplicateProperty='Duplicate data property in object literal not allowed in strict mode';var ILLEGAL='ILLEGAL';var DISABLED='Disabled.';// See also tools/generate-unicode-regex.py.
var RegexNonAsciiIdentifierStart=new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]');var RegexNonAsciiIdentifierPart=new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]');// Ensure the condition is true, otherwise throw an error.
// This is only to have a better contract semantic, i.e. another safety net
// to catch a logic error. The condition shall be fulfilled in normal case.
// Do NOT use this to enforce a certain condition on any user input.
function assert(condition,message){/* istanbul ignore next */if(!condition){throw new Error('ASSERT: '+message);}}function isDecimalDigit(ch){return ch>=0x30&&ch<=0x39;// 0..9
}function isHexDigit(ch){return'0123456789abcdefABCDEF'.indexOf(ch)>=0;}function isOctalDigit(ch){return'01234567'.indexOf(ch)>=0;}// 7.2 White Space
function isWhiteSpace(ch){return ch===0x20||ch===0x09||ch===0x0B||ch===0x0C||ch===0xA0||ch>=0x1680&&[0x1680,0x180E,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2007,0x2008,0x2009,0x200A,0x202F,0x205F,0x3000,0xFEFF].indexOf(ch)>=0;}// 7.3 Line Terminators
function isLineTerminator(ch){return ch===0x0A||ch===0x0D||ch===0x2028||ch===0x2029;}// 7.6 Identifier Names and Identifiers
function isIdentifierStart(ch){return ch===0x24||ch===0x5F||// $ (dollar) and _ (underscore)
ch>=0x41&&ch<=0x5A||// A..Z
ch>=0x61&&ch<=0x7A||// a..z
ch===0x5C||// \ (backslash)
ch>=0x80&&RegexNonAsciiIdentifierStart.test(String.fromCharCode(ch));}function isIdentifierPart(ch){return ch===0x24||ch===0x5F||// $ (dollar) and _ (underscore)
ch>=0x41&&ch<=0x5A||// A..Z
ch>=0x61&&ch<=0x7A||// a..z
ch>=0x30&&ch<=0x39||// 0..9
ch===0x5C||// \ (backslash)
ch>=0x80&&RegexNonAsciiIdentifierPart.test(String.fromCharCode(ch));}// 7.6.1.1 Keywords
var keywords$1={'if':1,'in':1,'do':1,'var':1,'for':1,'new':1,'try':1,'let':1,'this':1,'else':1,'case':1,'void':1,'with':1,'enum':1,'while':1,'break':1,'catch':1,'throw':1,'const':1,'yield':1,'class':1,'super':1,'return':1,'typeof':1,'delete':1,'switch':1,'export':1,'import':1,'public':1,'static':1,'default':1,'finally':1,'extends':1,'package':1,'private':1,'function':1,'continue':1,'debugger':1,'interface':1,'protected':1,'instanceof':1,'implements':1};function skipComment(){var ch;while(index$1<length$2){ch=source$1.charCodeAt(index$1);if(isWhiteSpace(ch)||isLineTerminator(ch)){++index$1;}else{break;}}}function scanHexEscape(prefix){var i,len,ch,code=0;len=prefix==='u'?4:2;for(i=0;i<len;++i){if(index$1<length$2&&isHexDigit(source$1[index$1])){ch=source$1[index$1++];code=code*16+'0123456789abcdef'.indexOf(ch.toLowerCase());}else{throwError({},MessageUnexpectedToken,ILLEGAL);}}return String.fromCharCode(code);}function scanUnicodeCodePointEscape(){var ch,code,cu1,cu2;ch=source$1[index$1];code=0;// At least, one hex digit is required.
if(ch==='}'){throwError({},MessageUnexpectedToken,ILLEGAL);}while(index$1<length$2){ch=source$1[index$1++];if(!isHexDigit(ch)){break;}code=code*16+'0123456789abcdef'.indexOf(ch.toLowerCase());}if(code>0x10FFFF||ch!=='}'){throwError({},MessageUnexpectedToken,ILLEGAL);}// UTF-16 Encoding
if(code<=0xFFFF){return String.fromCharCode(code);}cu1=(code-0x10000>>10)+0xD800;cu2=(code-0x10000&1023)+0xDC00;return String.fromCharCode(cu1,cu2);}function getEscapedIdentifier(){var ch,id;ch=source$1.charCodeAt(index$1++);id=String.fromCharCode(ch);// '\u' (U+005C, U+0075) denotes an escaped character.
if(ch===0x5C){if(source$1.charCodeAt(index$1)!==0x75){throwError({},MessageUnexpectedToken,ILLEGAL);}++index$1;ch=scanHexEscape('u');if(!ch||ch==='\\'||!isIdentifierStart(ch.charCodeAt(0))){throwError({},MessageUnexpectedToken,ILLEGAL);}id=ch;}while(index$1<length$2){ch=source$1.charCodeAt(index$1);if(!isIdentifierPart(ch)){break;}++index$1;id+=String.fromCharCode(ch);// '\u' (U+005C, U+0075) denotes an escaped character.
if(ch===0x5C){id=id.substr(0,id.length-1);if(source$1.charCodeAt(index$1)!==0x75){throwError({},MessageUnexpectedToken,ILLEGAL);}++index$1;ch=scanHexEscape('u');if(!ch||ch==='\\'||!isIdentifierPart(ch.charCodeAt(0))){throwError({},MessageUnexpectedToken,ILLEGAL);}id+=ch;}}return id;}function getIdentifier(){var start,ch;start=index$1++;while(index$1<length$2){ch=source$1.charCodeAt(index$1);if(ch===0x5C){// Blackslash (U+005C) marks Unicode escape sequence.
index$1=start;return getEscapedIdentifier();}if(isIdentifierPart(ch)){++index$1;}else{break;}}return source$1.slice(start,index$1);}function scanIdentifier(){var start,id,type;start=index$1;// Backslash (U+005C) starts an escaped character.
id=source$1.charCodeAt(index$1)===0x5C?getEscapedIdentifier():getIdentifier();// There is no keyword or literal with only one character.
// Thus, it must be an identifier.
if(id.length===1){type=TokenIdentifier;}else if(keywords$1.hasOwnProperty(id)){type=TokenKeyword;}else if(id==='null'){type=TokenNullLiteral;}else if(id==='true'||id==='false'){type=TokenBooleanLiteral;}else{type=TokenIdentifier;}return{type:type,value:id,start:start,end:index$1};}// 7.7 Punctuators
function scanPunctuator(){var start=index$1,code=source$1.charCodeAt(index$1),code2,ch1=source$1[index$1],ch2,ch3,ch4;switch(code){// Check for most common single-character punctuators.
case 0x2E:// . dot
case 0x28:// ( open bracket
case 0x29:// ) close bracket
case 0x3B:// ; semicolon
case 0x2C:// , comma
case 0x7B:// { open curly brace
case 0x7D:// } close curly brace
case 0x5B:// [
case 0x5D:// ]
case 0x3A:// :
case 0x3F:// ?
case 0x7E:// ~
++index$1;return{type:TokenPunctuator,value:String.fromCharCode(code),start:start,end:index$1};default:code2=source$1.charCodeAt(index$1+1);// '=' (U+003D) marks an assignment or comparison operator.
if(code2===0x3D){switch(code){case 0x2B:// +
case 0x2D:// -
case 0x2F:// /
case 0x3C:// <
case 0x3E:// >
case 0x5E:// ^
case 0x7C:// |
case 0x25:// %
case 0x26:// &
case 0x2A:// *
index$1+=2;return{type:TokenPunctuator,value:String.fromCharCode(code)+String.fromCharCode(code2),start:start,end:index$1};case 0x21:// !
case 0x3D:// =
index$1+=2;// !== and ===
if(source$1.charCodeAt(index$1)===0x3D){++index$1;}return{type:TokenPunctuator,value:source$1.slice(start,index$1),start:start,end:index$1};}}}// 4-character punctuator: >>>=
ch4=source$1.substr(index$1,4);if(ch4==='>>>='){index$1+=4;return{type:TokenPunctuator,value:ch4,start:start,end:index$1};}// 3-character punctuators: === !== >>> <<= >>=
ch3=ch4.substr(0,3);if(ch3==='>>>'||ch3==='<<='||ch3==='>>='){index$1+=3;return{type:TokenPunctuator,value:ch3,start:start,end:index$1};}// Other 2-character punctuators: ++ -- << >> && ||
ch2=ch3.substr(0,2);if(ch1===ch2[1]&&'+-<>&|'.indexOf(ch1)>=0||ch2==='=>'){index$1+=2;return{type:TokenPunctuator,value:ch2,start:start,end:index$1};}// 1-character punctuators: < > = ! + - * % & | ^ /
if('<>=!+-*%&|^/'.indexOf(ch1)>=0){++index$1;return{type:TokenPunctuator,value:ch1,start:start,end:index$1};}throwError({},MessageUnexpectedToken,ILLEGAL);}// 7.8.3 Numeric Literals
function scanHexLiteral(start){var number='';while(index$1<length$2){if(!isHexDigit(source$1[index$1])){break;}number+=source$1[index$1++];}if(number.length===0){throwError({},MessageUnexpectedToken,ILLEGAL);}if(isIdentifierStart(source$1.charCodeAt(index$1))){throwError({},MessageUnexpectedToken,ILLEGAL);}return{type:TokenNumericLiteral,value:parseInt('0x'+number,16),start:start,end:index$1};}function scanOctalLiteral(start){var number='0'+source$1[index$1++];while(index$1<length$2){if(!isOctalDigit(source$1[index$1])){break;}number+=source$1[index$1++];}if(isIdentifierStart(source$1.charCodeAt(index$1))||isDecimalDigit(source$1.charCodeAt(index$1))){throwError({},MessageUnexpectedToken,ILLEGAL);}return{type:TokenNumericLiteral,value:parseInt(number,8),octal:true,start:start,end:index$1};}function scanNumericLiteral(){var number,start,ch;ch=source$1[index$1];assert(isDecimalDigit(ch.charCodeAt(0))||ch==='.','Numeric literal must start with a decimal digit or a decimal point');start=index$1;number='';if(ch!=='.'){number=source$1[index$1++];ch=source$1[index$1];// Hex number starts with '0x'.
// Octal number starts with '0'.
if(number==='0'){if(ch==='x'||ch==='X'){++index$1;return scanHexLiteral(start);}if(isOctalDigit(ch)){return scanOctalLiteral(start);}// decimal number starts with '0' such as '09' is illegal.
if(ch&&isDecimalDigit(ch.charCodeAt(0))){throwError({},MessageUnexpectedToken,ILLEGAL);}}while(isDecimalDigit(source$1.charCodeAt(index$1))){number+=source$1[index$1++];}ch=source$1[index$1];}if(ch==='.'){number+=source$1[index$1++];while(isDecimalDigit(source$1.charCodeAt(index$1))){number+=source$1[index$1++];}ch=source$1[index$1];}if(ch==='e'||ch==='E'){number+=source$1[index$1++];ch=source$1[index$1];if(ch==='+'||ch==='-'){number+=source$1[index$1++];}if(isDecimalDigit(source$1.charCodeAt(index$1))){while(isDecimalDigit(source$1.charCodeAt(index$1))){number+=source$1[index$1++];}}else{throwError({},MessageUnexpectedToken,ILLEGAL);}}if(isIdentifierStart(source$1.charCodeAt(index$1))){throwError({},MessageUnexpectedToken,ILLEGAL);}return{type:TokenNumericLiteral,value:parseFloat(number),start:start,end:index$1};}// 7.8.4 String Literals
function scanStringLiteral(){var str='',quote,start,ch,code,octal=false;quote=source$1[index$1];assert(quote==='\''||quote==='"','String literal must starts with a quote');start=index$1;++index$1;while(index$1<length$2){ch=source$1[index$1++];if(ch===quote){quote='';break;}else if(ch==='\\'){ch=source$1[index$1++];if(!ch||!isLineTerminator(ch.charCodeAt(0))){switch(ch){case'u':case'x':if(source$1[index$1]==='{'){++index$1;str+=scanUnicodeCodePointEscape();}else{str+=scanHexEscape(ch);}break;case'n':str+='\n';break;case'r':str+='\r';break;case't':str+='\t';break;case'b':str+='\b';break;case'f':str+='\f';break;case'v':str+='\x0B';break;default:if(isOctalDigit(ch)){code='01234567'.indexOf(ch);// \0 is not octal escape sequence
if(code!==0){octal=true;}if(index$1<length$2&&isOctalDigit(source$1[index$1])){octal=true;code=code*8+'01234567'.indexOf(source$1[index$1++]);// 3 digits are only allowed when string starts
// with 0, 1, 2, 3
if('0123'.indexOf(ch)>=0&&index$1<length$2&&isOctalDigit(source$1[index$1])){code=code*8+'01234567'.indexOf(source$1[index$1++]);}}str+=String.fromCharCode(code);}else{str+=ch;}break;}}else{if(ch==='\r'&&source$1[index$1]==='\n'){++index$1;}}}else if(isLineTerminator(ch.charCodeAt(0))){break;}else{str+=ch;}}if(quote!==''){throwError({},MessageUnexpectedToken,ILLEGAL);}return{type:TokenStringLiteral,value:str,octal:octal,start:start,end:index$1};}function testRegExp(pattern,flags){var tmp=pattern;if(flags.indexOf('u')>=0){// Replace each astral symbol and every Unicode code point
// escape sequence with a single ASCII symbol to avoid throwing on
// regular expressions that are only valid in combination with the
// `/u` flag.
// Note: replacing with the ASCII symbol `x` might cause false
// negatives in unlikely scenarios. For example, `[\u{61}-b]` is a
// perfectly valid pattern that is equivalent to `[a-b]`, but it
// would be replaced by `[x-b]` which throws an error.
tmp=tmp.replace(/\\u\{([0-9a-fA-F]+)\}/g,function($0,$1){if(parseInt($1,16)<=0x10FFFF){return'x';}throwError({},MessageInvalidRegExp);}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,'x');}// First, detect invalid regular expressions.
try{new RegExp(tmp);}catch(e){throwError({},MessageInvalidRegExp);}// Return a regular expression object for this pattern-flag pair, or
// `null` in case the current environment doesn't support the flags it
// uses.
try{return new RegExp(pattern,flags);}catch(exception){return null;}}function scanRegExpBody(){var ch,str,classMarker,terminated,body;ch=source$1[index$1];assert(ch==='/','Regular expression literal must start with a slash');str=source$1[index$1++];classMarker=false;terminated=false;while(index$1<length$2){ch=source$1[index$1++];str+=ch;if(ch==='\\'){ch=source$1[index$1++];// ECMA-262 7.8.5
if(isLineTerminator(ch.charCodeAt(0))){throwError({},MessageUnterminatedRegExp);}str+=ch;}else if(isLineTerminator(ch.charCodeAt(0))){throwError({},MessageUnterminatedRegExp);}else if(classMarker){if(ch===']'){classMarker=false;}}else{if(ch==='/'){terminated=true;break;}else if(ch==='['){classMarker=true;}}}if(!terminated){throwError({},MessageUnterminatedRegExp);}// Exclude leading and trailing slash.
body=str.substr(1,str.length-2);return{value:body,literal:str};}function scanRegExpFlags(){var ch,str,flags;str='';flags='';while(index$1<length$2){ch=source$1[index$1];if(!isIdentifierPart(ch.charCodeAt(0))){break;}++index$1;if(ch==='\\'&&index$1<length$2){throwError({},MessageUnexpectedToken,ILLEGAL);}else{flags+=ch;str+=ch;}}if(flags.search(/[^gimuy]/g)>=0){throwError({},MessageInvalidRegExp,flags);}return{value:flags,literal:str};}function scanRegExp(){var start,body,flags,value;lookahead=null;skipComment();start=index$1;body=scanRegExpBody();flags=scanRegExpFlags();value=testRegExp(body.value,flags.value);return{literal:body.literal+flags.literal,value:value,regex:{pattern:body.value,flags:flags.value},start:start,end:index$1};}function isIdentifierName(token){return token.type===TokenIdentifier||token.type===TokenKeyword||token.type===TokenBooleanLiteral||token.type===TokenNullLiteral;}function advance(){var ch;skipComment();if(index$1>=length$2){return{type:TokenEOF,start:index$1,end:index$1};}ch=source$1.charCodeAt(index$1);if(isIdentifierStart(ch)){return scanIdentifier();}// Very common: ( and ) and ;
if(ch===0x28||ch===0x29||ch===0x3B){return scanPunctuator();}// String literal starts with single quote (U+0027) or double quote (U+0022).
if(ch===0x27||ch===0x22){return scanStringLiteral();}// Dot (.) U+002E can also start a floating-point number, hence the need
// to check the next character.
if(ch===0x2E){if(isDecimalDigit(source$1.charCodeAt(index$1+1))){return scanNumericLiteral();}return scanPunctuator();}if(isDecimalDigit(ch)){return scanNumericLiteral();}return scanPunctuator();}function lex(){var token;token=lookahead;index$1=token.end;lookahead=advance();index$1=token.end;return token;}function peek$1(){var pos;pos=index$1;lookahead=advance();index$1=pos;}function finishArrayExpression(elements){var node=new ASTNode(SyntaxArrayExpression);node.elements=elements;return node;}function finishBinaryExpression(operator,left,right){var node=new ASTNode(operator==='||'||operator==='&&'?SyntaxLogicalExpression:SyntaxBinaryExpression);node.operator=operator;node.left=left;node.right=right;return node;}function finishCallExpression(callee,args){var node=new ASTNode(SyntaxCallExpression);node.callee=callee;node.arguments=args;return node;}function finishConditionalExpression(test,consequent,alternate){var node=new ASTNode(SyntaxConditionalExpression);node.test=test;node.consequent=consequent;node.alternate=alternate;return node;}function finishIdentifier(name){var node=new ASTNode(SyntaxIdentifier);node.name=name;return node;}function finishLiteral(token){var node=new ASTNode(SyntaxLiteral);node.value=token.value;node.raw=source$1.slice(token.start,token.end);if(token.regex){if(node.raw==='//'){node.raw='/(?:)/';}node.regex=token.regex;}return node;}function finishMemberExpression(accessor,object,property){var node=new ASTNode(SyntaxMemberExpression);node.computed=accessor==='[';node.object=object;node.property=property;if(!node.computed)property.member=true;return node;}function finishObjectExpression(properties){var node=new ASTNode(SyntaxObjectExpression);node.properties=properties;return node;}function finishProperty(kind,key,value){var node=new ASTNode(SyntaxProperty);node.key=key;node.value=value;node.kind=kind;return node;}function finishUnaryExpression(operator,argument){var node=new ASTNode(SyntaxUnaryExpression);node.operator=operator;node.argument=argument;node.prefix=true;return node;}// Throw an exception
function throwError(token,messageFormat){var error,args=Array.prototype.slice.call(arguments,2),msg=messageFormat.replace(/%(\d)/g,function(whole,index){assert(index<args.length,'Message reference must be in range');return args[index];});error=new Error(msg);error.index=index$1;error.description=msg;throw error;}// Throw an exception because of the token.
function throwUnexpected(token){if(token.type===TokenEOF){throwError(token,MessageUnexpectedEOS);}if(token.type===TokenNumericLiteral){throwError(token,MessageUnexpectedNumber);}if(token.type===TokenStringLiteral){throwError(token,MessageUnexpectedString);}if(token.type===TokenIdentifier){throwError(token,MessageUnexpectedIdentifier);}if(token.type===TokenKeyword){throwError(token,MessageUnexpectedReserved);}// BooleanLiteral, NullLiteral, or Punctuator.
throwError(token,MessageUnexpectedToken,token.value);}// Expect the next token to match the specified punctuator.
// If not, an exception will be thrown.
function expect(value){var token=lex();if(token.type!==TokenPunctuator||token.value!==value){throwUnexpected(token);}}// Return true if the next token matches the specified punctuator.
function match(value){return lookahead.type===TokenPunctuator&&lookahead.value===value;}// Return true if the next token matches the specified keyword
function matchKeyword(keyword){return lookahead.type===TokenKeyword&&lookahead.value===keyword;}// 11.1.4 Array Initialiser
function parseArrayInitialiser(){var elements=[];index$1=lookahead.start;expect('[');while(!match(']')){if(match(',')){lex();elements.push(null);}else{elements.push(parseConditionalExpression());if(!match(']')){expect(',');}}}lex();return finishArrayExpression(elements);}// 11.1.5 Object Initialiser
function parseObjectPropertyKey(){var token;index$1=lookahead.start;token=lex();// Note: This function is called only from parseObjectProperty(), where
// EOF and Punctuator tokens are already filtered out.
if(token.type===TokenStringLiteral||token.type===TokenNumericLiteral){if(token.octal){throwError(token,MessageStrictOctalLiteral);}return finishLiteral(token);}return finishIdentifier(token.value);}function parseObjectProperty(){var token,key,id,value;index$1=lookahead.start;token=lookahead;if(token.type===TokenIdentifier){id=parseObjectPropertyKey();expect(':');value=parseConditionalExpression();return finishProperty('init',id,value);}if(token.type===TokenEOF||token.type===TokenPunctuator){throwUnexpected(token);}else{key=parseObjectPropertyKey();expect(':');value=parseConditionalExpression();return finishProperty('init',key,value);}}function parseObjectInitialiser(){var properties=[],property,name,key,map={},toString=String;index$1=lookahead.start;expect('{');while(!match('}')){property=parseObjectProperty();if(property.key.type===SyntaxIdentifier){name=property.key.name;}else{name=toString(property.key.value);}key='$'+name;if(Object.prototype.hasOwnProperty.call(map,key)){throwError({},MessageStrictDuplicateProperty);}else{map[key]=true;}properties.push(property);if(!match('}')){expect(',');}}expect('}');return finishObjectExpression(properties);}// 11.1.6 The Grouping Operator
function parseGroupExpression(){var expr;expect('(');expr=parseExpression$1();expect(')');return expr;}// 11.1 Primary Expressions
var legalKeywords={"if":1,"this":1};function parsePrimaryExpression(){var type,token,expr;if(match('(')){return parseGroupExpression();}if(match('[')){return parseArrayInitialiser();}if(match('{')){return parseObjectInitialiser();}type=lookahead.type;index$1=lookahead.start;if(type===TokenIdentifier||legalKeywords[lookahead.value]){expr=finishIdentifier(lex().value);}else if(type===TokenStringLiteral||type===TokenNumericLiteral){if(lookahead.octal){throwError(lookahead,MessageStrictOctalLiteral);}expr=finishLiteral(lex());}else if(type===TokenKeyword){throw new Error(DISABLED);}else if(type===TokenBooleanLiteral){token=lex();token.value=token.value==='true';expr=finishLiteral(token);}else if(type===TokenNullLiteral){token=lex();token.value=null;expr=finishLiteral(token);}else if(match('/')||match('/=')){expr=finishLiteral(scanRegExp());peek$1();}else{throwUnexpected(lex());}return expr;}// 11.2 Left-Hand-Side Expressions
function parseArguments(){var args=[];expect('(');if(!match(')')){while(index$1<length$2){args.push(parseConditionalExpression());if(match(')')){break;}expect(',');}}expect(')');return args;}function parseNonComputedProperty(){var token;index$1=lookahead.start;token=lex();if(!isIdentifierName(token)){throwUnexpected(token);}return finishIdentifier(token.value);}function parseNonComputedMember(){expect('.');return parseNonComputedProperty();}function parseComputedMember(){var expr;expect('[');expr=parseExpression$1();expect(']');return expr;}function parseLeftHandSideExpressionAllowCall(){var expr,args,property;expr=parsePrimaryExpression();for(;;){if(match('.')){property=parseNonComputedMember();expr=finishMemberExpression('.',expr,property);}else if(match('(')){args=parseArguments();expr=finishCallExpression(expr,args);}else if(match('[')){property=parseComputedMember();expr=finishMemberExpression('[',expr,property);}else{break;}}return expr;}// 11.3 Postfix Expressions
function parsePostfixExpression(){var expr=parseLeftHandSideExpressionAllowCall();if(lookahead.type===TokenPunctuator){if(match('++')||match('--')){throw new Error(DISABLED);}}return expr;}// 11.4 Unary Operators
function parseUnaryExpression(){var token,expr;if(lookahead.type!==TokenPunctuator&&lookahead.type!==TokenKeyword){expr=parsePostfixExpression();}else if(match('++')||match('--')){throw new Error(DISABLED);}else if(match('+')||match('-')||match('~')||match('!')){token=lex();expr=parseUnaryExpression();expr=finishUnaryExpression(token.value,expr);}else if(matchKeyword('delete')||matchKeyword('void')||matchKeyword('typeof')){throw new Error(DISABLED);}else{expr=parsePostfixExpression();}return expr;}function binaryPrecedence(token){var prec=0;if(token.type!==TokenPunctuator&&token.type!==TokenKeyword){return 0;}switch(token.value){case'||':prec=1;break;case'&&':prec=2;break;case'|':prec=3;break;case'^':prec=4;break;case'&':prec=5;break;case'==':case'!=':case'===':case'!==':prec=6;break;case'<':case'>':case'<=':case'>=':case'instanceof':case'in':prec=7;break;case'<<':case'>>':case'>>>':prec=8;break;case'+':case'-':prec=9;break;case'*':case'/':case'%':prec=11;break;default:break;}return prec;}// 11.5 Multiplicative Operators
// 11.6 Additive Operators
// 11.7 Bitwise Shift Operators
// 11.8 Relational Operators
// 11.9 Equality Operators
// 11.10 Binary Bitwise Operators
// 11.11 Binary Logical Operators
function parseBinaryExpression(){var marker,markers,expr,token,prec,stack,right,operator,left,i;marker=lookahead;left=parseUnaryExpression();token=lookahead;prec=binaryPrecedence(token);if(prec===0){return left;}token.prec=prec;lex();markers=[marker,lookahead];right=parseUnaryExpression();stack=[left,token,right];while((prec=binaryPrecedence(lookahead))>0){// Reduce: make a binary expression from the three topmost entries.
while(stack.length>2&&prec<=stack[stack.length-2].prec){right=stack.pop();operator=stack.pop().value;left=stack.pop();markers.pop();expr=finishBinaryExpression(operator,left,right);stack.push(expr);}// Shift.
token=lex();token.prec=prec;stack.push(token);markers.push(lookahead);expr=parseUnaryExpression();stack.push(expr);}// Final reduce to clean-up the stack.
i=stack.length-1;expr=stack[i];markers.pop();while(i>1){markers.pop();expr=finishBinaryExpression(stack[i-1].value,stack[i-2],expr);i-=2;}return expr;}// 11.12 Conditional Operator
function parseConditionalExpression(){var expr,consequent,alternate;expr=parseBinaryExpression();if(match('?')){lex();consequent=parseConditionalExpression();expect(':');alternate=parseConditionalExpression();expr=finishConditionalExpression(expr,consequent,alternate);}return expr;}// 11.14 Comma Operator
function parseExpression$1(){var expr=parseConditionalExpression();if(match(',')){throw new Error(DISABLED);// no sequence expressions
}return expr;}var parse$3=function parse$3(code){source$1=code;index$1=0;length$2=source$1.length;lookahead=null;peek$1();var expr=parseExpression$1();if(lookahead.type!==TokenEOF){throw new Error("Unexpect token after expression.");}return expr;};var Constants={NaN:'NaN',E:'Math.E',LN2:'Math.LN2',LN10:'Math.LN10',LOG2E:'Math.LOG2E',LOG10E:'Math.LOG10E',PI:'Math.PI',SQRT1_2:'Math.SQRT1_2',SQRT2:'Math.SQRT2',MIN_VALUE:'Number.MIN_VALUE',MAX_VALUE:'Number.MAX_VALUE'};var Functions=function Functions(codegen){function fncall(name,args,cast,type){var obj=codegen(args[0]);if(cast){obj=cast+'('+obj+')';if(cast.lastIndexOf('new ',0)===0)obj='('+obj+')';}return obj+'.'+name+(type<0?'':type===0?'()':'('+args.slice(1).map(codegen).join(',')+')');}function fn(name,cast,type){return function(args){return fncall(name,args,cast,type);};}var DATE='new Date',STRING='String',REGEXP='RegExp';return{// MATH functions
isNaN:'isNaN',isFinite:'isFinite',abs:'Math.abs',acos:'Math.acos',asin:'Math.asin',atan:'Math.atan',atan2:'Math.atan2',ceil:'Math.ceil',cos:'Math.cos',exp:'Math.exp',floor:'Math.floor',log:'Math.log',max:'Math.max',min:'Math.min',pow:'Math.pow',random:'Math.random',round:'Math.round',sin:'Math.sin',sqrt:'Math.sqrt',tan:'Math.tan',clamp:function clamp(args){if(args.length<3)error$1('Missing arguments to clamp function.');if(args.length>3)error$1('Too many arguments to clamp function.');var a=args.map(codegen);return'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';},// DATE functions
now:'Date.now',utc:'Date.UTC',datetime:DATE,date:fn('getDate',DATE,0),day:fn('getDay',DATE,0),year:fn('getFullYear',DATE,0),month:fn('getMonth',DATE,0),hours:fn('getHours',DATE,0),minutes:fn('getMinutes',DATE,0),seconds:fn('getSeconds',DATE,0),milliseconds:fn('getMilliseconds',DATE,0),time:fn('getTime',DATE,0),timezoneoffset:fn('getTimezoneOffset',DATE,0),utcdate:fn('getUTCDate',DATE,0),utcday:fn('getUTCDay',DATE,0),utcyear:fn('getUTCFullYear',DATE,0),utcmonth:fn('getUTCMonth',DATE,0),utchours:fn('getUTCHours',DATE,0),utcminutes:fn('getUTCMinutes',DATE,0),utcseconds:fn('getUTCSeconds',DATE,0),utcmilliseconds:fn('getUTCMilliseconds',DATE,0),// shared sequence functions
length:fn('length',null,-1),indexof:fn('indexOf',null),lastindexof:fn('lastIndexOf',null),slice:fn('slice',null),// STRING functions
parseFloat:'parseFloat',parseInt:'parseInt',upper:fn('toUpperCase',STRING,0),lower:fn('toLowerCase',STRING,0),substring:fn('substring',STRING),replace:fn('replace',STRING),// REGEXP functions
regexp:REGEXP,test:fn('test',REGEXP),// Control Flow functions
if:function _if(args){if(args.length<3)error$1('Missing arguments to if function.');if(args.length>3)error$1('Too many arguments to if function.');var a=args.map(codegen);return'('+a[0]+'?'+a[1]+':'+a[2]+')';}};};var codegen=function codegen(opt){opt=opt||{};var whitelist=opt.whitelist?toSet(opt.whitelist):{},blacklist=opt.blacklist?toSet(opt.blacklist):{},constants=opt.constants||Constants,functions=(opt.functions||Functions)(visit),globalvar=opt.globalvar,fieldvar=opt.fieldvar,globals={},fields={},memberDepth=0;var outputGlobal=isFunction(globalvar)?globalvar:function(id$$1){return globalvar+'["'+id$$1+'"]';};function visit(ast){if(isString(ast))return ast;var generator=Generators[ast.type];if(generator==null)error$1('Unsupported type: '+ast.type);return generator(ast);}var Generators={Literal:function Literal(n){return n.raw;},Identifier:function Identifier(n){var id$$1=n.name;if(memberDepth>0){return id$$1;}else if(blacklist.hasOwnProperty(id$$1)){return error$1('Illegal identifier: '+id$$1);}else if(constants.hasOwnProperty(id$$1)){return constants[id$$1];}else if(whitelist.hasOwnProperty(id$$1)){return id$$1;}else{globals[id$$1]=1;return outputGlobal(id$$1);}},MemberExpression:function MemberExpression(n){var d=!n.computed;var o=visit(n.object);if(d)memberDepth+=1;var p=visit(n.property);if(o===fieldvar){fields[p]=1;}// HACKish...
if(d)memberDepth-=1;return o+(d?'.'+p:'['+p+']');},CallExpression:function CallExpression(n){if(n.callee.type!=='Identifier'){error$1('Illegal callee type: '+n.callee.type);}var callee=n.callee.name;var args=n.arguments;var fn=functions.hasOwnProperty(callee)&&functions[callee];if(!fn)error$1('Unrecognized function: '+callee);return isFunction(fn)?fn(args):fn+'('+args.map(visit).join(',')+')';},ArrayExpression:function ArrayExpression(n){return'['+n.elements.map(visit).join(',')+']';},BinaryExpression:function BinaryExpression(n){return'('+visit(n.left)+n.operator+visit(n.right)+')';},UnaryExpression:function UnaryExpression(n){return'('+n.operator+visit(n.argument)+')';},ConditionalExpression:function ConditionalExpression(n){return'('+visit(n.test)+'?'+visit(n.consequent)+':'+visit(n.alternate)+')';},LogicalExpression:function LogicalExpression(n){return'('+visit(n.left)+n.operator+visit(n.right)+')';},ObjectExpression:function ObjectExpression(n){return'{'+n.properties.map(visit).join(',')+'}';},Property:function Property(n){memberDepth+=1;var k=visit(n.key);memberDepth-=1;return k+':'+visit(n.value);}};function codegen(ast){var result={code:visit(ast),globals:Object.keys(globals),fields:Object.keys(fields)};globals={};fields={};return result;}codegen.functions=functions;codegen.constants=constants;return codegen;};var formatCache={};function formatter(type,method,specifier){var k=type+':'+specifier,e=formatCache[k];if(!e||e[0]!==method){formatCache[k]=e=[method,method(specifier)];}return e[1];}function format$1(_,specifier){return formatter('format',format,specifier)(_);}function timeFormat$1(_,specifier){return formatter('timeFormat',timeFormat,specifier)(_);}function utcFormat$1(_,specifier){return formatter('utcFormat',utcFormat,specifier)(_);}function timeParse$1(_,specifier){return formatter('timeParse',timeParse,specifier)(_);}function utcParse$1(_,specifier){return formatter('utcParse',utcParse,specifier)(_);}var dateObj=new Date(2000,0,1);function time$2(month,day,specifier){dateObj.setMonth(month);dateObj.setDate(day);return timeFormat$1(dateObj,specifier);}function monthFormat(month){return time$2(month,1,'%B');}function monthAbbrevFormat(month){return time$2(month,1,'%b');}function dayFormat(day){return time$2(0,2+day,'%A');}function dayAbbrevFormat(day){return time$2(0,2+day,'%a');}function quarter(date){return 1+~~(new Date(date).getMonth()/3);}function utcquarter(date){return 1+~~(new Date(date).getUTCMonth()/3);}function log$3(df,method,args){try{df[method].apply(df,['EXPRESSION'].concat([].slice.call(args)));}catch(err){df.warn(err);}return args[args.length-1];}function warn(){return log$3(this.context.dataflow,'warn',arguments);}function info(){return log$3(this.context.dataflow,'info',arguments);}function debug(){return log$3(this.context.dataflow,'debug',arguments);}var inScope=function inScope(item){var group=this.context.group,value=false;if(group)while(item){if(item===group){value=true;break;}item=item.mark.group;}return value;};/**
 * Span-preserving range clamp. If the span of the input range is less
 * than (max - min) and an endpoint exceeds either the min or max value,
 * the range is translated such that the span is preserved and one
 * endpoint touches the boundary of the min/max range.
 * If the span exceeds (max - min), the range [min, max] is returned.
 */var clampRange=function clampRange(range,min,max){var lo=range[0],hi=range[1],span;if(hi<lo){span=hi;hi=lo;lo=span;}span=hi-lo;return span>=max-min?[min,max]:[Math.min(Math.max(lo,min),max-span),Math.min(Math.max(hi,span),max)];};function pinchDistance(event){var t=event.touches,dx=t[0].clientX-t[1].clientX,dy=t[0].clientY-t[1].clientY;return Math.sqrt(dx*dx+dy*dy);}function pinchAngle(event){var t=event.touches;return Math.atan2(t[0].clientY-t[1].clientY,t[0].clientX-t[1].clientX);}var _window=typeof window!=='undefined'&&window||null;function screen(){return _window?_window.screen:{};}function windowSize(){return _window?[_window.innerWidth,_window.innerHeight]:[undefined,undefined];}function containerSize(){var view=this.context.dataflow,el=view.container&&view.container();return el?[el.clientWidth,el.clientHeight]:[undefined,undefined];}var span=function span(array){return array[array.length-1]-array[0]||0;};var Literal='Literal';var Identifier$1='Identifier';var indexPrefix='@';var scalePrefix='%';var dataPrefix=':';function getScale(name,ctx){var s;return isFunction(name)?name:isString(name)?(s=ctx.scales[name])&&s.value:undefined;}function addScaleDependency(scope,params,name){var scaleName=scalePrefix+name;if(!params.hasOwnProperty(scaleName)){try{params[scaleName]=scope.scaleRef(name);}catch(err){// TODO: error handling? warning?
}}}function scaleVisitor(name,args,scope,params){if(args[0].type===Literal){// add scale dependency
addScaleDependency(scope,params,args[0].value);}else if(args[0].type===Identifier$1){// indirect scale lookup; add all scales as parameters
for(name in scope.scales){addScaleDependency(scope,params,name);}}}function range$2(name,group){var s=getScale(name,(group||this).context);return s&&s.range?s.range():[];}function domain(name,group){var s=getScale(name,(group||this).context);return s?s.domain():[];}function bandwidth(name,group){var s=getScale(name,(group||this).context);return s&&s.bandwidth?s.bandwidth():0;}function bandspace(count,paddingInner,paddingOuter){return bandSpace(count||0,paddingInner||0,paddingOuter||0);}function copy$1(name,group){var s=getScale(name,(group||this).context);return s?s.copy():undefined;}function scale$2(name,value,group){var s=getScale(name,(group||this).context);return s?s(value):undefined;}function invert(name,range,group){var s=getScale(name,(group||this).context);return!s?undefined:isArray(range)?(s.invertRange||s.invert)(range):(s.invert||s.invertExtent)(range);}var scaleGradient=function scaleGradient(scale,p0,p1,count){var gradient=Gradient(p0,p1),stops=scale.domain(),min=stops[0],max=stops[stops.length-1],fraction=scaleFraction(scale,min,max);if(scale.ticks){stops=scale.ticks(+count||15);if(min!==stops[0])stops.unshift(min);if(max!==stops[stops.length-1])stops.push(max);}for(var i=0,n=stops.length;i<n;++i){gradient.stop(fraction(stops[i]),scale(stops[i]));}return gradient;};function exp$1(sign){return function(x){return sign*Math.exp(x);};}function log$4(sign){return function(x){return Math.log(sign*x);};}function pow$2(exponent){return function(x){return x<0?-Math.pow(-x,exponent):Math.pow(x,exponent);};}function pan(domain,delta,lift,ground){var d0=lift(domain[0]),d1=lift(peek(domain)),dd=(d1-d0)*delta;return[ground(d0-dd),ground(d1-dd)];}function panLinear(domain,delta){return pan(domain,delta,toNumber,identity);}function panLog(domain,delta){var sign=Math.sign(domain[0]);return pan(domain,delta,log$4(sign),exp$1(sign));}function panPow(domain,delta,exponent){return pan(domain,delta,pow$2(exponent),pow$2(1/exponent));}function zoom$1(domain,anchor,scale,lift,ground){var da=lift(anchor),d0=lift(domain[0]),d1=lift(peek(domain));return[ground(da+(d0-da)*scale),ground(da+(d1-da)*scale)];}function zoomLinear(domain,anchor,scale){return zoom$1(domain,anchor,scale,toNumber,identity);}function zoomLog(domain,anchor,scale){var sign=Math.sign(domain[0]);return zoom$1(domain,anchor,scale,log$4(sign),exp$1(sign));}function zoomPow(domain,anchor,scale,exponent){return zoom$1(domain,anchor,scale,pow$2(exponent),pow$2(1/exponent));}function geoMethod(method){return function(projection,geojson,group){var p=getScale(projection,(group||this).context);return p&&p.path[method](geojson);};}var geoArea=geoMethod('area');var geoBounds=geoMethod('bounds');var geoCentroid=geoMethod('centroid');function data$1(name){var data=this.context.data[name];return data?data.values.value:[];}function dataVisitor(name,args,scope,params){if(args[0].type!==Literal){error$1('First argument to data functions must be a string literal.');}var data=args[0].value,dataName=dataPrefix+data;if(!params.hasOwnProperty(dataName)){params[dataName]=scope.getData(data).tuplesRef();}}function indata(name,field$$1,value){var index=this.context.data[name]['index:'+field$$1],entry=index?index.value.get(value):undefined;return entry?entry.count:entry;}function indataVisitor(name,args,scope,params){if(args[0].type!==Literal)error$1('First argument to indata must be a string literal.');if(args[1].type!==Literal)error$1('Second argument to indata must be a string literal.');var data=args[0].value,field$$1=args[1].value,indexName=indexPrefix+field$$1;if(!params.hasOwnProperty(indexName)){params[indexName]=scope.getData(data).indataRef(scope,field$$1);}}function setdata(name,tuples){var df=this.context.dataflow,data=this.context.data[name],input=data.input;df.pulse(input,df.changeset().remove(truthy).insert(tuples));return 1;}var EMPTY={};function datum(d){return d.data;}function treeNodes(name,context){var tree=data$1.call(context,name);return tree.root&&tree.root.lookup||EMPTY;}function treePath(name,source,target){var nodes=treeNodes(name,this),s=nodes[source],t=nodes[target];return s&&t?s.path(t).map(datum):undefined;}function treeAncestors(name,node){var n=treeNodes(name,this)[node];return n?n.ancestors().map(datum):undefined;}var inrange=function inrange(value,range,left,right){var r0=range[0],r1=range[range.length-1],t;if(r0>r1){t=r0;r0=r1;r1=t;}left=left===undefined||left;right=right===undefined||right;return(left?r0<=value:r0<value)&&(right?value<=r1:value<r1);};var encode$1=function encode$1(item,name,retval){if(item){var df=this.context.dataflow,target=item.mark.source;df.pulse(target,df.changeset().encode(item,name));}return retval!==undefined?retval:item;};function equal(a,b){return a===b||a!==a&&b!==b?true:isArray(a)&&isArray(b)&&a.length===b.length?equalArray(a,b):false;}function equalArray(a,b){for(var i=0,n=a.length;i<n;++i){if(!equal(a[i],b[i]))return false;}return true;}function removePredicate(props){return function(_){for(var key$$1 in props){if(!equal(_[key$$1],props[key$$1]))return false;}return true;};}var modify=function modify(name,insert,remove,toggle,_modify,values){var df=this.context.dataflow,data=this.context.data[name],input=data.input,changes=data.changes,stamp=df.stamp(),predicate,key$$1;if(df._trigger===false||!(input.value.length||insert||toggle)){// nothing to do!
return 0;}if(!changes||changes.stamp<stamp){data.changes=changes=df.changeset();changes.stamp=stamp;df.runAfter(function(){data.modified=true;df.pulse(input,changes).run();},true);}if(remove){predicate=remove===true?truthy:isArray(remove)||isTuple(remove)?remove:removePredicate(remove);changes.remove(predicate);}if(insert){changes.insert(insert);}if(toggle){predicate=removePredicate(toggle);if(input.value.some(predicate)){changes.remove(predicate);}else{changes.insert(toggle);}}if(_modify){for(key$$1 in values){changes.modify(_modify,key$$1,values[key$$1]);}}return 1;};var BIN='bin_';var INTERSECT='intersect';var UNION='union';var UNIT_INDEX='index:unit';function testPoint(datum,entry){var fields=entry.fields,values=entry.values,getter=entry.getter||(entry.getter=[]),n=fields.length,i=0,dval;for(;i<n;++i){getter[i]=getter[i]||field(fields[i]);dval=getter[i](datum);if(isDate(dval))dval=toNumber(dval);if(isDate(values[i]))values[i]=toNumber(values[i]);if(entry[BIN+fields[i]]){if(isDate(values[i][0]))values[i]=values[i].map(toNumber);if(!inrange(dval,values[i],true,false))return false;}else if(dval!==values[i]){return false;}}return true;}// TODO: revisit date coercion?
// have selections populate with consistent types upon write?
function testInterval(datum,entry){var ivals=entry.intervals,n=ivals.length,i=0,getter,extent,value;for(;i<n;++i){extent=ivals[i].extent;getter=ivals[i].getter||(ivals[i].getter=field(ivals[i].field));value=getter(datum);if(!extent||extent[0]===extent[1])return false;if(isDate(value))value=toNumber(value);if(isDate(extent[0]))extent=ivals[i].extent=extent.map(toNumber);if(isNumber(extent[0])&&!inrange(value,extent))return false;else if(isString(extent[0])&&extent.indexOf(value)<0)return false;}return true;}/**
 * Tests if a tuple is contained within an interactive selection.
 * @param {string} name - The name of the data set representing the selection.
 * @param {object} datum - The tuple to test for inclusion.
 * @param {string} op - The set operation for combining selections.
 *   One of 'intersect' or 'union' (default).
 * @param {function(object,object):boolean} test - A boolean-valued test
 *   predicate for determining selection status within a single unit chart.
 * @return {boolean} - True if the datum is in the selection, false otherwise.
 */function vlSelection(name,datum,op,test){var data=this.context.data[name],entries=data?data.values.value:[],unitIdx=data?data[UNIT_INDEX]&&data[UNIT_INDEX].value:undefined,intersect=op===INTERSECT,n=entries.length,i=0,entry,miss,count,unit,b;for(;i<n;++i){entry=entries[i];if(unitIdx&&intersect){// multi selections union within the same unit and intersect across units.
miss=miss||{};count=miss[unit=entry.unit]||0;// if we've already matched this unit, skip.
if(count===-1)continue;b=test(datum,entry);miss[unit]=b?-1:++count;// if we match and there are no other units return true
// if we've missed against all tuples in this unit return false
if(b&&unitIdx.size===1)return true;if(!b&&count===unitIdx.get(unit).count)return false;}else{b=test(datum,entry);// if we find a miss and we do require intersection return false
// if we find a match and we don't require intersection return true
if(intersect^b)return b;}}// if intersecting and we made it here, then we saw no misses
// if not intersecting, then we saw no matches
// if no active selections, return false
return n&&intersect;}// Assumes point selection tuples are of the form:
// {unit: string, encodings: array<string>, fields: array<string>, values: array<*>, bins: object}
function vlPoint(name,datum,op){return vlSelection.call(this,name,datum,op,testPoint);}// Assumes interval selection typles are of the form:
// {unit: string, intervals: array<{encoding: string, field:string, extent:array<number>}>}
function vlInterval(name,datum,op){return vlSelection.call(this,name,datum,op,testInterval);}function vlMultiVisitor(name,args,scope,params){if(args[0].type!==Literal)error$1('First argument to indata must be a string literal.');var data=args[0].value,// vlMulti, vlMultiDomain have different # of params, but op is always last.
op=args.length>=2&&args[args.length-1].value,field$$1='unit',indexName=indexPrefix+field$$1;if(op===INTERSECT&&!params.hasOwnProperty(indexName)){params[indexName]=scope.getData(data).indataRef(scope,field$$1);}dataVisitor(name,args,scope,params);}/**
 * Materializes a point selection as a scale domain.
 * @param {string} name - The name of the dataset representing the selection.
 * @param {string} [encoding] - A particular encoding channel to materialize.
 * @param {string} [field] - A particular field to materialize.
 * @param {string} [op='intersect'] - The set operation for combining selections.
 * One of 'intersect' (default) or 'union'.
 * @returns {array} An array of values to serve as a scale domain.
 */function vlPointDomain(name,encoding,field$$1,op){var data=this.context.data[name],entries=data?data.values.value:[],unitIdx=data?data[UNIT_INDEX]&&data[UNIT_INDEX].value:undefined,entry=entries[0],i=0,n,index,values,continuous,units;if(!entry)return undefined;for(n=encoding?entry.encodings.length:entry.fields.length;i<n;++i){if(encoding&&entry.encodings[i]===encoding||field$$1&&entry.fields[i]===field$$1){index=i;continuous=entry[BIN+entry.fields[i]];break;}}// multi selections union within the same unit and intersect across units.
// if we've got only one unit, enforce union for more efficient materialization.
if(unitIdx&&unitIdx.size===1){op=UNION;}if(unitIdx&&op===INTERSECT){units=entries.reduce(function(acc,entry){var u=acc[entry.unit]||(acc[entry.unit]=[]);u.push({unit:entry.unit,value:entry.values[index]});return acc;},{});values=Object.keys(units).map(function(unit){return{unit:unit,value:continuous?continuousDomain(units[unit],UNION):discreteDomain(units[unit],UNION)};});}else{values=entries.map(function(entry){return{unit:entry.unit,value:entry.values[index]};});}return continuous?continuousDomain(values,op):discreteDomain(values,op);}/**
 * Materializes an interval selection as a scale domain.
 * @param {string} name - The name of the dataset representing the selection.
 * @param {string} [encoding] - A particular encoding channel to materialize.
 * @param {string} [field] - A particular field to materialize.
 * @param {string} [op='union'] - The set operation for combining selections.
 * One of 'intersect' or 'union' (default).
 * @returns {array} An array of values to serve as a scale domain.
 */function vlIntervalDomain(name,encoding,field$$1,op){var data=this.context.data[name],entries=data?data.values.value:[],entry=entries[0],i=0,n,interval,index,values,discrete;if(!entry)return undefined;for(n=entry.intervals.length;i<n;++i){interval=entry.intervals[i];if(encoding&&interval.encoding===encoding||field$$1&&interval.field===field$$1){if(!interval.extent)return undefined;index=i;discrete=interval.extent.length>2;break;}}values=entries.reduce(function(acc,entry){var extent=entry.intervals[index].extent,value=discrete?extent.map(function(d){return{unit:entry.unit,value:d};}):{unit:entry.unit,value:extent};if(discrete){acc.push.apply(acc,value);}else{acc.push(value);}return acc;},[]);return discrete?discreteDomain(values,op):continuousDomain(values,op);}function discreteDomain(entries,op){var units={},count=0,values={},domain=[],i=0,n=entries.length,entry,unit,v,key$$1;for(;i<n;++i){entry=entries[i];unit=entry.unit;key$$1=entry.value;if(!units[unit])units[unit]=++count;if(!(v=values[key$$1])){values[key$$1]=v={value:key$$1,units:{},count:0};}if(!v.units[unit])v.units[unit]=++v.count;}for(key$$1 in values){v=values[key$$1];if(op===INTERSECT&&v.count!==count)continue;domain.push(v.value);}return domain.length?domain:undefined;}function continuousDomain(entries,op){var merge$$1=op===INTERSECT?intersectInterval:unionInterval,i=0,n=entries.length,extent,domain,lo,hi;for(;i<n;++i){extent=entries[i].value;if(isDate(extent[0]))extent=extent.map(toNumber);lo=extent[0];hi=extent[1];if(lo>hi){hi=extent[0];lo=extent[1];}domain=domain?merge$$1(domain,lo,hi):[lo,hi];}return domain&&domain.length&&+domain[0]!==+domain[1]?domain:undefined;}function unionInterval(domain,lo,hi){if(domain[0]>lo)domain[0]=lo;if(domain[1]<hi)domain[1]=hi;return domain;}function intersectInterval(domain,lo,hi){if(hi<domain[0]||domain[1]<lo){return[];}else{if(domain[0]<lo)domain[0]=lo;if(domain[1]>hi)domain[1]=hi;}return domain;}// Expression function context object
var functionContext={isArray:isArray,isBoolean:isBoolean,isDate:isDate,isNumber:isNumber,isObject:isObject,isRegExp:isRegExp,isString:isString,isTuple:isTuple,toBoolean:toBoolean,toDate:toDate,toNumber:toNumber,toString:toString,pad:pad,peek:peek,truncate:truncate,rgb:rgb,lab:lab,hcl:hcl,hsl:hsl,sequence:sequence,format:format$1,utcFormat:utcFormat$1,utcParse:utcParse$1,timeFormat:timeFormat$1,timeParse:timeParse$1,monthFormat:monthFormat,monthAbbrevFormat:monthAbbrevFormat,dayFormat:dayFormat,dayAbbrevFormat:dayAbbrevFormat,quarter:quarter,utcquarter:utcquarter,warn:warn,info:info,debug:debug,inScope:inScope,clampRange:clampRange,pinchDistance:pinchDistance,pinchAngle:pinchAngle,screen:screen,containerSize:containerSize,windowSize:windowSize,span:span,bandspace:bandspace,inrange:inrange,setdata:setdata,panLinear:panLinear,panLog:panLog,panPow:panPow,zoomLinear:zoomLinear,zoomLog:zoomLog,zoomPow:zoomPow,encode:encode$1,modify:modify};var eventFunctions=['view','item','group','xy','x','y'];var eventPrefix='event.vega.';var thisPrefix='this.';var astVisitors={};// AST visitors for dependency analysis
function expressionFunction(name,fn,visitor){if(arguments.length===1){return functionContext[name];}// register with the functionContext
functionContext[name]=fn;// if there is an astVisitor register that, too
if(visitor)astVisitors[name]=visitor;// if the code generator has already been initialized,
// we need to also register the function with it
if(codeGenerator)codeGenerator.functions[name]=thisPrefix+name;return this;}// register expression functions with ast visitors
expressionFunction('bandwidth',bandwidth,scaleVisitor);expressionFunction('copy',copy$1,scaleVisitor);expressionFunction('domain',domain,scaleVisitor);expressionFunction('range',range$2,scaleVisitor);expressionFunction('invert',invert,scaleVisitor);expressionFunction('scale',scale$2,scaleVisitor);expressionFunction('gradient',scaleGradient,scaleVisitor);expressionFunction('geoArea',geoArea,scaleVisitor);expressionFunction('geoBounds',geoBounds,scaleVisitor);expressionFunction('geoCentroid',geoCentroid,scaleVisitor);expressionFunction('indata',indata,indataVisitor);expressionFunction('data',data$1,dataVisitor);expressionFunction('vlSingle',vlPoint,dataVisitor);expressionFunction('vlSingleDomain',vlPointDomain,dataVisitor);expressionFunction('vlMulti',vlPoint,vlMultiVisitor);expressionFunction('vlMultiDomain',vlPointDomain,vlMultiVisitor);expressionFunction('vlInterval',vlInterval,dataVisitor);expressionFunction('vlIntervalDomain',vlIntervalDomain,dataVisitor);expressionFunction('treePath',treePath,dataVisitor);expressionFunction('treeAncestors',treeAncestors,dataVisitor);// Build expression function registry
function buildFunctions(codegen$$1){var fn=Functions(codegen$$1);eventFunctions.forEach(function(name){fn[name]=eventPrefix+name;});for(var name in functionContext){fn[name]=thisPrefix+name;}return fn;}// Export code generator and parameters
var codegenParams={blacklist:['_'],whitelist:['datum','event','item'],fieldvar:'datum',globalvar:function globalvar(id$$1){return'_['+$('$'+id$$1)+']';},functions:buildFunctions,constants:Constants,visitors:astVisitors};var codeGenerator=codegen(codegenParams);var signalPrefix='$';var parseExpression=function parseExpression(expr,scope,preamble){var params={},ast,gen;// parse the expression to an abstract syntax tree (ast)
try{ast=parse$3(expr);}catch(err){error$1('Expression parse error: '+$(expr));}// analyze ast function calls for dependencies
ast.visit(function visitor(node){if(node.type!=='CallExpression')return;var name=node.callee.name,visit=codegenParams.visitors[name];if(visit)visit(name,node.arguments,scope,params);});// perform code generation
gen=codeGenerator(ast);// collect signal dependencies
gen.globals.forEach(function(name){var signalName=signalPrefix+name;if(!params.hasOwnProperty(signalName)&&scope.getSignal(name)){params[signalName]=scope.signalRef(name);}});// return generated expression code and dependencies
return{$expr:preamble?preamble+'return('+gen.code+');':gen.code,$fields:gen.fields,$params:params};};var VIEW$1='view';var SCOPE='scope';var parseStream=function parseStream(stream,scope){return stream.signal?scope.getSignal(stream.signal).id:stream.scale?scope.getScale(stream.scale).id:parseStream$1(stream,scope);};function eventSource(source){return source===SCOPE?VIEW$1:source||VIEW$1;}function parseStream$1(stream,scope){var method=stream.merge?mergeStream:stream.stream?nestedStream:stream.type?eventStream:error$1('Invalid stream specification: '+$(stream));return method(stream,scope);}function mergeStream(stream,scope){var list=stream.merge.map(function(s){return parseStream$1(s,scope);});var entry=streamParameters({merge:list},stream,scope);return scope.addStream(entry).id;}function nestedStream(stream,scope){var id$$1=parseStream$1(stream.stream,scope),entry=streamParameters({stream:id$$1},stream,scope);return scope.addStream(entry).id;}function eventStream(stream,scope){var id$$1=scope.event(eventSource(stream.source),stream.type),entry=streamParameters({stream:id$$1},stream,scope);return Object.keys(entry).length===1?id$$1:scope.addStream(entry).id;}function streamParameters(entry,stream,scope){var param=stream.between;if(param){if(param.length!==2){error$1('Stream "between" parameter must have 2 entries: '+$(stream));}entry.between=[parseStream$1(param[0],scope),parseStream$1(param[1],scope)];}param=stream.filter?array(stream.filter):[];if(stream.marktype||stream.markname||stream.markrole){// add filter for mark type, name and/or role
param.push(filterMark(stream.marktype,stream.markname,stream.markrole));}if(stream.source===SCOPE){// add filter to limit events from sub-scope only
param.push('inScope(event.item)');}if(param.length){entry.filter=parseExpression('('+param.join(')&&(')+')').$expr;}if((param=stream.throttle)!=null){entry.throttle=+param;}if((param=stream.debounce)!=null){entry.debounce=+param;}if(stream.consume){entry.consume=true;}return entry;}function filterMark(type,name,role){var item='event.item';return item+(type&&type!=='*'?'&&'+item+'.mark.marktype===\''+type+'\'':'')+(role?'&&'+item+'.mark.role===\''+role+'\'':'')+(name?'&&'+item+'.mark.name===\''+name+'\'':'');}/**
 * Parse an event selector string.
 * Returns an array of event stream definitions.
 */var selector=function selector(_selector,source,marks){DEFAULT_SOURCE=source||VIEW$2;MARKS=marks||DEFAULT_MARKS;return parseMerge(_selector.trim()).map(parseSelector);};var VIEW$2='view';var LBRACK='[';var RBRACK=']';var LBRACE='{';var RBRACE='}';var COLON=':';var COMMA=',';var NAME='@';var GT='>';var ILLEGAL$1=/[[\]{}]/;var DEFAULT_SOURCE;var MARKS;var DEFAULT_MARKS={'*':1,arc:1,area:1,group:1,image:1,line:1,path:1,rect:1,rule:1,shape:1,symbol:1,text:1,trail:1};function isMarkType(type){return MARKS.hasOwnProperty(type);}function find$1(s,i,endChar,pushChar,popChar){var count=0,n=s.length,c;for(;i<n;++i){c=s[i];if(!count&&c===endChar)return i;else if(popChar&&popChar.indexOf(c)>=0)--count;else if(pushChar&&pushChar.indexOf(c)>=0)++count;}return i;}function parseMerge(s){var output=[],start=0,n=s.length,i=0;while(i<n){i=find$1(s,i,COMMA,LBRACK+LBRACE,RBRACK+RBRACE);output.push(s.substring(start,i).trim());start=++i;}if(output.length===0){throw'Empty event selector: '+s;}return output;}function parseSelector(s){return s[0]==='['?parseBetween(s):parseStream$2(s);}function parseBetween(s){var n=s.length,i=1,b,stream;i=find$1(s,i,RBRACK,LBRACK,RBRACK);if(i===n){throw'Empty between selector: '+s;}b=parseMerge(s.substring(1,i));if(b.length!==2){throw'Between selector must have two elements: '+s;}s=s.slice(i+1).trim();if(s[0]!==GT){throw'Expected \'>\' after between selector: '+s;}b=b.map(parseSelector);stream=parseSelector(s.slice(1).trim());if(stream.between){return{between:b,stream:stream};}else{stream.between=b;}return stream;}function parseStream$2(s){var stream={source:DEFAULT_SOURCE},source=[],throttle=[0,0],markname=0,start=0,n=s.length,i=0,j,filter;// extract throttle from end
if(s[n-1]===RBRACE){i=s.lastIndexOf(LBRACE);if(i>=0){try{throttle=parseThrottle(s.substring(i+1,n-1));}catch(e){throw'Invalid throttle specification: '+s;}s=s.slice(0,i).trim();n=s.length;}else throw'Unmatched right brace: '+s;i=0;}if(!n)throw s;// set name flag based on first char
if(s[0]===NAME)markname=++i;// extract first part of multi-part stream selector
j=find$1(s,i,COLON);if(j<n){source.push(s.substring(start,j).trim());start=i=++j;}// extract remaining part of stream selector
i=find$1(s,i,LBRACK);if(i===n){source.push(s.substring(start,n).trim());}else{source.push(s.substring(start,i).trim());filter=[];start=++i;if(start===n)throw'Unmatched left bracket: '+s;}// extract filters
while(i<n){i=find$1(s,i,RBRACK);if(i===n)throw'Unmatched left bracket: '+s;filter.push(s.substring(start,i).trim());if(i<n-1&&s[++i]!==LBRACK)throw'Expected left bracket: '+s;start=++i;}// marshall event stream specification
if(!(n=source.length)||ILLEGAL$1.test(source[n-1])){throw'Invalid event selector: '+s;}if(n>1){stream.type=source[1];if(markname){stream.markname=source[0].slice(1);}else if(isMarkType(source[0])){stream.marktype=source[0];}else{stream.source=source[0];}}else{stream.type=source[0];}if(stream.type.slice(-1)==='!'){stream.consume=true;stream.type=stream.type.slice(0,-1);}if(filter!=null)stream.filter=filter;if(throttle[0])stream.throttle=throttle[0];if(throttle[1])stream.debounce=throttle[1];return stream;}function parseThrottle(s){var a=s.split(COMMA);if(!s.length||a.length>2)throw s;return a.map(function(_){var x=+_;if(x!==x)throw s;return x;});}var preamble='var datum=event.item&&event.item.datum;';var parseUpdate=function parseUpdate(spec,scope,target){var events=spec.events,update=spec.update,encode=spec.encode,sources=[],value='',entry;if(!events){error$1('Signal update missing events specification.');}// interpret as an event selector string
if(isString(events)){events=selector(events);}// separate event streams from signal updates
events=array(events).filter(function(stream){if(stream.signal||stream.scale){sources.push(stream);return 0;}else{return 1;}});// merge event streams, include as source
if(events.length){sources.push(events.length>1?{merge:events}:events[0]);}if(encode!=null){if(update)error$1('Signal encode and update are mutually exclusive.');update='encode(item(),'+$(encode)+')';}// resolve update value
value=isString(update)?parseExpression(update,scope,preamble):update.expr!=null?parseExpression(update.expr,scope,preamble):update.value!=null?update.value:update.signal!=null?{$expr:'_.value',$params:{value:scope.signalRef(update.signal)}}:error$1('Invalid signal update specification.');entry={target:target,update:value};if(spec.force){entry.options={force:true};}sources.forEach(function(source){source={source:parseStream(source,scope)};scope.addUpdate(extend(source,entry));});};var parseSignalUpdates=function parseSignalUpdates(signal,scope){var op=scope.getSignal(signal.name);if(signal.update){var expr=parseExpression(signal.update,scope);op.update=expr.$expr;op.params=expr.$params;}if(signal.on){signal.on.forEach(function(_){parseUpdate(_,scope,op.id);});}};function Entry(type,value,params,parent){this.id=-1;this.type=type;this.value=value;this.params=params;if(parent)this.parent=parent;}function entry(type,value,params,parent){return new Entry(type,value,params,parent);}function operator(value,params){return entry('operator',value,params);}// -----
function ref(op){var ref={$ref:op.id};// if operator not yet registered, cache ref to resolve later
if(op.id<0)(op.refs=op.refs||[]).push(ref);return ref;}var tupleidRef={$tupleid:1,toString:function toString(){return':_tupleid_:';}};function fieldRef$1(field$$1,name){return name?{$field:field$$1,$name:name}:{$field:field$$1};}var keyFieldRef=fieldRef$1('key');function compareRef(fields,orders){return{$compare:fields,$order:orders};}function keyRef(fields){return{$key:fields};}// -----
var Ascending='ascending';var Descending='descending';function sortKey(sort){return!isObject(sort)?'':(sort.order===Descending?'-':'+')+aggrField(sort.op,sort.field);}function aggrField(op,field$$1){return(op&&op.signal?'$'+op.signal:op||'')+(op&&field$$1?'_':'')+(field$$1&&field$$1.signal?'$'+field$$1.signal:field$$1||'');}// -----
function isSignal(_){return _&&_.signal;}function value(specValue,defaultValue){return specValue!=null?specValue:defaultValue;}function transform$2(name){return function(params,value$$1,parent){return entry(name,value$$1,params||undefined,parent);};}var Aggregate$1=transform$2('aggregate');var AxisTicks$1=transform$2('axisticks');var Bound$1=transform$2('bound');var Collect$1=transform$2('collect');var Compare$1=transform$2('compare');var DataJoin$1=transform$2('datajoin');var Encode$1=transform$2('encode');var Facet$1=transform$2('facet');var Field$1=transform$2('field');var Key$1=transform$2('key');var LegendEntries$1=transform$2('legendentries');var Mark$1=transform$2('mark');var MultiExtent$1=transform$2('multiextent');var MultiValues$1=transform$2('multivalues');var Overlap$1=transform$2('overlap');var Params$2=transform$2('params');var PreFacet$1=transform$2('prefacet');var Projection$1=transform$2('projection');var Proxy$1=transform$2('proxy');var Relay$1=transform$2('relay');var Render$1=transform$2('render');var Scale$1=transform$2('scale');var Sieve$1=transform$2('sieve');var SortItems$1=transform$2('sortitems');var ViewLayout$1=transform$2('viewlayout');var Values$1=transform$2('values');var FIELD_REF_ID=0;var types=['identity','ordinal','band','point','bin-linear','bin-ordinal','linear','pow','sqrt','log','sequential','time','utc','quantize','quantile','threshold'];var allTypes=toSet(types);var ordinalTypes=toSet(types.slice(1,6));function isOrdinal(type){return ordinalTypes.hasOwnProperty(type);}function isQuantile(type){return type==='quantile';}function initScale(spec,scope){var type=spec.type||'linear';if(!allTypes.hasOwnProperty(type)){error$1('Unrecognized scale type: '+$(type));}scope.addScale(spec.name,{type:type,domain:undefined});}function parseScale(spec,scope){var params=scope.getScale(spec.name).params,key$$1;params.domain=parseScaleDomain(spec.domain,spec,scope);if(spec.range!=null){params.range=parseScaleRange(spec,scope,params);}if(spec.interpolate!=null){parseScaleInterpolate(spec.interpolate,params);}if(spec.nice!=null){parseScaleNice(spec.nice,params);}for(key$$1 in spec){if(params.hasOwnProperty(key$$1)||key$$1==='name')continue;params[key$$1]=parseLiteral(spec[key$$1],scope);}}function parseLiteral(v,scope){return!isObject(v)?v:v.signal?scope.signalRef(v.signal):error$1('Unsupported object: '+$(v));}function parseArray(v,scope){return v.signal?scope.signalRef(v.signal):v.map(function(v){return parseLiteral(v,scope);});}function dataLookupError(name){error$1('Can not find data set: '+$(name));}// -- SCALE DOMAIN ----
function parseScaleDomain(domain,spec,scope){if(!domain){if(spec.domainMin!=null||spec.domainMax!=null){error$1('No scale domain defined for domainMin/domainMax to override.');}return;// default domain
}return domain.signal?scope.signalRef(domain.signal):(isArray(domain)?explicitDomain:domain.fields?multipleDomain:singularDomain)(domain,spec,scope);}function explicitDomain(domain,spec,scope){return domain.map(function(v){return parseLiteral(v,scope);});}function singularDomain(domain,spec,scope){var data=scope.getData(domain.data);if(!data)dataLookupError(domain.data);return isOrdinal(spec.type)?data.valuesRef(scope,domain.field,parseSort(domain.sort,false)):isQuantile(spec.type)?data.domainRef(scope,domain.field):data.extentRef(scope,domain.field);}function multipleDomain(domain,spec,scope){var data=domain.data,fields=domain.fields.reduce(function(dom,d){d=isString(d)?{data:data,field:d}:isArray(d)||d.signal?fieldRef(d,scope):d;dom.push(d);return dom;},[]);return(isOrdinal(spec.type)?ordinalMultipleDomain:isQuantile(spec.type)?quantileMultipleDomain:numericMultipleDomain)(domain,scope,fields);}function fieldRef(data,scope){var name='_:vega:_'+FIELD_REF_ID++,coll=Collect$1({});if(isArray(data)){coll.value={$ingest:data};}else if(data.signal){scope.signalRef('setdata('+$(name)+','+data.signal+')');}scope.addDataPipeline(name,[coll,Sieve$1({})]);return{data:name,field:'data'};}function ordinalMultipleDomain(domain,scope,fields){var counts,a,c,v;// get value counts for each domain field
counts=fields.map(function(f){var data=scope.getData(f.data);if(!data)dataLookupError(f.data);return data.countsRef(scope,f.field);});// sum counts from all fields
a=scope.add(Aggregate$1({groupby:keyFieldRef,ops:['sum'],fields:[scope.fieldRef('count')],as:['count'],pulse:counts}));// collect aggregate output
c=scope.add(Collect$1({pulse:ref(a)}));// extract values for combined domain
v=scope.add(Values$1({field:keyFieldRef,sort:scope.sortRef(parseSort(domain.sort,true)),pulse:ref(c)}));return ref(v);}function parseSort(sort,multidomain){if(sort){if(!sort.field&&!sort.op){if(isObject(sort))sort.field='key';else sort={field:'key'};}else if(!sort.field&&sort.op!=='count'){error$1('No field provided for sort aggregate op: '+sort.op);}else if(multidomain&&sort.field){error$1('Multiple domain scales can not sort by field.');}else if(multidomain&&sort.op&&sort.op!=='count'){error$1('Multiple domain scales support op count only.');}}return sort;}function quantileMultipleDomain(domain,scope,fields){// get value arrays for each domain field
var values=fields.map(function(f){var data=scope.getData(f.data);if(!data)dataLookupError(f.data);return data.domainRef(scope,f.field);});// combine value arrays
return ref(scope.add(MultiValues$1({values:values})));}function numericMultipleDomain(domain,scope,fields){// get extents for each domain field
var extents=fields.map(function(f){var data=scope.getData(f.data);if(!data)dataLookupError(f.data);return data.extentRef(scope,f.field);});// combine extents
return ref(scope.add(MultiExtent$1({extents:extents})));}// -- SCALE NICE -----
function parseScaleNice(nice,params){params.nice=isObject(nice)?{interval:parseLiteral(nice.interval),step:parseLiteral(nice.step)}:parseLiteral(nice);}// -- SCALE INTERPOLATION -----
function parseScaleInterpolate(interpolate,params){params.interpolate=parseLiteral(interpolate.type||interpolate);if(interpolate.gamma!=null){params.interpolateGamma=parseLiteral(interpolate.gamma);}}// -- SCALE RANGE -----
function parseScaleRange(spec,scope,params){var range=spec.range,config=scope.config.range;if(range.signal){return scope.signalRef(range.signal);}else if(isString(range)){if(config&&config.hasOwnProperty(range)){spec=extend({},spec,{range:config[range]});return parseScaleRange(spec,scope,params);}else if(range==='width'){range=[0,{signal:'width'}];}else if(range==='height'){range=isOrdinal(spec.type)?[0,{signal:'height'}]:[{signal:'height'},0];}else{error$1('Unrecognized scale range value: '+$(range));}}else if(range.scheme){params.scheme=parseLiteral(range.scheme,scope);if(range.extent)params.schemeExtent=parseArray(range.extent,scope);if(range.count)params.schemeCount=parseLiteral(range.count,scope);return;}else if(range.step){params.rangeStep=parseLiteral(range.step,scope);return;}else if(isOrdinal(spec.type)&&!isArray(range)){return parseScaleDomain(range,spec,scope);}else if(!isArray(range)){error$1('Unsupported range type: '+$(range));}return range.map(function(v){return parseLiteral(v,scope);});}var parseProjection=function parseProjection(proj,scope){var params={};for(var name in proj){if(name==='name')continue;params[name]=parseParameter(proj[name],scope);}scope.addProjection(proj.name,params);};function parseParameter(_,scope){return isArray(_)?_.map(function(_){return parseParameter(_,scope);}):!isObject(_)?_:_.signal?scope.signalRef(_.signal):error$1('Unsupported parameter object: '+$(_));}var Top$1='top';var Left$1='left';var Right$1='right';var Bottom$1='bottom';var Index='index';var Label='label';var Offset='offset';var Perc='perc';var Size='size';var Total='total';var Value='value';var GuideLabelStyle='guide-label';var GuideTitleStyle='guide-title';var GroupTitleStyle='group-title';var LegendScales=['shape','size','fill','stroke','strokeDash','opacity'];var Skip={name:1,interactive:1};var Skip$1=toSet(['rule']);var Swap=toSet(['group','image','rect']);var adjustSpatial=function adjustSpatial(encode,marktype){var code='';if(Skip$1[marktype])return code;if(encode.x2){if(encode.x){if(Swap[marktype]){code+='if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';}code+='o.width=o.x2-o.x;';}else{code+='o.x=o.x2-(o.width||0);';}}if(encode.xc){code+='o.x=o.xc-(o.width||0)/2;';}if(encode.y2){if(encode.y){if(Swap[marktype]){code+='if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';}code+='o.height=o.y2-o.y;';}else{code+='o.y=o.y2-(o.height||0);';}}if(encode.yc){code+='o.y=o.yc-(o.height||0)/2;';}return code;};var color$2=function color$2(enc,scope,params,fields){function color(type,x,y,z){var a=entry$1(null,x,scope,params,fields),b=entry$1(null,y,scope,params,fields),c=entry$1(null,z,scope,params,fields);return'this.'+type+'('+[a,b,c].join(',')+').toString()';}return enc.c?color('hcl',enc.h,enc.c,enc.l):enc.h||enc.s?color('hsl',enc.h,enc.s,enc.l):enc.l||enc.a?color('lab',enc.l,enc.a,enc.b):enc.r||enc.g||enc.b?color('rgb',enc.r,enc.g,enc.b):null;};var expression=function expression(code,scope,params,fields){var expr=parseExpression(code,scope);expr.$fields.forEach(function(name){fields[name]=1;});extend(params,expr.$params);return expr.$expr;};var field$1=function field$1(ref,scope,params,fields){return resolve$1(isObject(ref)?ref:{datum:ref},scope,params,fields);};function resolve$1(ref,scope,params,fields){var object,level,field$$1;if(ref.signal){object='datum';field$$1=expression(ref.signal,scope,params,fields);}else if(ref.group||ref.parent){level=Math.max(1,ref.level||1);object='item';while(level-->0){object+='.mark.group';}if(ref.parent){field$$1=ref.parent;object+='.datum';}else{field$$1=ref.group;}}else if(ref.datum){object='datum';field$$1=ref.datum;}else{error$1('Invalid field reference: '+$(ref));}if(!ref.signal){if(isString(field$$1)){fields[field$$1]=1;// TODO review field tracking?
field$$1=splitAccessPath(field$$1).map($).join('][');}else{field$$1=resolve$1(field$$1,scope,params,fields);}}return object+'['+field$$1+']';}var scale$3=function scale$3(enc,value,scope,params,fields){var scale=getScale$1(enc.scale,scope,params,fields),interp,func,flag;if(enc.range!=null){// pull value from scale range
interp=+enc.range;func=scale+'.range()';value=interp===0?func+'[0]':'($='+func+','+(interp===1?'$[$.length-1]':'$[0]+'+interp+'*($[$.length-1]-$[0])')+')';}else{// run value through scale and/or pull scale bandwidth
if(value!==undefined)value=scale+'('+value+')';if(enc.band&&(flag=hasBandwidth(enc.scale,scope))){func=scale+'.bandwidth';interp=+enc.band;interp=func+'()'+(interp===1?'':'*'+interp);// if we don't know the scale type, check for bandwidth
if(flag<0)interp='('+func+'?'+interp+':0)';value=(value?value+'+':'')+interp;if(enc.extra){// include logic to handle extraneous elements
value='(datum.extra?'+scale+'(datum.extra.value):'+value+')';}}if(value==null)value='0';}return value;};function hasBandwidth(name,scope){if(!isString(name))return-1;var type=scope.scaleType(name);return type==='band'||type==='point'?1:0;}function getScale$1(name,scope,params,fields){var scaleName;if(isString(name)){// direct scale lookup; add scale as parameter
scaleName=scalePrefix+name;if(!params.hasOwnProperty(scaleName)){params[scaleName]=scope.scaleRef(name);}scaleName=$(scaleName);}else{// indirect scale lookup; add all scales as parameters
for(scaleName in scope.scales){params[scalePrefix+scaleName]=scope.scaleRef(scaleName);}scaleName=$(scalePrefix)+'+'+(name.signal?'('+expression(name.signal,scope,params,fields)+')':field$1(name,scope,params,fields));}return'_['+scaleName+']';}var gradient$1=function gradient$1(enc,scope,params,fields){return'this.gradient('+getScale$1(enc.gradient,scope,params,fields)+','+$(enc.start)+','+$(enc.stop)+','+$(enc.count)+')';};var property=function property(_property,scope,params,fields){return isObject(_property)?'('+entry$1(null,_property,scope,params,fields)+')':_property;};var entry$1=function entry$1(channel,enc,scope,params,fields){if(enc.gradient!=null){return gradient$1(enc,scope,params,fields);}var value=enc.signal?expression(enc.signal,scope,params,fields):enc.color?color$2(enc.color,scope,params,fields):enc.field!=null?field$1(enc.field,scope,params,fields):enc.value!==undefined?$(enc.value):undefined;if(enc.scale!=null){value=scale$3(enc,value,scope,params,fields);}if(value===undefined){value=null;}if(enc.exponent!=null){value='Math.pow('+value+','+property(enc.exponent,scope,params,fields)+')';}if(enc.mult!=null){value+='*'+property(enc.mult,scope,params,fields);}if(enc.offset!=null){value+='+'+property(enc.offset,scope,params,fields);}if(enc.round){value='Math.round('+value+')';}return value;};var set$5=function set$5(obj,key$$1,value){return obj+'['+$(key$$1)+']='+value+';';};var rule$1=function rule$1(channel,rules,scope,params,fields){var code='';rules.forEach(function(rule){var value=entry$1(channel,rule,scope,params,fields);code+=rule.test?expression(rule.test,scope,params,fields)+'?'+value+':':value;});return set$5('o',channel,code);};function parseEncode(encode,marktype,params,scope){var fields={},code='var o=item,datum=o.datum,$;',channel,enc,value;for(channel in encode){enc=encode[channel];if(isArray(enc)){// rule
code+=rule$1(channel,enc,scope,params,fields);}else{value=entry$1(channel,enc,scope,params,fields);code+=set$5('o',channel,value);}}code+=adjustSpatial(encode,marktype);code+='return 1;';return{$expr:code,$fields:Object.keys(fields),$output:Object.keys(encode)};}var MarkRole='mark';var FrameRole$1='frame';var ScopeRole$1='scope';var AxisRole$2='axis';var AxisDomainRole='axis-domain';var AxisGridRole='axis-grid';var AxisLabelRole='axis-label';var AxisTickRole='axis-tick';var AxisTitleRole='axis-title';var LegendRole$2='legend';var LegendEntryRole='legend-entry';var LegendGradientRole='legend-gradient';var LegendLabelRole='legend-label';var LegendSymbolRole='legend-symbol';var LegendTitleRole='legend-title';var TitleRole$1='title';function encoder(_){return isObject(_)?_:{value:_};}function addEncode(object,name,value){if(value!=null){object[name]={value:value};return 1;}else{return 0;}}function extendEncode(encode,extra,skip){for(var name in extra){if(skip&&skip.hasOwnProperty(name))continue;encode[name]=extend(encode[name]||{},extra[name]);}return encode;}function encoders(encode,type,role,style,scope,params){var enc,key$$1;params=params||{};params.encoders={$encode:enc={}};encode=applyDefaults(encode,type,role,style,scope.config);for(key$$1 in encode){enc[key$$1]=parseEncode(encode[key$$1],type,params,scope);}return params;}function applyDefaults(encode,type,role,style,config){var enter={},key$$1,skip,props;// ignore legend and axis
if(role=='legend'||String(role).indexOf('axis')===0){role=null;}// resolve mark config
props=role===FrameRole$1?config.group:role===MarkRole?extend({},config.mark,config[type]):null;for(key$$1 in props){// do not apply defaults if relevant fields are defined
skip=has(key$$1,encode)||(key$$1==='fill'||key$$1==='stroke')&&(has('fill',encode)||has('stroke',encode));if(!skip)enter[key$$1]={value:props[key$$1]};}// resolve styles, apply with increasing precedence
array(style).forEach(function(name){var props=config.style&&config.style[name];for(var key$$1 in props){if(!has(key$$1,encode)){enter[key$$1]={value:props[key$$1]};}}});encode=extend({},encode);// defensive copy
encode.enter=extend(enter,encode.enter);return encode;}function has(key$$1,encode){return encode&&(encode.enter&&encode.enter[key$$1]||encode.update&&encode.update[key$$1]);}var guideMark=function guideMark(type,role,style,key,dataRef,encode,extras){return{type:type,name:extras?extras.name:undefined,role:role,style:extras&&extras.style||style,key:key,from:dataRef,interactive:!!(extras&&extras.interactive),encode:extendEncode(encode,extras,Skip)};};var GroupMark='group';var RectMark='rect';var RuleMark='rule';var SymbolMark='symbol';var TextMark='text';var legendGradient=function legendGradient(spec,scale,config,userEncode){var zero={value:0},encode={},enter,update;encode.enter=enter={opacity:zero,x:zero,y:zero};addEncode(enter,'width',config.gradientWidth);addEncode(enter,'height',config.gradientHeight);addEncode(enter,'stroke',config.gradientStrokeColor);addEncode(enter,'strokeWidth',config.gradientStrokeWidth);encode.exit={opacity:zero};encode.update=update={x:zero,y:zero,fill:{gradient:scale},opacity:{value:1}};addEncode(update,'width',config.gradientWidth);addEncode(update,'height',config.gradientHeight);return guideMark(RectMark,LegendGradientRole,null,undefined,undefined,encode,userEncode);};var alignExpr='datum.'+Perc+'<=0?"left"'+':datum.'+Perc+'>=1?"right":"center"';var legendGradientLabels=function legendGradientLabels(spec,config,userEncode,dataRef){var zero={value:0},encode={},enter,update;encode.enter=enter={opacity:zero,text:{field:Label}};addEncode(enter,'fill',config.labelColor);addEncode(enter,'font',config.labelFont);addEncode(enter,'fontSize',config.labelFontSize);addEncode(enter,'baseline',config.gradientLabelBaseline);addEncode(enter,'limit',config.gradientLabelLimit);encode.exit={opacity:zero};encode.update=update={opacity:{value:1}};enter.x=update.x={field:Perc,mult:config.gradientWidth};enter.y=update.y={value:config.gradientHeight,offset:config.gradientLabelOffset};enter.align=update.align={signal:alignExpr};return guideMark(TextMark,LegendLabelRole,GuideLabelStyle,Perc,dataRef,encode,userEncode);};var legendLabels=function legendLabels(spec,config,userEncode,dataRef){var zero={value:0},encode={},enter,update;encode.enter=enter={opacity:zero};addEncode(enter,'align',config.labelAlign);addEncode(enter,'baseline',config.labelBaseline);addEncode(enter,'fill',config.labelColor);addEncode(enter,'font',config.labelFont);addEncode(enter,'fontSize',config.labelFontSize);addEncode(enter,'limit',config.labelLimit);encode.exit={opacity:zero};encode.update=update={opacity:{value:1},text:{field:Label}};enter.x=update.x={field:Offset,offset:config.labelOffset};enter.y=update.y={field:Size,mult:0.5,offset:{field:Total,offset:{field:{group:'entryPadding'},mult:{field:Index}}}};return guideMark(TextMark,LegendLabelRole,GuideLabelStyle,Value,dataRef,encode,userEncode);};var legendSymbols=function legendSymbols(spec,config,userEncode,dataRef){var zero={value:0},encode={},enter,update;encode.enter=enter={opacity:zero};addEncode(enter,'shape',config.symbolType);addEncode(enter,'size',config.symbolSize);addEncode(enter,'strokeWidth',config.symbolStrokeWidth);if(!spec.fill){addEncode(enter,'fill',config.symbolFillColor);addEncode(enter,'stroke',config.symbolStrokeColor);}encode.exit={opacity:zero};encode.update=update={opacity:{value:1}};enter.x=update.x={field:Offset,mult:0.5};enter.y=update.y={field:Size,mult:0.5,offset:{field:Total,offset:{field:{group:'entryPadding'},mult:{field:Index}}}};LegendScales.forEach(function(scale){if(spec[scale]){update[scale]=enter[scale]={scale:spec[scale],field:Value};}});return guideMark(SymbolMark,LegendSymbolRole,null,Value,dataRef,encode,userEncode);};var legendTitle=function legendTitle(spec,config,userEncode,dataRef){var zero={value:0},title=spec.title,encode={},enter;encode.enter=enter={x:{field:{group:'padding'}},y:{field:{group:'padding'}},opacity:zero};addEncode(enter,'align',config.titleAlign);addEncode(enter,'baseline',config.titleBaseline);addEncode(enter,'fill',config.titleColor);addEncode(enter,'font',config.titleFont);addEncode(enter,'fontSize',config.titleFontSize);addEncode(enter,'fontWeight',config.titleFontWeight);addEncode(enter,'limit',config.titleLimit);encode.exit={opacity:zero};encode.update={opacity:{value:1},text:title&&title.signal?{signal:title.signal}:{value:title+''}};return guideMark(TextMark,LegendTitleRole,GuideTitleStyle,null,dataRef,encode,userEncode);};var guideGroup=function guideGroup(role,style,name,dataRef,interactive,encode,marks){return{type:GroupMark,name:name,role:role,style:style,from:dataRef,interactive:interactive,encode:encode,marks:marks};};var role=function role(spec){var role=spec.role||'';return!role.indexOf('axis')||!role.indexOf('legend')?role:spec.type===GroupMark?ScopeRole$1:role||MarkRole;};var definition$1=function definition$1(spec){return{clip:spec.clip||false,interactive:spec.interactive===false?false:true,marktype:spec.type,name:spec.name||undefined,role:spec.role||role(spec),zindex:+spec.zindex||undefined};};/**
 * Parse a data transform specification.
 */var parseTransform=function parseTransform(spec,scope){var def=definition(spec.type);if(!def)error$1('Unrecognized transform type: '+$(spec.type));var t=entry(def.type.toLowerCase(),null,parseParameters(def,spec,scope));if(spec.signal)scope.addSignal(spec.signal,scope.proxy(t));t.metadata=def.metadata||{};return t;};/**
 * Parse all parameters of a data transform.
 */function parseParameters(def,spec,scope){var params={},pdef,i,n;for(i=0,n=def.params.length;i<n;++i){pdef=def.params[i];params[pdef.name]=parseParameter$1(pdef,spec,scope);}return params;}/**
 * Parse a data transform parameter.
 */function parseParameter$1(def,spec,scope){var type=def.type,value$$1=spec[def.name];if(type==='index'){return parseIndexParameter(def,spec,scope);}else if(value$$1===undefined){if(def.required){error$1('Missing required '+$(spec.type)+' parameter: '+$(def.name));}return;}else if(type==='param'){return parseSubParameters(def,spec,scope);}else if(type==='projection'){return scope.projectionRef(spec[def.name]);}return def.array&&!isSignal(value$$1)?value$$1.map(function(v){return parameterValue(def,v,scope);}):parameterValue(def,value$$1,scope);}/**
 * Parse a single parameter value.
 */function parameterValue(def,value$$1,scope){var type=def.type;if(isSignal(value$$1)){return isExpr(type)?error$1('Expression references can not be signals.'):isField(type)?scope.fieldRef(value$$1):isCompare(type)?scope.compareRef(value$$1):scope.signalRef(value$$1.signal);}else{var expr=def.expr||isField(type);return expr&&outerExpr(value$$1)?parseExpression(value$$1.expr,scope):expr&&outerField(value$$1)?fieldRef$1(value$$1.field):isExpr(type)?parseExpression(value$$1,scope):isData(type)?ref(scope.getData(value$$1).values):isField(type)?fieldRef$1(value$$1):isCompare(type)?scope.compareRef(value$$1):value$$1;}}/**
 * Parse parameter for accessing an index of another data set.
 */function parseIndexParameter(def,spec,scope){if(!isString(spec.from)){error$1('Lookup "from" parameter must be a string literal.');}return scope.getData(spec.from).lookupRef(scope,spec.key);}/**
 * Parse a parameter that contains one or more sub-parameter objects.
 */function parseSubParameters(def,spec,scope){var value$$1=spec[def.name];if(def.array){if(!isArray(value$$1)){// signals not allowed!
error$1('Expected an array of sub-parameters. Instead: '+$(value$$1));}return value$$1.map(function(v){return parseSubParameter(def,v,scope);});}else{return parseSubParameter(def,value$$1,scope);}}/**
 * Parse a sub-parameter object.
 */function parseSubParameter(def,value$$1,scope){var params,pdef,k,i,n;// loop over defs to find matching key
for(i=0,n=def.params.length;i<n;++i){pdef=def.params[i];for(k in pdef.key){if(pdef.key[k]!==value$$1[k]){pdef=null;break;}}if(pdef)break;}// raise error if matching key not found
if(!pdef)error$1('Unsupported parameter: '+$(value$$1));// parse params, create Params transform, return ref
params=extend(parseParameters(pdef,value$$1,scope),pdef.key);return ref(scope.add(Params$2(params)));}// -- Utilities -----
function outerExpr(_){return _&&_.expr;}function outerField(_){return _&&_.field;}function isData(_){return _==='data';}function isExpr(_){return _==='expr';}function isField(_){return _==='field';}function isCompare(_){return _==='compare';}var parseData=function parseData(from,group,scope){var facet,key$$1,op,dataRef,parent;// if no source data, generate singleton datum
if(!from){dataRef=ref(scope.add(Collect$1(null,[{}])));}// if faceted, process facet specification
else if(facet=from.facet){if(!group)error$1('Only group marks can be faceted.');// use pre-faceted source data, if available
if(facet.field!=null){dataRef=parent=ref(scope.getData(facet.data).output);}else{key$$1=scope.keyRef(facet.groupby);// generate facet aggregates if no direct data specification
if(!from.data){op=parseTransform(extend({type:'aggregate',groupby:array(facet.groupby)},facet.aggregate));op.params.key=key$$1;op.params.pulse=ref(scope.getData(facet.data).output);dataRef=parent=ref(scope.add(op));}else{parent=ref(scope.getData(from.data).aggregate);}}}// if not yet defined, get source data reference
if(!dataRef){dataRef=from.$ref?from:ref(scope.getData(from.data).output);}return{key:key$$1,pulse:dataRef,parent:parent};};function DataScope(scope,input,output,values,aggr){this.scope=scope;// parent scope object
this.input=input;// first operator in pipeline (tuple input)
this.output=output;// last operator in pipeline (tuple output)
this.values=values;// operator for accessing tuples (but not tuple flow)
// last aggregate in transform pipeline
this.aggregate=aggr;// lookup table of field indices
this.index={};}DataScope.fromEntries=function(scope,entries){var n=entries.length,i=1,input=entries[0],values=entries[n-1],output=entries[n-2],aggr=null;// add operator entries to this scope, wire up pulse chain
scope.add(entries[0]);for(;i<n;++i){entries[i].params.pulse=ref(entries[i-1]);scope.add(entries[i]);if(entries[i].type==='aggregate')aggr=entries[i];}return new DataScope(scope,input,output,values,aggr);};var prototype$81=DataScope.prototype;prototype$81.countsRef=function(scope,field$$1,sort){var ds=this,cache=ds.counts||(ds.counts={}),k=fieldKey(field$$1),v,a,p;if(k!=null){scope=ds.scope;v=cache[k];}if(!v){p={groupby:scope.fieldRef(field$$1,'key'),pulse:ref(ds.output)};if(sort&&sort.field)addSortField(scope,p,sort);a=scope.add(Aggregate$1(p));v=scope.add(Collect$1({pulse:ref(a)}));v={agg:a,ref:ref(v)};if(k!=null)cache[k]=v;}else if(sort&&sort.field){addSortField(scope,v.agg.params,sort);}return v.ref;};function fieldKey(field$$1){return isString(field$$1)?field$$1:null;}function addSortField(scope,p,sort){var as=aggrField(sort.op,sort.field),s;if(p.ops){for(var i=0,n=p.as.length;i<n;++i){if(p.as[i]===as)return;}}else{p.ops=['count'];p.fields=[null];p.as=['count'];}if(sort.op){p.ops.push((s=sort.op.signal)?scope.signalRef(s):sort.op);p.fields.push(scope.fieldRef(sort.field));p.as.push(as);}}function cache(scope,ds,name,optype,field$$1,counts,index){var cache=ds[name]||(ds[name]={}),sort=sortKey(counts),k=fieldKey(field$$1),v,op;if(k!=null){scope=ds.scope;k=k+(sort?'|'+sort:'');v=cache[k];}if(!v){var params=counts?{field:keyFieldRef,pulse:ds.countsRef(scope,field$$1,counts)}:{field:scope.fieldRef(field$$1),pulse:ref(ds.output)};if(sort)params.sort=scope.sortRef(counts);op=scope.add(entry(optype,undefined,params));if(index)ds.index[field$$1]=op;v=ref(op);if(k!=null)cache[k]=v;}return v;}prototype$81.tuplesRef=function(){return ref(this.values);};prototype$81.extentRef=function(scope,field$$1){return cache(scope,this,'extent','extent',field$$1,false);};prototype$81.domainRef=function(scope,field$$1){return cache(scope,this,'domain','values',field$$1,false);};prototype$81.valuesRef=function(scope,field$$1,sort){return cache(scope,this,'vals','values',field$$1,sort||true);};prototype$81.lookupRef=function(scope,field$$1){return cache(scope,this,'lookup','tupleindex',field$$1,false);};prototype$81.indataRef=function(scope,field$$1){return cache(scope,this,'indata','tupleindex',field$$1,true,true);};var parseFacet=function parseFacet(spec,scope,group){var facet=spec.from.facet,name=facet.name,data=ref(scope.getData(facet.data).output),subscope,source,values,op;if(!facet.name){error$1('Facet must have a name: '+$(facet));}if(!facet.data){error$1('Facet must reference a data set: '+$(facet));}if(facet.field){op=scope.add(PreFacet$1({field:scope.fieldRef(facet.field),pulse:data}));}else if(facet.groupby){op=scope.add(Facet$1({key:scope.keyRef(facet.groupby),group:ref(scope.proxy(group.parent)),pulse:data}));}else{error$1('Facet must specify groupby or field: '+$(facet));}// initialize facet subscope
subscope=scope.fork();source=subscope.add(Collect$1());values=subscope.add(Sieve$1({pulse:ref(source)}));subscope.addData(name,new DataScope(subscope,source,source,values));subscope.addSignal('parent',null);// parse faceted subflow
op.params.subflow={$subflow:parseSpec(spec,subscope).toRuntime()};};var parseSubflow=function parseSubflow(spec,scope,input){var op=scope.add(PreFacet$1({pulse:input.pulse})),subscope=scope.fork();subscope.add(Sieve$1());subscope.addSignal('parent',null);// parse group mark subflow
op.params.subflow={$subflow:parseSpec(spec,subscope).toRuntime()};};var parseTrigger=function parseTrigger(spec,scope,name){var remove=spec.remove,insert=spec.insert,toggle=spec.toggle,modify=spec.modify,values=spec.values,op=scope.add(operator()),update,expr;update='if('+spec.trigger+',modify("'+name+'",'+[insert,remove,toggle,modify,values].map(function(_){return _==null?'null':_;}).join(',')+'),0)';expr=parseExpression(update,scope);op.update=expr.$expr;op.params=expr.$params;};var parseMark=function parseMark(spec,scope){var role$$1=role(spec),group=spec.type===GroupMark,facet=spec.from&&spec.from.facet,layout=spec.layout||role$$1===ScopeRole$1||role$$1===FrameRole$1,nested=role$$1===MarkRole||layout||facet,ops,op,input,store,bound,render,sieve,name,joinRef,markRef,encodeRef,layoutRef,boundRef;// resolve input data
input=parseData(spec.from,group,scope);// data join to map tuples to visual items
op=scope.add(DataJoin$1({key:input.key||(spec.key?fieldRef$1(spec.key):undefined),pulse:input.pulse,clean:!group}));joinRef=ref(op);// collect visual items
op=store=scope.add(Collect$1({pulse:joinRef}));// connect visual items to scenegraph
op=scope.add(Mark$1({markdef:definition$1(spec),context:{$context:true},groups:scope.lookup(),parent:scope.signals.parent?scope.signalRef('parent'):null,index:scope.markpath(),pulse:ref(op)}));markRef=ref(op);// add visual encoders
op=scope.add(Encode$1(encoders(spec.encode,spec.type,role$$1,spec.style,scope,{pulse:markRef})));// monitor parent marks to propagate changes
op.params.parent=scope.encode();// add post-encoding transforms, if defined
if(spec.transform){spec.transform.forEach(function(_){var tx=parseTransform(_,scope);if(tx.metadata.generates||tx.metadata.changes){error$1('Mark transforms should not generate new data.');}tx.params.pulse=ref(op);scope.add(op=tx);});}// if item sort specified, perform post-encoding
if(spec.sort){op=scope.add(SortItems$1({sort:scope.compareRef(spec.sort),pulse:ref(op)}));}encodeRef=ref(op);// add view layout operator if needed
if(facet||layout){layout=scope.add(ViewLayout$1({layout:scope.objectProperty(spec.layout),legendMargin:scope.config.legendMargin,mark:markRef,pulse:encodeRef}));layoutRef=ref(layout);}// compute bounding boxes
bound=scope.add(Bound$1({mark:markRef,pulse:layoutRef||encodeRef}));boundRef=ref(bound);// if group mark, recurse to parse nested content
if(group){// juggle layout & bounds to ensure they run *after* any faceting transforms
if(nested){ops=scope.operators;ops.pop();if(layout)ops.pop();}scope.pushState(encodeRef,layoutRef||boundRef,joinRef);facet?parseFacet(spec,scope,input)// explicit facet
:nested?parseSubflow(spec,scope,input)// standard mark group
:parseSpec(spec,scope);// guide group, we can avoid nested scopes
scope.popState();if(nested){if(layout)ops.push(layout);ops.push(bound);}}if(spec.overlap){boundRef=ref(scope.add(Overlap$1({method:spec.overlap===true?'parity':spec.overlap,pulse:boundRef})));}// render / sieve items
render=scope.add(Render$1({pulse:boundRef}));sieve=scope.add(Sieve$1({pulse:ref(render)},undefined,scope.parent()));// if mark is named, make accessible as reactive geometry
// add trigger updates if defined
if(spec.name!=null){name=spec.name;scope.addData(name,new DataScope(scope,store,render,sieve));if(spec.on)spec.on.forEach(function(on){if(on.insert||on.remove||on.toggle){error$1('Marks only support modify triggers.');}parseTrigger(on,scope,name);});}};var parseLegend=function parseLegend(spec,scope){var type=spec.type||'symbol',config=scope.config.legend,encode=spec.encode||{},legendEncode=encode.legend||{},name=legendEncode.name||undefined,interactive=!!legendEncode.interactive,style=legendEncode.style,datum,dataRef,entryRef,group,title,entryEncode,params,children;// resolve 'canonical' scale name
var scale=spec.size||spec.shape||spec.fill||spec.stroke||spec.strokeDash||spec.opacity;if(!scale){error$1('Missing valid scale for legend.');}// single-element data source for axis group
datum={orient:value(spec.orient,config.orient),title:spec.title!=null};dataRef=ref(scope.add(Collect$1(null,[datum])));// encoding properties for legend group
legendEncode=extendEncode({enter:legendEnter(config),update:{offset:encoder(value(spec.offset,config.offset)),padding:encoder(value(spec.padding,config.padding)),titlePadding:encoder(value(spec.titlePadding,config.titlePadding))}},legendEncode,Skip);// encoding properties for legend entry sub-group
entryEncode={update:{x:{field:{group:'padding'}},y:{field:{group:'padding'}},entryPadding:encoder(value(spec.entryPadding,config.entryPadding))}};if(type==='gradient'){// data source for gradient labels
entryRef=ref(scope.add(LegendEntries$1({type:'gradient',scale:scope.scaleRef(scale),count:scope.objectProperty(spec.tickCount),values:scope.objectProperty(spec.values),formatSpecifier:scope.property(spec.format)})));children=[legendGradient(spec,scale,config,encode.gradient),legendGradientLabels(spec,config,encode.labels,entryRef)];}else{// data source for legend entries
entryRef=ref(scope.add(LegendEntries$1(params={scale:scope.scaleRef(scale),count:scope.objectProperty(spec.tickCount),values:scope.objectProperty(spec.values),formatSpecifier:scope.property(spec.format)})));children=[legendSymbols(spec,config,encode.symbols,entryRef),legendLabels(spec,config,encode.labels,entryRef)];params.size=sizeExpression(spec,scope,children);}// generate legend marks
children=[guideGroup(LegendEntryRole,null,null,dataRef,interactive,entryEncode,children)];// include legend title if defined
if(datum.title){title=legendTitle(spec,config,encode.title,dataRef);entryEncode.update.y.offset={field:{group:'titlePadding'},offset:getValue$1(scope,title.encode,'fontSize',GuideTitleStyle)};children.push(title);}// build legend specification
group=guideGroup(LegendRole$2,style,name,dataRef,interactive,legendEncode,children);if(spec.zindex)group.zindex=spec.zindex;// parse legend specification
return parseMark(group,scope);};function sizeExpression(spec,scope,marks){var fontSize=getValue$1(scope,marks[1].encode,'fontSize',GuideLabelStyle);if(spec.size){return{$expr:'Math.max(Math.ceil(Math.sqrt(_.scale(datum))),'+fontSize+')'};}else{var symbolSize=getValue$1(scope,marks[0].encode,'size');return Math.max(Math.ceil(Math.sqrt(symbolSize)),fontSize);}}function legendEnter(config){var enter={},count=addEncode(enter,'fill',config.fillColor)+addEncode(enter,'stroke',config.strokeColor)+addEncode(enter,'strokeWidth',config.strokeWidth)+addEncode(enter,'strokeDash',config.strokeDash)+addEncode(enter,'cornerRadius',config.cornerRadius);return count?enter:undefined;}function getValue$1(scope,encode,name,style){var v=encode&&(encode.update&&encode.update[name]||encode.enter&&encode.enter[name]);return+(v?v.value// TODO support signal?
:style&&(v=scope.config.style[style])&&v[name]);}var parseTitle=function parseTitle(spec,scope){spec=isString(spec)?{text:spec}:spec;var config=scope.config.title,encode=extend({},spec.encode),datum,dataRef,title;// single-element data source for group title
datum={orient:spec.orient!=null?spec.orient:config.orient};dataRef=ref(scope.add(Collect$1(null,[datum])));// build title specification
encode.name=spec.name;encode.interactive=spec.interactive;title=buildTitle(spec,config,encode,dataRef);if(spec.zindex)title.zindex=spec.zindex;// parse title specification
return parseMark(title,scope);};function buildTitle(spec,config,userEncode,dataRef){var title=spec.text,orient=spec.orient||config.orient,anchor=spec.anchor||config.anchor,sign=orient===Left$1||orient===Top$1?-1:1,horizontal=orient===Top$1||orient===Bottom$1,extent={group:horizontal?'width':'height'},encode={},enter,update,pos,opp,mult,align;encode.enter=enter={opacity:{value:0}};addEncode(enter,'fill',config.color);addEncode(enter,'font',config.font);addEncode(enter,'fontSize',config.fontSize);addEncode(enter,'fontWeight',config.fontWeight);encode.exit={opacity:{value:0}};encode.update=update={opacity:{value:1},text:isObject(title)?title:{value:title+''},offset:encoder((spec.offset!=null?spec.offset:config.offset)||0)};if(anchor==='start'){mult=0;align='left';}else{if(anchor==='end'){mult=1;align='right';}else{mult=0.5;align='center';}}pos={field:extent,mult:mult};opp=sign<0?{value:0}:horizontal?{field:{group:'height'}}:{field:{group:'width'}};if(horizontal){update.x=pos;update.y=opp;update.angle={value:0};update.baseline={value:orient===Top$1?'bottom':'top'};}else{update.x=opp;update.y=pos;update.angle={value:sign*90};update.baseline={value:'bottom'};}update.align={value:align};update.limit={field:extent};addEncode(update,'angle',config.angle);addEncode(update,'baseline',config.baseline);addEncode(update,'limit',config.limit);return guideMark(TextMark,TitleRole$1,spec.style||GroupTitleStyle,null,dataRef,encode,userEncode);}function parseData$1(data,scope){var transforms=[];if(data.transform){data.transform.forEach(function(tx){transforms.push(parseTransform(tx,scope));});}if(data.on){data.on.forEach(function(on){parseTrigger(on,scope,data.name);});}scope.addDataPipeline(data.name,analyze(data,scope,transforms));}/**
 * Analyze a data pipeline, add needed operators.
 */function analyze(data,scope,ops){// POSSIBLE TODOs:
// - error checking for treesource on tree operators (BUT what if tree is upstream?)
// - this is local analysis, perhaps some tasks better for global analysis...
var output=[],source=null,modify=false,generate=false,upstream,i,n,t,m;if(data.values){// hard-wired input data set
output.push(source=collect({$ingest:data.values,$format:data.format}));}else if(data.url){// load data from external source
output.push(source=collect({$request:data.url,$format:data.format}));}else if(data.source){// derives from one or more other data sets
source=upstream=array(data.source).map(function(d){return ref(scope.getData(d).output);});output.push(null);// populate later
}// scan data transforms, add collectors as needed
for(i=0,n=ops.length;i<n;++i){t=ops[i];m=t.metadata;if(!source&&!m.source){output.push(source=collect());}output.push(t);if(m.generates)generate=true;if(m.modifies&&!generate)modify=true;if(m.source)source=t;else if(m.changes)source=null;}if(upstream){n=upstream.length-1;output[0]=Relay$1({derive:modify,pulse:n?upstream:upstream[0]});if(modify||n){// collect derived and multi-pulse tuples
output.splice(1,0,collect());}}if(!source)output.push(collect());output.push(Sieve$1({}));return output;}function collect(values){var s=Collect$1({},values);s.metadata={source:true};return s;}var axisConfig=function axisConfig(spec,scope){var config=scope.config,orient=spec.orient,xy=orient===Top$1||orient===Bottom$1?config.axisX:config.axisY,or=config['axis'+orient[0].toUpperCase()+orient.slice(1)],band=scope.scaleType(spec.scale)==='band'&&config.axisBand;return xy||or||band?extend({},config.axis,xy,or,band):config.axis;};var axisDomain=function axisDomain(spec,config,userEncode,dataRef){var orient=spec.orient,zero={value:0},encode={},enter,update,u,u2,v;encode.enter=enter={opacity:zero};addEncode(enter,'stroke',config.domainColor);addEncode(enter,'strokeWidth',config.domainWidth);encode.exit={opacity:zero};encode.update=update={opacity:{value:1}};if(orient===Top$1||orient===Bottom$1){u='x';v='y';}else{u='y';v='x';}u2=u+'2';enter[v]=zero;update[u]=enter[u]=position(spec,0);update[u2]=enter[u2]=position(spec,1);return guideMark(RuleMark,AxisDomainRole,null,null,dataRef,encode,userEncode);};function position(spec,pos){return{scale:spec.scale,range:pos};}var axisGrid=function axisGrid(spec,config,userEncode,dataRef){var orient=spec.orient,vscale=spec.gridScale,sign=orient===Left$1||orient===Top$1?1:-1,offset=sign*spec.offset||0,zero={value:0},encode={},enter,exit,update,tickPos,u,v,v2,s;encode.enter=enter={opacity:zero};addEncode(enter,'stroke',config.gridColor);addEncode(enter,'strokeWidth',config.gridWidth);addEncode(enter,'strokeDash',config.gridDash);encode.exit=exit={opacity:zero};encode.update=update={};addEncode(update,'opacity',config.gridOpacity);tickPos={scale:spec.scale,field:Value,band:config.bandPosition,round:config.tickRound,extra:config.tickExtra,offset:config.tickOffset};if(orient===Top$1||orient===Bottom$1){u='x';v='y';s='height';}else{u='y';v='x';s='width';}v2=v+'2';update[u]=enter[u]=exit[u]=tickPos;if(vscale){enter[v]={scale:vscale,range:0,mult:sign,offset:offset};update[v2]=enter[v2]={scale:vscale,range:1,mult:sign,offset:offset};}else{enter[v]={value:offset};update[v2]=enter[v2]={signal:s,mult:sign,offset:offset};}return guideMark(RuleMark,AxisGridRole,null,Value,dataRef,encode,userEncode);};var axisTicks=function axisTicks(spec,config,userEncode,dataRef,size){var orient=spec.orient,sign=orient===Left$1||orient===Top$1?-1:1,zero={value:0},encode={},enter,exit,update,tickSize,tickPos;encode.enter=enter={opacity:zero};addEncode(enter,'stroke',config.tickColor);addEncode(enter,'strokeWidth',config.tickWidth);encode.exit=exit={opacity:zero};encode.update=update={opacity:{value:1}};tickSize=encoder(size);tickSize.mult=sign;tickPos={scale:spec.scale,field:Value,band:config.bandPosition,round:config.tickRound,extra:config.tickExtra,offset:config.tickOffset};if(orient===Top$1||orient===Bottom$1){update.y=enter.y=zero;update.y2=enter.y2=tickSize;update.x=enter.x=exit.x=tickPos;}else{update.x=enter.x=zero;update.x2=enter.x2=tickSize;update.y=enter.y=exit.y=tickPos;}return guideMark(RuleMark,AxisTickRole,null,Value,dataRef,encode,userEncode);};var axisLabels=function axisLabels(spec,config,userEncode,dataRef,size){var orient=spec.orient,overlap=spec.labelOverlap,sign=orient===Left$1||orient===Top$1?-1:1,pad=spec.labelPadding!=null?spec.labelPadding:config.labelPadding,zero={value:0},encode={},enter,exit,update,tickSize,tickPos;encode.enter=enter={opacity:zero};addEncode(enter,'angle',config.labelAngle);addEncode(enter,'fill',config.labelColor);addEncode(enter,'font',config.labelFont);addEncode(enter,'fontSize',config.labelFontSize);addEncode(enter,'limit',config.labelLimit);encode.exit=exit={opacity:zero};encode.update=update={opacity:{value:1},text:{field:Label}};tickSize=encoder(size);tickSize.mult=sign;tickSize.offset=encoder(pad);tickSize.offset.mult=sign;tickPos={scale:spec.scale,field:Value,band:0.5,offset:config.tickOffset};if(orient===Top$1||orient===Bottom$1){update.y=enter.y=tickSize;update.x=enter.x=exit.x=tickPos;addEncode(update,'align','center');addEncode(update,'baseline',orient===Top$1?'bottom':'top');}else{update.x=enter.x=tickSize;update.y=enter.y=exit.y=tickPos;addEncode(update,'align',orient===Right$1?'left':'right');addEncode(update,'baseline','middle');}spec=guideMark(TextMark,AxisLabelRole,GuideLabelStyle,Value,dataRef,encode,userEncode);spec.overlap=overlap||config.labelOverlap;return spec;};var axisTitle=function axisTitle(spec,config,userEncode,dataRef){var orient=spec.orient,title=spec.title,sign=orient===Left$1||orient===Top$1?-1:1,horizontal=orient===Top$1||orient===Bottom$1,encode={},enter,update,titlePos;encode.enter=enter={opacity:{value:0}};addEncode(enter,'align',config.titleAlign);addEncode(enter,'fill',config.titleColor);addEncode(enter,'font',config.titleFont);addEncode(enter,'fontSize',config.titleFontSize);addEncode(enter,'fontWeight',config.titleFontWeight);addEncode(enter,'limit',config.titleLimit);encode.exit={opacity:{value:0}};encode.update=update={opacity:{value:1},text:title&&title.signal?{signal:title.signal}:{value:title+''}};titlePos={scale:spec.scale,range:0.5};if(horizontal){update.x=titlePos;update.angle={value:0};update.baseline={value:orient===Top$1?'bottom':'top'};}else{update.y=titlePos;update.angle={value:sign*90};update.baseline={value:'bottom'};}addEncode(update,'angle',config.titleAngle);addEncode(update,'baseline',config.titleBaseline);!addEncode(update,'x',config.titleX)&&horizontal&&!has('x',userEncode)&&(encode.enter.auto={value:true});!addEncode(update,'y',config.titleY)&&!horizontal&&!has('y',userEncode)&&(encode.enter.auto={value:true});return guideMark(TextMark,AxisTitleRole,GuideTitleStyle,null,dataRef,encode,userEncode);};var parseAxis=function parseAxis(spec,scope){var config=axisConfig(spec,scope),encode=spec.encode||{},axisEncode=encode.axis||{},name=axisEncode.name||undefined,interactive=!!axisEncode.interactive,style=axisEncode.style,datum,dataRef,ticksRef,size,group,children;// single-element data source for axis group
datum={orient:spec.orient,ticks:!!value(spec.ticks,config.ticks),labels:!!value(spec.labels,config.labels),grid:!!value(spec.grid,config.grid),domain:!!value(spec.domain,config.domain),title:!!value(spec.title,false)};dataRef=ref(scope.add(Collect$1({},[datum])));// encoding properties for axis group item
axisEncode=extendEncode({update:{range:{signal:'abs(span(range("'+spec.scale+'")))'},offset:encoder(value(spec.offset,0)),position:encoder(value(spec.position,0)),titlePadding:encoder(value(spec.titlePadding,config.titlePadding)),minExtent:encoder(value(spec.minExtent,config.minExtent)),maxExtent:encoder(value(spec.maxExtent,config.maxExtent))}},encode.axis,Skip);// data source for axis ticks
ticksRef=ref(scope.add(AxisTicks$1({scale:scope.scaleRef(spec.scale),extra:config.tickExtra,count:scope.objectProperty(spec.tickCount),values:scope.objectProperty(spec.values),formatSpecifier:scope.property(spec.format)})));// generate axis marks
children=[];// include axis gridlines if requested
if(datum.grid){children.push(axisGrid(spec,config,encode.grid,ticksRef));}// include axis ticks if requested
if(datum.ticks){size=value(spec.tickSize,config.tickSize);children.push(axisTicks(spec,config,encode.ticks,ticksRef,size));}// include axis labels if requested
if(datum.labels){size=datum.ticks?size:0;children.push(axisLabels(spec,config,encode.labels,ticksRef,size));}// include axis domain path if requested
if(datum.domain){children.push(axisDomain(spec,config,encode.domain,dataRef));}// include axis title if defined
if(datum.title){children.push(axisTitle(spec,config,encode.title,dataRef));}// build axis specification
group=guideGroup(AxisRole$2,style,name,dataRef,interactive,axisEncode,children);if(spec.zindex)group.zindex=spec.zindex;// parse axis specification
return parseMark(group,scope);};var parseSpec=function parseSpec(spec,scope,preprocessed){var signals=array(spec.signals),scales=array(spec.scales);if(!preprocessed)signals.forEach(function(_){parseSignal(_,scope);});array(spec.projections).forEach(function(_){parseProjection(_,scope);});scales.forEach(function(_){initScale(_,scope);});array(spec.data).forEach(function(_){parseData$1(_,scope);});scales.forEach(function(_){parseScale(_,scope);});signals.forEach(function(_){parseSignalUpdates(_,scope);});array(spec.axes).forEach(function(_){parseAxis(_,scope);});array(spec.marks).forEach(function(_){parseMark(_,scope);});array(spec.legends).forEach(function(_){parseLegend(_,scope);});if(spec.title){parseTitle(spec.title,scope);}scope.parseLambdas();return scope;};var defined=toSet(['width','height','padding','autosize']);function parseView(spec,scope){var config=scope.config,op,input,encode,parent,root;scope.background=spec.background||config.background;scope.eventConfig=config.events;root=ref(scope.root=scope.add(operator()));scope.addSignal('width',spec.width||-1);scope.addSignal('height',spec.height||-1);scope.addSignal('padding',parsePadding(spec.padding,config));scope.addSignal('autosize',parseAutosize(spec.autosize,config));array(spec.signals).forEach(function(_){if(!defined[_.name])parseSignal(_,scope);});// Store root group item
input=scope.add(Collect$1());// Encode root group item
encode=extendEncode({enter:{x:{value:0},y:{value:0}},update:{width:{signal:'width'},height:{signal:'height'}}},spec.encode);encode=scope.add(Encode$1(encoders(encode,GroupMark,FrameRole$1,spec.style,scope,{pulse:ref(input)})));// Perform view layout
parent=scope.add(ViewLayout$1({layout:scope.objectProperty(spec.layout),legendMargin:config.legendMargin,autosize:scope.signalRef('autosize'),mark:root,pulse:ref(encode)}));scope.operators.pop();// Parse remainder of specification
scope.pushState(ref(encode),ref(parent),null);parseSpec(spec,scope,true);scope.operators.push(parent);// Bound / render / sieve root item
op=scope.add(Bound$1({mark:root,pulse:ref(parent)}));op=scope.add(Render$1({pulse:ref(op)}));op=scope.add(Sieve$1({pulse:ref(op)}));// Track metadata for root item
scope.addData('root',new DataScope(scope,input,input,op));return scope;}function Scope(config){this.config=config;this.bindings=[];this.field={};this.signals={};this.lambdas={};this.scales={};this.events={};this.data={};this.streams=[];this.updates=[];this.operators=[];this.background=null;this.eventConfig=null;this._id=0;this._subid=0;this._nextsub=[0];this._parent=[];this._encode=[];this._lookup=[];this._markpath=[];}function Subscope(scope){this.config=scope.config;this.field=Object.create(scope.field);this.signals=Object.create(scope.signals);this.lambdas=Object.create(scope.lambdas);this.scales=Object.create(scope.scales);this.events=Object.create(scope.events);this.data=Object.create(scope.data);this.streams=[];this.updates=[];this.operators=[];this._id=0;this._subid=++scope._nextsub[0];this._nextsub=scope._nextsub;this._parent=scope._parent.slice();this._encode=scope._encode.slice();this._lookup=scope._lookup.slice();this._markpath=scope._markpath;}var prototype$82=Scope.prototype=Subscope.prototype;// ----
prototype$82.fork=function(){return new Subscope(this);};prototype$82.toRuntime=function(){this.finish();return{background:this.background,operators:this.operators,streams:this.streams,updates:this.updates,bindings:this.bindings,eventConfig:this.eventConfig};};prototype$82.id=function(){return(this._subid?this._subid+':':0)+this._id++;};prototype$82.add=function(op){this.operators.push(op);op.id=this.id();// if pre-registration references exist, resolve them now
if(op.refs){op.refs.forEach(function(ref$$1){ref$$1.$ref=op.id;});op.refs=null;}return op;};prototype$82.proxy=function(op){var vref=op instanceof Entry?ref(op):op;return this.add(Proxy$1({value:vref}));};prototype$82.addStream=function(stream){this.streams.push(stream);stream.id=this.id();return stream;};prototype$82.addUpdate=function(update){this.updates.push(update);return update;};// Apply metadata
prototype$82.finish=function(){var name,ds;// annotate root
if(this.root)this.root.root=true;// annotate signals
for(name in this.signals){this.signals[name].signal=name;}// annotate scales
for(name in this.scales){this.scales[name].scale=name;}// annotate data sets
function annotate(op,name,type){var data,list;if(op){data=op.data||(op.data={});list=data[name]||(data[name]=[]);list.push(type);}}for(name in this.data){ds=this.data[name];annotate(ds.input,name,'input');annotate(ds.output,name,'output');annotate(ds.values,name,'values');for(var field$$1 in ds.index){annotate(ds.index[field$$1],name,'index:'+field$$1);}}return this;};// ----
prototype$82.pushState=function(encode,parent,lookup){this._encode.push(ref(this.add(Sieve$1({pulse:encode}))));this._parent.push(parent);this._lookup.push(lookup?ref(this.proxy(lookup)):null);this._markpath.push(-1);};prototype$82.popState=function(){this._encode.pop();this._parent.pop();this._lookup.pop();this._markpath.pop();};prototype$82.parent=function(){return peek(this._parent);};prototype$82.encode=function(){return peek(this._encode);};prototype$82.lookup=function(){return peek(this._lookup);};prototype$82.markpath=function(){var p=this._markpath;return++p[p.length-1];};// ----
prototype$82.fieldRef=function(field$$1,name){if(isString(field$$1))return fieldRef$1(field$$1,name);if(!field$$1.signal){error$1('Unsupported field reference: '+$(field$$1));}var s=field$$1.signal,f=this.field[s],params;if(!f){// TODO: replace with update signalRef?
params={name:this.signalRef(s)};if(name)params.as=name;this.field[s]=f=ref(this.add(Field$1(params)));}return f;};prototype$82.compareRef=function(cmp){function check(_){if(isSignal(_)){signal=true;return ref(sig[_.signal]);}else{return _;}}var sig=this.signals,signal=false,fields=array(cmp.field).map(check),orders=array(cmp.order).map(check);return signal?ref(this.add(Compare$1({fields:fields,orders:orders}))):compareRef(fields,orders);};prototype$82.keyRef=function(fields){function check(_){if(isSignal(_)){signal=true;return ref(sig[_.signal]);}else{return _;}}var sig=this.signals,signal=false;fields=array(fields).map(check);return signal?ref(this.add(Key$1({fields:fields}))):keyRef(fields);};prototype$82.sortRef=function(sort){if(!sort)return sort;// including id ensures stable sorting
var a=[aggrField(sort.op,sort.field),tupleidRef],o=sort.order||Ascending;return o.signal?ref(this.add(Compare$1({fields:a,orders:[o=this.signalRef(o.signal),o]}))):compareRef(a,[o,o]);};// ----
prototype$82.event=function(source,type){var key$$1=source+':'+type;if(!this.events[key$$1]){var id$$1=this.id();this.streams.push({id:id$$1,source:source,type:type});this.events[key$$1]=id$$1;}return this.events[key$$1];};// ----
prototype$82.addSignal=function(name,value$$1){if(this.signals.hasOwnProperty(name)){error$1('Duplicate signal name: '+$(name));}var op=value$$1 instanceof Entry?value$$1:this.add(operator(value$$1));return this.signals[name]=op;};prototype$82.getSignal=function(name){if(!this.signals[name]){error$1('Unrecognized signal name: '+$(name));}return this.signals[name];};prototype$82.signalRef=function(s){if(this.signals[s]){return ref(this.signals[s]);}else if(!this.lambdas.hasOwnProperty(s)){this.lambdas[s]=this.add(operator(null));}return ref(this.lambdas[s]);};prototype$82.parseLambdas=function(){var code=Object.keys(this.lambdas);for(var i=0,n=code.length;i<n;++i){var s=code[i],e=parseExpression(s,this),op=this.lambdas[s];op.params=e.$params;op.update=e.$expr;}};prototype$82.property=function(spec){return spec&&spec.signal?this.signalRef(spec.signal):spec;};prototype$82.objectProperty=function(spec){return!spec||!isObject(spec)?spec:this.signalRef(spec.signal||propertyLambda(spec));};function propertyLambda(spec){return(isArray(spec)?arrayLambda:objectLambda)(spec);}function arrayLambda(array$$1){var code='[',i=0,n=array$$1.length,value$$1;for(;i<n;++i){value$$1=array$$1[i];code+=(i>0?',':'')+(isObject(value$$1)?value$$1.signal||propertyLambda(value$$1):$(value$$1));}return code+']';}function objectLambda(obj){var code='{',i=0,key$$1,value$$1;for(key$$1 in obj){value$$1=obj[key$$1];code+=(++i>1?',':'')+$(key$$1)+':'+(isObject(value$$1)?value$$1.signal||propertyLambda(value$$1):$(value$$1));}return code+'}';}prototype$82.addBinding=function(name,bind){if(!this.bindings){error$1('Nested signals do not support binding: '+$(name));}this.bindings.push(extend({signal:name},bind));};// ----
prototype$82.addScaleProj=function(name,transform){if(this.scales.hasOwnProperty(name)){error$1('Duplicate scale or projection name: '+$(name));}this.scales[name]=this.add(transform);};prototype$82.addScale=function(name,params){this.addScaleProj(name,Scale$1(params));};prototype$82.addProjection=function(name,params){this.addScaleProj(name,Projection$1(params));};prototype$82.getScale=function(name){if(!this.scales[name]){error$1('Unrecognized scale name: '+$(name));}return this.scales[name];};prototype$82.projectionRef=prototype$82.scaleRef=function(name){return ref(this.getScale(name));};prototype$82.projectionType=prototype$82.scaleType=function(name){return this.getScale(name).params.type;};// ----
prototype$82.addData=function(name,dataScope){if(this.data.hasOwnProperty(name)){error$1('Duplicate data set name: '+$(name));}return this.data[name]=dataScope;};prototype$82.getData=function(name){if(!this.data[name]){error$1('Undefined data set name: '+$(name));}return this.data[name];};prototype$82.addDataPipeline=function(name,entries){if(this.data.hasOwnProperty(name)){error$1('Duplicate data set name: '+$(name));}return this.addData(name,DataScope.fromEntries(this,entries));};var defaults=function defaults(configs){var output=defaults$1();(configs||[]).forEach(function(config){var key$$1;if(config)for(key$$1 in config){output[key$$1]=isObject(output[key$$1])?extend(output[key$$1],config[key$$1]):output[key$$1]=config[key$$1];}});return output;};var defaultFont='sans-serif';var defaultSymbolSize=30;var defaultStrokeWidth=2;var defaultColor='#4c78a8';var black="#000";var gray='#888';var lightGray='#ddd';/**
 * Standard configuration defaults for Vega specification parsing.
 * Users can provide their own (sub-)set of these default values
 * by passing in a config object to the top-level parse method.
 */function defaults$1(){return{// default padding around visualization
padding:0,// default for automatic sizing; options: "none", "pad", "fit"
// or provide an object (e.g., {"type": "pad", "resize": true})
autosize:'pad',// default view background color
// covers the entire view component
background:null,// default event handling configuration
// preventDefault for view-sourced event types except 'wheel'
events:{defaults:{allow:['wheel']}},// defaults for top-level group marks
// accepts mark properties (fill, stroke, etc)
// covers the data rectangle within group width/height
group:null,// defaults for basic mark types
// each subset accepts mark properties (fill, stroke, etc)
mark:null,arc:{fill:defaultColor},area:{fill:defaultColor},image:null,line:{stroke:defaultColor,strokeWidth:defaultStrokeWidth},path:{stroke:defaultColor},rect:{fill:defaultColor},rule:{stroke:black},shape:{stroke:defaultColor},symbol:{fill:defaultColor,size:64},text:{fill:black,font:defaultFont,fontSize:11},// style definitions
style:{// axis & legend labels
"guide-label":{fill:black,font:defaultFont,fontSize:10},// axis & legend titles
"guide-title":{fill:black,font:defaultFont,fontSize:11,fontWeight:'bold'},// headers, including chart title
"group-title":{fill:black,font:defaultFont,fontSize:13,fontWeight:'bold'},// defaults for styled point marks in Vega-Lite
point:{size:defaultSymbolSize,strokeWidth:defaultStrokeWidth,shape:'circle'},circle:{size:defaultSymbolSize,strokeWidth:defaultStrokeWidth},square:{size:defaultSymbolSize,strokeWidth:defaultStrokeWidth,shape:'square'},// defaults for styled group marks in Vega-Lite
cell:{fill:'transparent',stroke:lightGray}},// defaults for axes
axis:{minExtent:0,maxExtent:200,bandPosition:0.5,domain:true,domainWidth:1,domainColor:gray,grid:false,gridWidth:1,gridColor:lightGray,gridDash:[],gridOpacity:1,labels:true,labelAngle:0,labelLimit:180,labelPadding:2,ticks:true,tickColor:gray,tickOffset:0,tickRound:true,tickSize:5,tickWidth:1,titleAlign:'center',titlePadding:2},// correction for centering bias
axisBand:{tickOffset:-1},// defaults for legends
legend:{orient:'right',offset:18,padding:0,entryPadding:5,titlePadding:5,gradientWidth:100,gradientHeight:20,gradientStrokeColor:lightGray,gradientStrokeWidth:0,gradientLabelBaseline:'top',gradientLabelOffset:2,labelAlign:'left',labelBaseline:'middle',labelOffset:8,labelLimit:160,symbolType:'circle',symbolSize:100,symbolFillColor:'transparent',symbolStrokeColor:gray,symbolStrokeWidth:1.5,titleAlign:'left',titleBaseline:'top',titleLimit:180},// defaults for group title
title:{orient:'top',anchor:'middle',offset:2},// defaults for scale ranges
range:{category:{scheme:'tableau10'},ordinal:{scheme:'blues',extent:[0.2,1]},heatmap:{scheme:'viridis'},ramp:{scheme:'blues',extent:[0.2,1]},diverging:{scheme:'blueorange'},symbol:['circle','square','triangle-up','cross','diamond','triangle-right','triangle-down','triangle-left']}};}var parse$2=function parse$2(spec,config){if(!isObject(spec))error$1('Input Vega specification must be an object.');return parseView(spec,new Scope(defaults([config,spec.config]))).toRuntime();};/**
 * Parse an expression given the argument signature and body code.
 */function expression$1(args,code,ctx){// wrap code in return statement if expression does not terminate
if(code[code.length-1]!==';'){code='return('+code+');';}var fn=Function.apply(null,args.concat(code));return ctx&&ctx.functions?fn.bind(ctx.functions):fn;}/**
 * Parse an expression used to update an operator value.
 */function operatorExpression(code,ctx){return expression$1(['_'],code,ctx);}/**
 * Parse an expression provided as an operator parameter value.
 */function parameterExpression(code,ctx){return expression$1(['datum','_'],code,ctx);}/**
 * Parse an expression applied to an event stream.
 */function eventExpression(code,ctx){return expression$1(['event'],code,ctx);}/**
 * Parse an expression used to handle an event-driven operator update.
 */function handlerExpression(code,ctx){return expression$1(['_','event'],code,ctx);}/**
 * Parse an expression that performs visual encoding.
 */function encodeExpression(code,ctx){return expression$1(['item','_'],code,ctx);}/**
 * Parse a set of operator parameters.
 */function parseParameters$1(spec,ctx,params){params=params||{};var key$$1,value;for(key$$1 in spec){value=spec[key$$1];if(value&&value.$expr&&value.$params){// if expression, parse its parameters
parseParameters$1(value.$params,ctx,params);}params[key$$1]=isArray(value)?value.map(function(v){return parseParameter$2(v,ctx);}):parseParameter$2(value,ctx);}return params;}/**
 * Parse a single parameter.
 */function parseParameter$2(spec,ctx){if(!spec||!isObject(spec))return spec;for(var i=0,n=PARSERS.length,p;i<n;++i){p=PARSERS[i];if(spec.hasOwnProperty(p.key)){return p.parse(spec,ctx);}}return spec;}/** Reference parsers. */var PARSERS=[{key:'$ref',parse:getOperator},{key:'$key',parse:getKey},{key:'$expr',parse:getExpression},{key:'$field',parse:getField$1},{key:'$encode',parse:getEncode},{key:'$compare',parse:getCompare},{key:'$context',parse:getContext},{key:'$subflow',parse:getSubflow},{key:'$tupleid',parse:getTupleId}];/**
 * Resolve an operator reference.
 */function getOperator(_,ctx){return ctx.get(_.$ref)||error$1('Operator not defined: '+_.$ref);}/**
 * Resolve an expression reference.
 */function getExpression(_,ctx){var k='e:'+_.$expr;return ctx.fn[k]||(ctx.fn[k]=accessor(parameterExpression(_.$expr,ctx),_.$fields,_.$name));}/**
 * Resolve a key accessor reference.
 */function getKey(_,ctx){var k='k:'+_.$key;return ctx.fn[k]||(ctx.fn[k]=key(_.$key));}/**
 * Resolve a field accessor reference.
 */function getField$1(_,ctx){if(!_.$field)return null;var k='f:'+_.$field+'_'+_.$name;return ctx.fn[k]||(ctx.fn[k]=field(_.$field,_.$name));}/**
 * Resolve a comparator function reference.
 */function getCompare(_,ctx){var k='c:'+_.$compare+'_'+_.$order,c=array(_.$compare).map(function(_){return _&&_.$tupleid?tupleid:_;});return ctx.fn[k]||(ctx.fn[k]=compare(c,_.$order));}/**
 * Resolve an encode operator reference.
 */function getEncode(_,ctx){var spec=_.$encode,encode={},name,enc;for(name in spec){enc=spec[name];encode[name]=accessor(encodeExpression(enc.$expr,ctx),enc.$fields);encode[name].output=enc.$output;}return encode;}/**
 * Resolve an context reference.
 */function getContext(_,ctx){return ctx;}/**
 * Resolve a recursive subflow specification.
 */function getSubflow(_,ctx){var spec=_.$subflow;return function(dataflow,key$$1,parent){var subctx=parseDataflow(spec,ctx.fork()),op=subctx.get(spec.operators[0].id),p=subctx.signals.parent;if(p)p.set(parent);return op;};}/**
 * Resolve a tuple id reference.
 */function getTupleId(){return tupleid;}function canonicalType(type){return(type+'').toLowerCase();}function isOperator(type){return canonicalType(type)==='operator';}function isCollect(type){return canonicalType(type)==='collect';}/**
 * Parse a dataflow operator.
 */var parseOperator=function parseOperator(spec,ctx){if(isOperator(spec.type)||!spec.type){ctx.operator(spec,spec.update?operatorExpression(spec.update,ctx):null);}else{ctx.transform(spec,spec.type);}};/**
 * Parse and assign operator parameters.
 */function parseOperatorParameters(spec,ctx){var op,params;if(spec.params){if(!(op=ctx.get(spec.id))){error$1('Invalid operator id: '+spec.id);}params=parseParameters$1(spec.params,ctx);ctx.dataflow.connect(op,op.parameters(params));}}/**
 * Parse an event stream specification.
 */var parseStream$3=function parseStream$3(spec,ctx){var filter=spec.filter!=null?eventExpression(spec.filter,ctx):undefined,stream=spec.stream!=null?ctx.get(spec.stream):undefined,args;if(spec.source){stream=ctx.events(spec.source,spec.type,filter);}else if(spec.merge){args=spec.merge.map(ctx.get.bind(ctx));stream=args[0].merge.apply(args[0],args.slice(1));}if(spec.between){args=spec.between.map(ctx.get.bind(ctx));stream=stream.between(args[0],args[1]);}if(spec.filter){stream=stream.filter(filter);}if(spec.throttle!=null){stream=stream.throttle(+spec.throttle);}if(spec.debounce!=null){stream=stream.debounce(+spec.debounce);}if(stream==null){error$1('Invalid stream definition: '+JSON.stringify(spec));}if(spec.consume)stream.consume(true);ctx.stream(spec,stream);};/**
 * Parse an event-driven operator update.
 */var parseUpdate$1=function parseUpdate$1(spec,ctx){var source=ctx.get(spec.source),target=null,update=spec.update,params=undefined;if(!source)error$1('Source not defined: '+spec.source);if(spec.target&&spec.target.$expr){target=eventExpression(spec.target.$expr,ctx);}else{target=ctx.get(spec.target);}if(update&&update.$expr){if(update.$params){params=parseParameters$1(update.$params,ctx);}update=handlerExpression(update.$expr,ctx);}ctx.update(spec,source,target,update,params);};/**
 * Parse a serialized dataflow specification.
 */var parseDataflow=function parseDataflow(spec,ctx){var operators=spec.operators||[];// parse background
if(spec.background){ctx.background=spec.background;}// parse event configuration
if(spec.eventConfig){ctx.eventConfig=spec.eventConfig;}// parse operators
operators.forEach(function(entry){parseOperator(entry,ctx);});// parse operator parameters
operators.forEach(function(entry){parseOperatorParameters(entry,ctx);});// parse streams
(spec.streams||[]).forEach(function(entry){parseStream$3(entry,ctx);});// parse updates
(spec.updates||[]).forEach(function(entry){parseUpdate$1(entry,ctx);});return ctx.resolve();};var SKIP$3={skip:true};function getState(options){var ctx=this,state={};if(options.signals){var signals=state.signals={};Object.keys(ctx.signals).forEach(function(key$$1){var op=ctx.signals[key$$1];if(options.signals(key$$1,op)){signals[key$$1]=op.value;}});}if(options.data){var data=state.data={};Object.keys(ctx.data).forEach(function(key$$1){var dataset=ctx.data[key$$1];if(options.data(key$$1,dataset)){data[key$$1]=dataset.input.value;}});}if(ctx.subcontext&&options.recurse!==false){state.subcontext=ctx.subcontext.map(function(ctx){return ctx.getState(options);});}return state;}function setState(state){var ctx=this,df=ctx.dataflow,data=state.data,signals=state.signals;Object.keys(signals||{}).forEach(function(key$$1){df.update(ctx.signals[key$$1],signals[key$$1],SKIP$3);});Object.keys(data||{}).forEach(function(key$$1){df.pulse(ctx.data[key$$1].input,df.changeset().remove(truthy).insert(data[key$$1]));});(state.subcontext||[]).forEach(function(substate,i){var subctx=ctx.subcontext[i];if(subctx)subctx.setState(substate);});}/**
 * Context objects store the current parse state.
 * Enables lookup of parsed operators, event streams, accessors, etc.
 * Provides a 'fork' method for creating child contexts for subflows.
 */var context$2=function context$2(df,transforms,functions){return new Context(df,transforms,functions);};function Context(df,transforms,functions){this.dataflow=df;this.transforms=transforms;this.events=df.events.bind(df);this.signals={};this.scales={};this.nodes={};this.data={};this.fn={};if(functions){this.functions=Object.create(functions);this.functions.context=this;}}function ContextFork(ctx){this.dataflow=ctx.dataflow;this.transforms=ctx.transforms;this.functions=ctx.functions;this.events=ctx.events;this.signals=Object.create(ctx.signals);this.scales=Object.create(ctx.scales);this.nodes=Object.create(ctx.nodes);this.data=Object.create(ctx.data);this.fn=Object.create(ctx.fn);if(ctx.functions){this.functions=Object.create(ctx.functions);this.functions.context=this;}}Context.prototype=ContextFork.prototype={fork:function fork(){var ctx=new ContextFork(this);(this.subcontext||(this.subcontext=[])).push(ctx);return ctx;},get:function get(id){return this.nodes[id];},set:function set(id,node){return this.nodes[id]=node;},add:function add(spec,op){var ctx=this,df=ctx.dataflow,data;ctx.set(spec.id,op);if(isCollect(spec.type)&&(data=spec.value)){if(data.$ingest){df.ingest(op,data.$ingest,data.$format);}else if(data.$request){df.request(op,data.$request,data.$format);}else{df.pulse(op,df.changeset().insert(data));}}if(spec.root){ctx.root=op;}if(spec.parent){var p=ctx.get(spec.parent.$ref);if(p){df.connect(p,[op]);op.targets().add(p);}else{(ctx.unresolved=ctx.unresolved||[]).push(function(){p=ctx.get(spec.parent.$ref);df.connect(p,[op]);op.targets().add(p);});}}if(spec.signal){ctx.signals[spec.signal]=op;}if(spec.scale){ctx.scales[spec.scale]=op;}if(spec.data){for(var name in spec.data){data=ctx.data[name]||(ctx.data[name]={});spec.data[name].forEach(function(role){data[role]=op;});}}},resolve:function resolve(){(this.unresolved||[]).forEach(function(fn){fn();});delete this.unresolved;return this;},operator:function operator(spec,update,params){this.add(spec,this.dataflow.add(spec.value,update,params,spec.react));},transform:function transform(spec,type,params){this.add(spec,this.dataflow.add(this.transforms[canonicalType(type)],params));},stream:function stream(spec,_stream){this.set(spec.id,_stream);},update:function update(spec,stream,target,_update,params){this.dataflow.on(stream,target,_update,params,spec.options);},getState:getState,setState:setState};var runtime=function runtime(view,spec,functions){var fn=functions||functionContext;return parseDataflow(spec,context$2(view,transforms,fn));};var Padding$1='padding';function viewWidth(view,width){var a=view.autosize(),p=view.padding();return width-(a&&a.contains===Padding$1?p.left+p.right:0);}function viewHeight(view,height){var a=view.autosize(),p=view.padding();return height-(a&&a.contains===Padding$1?p.top+p.bottom:0);}function initializeResize(view){var s=view._signals,w=s.width,h=s.height,p=s.padding;function resetSize(){view._autosize=view._resize=1;}// respond to width signal
view._resizeWidth=view.add(null,function(_){view._width=_.size;view._viewWidth=viewWidth(view,_.size);resetSize();},{size:w});// respond to height signal
view._resizeHeight=view.add(null,function(_){view._height=_.size;view._viewHeight=viewHeight(view,_.size);resetSize();},{size:h});// respond to padding signal
var resizePadding=view.add(null,resetSize,{pad:p});// set rank to run immediately after source signal
view._resizeWidth.rank=w.rank+1;view._resizeHeight.rank=h.rank+1;resizePadding.rank=p.rank+1;}function resizeView(viewWidth,viewHeight,width,height,origin,auto){this.runAfter(function(view){var rerun=0;// reset autosize flag
view._autosize=0;// width value changed: update signal, skip resize op
if(view.width()!==width){rerun=1;view.width(width);view._resizeWidth.skip(true);}// height value changed: update signal, skip resize op
if(view.height()!==height){rerun=1;view.height(height);view._resizeHeight.skip(true);}// view width changed: update view property, set resize flag
if(view._viewWidth!==viewWidth){view._resize=1;view._viewWidth=viewWidth;}// view height changed: update view property, set resize flag
if(view._viewHeight!==viewHeight){view._resize=1;view._viewHeight=viewHeight;}// origin changed: update view property, set resize flag
if(view._origin[0]!==origin[0]||view._origin[1]!==origin[1]){view._resize=1;view._origin=origin;}// run dataflow on width/height signal change
if(rerun)view.run('enter');if(auto)view.runAfter(function(){view.resize();});});}/**
 * Get the current view state, consisting of signal values and/or data sets.
 * @param {object} [options] - Options flags indicating which state to export.
 *   If unspecified, all signals and data sets will be exported.
 * @param {function(string, Operator):boolean} [options.signals] - Optional
 *   predicate function for testing if a signal should be included in the
 *   exported state. If unspecified, all signals will be included, except for
 *   those named 'parent' or those which refer to a Transform value.
 * @param {function(string, object):boolean} [options.data] - Optional
 *   predicate function for testing if a data set's input should be included
 *   in the exported state. If unspecified, all data sets that have been
 *   explicitly modified will be included.
 * @param {boolean} [options.recurse=true] - Flag indicating if the exported
 *   state should recursively include state from group mark sub-contexts.
 * @return {object} - An object containing the exported state values.
 */function getState$1(options){return this._runtime.getState(options||{data:dataTest,signals:signalTest,recurse:true});}function dataTest(name,data){return data.modified&&isArray(data.input.value)&&name.indexOf('_:vega:_');}function signalTest(name,op){return!(name==='parent'||op instanceof transforms.Proxy);}/**
 * Sets the current view state and updates the view by invoking run.
 * @param {object} state - A state object containing signal and/or
 *   data set values, following the format used by the getState method.
 * @return {View} - This view instance.
 */function setState$1(state){var view=this;view._trigger=false;view._runtime.setState(state);view.run().runAfter(function(){view._trigger=true;});return this;}/**
 * Create a new View instance from a Vega dataflow runtime specification.
 * The generated View will not immediately be ready for display. Callers
 * should also invoke the initialize method (e.g., to set the parent
 * DOM element in browser-based deployment) and then invoke the run
 * method to evaluate the dataflow graph. Rendering will automatically
 * be peformed upon dataflow runs.
 * @constructor
 * @param {object} spec - The Vega dataflow runtime specification.
 */function View(spec,options){var view=this;options=options||{};Dataflow.call(view);view.loader(options.loader||view._loader);view.logLevel(options.logLevel||0);view._el=null;view._renderType=options.renderer||RenderType.Canvas;view._scenegraph=new Scenegraph();var root=view._scenegraph.root;// initialize renderer, handler and event management
view._renderer=null;view._redraw=true;view._handler=new CanvasHandler().scene(root);view._eventListeners=[];view._preventDefault=false;// initialize dataflow graph
var ctx=runtime(view,spec,options.functions);view._runtime=ctx;view._signals=ctx.signals;view._bind=(spec.bindings||[]).map(function(_){return{state:null,param:extend({},_)};});// initialize scenegraph
if(ctx.root)ctx.root.set(root);root.source=ctx.data.root.input;view.pulse(ctx.data.root.input,view.changeset().insert(root.items));// initialize background color
view._background=ctx.background||null;// initialize event configuration
view._eventConfig=initializeEventConfig(ctx.eventConfig);// initialize view size
view._width=view.width();view._height=view.height();view._viewWidth=viewWidth(view,view._width);view._viewHeight=viewHeight(view,view._height);view._origin=[0,0];view._resize=0;view._autosize=1;initializeResize(view);// initialize cursor
cursor(view);}var prototype$80=inherits(View,Dataflow);// -- DATAFLOW / RENDERING ----
prototype$80.run=function(encode){Dataflow.prototype.run.call(this,encode);if(this._redraw||this._resize){try{this.render();}catch(e){this.error(e);}}return this;};prototype$80.render=function(){if(this._renderer){if(this._resize){this._resize=0;resizeRenderer(this);}this._renderer.render(this._scenegraph.root);}this._redraw=false;return this;};prototype$80.dirty=function(item){this._redraw=true;this._renderer&&this._renderer.dirty(item);};// -- GET / SET ----
prototype$80.container=function(){return this._el;};prototype$80.scenegraph=function(){return this._scenegraph;};function lookupSignal(view,name){return view._signals.hasOwnProperty(name)?view._signals[name]:error$1('Unrecognized signal name: '+$(name));}prototype$80.signal=function(name,value,options){var op=lookupSignal(this,name);return arguments.length===1?op.value:this.update(op,value,options);};prototype$80.background=function(_){if(arguments.length){this._background=_;this._resize=1;return this;}else{return this._background;}};prototype$80.width=function(_){return arguments.length?this.signal('width',_):this.signal('width');};prototype$80.height=function(_){return arguments.length?this.signal('height',_):this.signal('height');};prototype$80.padding=function(_){return arguments.length?this.signal('padding',_):this.signal('padding');};prototype$80.autosize=function(_){return arguments.length?this.signal('autosize',_):this.signal('autosize');};prototype$80.renderer=function(type){if(!arguments.length)return this._renderType;if(!renderModule(type))error$1('Unrecognized renderer type: '+type);if(type!==this._renderType){this._renderType=type;if(this._renderer){this._renderer=null;this.initialize(this._el);}}return this;};prototype$80.loader=function(loader){if(!arguments.length)return this._loader;if(loader!==this._loader){Dataflow.prototype.loader.call(this,loader);if(this._renderer){this._renderer=null;this.initialize(this._el);}}return this;};prototype$80.resize=function(){this._autosize=1;return this;};// -- SIZING ----
prototype$80._resizeView=resizeView;// -- EVENT HANDLING ----
prototype$80.addEventListener=function(type,handler){this._handler.on(type,handler);return this;};prototype$80.removeEventListener=function(type,handler){this._handler.off(type,handler);return this;};prototype$80.addSignalListener=function(name,handler){var s=lookupSignal(this,name),h=function h(){handler(name,s.value);};h.handler=handler;this.on(s,null,h);return this;};prototype$80.removeSignalListener=function(name,handler){var s=lookupSignal(this,name),t=s._targets||[],h=t.filter(function(op){var u=op._update;return u&&u.handler===handler;});if(h.length)t.remove(h[0]);return this;};prototype$80.preventDefault=function(_){if(arguments.length){this._preventDefault=_;return this;}else{return this._preventDefault;}};prototype$80.tooltipHandler=function(_){var h=this._handler;if(!arguments.length){return h.handleTooltip;}else{h.handleTooltip=_||Handler.prototype.handleTooltip;return this;}};prototype$80.events=events$1;prototype$80.finalize=finalize;prototype$80.hover=hover;// -- DATA ----
prototype$80.data=data;prototype$80.change=change;prototype$80.insert=insert;prototype$80.remove=remove;// -- INITIALIZATION ----
prototype$80.initialize=initialize$1;// -- HEADLESS RENDERING ----
prototype$80.toImageURL=renderToImageURL;prototype$80.toCanvas=renderToCanvas;prototype$80.toSVG=renderToSVG;// -- SAVE / RESTORE STATE ----
prototype$80.getState=getState$1;prototype$80.setState=setState$1;// -- Transforms -----
extend(transforms,tx,vtx,encode,geo,force,tree,voronoi,wordcloud,xf);exports.version=version;exports.Dataflow=Dataflow;exports.EventStream=EventStream;exports.Parameters=Parameters;exports.Pulse=Pulse;exports.MultiPulse=MultiPulse;exports.Operator=Operator;exports.Transform=Transform;exports.changeset=changeset;exports.ingest=ingest;exports.isTuple=isTuple;exports.definition=definition;exports.transform=transform;exports.transforms=transforms;exports.tupleid=tupleid;exports.scale=scale$1;exports.scheme=getScheme;exports.interpolate=interpolate$1;exports.interpolateRange=interpolateRange;exports.timeInterval=timeInterval;exports.utcInterval=utcInterval;exports.projection=projection$$1;exports.View=View;exports.parse=parse$2;exports.expressionFunction=expressionFunction;exports.formatLocale=defaultLocale$1;exports.timeFormatLocale=defaultLocale;exports.runtime=parseDataflow;exports.runtimeContext=context$2;exports.bin=bin;exports.bootstrapCI=bootstrapCI;exports.randomInteger=integer;exports.randomKDE=randomKDE;exports.randomMixture=randomMixture;exports.randomNormal=randomNormal;exports.randomUniform=randomUniform;exports.quartiles=quartiles;exports.accessor=accessor;exports.accessorName=accessorName;exports.accessorFields=accessorFields;exports.id=id;exports.identity=identity;exports.zero=zero;exports.one=one;exports.truthy=truthy;exports.falsy=falsy;exports.logger=logger;exports.None=None;exports.Error=Error$1;exports.Warn=Warn;exports.Info=Info;exports.Debug=Debug;exports.array=array;exports.compare=compare;exports.constant=constant;exports.debounce=debounce;exports.error=error$1;exports.extend=extend;exports.extentIndex=extentIndex;exports.fastmap=fastmap;exports.field=field;exports.inherits=inherits;exports.isArray=isArray;exports.isBoolean=isBoolean;exports.isDate=isDate;exports.isFunction=isFunction;exports.isNumber=isNumber;exports.isObject=isObject;exports.isRegExp=isRegExp;exports.isString=isString;exports.key=key;exports.merge=merge;exports.pad=pad;exports.peek=peek;exports.repeat=repeat;exports.splitAccessPath=splitAccessPath;exports.stringValue=$;exports.toBoolean=toBoolean;exports.toDate=toDate;exports.toNumber=toNumber;exports.toString=toString;exports.toSet=toSet;exports.truncate=truncate;exports.visitArray=visitArray;exports.loader=loader;exports.read=read;exports.inferType=inferType;exports.inferTypes=inferTypes;exports.typeParsers=typeParsers;exports.formats=formats$1;exports.Bounds=Bounds;exports.Gradient=Gradient;exports.GroupItem=GroupItem;exports.ResourceLoader=ResourceLoader;exports.Item=Item;exports.Scenegraph=Scenegraph;exports.Handler=Handler;exports.Renderer=Renderer;exports.CanvasHandler=CanvasHandler;exports.CanvasRenderer=CanvasRenderer;exports.SVGHandler=SVGHandler;exports.SVGRenderer=SVGRenderer;exports.SVGStringRenderer=SVGStringRenderer;exports.RenderType=RenderType;exports.renderModule=renderModule;exports.Marks=marks;exports.boundContext=context;exports.boundStroke=boundStroke;exports.boundItem=boundItem$1;exports.boundMark=boundMark;exports.pathCurves=curves;exports.pathSymbols=symbols$1;exports.pathRectangle=vg_rect;exports.pathTrail=vg_trail;exports.pathParse=pathParse;exports.pathRender=pathRender;exports.point=point$4;exports.canvas=Canvas$1;exports.domCreate=domCreate;exports.domFind=domFind;exports.domChild=domChild;exports.domClear=domClear;exports.openTag=openTag;exports.closeTag=closeTag;exports.font=font;exports.textMetrics=textMetrics;exports.resetSVGClipId=resetSVGClipId;exports.sceneEqual=sceneEqual;exports.pathEqual=pathEqual;exports.sceneToJSON=sceneToJSON;exports.sceneFromJSON=sceneFromJSON;exports.sceneZOrder=zorder;exports.sceneVisit=visit;exports.scenePickVisit=pickVisit;Object.defineProperty(exports,'__esModule',{value:true});});

}).call(this,require("buffer").Buffer)
},{"buffer":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/browser-resolve/empty.js","canvas":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/browser-resolve/empty.js","fs":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/browser-resolve/empty.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/create-react-class/factory.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/create-react-class/factory.js"][0].apply(exports,arguments)
},{"fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/EventListener.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if ("development" !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
},{"./emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/ExecutionEnvironment.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/camelize.js":[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/camelizeStyleName.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/camelize.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/containsNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/isTextNode.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/createArrayFromMixed.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "development" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? "development" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? "development" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? "development" !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
},{"./invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/createNodesFromMarkup.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","./createArrayFromMixed":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/createArrayFromMixed.js","./getMarkupWrap":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getMarkupWrap.js","./invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyFunction.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyObject.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/emptyObject.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/focusNode.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getActiveElement.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getActiveElement.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getMarkupWrap.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","./invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getUnboundedScrollPosition.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/getUnboundedScrollPosition.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/hyphenate.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/hyphenateStyleName.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/hyphenate.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/invariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/isNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/isTextNode.js":[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/isNode.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/memoizeStringOnly.js":[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/performance.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performance.js"][0].apply(exports,arguments)
},{"./ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/performanceNow.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/performanceNow.js"][0].apply(exports,arguments)
},{"./performance":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/performance.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/shallowEqual.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/fbjs/lib/shallowEqual.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js":[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("development" !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
},{"./emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/object-assign/index.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/checkPropTypes.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/checkPropTypes.js"][0].apply(exports,arguments)
},{"./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/factory.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factory.js"][0].apply(exports,arguments)
},{"./factoryWithTypeCheckers":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/factoryWithTypeCheckers.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/factoryWithTypeCheckers.js"][0].apply(exports,arguments)
},{"./checkPropTypes":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/checkPropTypes.js","./lib/ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/prop-types/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/index.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/index.js"][0].apply(exports,arguments)
},{"./lib/ReactDOM":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOM.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ARIADOMPropertyConfig.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ARIADOMPropertyConfig.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/AutoFocusUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/AutoFocusUtils.js"][0].apply(exports,arguments)
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/focusNode.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/BeforeInputEventPlugin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/BeforeInputEventPlugin.js"][0].apply(exports,arguments)
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js","./FallbackCompositionState":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/FallbackCompositionState.js","./SyntheticCompositionEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticCompositionEvent.js","./SyntheticInputEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticInputEvent.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CSSProperty.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSProperty.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CSSPropertyOperations.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CSSPropertyOperations.js"][0].apply(exports,arguments)
},{"./CSSProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CSSProperty.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./dangerousStyleValue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/dangerousStyleValue.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/camelizeStyleName":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/camelizeStyleName.js","fbjs/lib/hyphenateStyleName":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/hyphenateStyleName.js","fbjs/lib/memoizeStringOnly":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/memoizeStringOnly.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CallbackQueue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/CallbackQueue.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ChangeEventPlugin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ChangeEventPlugin.js"][0].apply(exports,arguments)
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPropagators":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventTarget.js","./inputValueTracking":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/inputValueTracking.js","./isEventSupported":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isEventSupported.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js"][0].apply(exports,arguments)
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./Danger":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Danger.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMLazyTree.js"][0].apply(exports,arguments)
},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setInnerHTML.js","./setTextContent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setTextContent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMNamespaces.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMNamespaces.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMProperty.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./quoteAttributeValueForBrowser":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Danger.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Danger.js"][0].apply(exports,arguments)
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/createNodesFromMarkup":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/createNodesFromMarkup.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DefaultEventPluginOrder.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/DefaultEventPluginOrder.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EnterLeaveEventPlugin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EnterLeaveEventPlugin.js"][0].apply(exports,arguments)
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginHub.js"][0].apply(exports,arguments)
},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/forEachAccumulated.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginRegistry.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginRegistry.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPluginUtils.js"][0].apply(exports,arguments)
},{"./ReactErrorUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/EventPropagators.js"][0].apply(exports,arguments)
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./accumulateInto":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/accumulateInto.js","./forEachAccumulated":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/forEachAccumulated.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/FallbackCompositionState.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/FallbackCompositionState.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getTextContentAccessor.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/LinkedValueUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/LinkedValueUtils.js"][0].apply(exports,arguments)
},{"./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","prop-types/factory":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/factory.js","react/lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js"][0].apply(exports,arguments)
},{"./EventPluginRegistry":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactEventEmitterMixin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEventEmitterMixin.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ViewportMetrics.js","./getVendorPrefixedEventName":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getVendorPrefixedEventName.js","./isEventSupported":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isEventSupported.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactChildReconciler.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactChildReconciler.js"][0].apply(exports,arguments)
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/instantiateReactComponent.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js"][0].apply(exports,arguments)
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMIDOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMIDOperations.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactCompositeComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactCompositeComponent.js"][0].apply(exports,arguments)
},{"./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactErrorUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactErrorUtils.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactNodeTypes":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactNodeTypes.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/checkReactTypeSpec.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOM.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOM.js"][0].apply(exports,arguments)
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInvalidARIAHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","./ReactDOMNullInputValuePropHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","./ReactDOMUnknownPropertyHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","./ReactDefaultInjection":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDefaultInjection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMount":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMount.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./ReactVersion":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactVersion.js","./findDOMNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/findDOMNode.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js","./renderSubtreeIntoContainer":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/renderSubtreeIntoContainer.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponent.js"][0].apply(exports,arguments)
},{"./AutoFocusUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/AutoFocusUtils.js","./CSSPropertyOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CSSPropertyOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./DOMNamespaces":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMInput":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMInput.js","./ReactDOMOption":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMOption.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMSelect.js","./ReactDOMTextarea":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTextarea.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMultiChild":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMultiChild.js","./ReactServerRenderingTransaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactServerRenderingTransaction.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./inputValueTracking":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/inputValueTracking.js","./isEventSupported":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isEventSupported.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/shallowEqual.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactDOMComponentFlags":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentFlags.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMContainerInfo.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMContainerInfo.js"][0].apply(exports,arguments)
},{"./validateDOMNesting":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/validateDOMNesting.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMEmptyComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMEmptyComponent.js"][0].apply(exports,arguments)
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMFeatureFlags.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMFeatureFlags.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMIDOperations.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMIDOperations.js"][0].apply(exports,arguments)
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMInput.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInput.js"][0].apply(exports,arguments)
},{"./DOMPropertyOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMPropertyOperations.js","./LinkedValueUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js"][0].apply(exports,arguments)
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMOption.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMOption.js"][0].apply(exports,arguments)
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMSelect":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMSelect.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js","react/lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMSelect.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelect.js"][0].apply(exports,arguments)
},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMSelection.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMSelection.js"][0].apply(exports,arguments)
},{"./getNodeForCharacterOffset":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getNodeForCharacterOffset.js","./getTextContentAccessor":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getTextContentAccessor.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTextComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextComponent.js"][0].apply(exports,arguments)
},{"./DOMChildrenOperations":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMChildrenOperations.js","./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./validateDOMNesting":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/validateDOMNesting.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTextarea.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTextarea.js"][0].apply(exports,arguments)
},{"./LinkedValueUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/LinkedValueUtils.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTreeTraversal.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMTreeTraversal.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./EventPluginRegistry":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginRegistry.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDebugTool.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDebugTool.js"][0].apply(exports,arguments)
},{"./ReactHostOperationHistoryHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js","./ReactInvalidSetStateWarningHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/performanceNow":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/performanceNow.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js"][0].apply(exports,arguments)
},{"./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./Transaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Transaction.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDefaultInjection.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactDefaultInjection.js"][0].apply(exports,arguments)
},{"./ARIADOMPropertyConfig":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ARIADOMPropertyConfig.js","./BeforeInputEventPlugin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/BeforeInputEventPlugin.js","./ChangeEventPlugin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ChangeEventPlugin.js","./DefaultEventPluginOrder":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DefaultEventPluginOrder.js","./EnterLeaveEventPlugin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EnterLeaveEventPlugin.js","./HTMLDOMPropertyConfig":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js","./ReactComponentBrowserEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js","./ReactDOMComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponent.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMEmptyComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMEmptyComponent.js","./ReactDOMTextComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTextComponent.js","./ReactDOMTreeTraversal":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMTreeTraversal.js","./ReactDefaultBatchingStrategy":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","./ReactEventListener":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEventListener.js","./ReactInjection":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInjection.js","./ReactReconcileTransaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconcileTransaction.js","./SVGDOMPropertyConfig":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SVGDOMPropertyConfig.js","./SelectEventPlugin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SelectEventPlugin.js","./SimpleEventPlugin":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SimpleEventPlugin.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactElementSymbol.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactErrorUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactErrorUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEventEmitterMixin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventEmitterMixin.js"][0].apply(exports,arguments)
},{"./EventPluginHub":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEventListener.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactEventListener.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./getEventTarget":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventTarget.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/EventListener.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getUnboundedScrollPosition":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getUnboundedScrollPosition.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactHostComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostComponent.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactHostOperationHistoryHook.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInjection.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInjection.js"][0].apply(exports,arguments)
},{"./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./EventPluginHub":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginHub.js","./EventPluginUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPluginUtils.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactHostComponent.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInputSelection.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInputSelection.js"][0].apply(exports,arguments)
},{"./ReactDOMSelection":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMSelection.js","fbjs/lib/containsNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/containsNode.js","fbjs/lib/focusNode":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/focusNode.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getActiveElement.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstanceMap.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInstrumentation.js"][0].apply(exports,arguments)
},{"./ReactDebugTool":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDebugTool.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js"][0].apply(exports,arguments)
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMarkupChecksum.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMarkupChecksum.js"][0].apply(exports,arguments)
},{"./adler32":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/adler32.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMount.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMount.js"][0].apply(exports,arguments)
},{"./DOMLazyTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMLazyTree.js","./DOMProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMProperty.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactDOMContainerInfo":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMContainerInfo.js","./ReactDOMFeatureFlags":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMFeatureFlags.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactMarkupChecksum":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMarkupChecksum.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./instantiateReactComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/instantiateReactComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setInnerHTML.js","./shouldUpdateReactComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMultiChild.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactMultiChild.js"][0].apply(exports,arguments)
},{"./ReactChildReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactChildReconciler.js","./ReactComponentEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactComponentEnvironment.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./flattenChildren":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/flattenChildren.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactNodeTypes.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactNodeTypes.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","react/lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactOwner.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactOwner.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconcileTransaction.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconcileTransaction.js"][0].apply(exports,arguments)
},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactBrowserEventEmitter":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactBrowserEventEmitter.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInputSelection.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactReconciler.js"][0].apply(exports,arguments)
},{"./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactRef":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactRef.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactRef.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactRef.js"][0].apply(exports,arguments)
},{"./ReactOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactServerRenderingTransaction.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerRenderingTransaction.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactServerUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactServerUpdateQueue.js","./Transaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Transaction.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactServerUpdateQueue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactServerUpdateQueue.js"][0].apply(exports,arguments)
},{"./ReactUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdateQueue.js"][0].apply(exports,arguments)
},{"./ReactInstanceMap":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./ReactInstrumentation":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstrumentation.js","./ReactUpdates":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactUpdates.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ReactUpdates.js"][0].apply(exports,arguments)
},{"./CallbackQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CallbackQueue.js","./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","./ReactFeatureFlags":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactFeatureFlags.js","./ReactReconciler":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactReconciler.js","./Transaction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Transaction.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactVersion.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SVGDOMPropertyConfig.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SVGDOMPropertyConfig.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SelectEventPlugin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SelectEventPlugin.js"][0].apply(exports,arguments)
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInputSelection":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInputSelection.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./isTextInputElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isTextInputElement.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js","fbjs/lib/getActiveElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/getActiveElement.js","fbjs/lib/shallowEqual":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/shallowEqual.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SimpleEventPlugin.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SimpleEventPlugin.js"][0].apply(exports,arguments)
},{"./EventPropagators":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/EventPropagators.js","./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./SyntheticAnimationEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticAnimationEvent.js","./SyntheticClipboardEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticClipboardEvent.js","./SyntheticDragEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticDragEvent.js","./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./SyntheticFocusEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticFocusEvent.js","./SyntheticKeyboardEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticKeyboardEvent.js","./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js","./SyntheticTouchEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticTouchEvent.js","./SyntheticTransitionEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticTransitionEvent.js","./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./SyntheticWheelEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticWheelEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventCharCode.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/EventListener":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/EventListener.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticAnimationEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticAnimationEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticClipboardEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticClipboardEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticCompositionEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticCompositionEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticDragEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticDragEvent.js"][0].apply(exports,arguments)
},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticEvent.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/PooledClass.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticFocusEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticFocusEvent.js"][0].apply(exports,arguments)
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticInputEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticInputEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticKeyboardEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticKeyboardEvent.js"][0].apply(exports,arguments)
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventCharCode":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventCharCode.js","./getEventKey":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventKey.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"][0].apply(exports,arguments)
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./ViewportMetrics":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ViewportMetrics.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticTouchEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTouchEvent.js"][0].apply(exports,arguments)
},{"./SyntheticUIEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js","./getEventModifierState":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventModifierState.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticTransitionEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticTransitionEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticUIEvent.js"][0].apply(exports,arguments)
},{"./SyntheticEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticEvent.js","./getEventTarget":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventTarget.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticWheelEvent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/SyntheticWheelEvent.js"][0].apply(exports,arguments)
},{"./SyntheticMouseEvent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/SyntheticMouseEvent.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/Transaction.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/Transaction.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ViewportMetrics.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/ViewportMetrics.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/accumulateInto.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/accumulateInto.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/adler32.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/adler32.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/checkReactTypeSpec.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/checkReactTypeSpec.js"][0].apply(exports,arguments)
},{"./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/dangerousStyleValue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/dangerousStyleValue.js"][0].apply(exports,arguments)
},{"./CSSProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/CSSProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/findDOMNode.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/findDOMNode.js"][0].apply(exports,arguments)
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js","./ReactInstanceMap":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactInstanceMap.js","./getHostComponentFromComposite":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/flattenChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/flattenChildren.js"][0].apply(exports,arguments)
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/traverseAllChildren.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/forEachAccumulated.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/forEachAccumulated.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventCharCode.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventCharCode.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventKey.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventKey.js"][0].apply(exports,arguments)
},{"./getEventCharCode":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventCharCode.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventModifierState.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventModifierState.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getEventTarget.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getEventTarget.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getHostComponentFromComposite.js"][0].apply(exports,arguments)
},{"./ReactNodeTypes":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactNodeTypes.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getIteratorFn.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getNodeForCharacterOffset.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getNodeForCharacterOffset.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getTextContentAccessor.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getTextContentAccessor.js"][0].apply(exports,arguments)
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getVendorPrefixedEventName.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/getVendorPrefixedEventName.js"][0].apply(exports,arguments)
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/inputValueTracking.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/inputValueTracking.js"][0].apply(exports,arguments)
},{"./ReactDOMComponentTree":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactDOMComponentTree.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/instantiateReactComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/instantiateReactComponent.js"][0].apply(exports,arguments)
},{"./ReactCompositeComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactCompositeComponent.js","./ReactEmptyComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactEmptyComponent.js","./ReactHostComponent":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactHostComponent.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js","react/lib/getNextDebugID":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/getNextDebugID.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isEventSupported.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isEventSupported.js"][0].apply(exports,arguments)
},{"fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/isTextInputElement.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/isTextInputElement.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/quoteAttributeValueForBrowser.js"][0].apply(exports,arguments)
},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/renderSubtreeIntoContainer.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/renderSubtreeIntoContainer.js"][0].apply(exports,arguments)
},{"./ReactMount":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactMount.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setInnerHTML.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setInnerHTML.js"][0].apply(exports,arguments)
},{"./DOMNamespaces":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/DOMNamespaces.js","./createMicrosoftUnsafeLocalFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setTextContent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/setTextContent.js"][0].apply(exports,arguments)
},{"./escapeTextContentForBrowser":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/escapeTextContentForBrowser.js","./setInnerHTML":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/setInnerHTML.js","fbjs/lib/ExecutionEnvironment":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/ExecutionEnvironment.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/shouldUpdateReactComponent.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/traverseAllChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/traverseAllChildren.js"][0].apply(exports,arguments)
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/KeyEscapeUtils.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","react/lib/ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/lib/validateDOMNesting.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react-dom/lib/validateDOMNesting.js"][0].apply(exports,arguments)
},{"fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/KeyEscapeUtils.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/KeyEscapeUtils.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/PooledClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/PooledClass.js"][0].apply(exports,arguments)
},{"./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/React.js"][0].apply(exports,arguments)
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactBaseClasses.js","./ReactChildren":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactChildren.js","./ReactDOMFactories":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactDOMFactories.js","./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementValidator.js","./ReactPropTypes":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypes.js","./ReactVersion":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactVersion.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/canDefineProperty.js","./createClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/createClass.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/lowPriorityWarning.js","./onlyChild":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/onlyChild.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactBaseClasses.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactBaseClasses.js"][0].apply(exports,arguments)
},{"./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/canDefineProperty.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/lowPriorityWarning.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/emptyObject":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyObject.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactChildren.js"][0].apply(exports,arguments)
},{"./PooledClass":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/PooledClass.js","./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./traverseAllChildren":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/traverseAllChildren.js","fbjs/lib/emptyFunction":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/emptyFunction.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactComponentTreeHook.js"][0].apply(exports,arguments)
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactCurrentOwner.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactDOMFactories.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactDOMFactories.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementValidator.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElement.js"][0].apply(exports,arguments)
},{"./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementSymbol.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/canDefineProperty.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js","object-assign":"/Users/mathisonian/projects/idyll/idyll/node_modules/object-assign/index.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementSymbol.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementSymbol.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementValidator.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactElementValidator.js"][0].apply(exports,arguments)
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./canDefineProperty":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/canDefineProperty.js","./checkReactTypeSpec":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/checkReactTypeSpec.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/getIteratorFn.js","./lowPriorityWarning":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/lowPriorityWarning.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactNoopUpdateQueue.js"][0].apply(exports,arguments)
},{"fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypeLocationNames.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypeLocationNames.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypes.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypes.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","prop-types/factory":"/Users/mathisonian/projects/idyll/idyll/node_modules/prop-types/factory.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypesSecret.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactPropTypesSecret.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactVersion.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/ReactVersion.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/canDefineProperty.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/canDefineProperty.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/checkReactTypeSpec.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/checkReactTypeSpec.js"][0].apply(exports,arguments)
},{"./ReactComponentTreeHook":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactComponentTreeHook.js","./ReactPropTypeLocationNames":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactPropTypesSecret":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactPropTypesSecret.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","_process":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/process/browser.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/createClass.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/createClass.js"][0].apply(exports,arguments)
},{"./ReactBaseClasses":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactBaseClasses.js","./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./ReactNoopUpdateQueue":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactNoopUpdateQueue.js","create-react-class/factory":"/Users/mathisonian/projects/idyll/idyll/node_modules/create-react-class/factory.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/getIteratorFn.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/getIteratorFn.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/getNextDebugID.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/node_modules/react/lib/getNextDebugID.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/lowPriorityWarning.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/lowPriorityWarning.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/onlyChild.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/onlyChild.js"][0].apply(exports,arguments)
},{"./ReactElement":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElement.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/reactProdInvariant.js"][0].apply(exports,arguments)
},{}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/traverseAllChildren.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/lib/traverseAllChildren.js"][0].apply(exports,arguments)
},{"./KeyEscapeUtils":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/KeyEscapeUtils.js","./ReactCurrentOwner":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactCurrentOwner.js","./ReactElementSymbol":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/ReactElementSymbol.js","./getIteratorFn":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/getIteratorFn.js","./reactProdInvariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/reactProdInvariant.js","fbjs/lib/invariant":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/invariant.js","fbjs/lib/warning":"/Users/mathisonian/projects/idyll/idyll/node_modules/fbjs/lib/warning.js"}],"/Users/mathisonian/projects/idyll/idyll/node_modules/react/react.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-interactive-document/node_modules/react/react.js"][0].apply(exports,arguments)
},{"./lib/React":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/lib/React.js"}],"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/lib.js":[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require('react');
var ReactDOM = require('react-dom');

//http://stackoverflow.com/questions/4588119/get-elements-css-selector-when-it-doesnt-have-an-id
function fullPath(el) {
  var names = [];
  while (el.parentNode) {
    if (el.id) {
      names.unshift('#' + el.id);
      break;
    } else {
      if (el == el.ownerDocument.documentElement) names.unshift(el.tagName);else {
        for (var c = 1, e = el; e.previousElementSibling; e = e.previousElementSibling, c++) {}
        names.unshift(el.tagName + ":nth-child(" + c + ")");
      }
      el = el.parentNode;
    }
  }
  return names.join(" > ");
}

var IdyllComponent = function (_React$PureComponent) {
  _inherits(IdyllComponent, _React$PureComponent);

  function IdyllComponent() {
    _classCallCheck(this, IdyllComponent);

    return _possibleConstructorReturn(this, (IdyllComponent.__proto__ || Object.getPrototypeOf(IdyllComponent)).apply(this, arguments));
  }

  _createClass(IdyllComponent, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var props = this.props;
      if (props.onEnteredView || props.onEnterView || props.onExitView) {
        var dom = ReactDOM.findDOMNode(this);
        var ScrollWatch = require('scrollwatch');
        var sw = new ScrollWatch({
          watch: fullPath(dom),
          onElementInView: props.onEnteredView || props.onEnterView || function () {},
          onElementOutOfView: props.onExitView || function () {},
          watchOnce: false
        });
      }
    }
  }]);

  return IdyllComponent;
}(React.PureComponent);

module.exports = IdyllComponent;

},{"react":"/Users/mathisonian/projects/idyll/idyll/node_modules/react/react.js","react-dom":"/Users/mathisonian/projects/idyll/idyll/node_modules/react-dom/index.js","scrollwatch":"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/node_modules/scrollwatch/dist/ScrollWatch-1.2.0.min.js"}],"/Users/mathisonian/projects/idyll/idyll/packages/idyll-component/node_modules/scrollwatch/dist/ScrollWatch-1.2.0.min.js":[function(require,module,exports){
arguments[4]["/Users/mathisonian/projects/idyll/examples/csv/node_modules/scrollwatch/dist/ScrollWatch-1.2.0.min.js"][0].apply(exports,arguments)
},{}],"__IDYLL_AST__":[function(require,module,exports){
"use strict";

module.exports = [["IdyllLogo", [], []], ["Header", [["title", ["value", "Reading from a CSV In Idyll"]], ["author", ["value", "Matthew Conlen"]], ["authorLink", ["value", "https://idyll-lang.github.io"]]], []], ["data", [["name", ["value", "lakeHuron"]], ["source", ["value", "lake-huron.csv"]]], []], ["p", [], ["I recently added support for loading datasets directly from ", ["code", [], [".csv"]], "\nfiles, eliminating the need to convert them to json by hand."]], ["aside", [], [["FileTree", [["items", ["expression", "[{\n  name: 'data',\n  children: [{name: 'lake-huron.csv'}]\n}, {\n  name: 'index.idl'\n}, {\n  name: 'styles.css'\n}, {\n  name: 'package.json'\n}]"]]], []]]], ["p", [], ["In my data folder I have a file named ", ["code", [], ["lake-huron.csv"]], ". It\ncontains rows of data about the water level in Lake Huron over time."]], ["p", [], ["To load it, I just have to include a data component and point the\nsource to a ", ["code", [], [".csv"]], " file."]], ["pre", [], [["code", [], ["[data name:\"lakeHuron\" source:\"lake-huron.csv\" /]"]]]], ["p", [], ["I can quickly display it in a table."]], ["pre", [], [["code", [], ["[Table data:lakeHuron /]"]]]], ["Table", [["data", ["expression", "lakeHuron.slice(0, 10).concat([{\"\": \"...\", time: \"...\", LakeHuron: \"...\"}, lakeHuron[lakeHuron.length - 1]])"]]], []], ["i", [], [["p", [], ["dataset taken from ", ["a", [["href", ["value", "https://vincentarelbundock.github.io/Rdatasets/datasets.html"]]], ["https://vincentarelbundock.github.io/Rdatasets/datasets.html"]]]]]], ["p", [], ["This automatic CSV importing pairs nicely with the Vega Lite component. To use it, first install it:"]], ["pre", [], [["code", [], ["npm i --save idyll-vega-lite"]]]], ["VegaLite", [["data", ["variable", "lakeHuron"]], ["spec", ["expression", "{\n  mark: \"line\",\n  encoding: {\n    x: {\n      field: \"time\",\n      type: \"temporal\",\n      axis: {title: \"Year\", format:\"%Y\"}\n    },\n    y: {\n      field: \"LakeHuron\",\n      type: \"quantitative\",\n      axis: {title: \"Water level\"},\n      scale: { domain: [575, 582] }\n    }\n  }\n}"]]], []], ["gist", [["gist", ["value", "8af1366ff341d3ed62e9dd58bd3a8849"]], ["file", ["value", "vl-1.idl"]]], []], ["p", [], ["Since the specifications passed in to the vega lite component are\njust JavaScript objects, they can be parameterized by Idyll’s reactive\nvariables."]], ["p", [], ["Here I set up variables to control the starting point of the y-axis and\nthe color of the line:"]], ["pre", [], [["code", [], ["[var name:\"yStart\" value:0 /]\n[var name:\"color\" vale:\"green\" /]"]]]], ["div", [], [["var", [["name", ["value", "yStart"]], ["value", ["value", 0]]], []], ["var", [["name", ["value", "color"]], ["value", ["value", "green"]]], []]]], ["VegaLite", [["data", ["variable", "lakeHuron"]], ["spec", ["expression", "{\n  mark: \"line\",\n  encoding: {\n    x: {\n      field: \"time\",\n      type: \"temporal\",\n      axis: {title: \"Year\", format:\"%Y\"}\n    },\n    y: {\n      field: \"LakeHuron\",\n      type: \"quantitative\",\n      axis: {title: \"Water level\"},\n      scale: { domain: [yStart, 582] }\n    }\n  },\n  config: {\n    mark: {\n      color: color\n    }\n  }\n}"]]], []], ["p", [], ["Try to make this chart look like the one above."]], ["Inset", [], [["p", [], ["\nY-axis: 0", ["Range", [["min", ["value", 0]], ["max", ["value", 575]], ["value", ["variable", "yStart"]]], []], "575"]]]], ["p", [], ["You can\nmove the range slider to change the starting value of the ", ["em", [], ["y-axis"]], ",\ncurrently set to ", ["dynamic", [["min", ["value", 0]], ["max", ["value", 575]], ["step", ["value", 20]], ["value", ["variable", "yStart"]]], []], "."]], ["p", [], ["Click on a color to change the color of the line:"]], ["inset", [], [["div", [], [["action", [["style", ["expression", "{color:'red'}"]], ["onClick", ["expression", "color='red'"]]], ["red"]], ["action", [["style", ["expression", "{color:'green'}"]], ["onClick", ["expression", "color='green'"]]], ["green"]], ["action", [["style", ["expression", "{color:'#4682b4'}"]], ["onClick", ["expression", "color='#4682b4'"]]], ["blue"]]]]]], ["div", [["style", ["expression", "{opacity: (yStart===575 && color==='#4682b4') ? 1 : 0, margin: 10}"]]], [["b", [], ["Good job :)"]]]], ["gist", [["gist", ["value", "8af1366ff341d3ed62e9dd58bd3a8849"]], ["file", ["value", "vl-2.idl"]]], []]];

},{}],"__IDYLL_COMPONENTS__":[function(require,module,exports){
'use strict';

module.exports = {
	'idyll-logo': require('/Users/mathisonian/projects/idyll/examples/csv/components/idyll-logo.js'),
	'header': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/header.js'),
	'aside': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/aside.js'),
	'file-tree': require('/Users/mathisonian/projects/idyll/examples/csv/components/file-tree.js'),
	'table': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/table.js'),
	'vega-lite': require('/Users/mathisonian/projects/idyll/examples/csv/components/vega-lite.js'),
	'gist': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/gist.js'),
	'inset': require('/Users/mathisonian/projects/idyll/examples/csv/components/inset.js'),
	'range': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/range.js'),
	'dynamic': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/dynamic.js'),
	'action': require('/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/action.js')
};

},{"/Users/mathisonian/projects/idyll/examples/csv/components/file-tree.js":"/Users/mathisonian/projects/idyll/examples/csv/components/file-tree.js","/Users/mathisonian/projects/idyll/examples/csv/components/idyll-logo.js":"/Users/mathisonian/projects/idyll/examples/csv/components/idyll-logo.js","/Users/mathisonian/projects/idyll/examples/csv/components/inset.js":"/Users/mathisonian/projects/idyll/examples/csv/components/inset.js","/Users/mathisonian/projects/idyll/examples/csv/components/vega-lite.js":"/Users/mathisonian/projects/idyll/examples/csv/components/vega-lite.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/action.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/action.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/aside.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/aside.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/dynamic.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/dynamic.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/gist.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/gist.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/header.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/header.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/range.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/range.js","/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/table.js":"/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll-default-components/table.js"}],"__IDYLL_DATA__":[function(require,module,exports){
"use strict";

module.exports = { "lakeHuron": [{ "": "1", "time": "1875", "LakeHuron": "580.38" }, { "": "2", "time": "1876", "LakeHuron": "581.86" }, { "": "3", "time": "1877", "LakeHuron": "580.97" }, { "": "4", "time": "1878", "LakeHuron": "580.8" }, { "": "5", "time": "1879", "LakeHuron": "579.79" }, { "": "6", "time": "1880", "LakeHuron": "580.39" }, { "": "7", "time": "1881", "LakeHuron": "580.42" }, { "": "8", "time": "1882", "LakeHuron": "580.82" }, { "": "9", "time": "1883", "LakeHuron": "581.4" }, { "": "10", "time": "1884", "LakeHuron": "581.32" }, { "": "11", "time": "1885", "LakeHuron": "581.44" }, { "": "12", "time": "1886", "LakeHuron": "581.68" }, { "": "13", "time": "1887", "LakeHuron": "581.17" }, { "": "14", "time": "1888", "LakeHuron": "580.53" }, { "": "15", "time": "1889", "LakeHuron": "580.01" }, { "": "16", "time": "1890", "LakeHuron": "579.91" }, { "": "17", "time": "1891", "LakeHuron": "579.14" }, { "": "18", "time": "1892", "LakeHuron": "579.16" }, { "": "19", "time": "1893", "LakeHuron": "579.55" }, { "": "20", "time": "1894", "LakeHuron": "579.67" }, { "": "21", "time": "1895", "LakeHuron": "578.44" }, { "": "22", "time": "1896", "LakeHuron": "578.24" }, { "": "23", "time": "1897", "LakeHuron": "579.1" }, { "": "24", "time": "1898", "LakeHuron": "579.09" }, { "": "25", "time": "1899", "LakeHuron": "579.35" }, { "": "26", "time": "1900", "LakeHuron": "578.82" }, { "": "27", "time": "1901", "LakeHuron": "579.32" }, { "": "28", "time": "1902", "LakeHuron": "579.01" }, { "": "29", "time": "1903", "LakeHuron": "579" }, { "": "30", "time": "1904", "LakeHuron": "579.8" }, { "": "31", "time": "1905", "LakeHuron": "579.83" }, { "": "32", "time": "1906", "LakeHuron": "579.72" }, { "": "33", "time": "1907", "LakeHuron": "579.89" }, { "": "34", "time": "1908", "LakeHuron": "580.01" }, { "": "35", "time": "1909", "LakeHuron": "579.37" }, { "": "36", "time": "1910", "LakeHuron": "578.69" }, { "": "37", "time": "1911", "LakeHuron": "578.19" }, { "": "38", "time": "1912", "LakeHuron": "578.67" }, { "": "39", "time": "1913", "LakeHuron": "579.55" }, { "": "40", "time": "1914", "LakeHuron": "578.92" }, { "": "41", "time": "1915", "LakeHuron": "578.09" }, { "": "42", "time": "1916", "LakeHuron": "579.37" }, { "": "43", "time": "1917", "LakeHuron": "580.13" }, { "": "44", "time": "1918", "LakeHuron": "580.14" }, { "": "45", "time": "1919", "LakeHuron": "579.51" }, { "": "46", "time": "1920", "LakeHuron": "579.24" }, { "": "47", "time": "1921", "LakeHuron": "578.66" }, { "": "48", "time": "1922", "LakeHuron": "578.86" }, { "": "49", "time": "1923", "LakeHuron": "578.05" }, { "": "50", "time": "1924", "LakeHuron": "577.79" }, { "": "51", "time": "1925", "LakeHuron": "576.75" }, { "": "52", "time": "1926", "LakeHuron": "576.75" }, { "": "53", "time": "1927", "LakeHuron": "577.82" }, { "": "54", "time": "1928", "LakeHuron": "578.64" }, { "": "55", "time": "1929", "LakeHuron": "580.58" }, { "": "56", "time": "1930", "LakeHuron": "579.48" }, { "": "57", "time": "1931", "LakeHuron": "577.38" }, { "": "58", "time": "1932", "LakeHuron": "576.9" }, { "": "59", "time": "1933", "LakeHuron": "576.94" }, { "": "60", "time": "1934", "LakeHuron": "576.24" }, { "": "61", "time": "1935", "LakeHuron": "576.84" }, { "": "62", "time": "1936", "LakeHuron": "576.85" }, { "": "63", "time": "1937", "LakeHuron": "576.9" }, { "": "64", "time": "1938", "LakeHuron": "577.79" }, { "": "65", "time": "1939", "LakeHuron": "578.18" }, { "": "66", "time": "1940", "LakeHuron": "577.51" }, { "": "67", "time": "1941", "LakeHuron": "577.23" }, { "": "68", "time": "1942", "LakeHuron": "578.42" }, { "": "69", "time": "1943", "LakeHuron": "579.61" }, { "": "70", "time": "1944", "LakeHuron": "579.05" }, { "": "71", "time": "1945", "LakeHuron": "579.26" }, { "": "72", "time": "1946", "LakeHuron": "579.22" }, { "": "73", "time": "1947", "LakeHuron": "579.38" }, { "": "74", "time": "1948", "LakeHuron": "579.1" }, { "": "75", "time": "1949", "LakeHuron": "577.95" }, { "": "76", "time": "1950", "LakeHuron": "578.12" }, { "": "77", "time": "1951", "LakeHuron": "579.75" }, { "": "78", "time": "1952", "LakeHuron": "580.85" }, { "": "79", "time": "1953", "LakeHuron": "580.41" }, { "": "80", "time": "1954", "LakeHuron": "579.96" }, { "": "81", "time": "1955", "LakeHuron": "579.61" }, { "": "82", "time": "1956", "LakeHuron": "578.76" }, { "": "83", "time": "1957", "LakeHuron": "578.18" }, { "": "84", "time": "1958", "LakeHuron": "577.21" }, { "": "85", "time": "1959", "LakeHuron": "577.13" }, { "": "86", "time": "1960", "LakeHuron": "579.1" }, { "": "87", "time": "1961", "LakeHuron": "578.25" }, { "": "88", "time": "1962", "LakeHuron": "577.91" }, { "": "89", "time": "1963", "LakeHuron": "576.89" }, { "": "90", "time": "1964", "LakeHuron": "575.96" }, { "": "91", "time": "1965", "LakeHuron": "576.8" }, { "": "92", "time": "1966", "LakeHuron": "577.68" }, { "": "93", "time": "1967", "LakeHuron": "578.38" }, { "": "94", "time": "1968", "LakeHuron": "578.52" }, { "": "95", "time": "1969", "LakeHuron": "579.74" }, { "": "96", "time": "1970", "LakeHuron": "579.31" }, { "": "97", "time": "1971", "LakeHuron": "579.89" }, { "": "98", "time": "1972", "LakeHuron": "579.96" }] };

},{}],"__IDYLL_SYNTAX_HIGHLIGHT__":[function(require,module,exports){
"use strict";

module.exports = function () {}();

},{}]},{},["/Users/mathisonian/projects/idyll/examples/csv/node_modules/idyll/src/client/build.js"]);
